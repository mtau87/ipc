// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_product_brand_temp.proto

#include "message_product_brand_temp.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace d5 {
namespace db2 {
class CMessageProductBrandTempRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageProductBrandTempRequest>
      _instance;
} _CMessageProductBrandTempRequest_default_instance_;
class CMessageProductBrandTempResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageProductBrandTempResponse>
      _instance;
} _CMessageProductBrandTempResponse_default_instance_;
class CMessageAddProductBrandTempRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageAddProductBrandTempRequest>
      _instance;
} _CMessageAddProductBrandTempRequest_default_instance_;
class CMessageAddProductBrandTempResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageAddProductBrandTempResponse>
      _instance;
} _CMessageAddProductBrandTempResponse_default_instance_;
}  // namespace db2
}  // namespace d5
namespace protobuf_message_5fproduct_5fbrand_5ftemp_2eproto {
void InitDefaultsCMessageProductBrandTempRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::db2::_CMessageProductBrandTempRequest_default_instance_;
    new (ptr) ::d5::db2::CMessageProductBrandTempRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::CMessageProductBrandTempRequest::InitAsDefaultInstance();
}

void InitDefaultsCMessageProductBrandTempRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageProductBrandTempRequestImpl);
}

void InitDefaultsCMessageProductBrandTempResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_db2_2eproto::InitDefaultsproduct_brand_temp();
  {
    void* ptr = &::d5::db2::_CMessageProductBrandTempResponse_default_instance_;
    new (ptr) ::d5::db2::CMessageProductBrandTempResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::CMessageProductBrandTempResponse::InitAsDefaultInstance();
}

void InitDefaultsCMessageProductBrandTempResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageProductBrandTempResponseImpl);
}

void InitDefaultsCMessageAddProductBrandTempRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_db2_2eproto::InitDefaultsproduct_brand_temp();
  {
    void* ptr = &::d5::db2::_CMessageAddProductBrandTempRequest_default_instance_;
    new (ptr) ::d5::db2::CMessageAddProductBrandTempRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::CMessageAddProductBrandTempRequest::InitAsDefaultInstance();
}

void InitDefaultsCMessageAddProductBrandTempRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageAddProductBrandTempRequestImpl);
}

void InitDefaultsCMessageAddProductBrandTempResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::db2::_CMessageAddProductBrandTempResponse_default_instance_;
    new (ptr) ::d5::db2::CMessageAddProductBrandTempResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::CMessageAddProductBrandTempResponse::InitAsDefaultInstance();
}

void InitDefaultsCMessageAddProductBrandTempResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageAddProductBrandTempResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageProductBrandTempRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageProductBrandTempRequest, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageProductBrandTempRequest, uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageProductBrandTempRequest, productid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageProductBrandTempResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageProductBrandTempResponse, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageProductBrandTempResponse, uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageProductBrandTempResponse, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageProductBrandTempResponse, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageAddProductBrandTempRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageAddProductBrandTempRequest, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageAddProductBrandTempRequest, uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageAddProductBrandTempRequest, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageAddProductBrandTempResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageAddProductBrandTempResponse, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageAddProductBrandTempResponse, uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageAddProductBrandTempResponse, state_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::d5::db2::CMessageProductBrandTempRequest)},
  { 8, -1, sizeof(::d5::db2::CMessageProductBrandTempResponse)},
  { 17, -1, sizeof(::d5::db2::CMessageAddProductBrandTempRequest)},
  { 25, -1, sizeof(::d5::db2::CMessageAddProductBrandTempResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_CMessageProductBrandTempRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_CMessageProductBrandTempResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_CMessageAddProductBrandTempRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_CMessageAddProductBrandTempResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "message_product_brand_temp.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n message_product_brand_temp.proto\022\006d5.d"
      "b2\032\tdb2.proto\"P\n\037CMessageProductBrandTem"
      "pRequest\022\014\n\004type\030\001 \001(\005\022\014\n\004uuid\030\002 \001(\t\022\021\n\t"
      "productId\030\003 \001(\t\"w\n CMessageProductBrandT"
      "empResponse\022\014\n\004type\030\001 \001(\005\022\014\n\004uuid\030\002 \001(\t\022"
      "\r\n\005state\030\003 \001(\005\022(\n\004data\030\004 \001(\0132\032.d5.db2.pr"
      "oduct_brand_temp\"j\n\"CMessageAddProductBr"
      "andTempRequest\022\014\n\004type\030\001 \001(\005\022\014\n\004uuid\030\002 \001"
      "(\t\022(\n\004data\030\003 \001(\0132\032.d5.db2.product_brand_"
      "temp\"P\n#CMessageAddProductBrandTempRespo"
      "nse\022\014\n\004type\030\001 \001(\005\022\014\n\004uuid\030\002 \001(\t\022\r\n\005state"
      "\030\003 \001(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 454);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message_product_brand_temp.proto", &protobuf_RegisterTypes);
  ::protobuf_db2_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_message_5fproduct_5fbrand_5ftemp_2eproto
namespace d5 {
namespace db2 {

// ===================================================================

void CMessageProductBrandTempRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageProductBrandTempRequest::kTypeFieldNumber;
const int CMessageProductBrandTempRequest::kUuidFieldNumber;
const int CMessageProductBrandTempRequest::kProductIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageProductBrandTempRequest::CMessageProductBrandTempRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fproduct_5fbrand_5ftemp_2eproto::InitDefaultsCMessageProductBrandTempRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.CMessageProductBrandTempRequest)
}
CMessageProductBrandTempRequest::CMessageProductBrandTempRequest(const CMessageProductBrandTempRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  productid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.productid().size() > 0) {
    productid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productid_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:d5.db2.CMessageProductBrandTempRequest)
}

void CMessageProductBrandTempRequest::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

CMessageProductBrandTempRequest::~CMessageProductBrandTempRequest() {
  // @@protoc_insertion_point(destructor:d5.db2.CMessageProductBrandTempRequest)
  SharedDtor();
}

void CMessageProductBrandTempRequest::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMessageProductBrandTempRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageProductBrandTempRequest::descriptor() {
  ::protobuf_message_5fproduct_5fbrand_5ftemp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fproduct_5fbrand_5ftemp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageProductBrandTempRequest& CMessageProductBrandTempRequest::default_instance() {
  ::protobuf_message_5fproduct_5fbrand_5ftemp_2eproto::InitDefaultsCMessageProductBrandTempRequest();
  return *internal_default_instance();
}


void CMessageProductBrandTempRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.CMessageProductBrandTempRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool CMessageProductBrandTempRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.CMessageProductBrandTempRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.CMessageProductBrandTempRequest.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string productId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->productid().data(), static_cast<int>(this->productid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.CMessageProductBrandTempRequest.productId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.CMessageProductBrandTempRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.CMessageProductBrandTempRequest)
  return false;
#undef DO_
}

void CMessageProductBrandTempRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.CMessageProductBrandTempRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.CMessageProductBrandTempRequest.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uuid(), output);
  }

  // string productId = 3;
  if (this->productid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productid().data(), static_cast<int>(this->productid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.CMessageProductBrandTempRequest.productId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->productid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.CMessageProductBrandTempRequest)
}

::google::protobuf::uint8* CMessageProductBrandTempRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.CMessageProductBrandTempRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.CMessageProductBrandTempRequest.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uuid(), target);
  }

  // string productId = 3;
  if (this->productid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productid().data(), static_cast<int>(this->productid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.CMessageProductBrandTempRequest.productId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->productid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.CMessageProductBrandTempRequest)
  return target;
}

size_t CMessageProductBrandTempRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.CMessageProductBrandTempRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uuid = 2;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  // string productId = 3;
  if (this->productid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->productid());
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageProductBrandTempRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.CMessageProductBrandTempRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageProductBrandTempRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageProductBrandTempRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.CMessageProductBrandTempRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.CMessageProductBrandTempRequest)
    MergeFrom(*source);
  }
}

void CMessageProductBrandTempRequest::MergeFrom(const CMessageProductBrandTempRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.CMessageProductBrandTempRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.productid().size() > 0) {

    productid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productid_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void CMessageProductBrandTempRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.CMessageProductBrandTempRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageProductBrandTempRequest::CopyFrom(const CMessageProductBrandTempRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.CMessageProductBrandTempRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageProductBrandTempRequest::IsInitialized() const {
  return true;
}

void CMessageProductBrandTempRequest::Swap(CMessageProductBrandTempRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageProductBrandTempRequest::InternalSwap(CMessageProductBrandTempRequest* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_);
  productid_.Swap(&other->productid_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageProductBrandTempRequest::GetMetadata() const {
  protobuf_message_5fproduct_5fbrand_5ftemp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fproduct_5fbrand_5ftemp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMessageProductBrandTempResponse::InitAsDefaultInstance() {
  ::d5::db2::_CMessageProductBrandTempResponse_default_instance_._instance.get_mutable()->data_ = const_cast< ::d5::db2::product_brand_temp*>(
      ::d5::db2::product_brand_temp::internal_default_instance());
}
void CMessageProductBrandTempResponse::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageProductBrandTempResponse::kTypeFieldNumber;
const int CMessageProductBrandTempResponse::kUuidFieldNumber;
const int CMessageProductBrandTempResponse::kStateFieldNumber;
const int CMessageProductBrandTempResponse::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageProductBrandTempResponse::CMessageProductBrandTempResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fproduct_5fbrand_5ftemp_2eproto::InitDefaultsCMessageProductBrandTempResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.CMessageProductBrandTempResponse)
}
CMessageProductBrandTempResponse::CMessageProductBrandTempResponse(const CMessageProductBrandTempResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.has_data()) {
    data_ = new ::d5::db2::product_brand_temp(*from.data_);
  } else {
    data_ = NULL;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&type_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:d5.db2.CMessageProductBrandTempResponse)
}

void CMessageProductBrandTempResponse::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&data_)) + sizeof(state_));
  _cached_size_ = 0;
}

CMessageProductBrandTempResponse::~CMessageProductBrandTempResponse() {
  // @@protoc_insertion_point(destructor:d5.db2.CMessageProductBrandTempResponse)
  SharedDtor();
}

void CMessageProductBrandTempResponse::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void CMessageProductBrandTempResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageProductBrandTempResponse::descriptor() {
  ::protobuf_message_5fproduct_5fbrand_5ftemp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fproduct_5fbrand_5ftemp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageProductBrandTempResponse& CMessageProductBrandTempResponse::default_instance() {
  ::protobuf_message_5fproduct_5fbrand_5ftemp_2eproto::InitDefaultsCMessageProductBrandTempResponse();
  return *internal_default_instance();
}


void CMessageProductBrandTempResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.CMessageProductBrandTempResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&type_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool CMessageProductBrandTempResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.CMessageProductBrandTempResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.CMessageProductBrandTempResponse.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .d5.db2.product_brand_temp data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.CMessageProductBrandTempResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.CMessageProductBrandTempResponse)
  return false;
#undef DO_
}

void CMessageProductBrandTempResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.CMessageProductBrandTempResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.CMessageProductBrandTempResponse.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uuid(), output);
  }

  // int32 state = 3;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->state(), output);
  }

  // .d5.db2.product_brand_temp data = 4;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.CMessageProductBrandTempResponse)
}

::google::protobuf::uint8* CMessageProductBrandTempResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.CMessageProductBrandTempResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.CMessageProductBrandTempResponse.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uuid(), target);
  }

  // int32 state = 3;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->state(), target);
  }

  // .d5.db2.product_brand_temp data = 4;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.CMessageProductBrandTempResponse)
  return target;
}

size_t CMessageProductBrandTempResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.CMessageProductBrandTempResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uuid = 2;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  // .d5.db2.product_brand_temp data = 4;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 state = 3;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageProductBrandTempResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.CMessageProductBrandTempResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageProductBrandTempResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageProductBrandTempResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.CMessageProductBrandTempResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.CMessageProductBrandTempResponse)
    MergeFrom(*source);
  }
}

void CMessageProductBrandTempResponse::MergeFrom(const CMessageProductBrandTempResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.CMessageProductBrandTempResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.has_data()) {
    mutable_data()->::d5::db2::product_brand_temp::MergeFrom(from.data());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void CMessageProductBrandTempResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.CMessageProductBrandTempResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageProductBrandTempResponse::CopyFrom(const CMessageProductBrandTempResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.CMessageProductBrandTempResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageProductBrandTempResponse::IsInitialized() const {
  return true;
}

void CMessageProductBrandTempResponse::Swap(CMessageProductBrandTempResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageProductBrandTempResponse::InternalSwap(CMessageProductBrandTempResponse* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_);
  swap(data_, other->data_);
  swap(type_, other->type_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageProductBrandTempResponse::GetMetadata() const {
  protobuf_message_5fproduct_5fbrand_5ftemp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fproduct_5fbrand_5ftemp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMessageAddProductBrandTempRequest::InitAsDefaultInstance() {
  ::d5::db2::_CMessageAddProductBrandTempRequest_default_instance_._instance.get_mutable()->data_ = const_cast< ::d5::db2::product_brand_temp*>(
      ::d5::db2::product_brand_temp::internal_default_instance());
}
void CMessageAddProductBrandTempRequest::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageAddProductBrandTempRequest::kTypeFieldNumber;
const int CMessageAddProductBrandTempRequest::kUuidFieldNumber;
const int CMessageAddProductBrandTempRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageAddProductBrandTempRequest::CMessageAddProductBrandTempRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fproduct_5fbrand_5ftemp_2eproto::InitDefaultsCMessageAddProductBrandTempRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.CMessageAddProductBrandTempRequest)
}
CMessageAddProductBrandTempRequest::CMessageAddProductBrandTempRequest(const CMessageAddProductBrandTempRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.has_data()) {
    data_ = new ::d5::db2::product_brand_temp(*from.data_);
  } else {
    data_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:d5.db2.CMessageAddProductBrandTempRequest)
}

void CMessageAddProductBrandTempRequest::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&data_)) + sizeof(type_));
  _cached_size_ = 0;
}

CMessageAddProductBrandTempRequest::~CMessageAddProductBrandTempRequest() {
  // @@protoc_insertion_point(destructor:d5.db2.CMessageAddProductBrandTempRequest)
  SharedDtor();
}

void CMessageAddProductBrandTempRequest::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void CMessageAddProductBrandTempRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageAddProductBrandTempRequest::descriptor() {
  ::protobuf_message_5fproduct_5fbrand_5ftemp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fproduct_5fbrand_5ftemp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageAddProductBrandTempRequest& CMessageAddProductBrandTempRequest::default_instance() {
  ::protobuf_message_5fproduct_5fbrand_5ftemp_2eproto::InitDefaultsCMessageAddProductBrandTempRequest();
  return *internal_default_instance();
}


void CMessageAddProductBrandTempRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.CMessageAddProductBrandTempRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool CMessageAddProductBrandTempRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.CMessageAddProductBrandTempRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.CMessageAddProductBrandTempRequest.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .d5.db2.product_brand_temp data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.CMessageAddProductBrandTempRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.CMessageAddProductBrandTempRequest)
  return false;
#undef DO_
}

void CMessageAddProductBrandTempRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.CMessageAddProductBrandTempRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.CMessageAddProductBrandTempRequest.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uuid(), output);
  }

  // .d5.db2.product_brand_temp data = 3;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.CMessageAddProductBrandTempRequest)
}

::google::protobuf::uint8* CMessageAddProductBrandTempRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.CMessageAddProductBrandTempRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.CMessageAddProductBrandTempRequest.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uuid(), target);
  }

  // .d5.db2.product_brand_temp data = 3;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.CMessageAddProductBrandTempRequest)
  return target;
}

size_t CMessageAddProductBrandTempRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.CMessageAddProductBrandTempRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uuid = 2;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  // .d5.db2.product_brand_temp data = 3;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageAddProductBrandTempRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.CMessageAddProductBrandTempRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageAddProductBrandTempRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageAddProductBrandTempRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.CMessageAddProductBrandTempRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.CMessageAddProductBrandTempRequest)
    MergeFrom(*source);
  }
}

void CMessageAddProductBrandTempRequest::MergeFrom(const CMessageAddProductBrandTempRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.CMessageAddProductBrandTempRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.has_data()) {
    mutable_data()->::d5::db2::product_brand_temp::MergeFrom(from.data());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void CMessageAddProductBrandTempRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.CMessageAddProductBrandTempRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageAddProductBrandTempRequest::CopyFrom(const CMessageAddProductBrandTempRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.CMessageAddProductBrandTempRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageAddProductBrandTempRequest::IsInitialized() const {
  return true;
}

void CMessageAddProductBrandTempRequest::Swap(CMessageAddProductBrandTempRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageAddProductBrandTempRequest::InternalSwap(CMessageAddProductBrandTempRequest* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_);
  swap(data_, other->data_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageAddProductBrandTempRequest::GetMetadata() const {
  protobuf_message_5fproduct_5fbrand_5ftemp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fproduct_5fbrand_5ftemp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMessageAddProductBrandTempResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageAddProductBrandTempResponse::kTypeFieldNumber;
const int CMessageAddProductBrandTempResponse::kUuidFieldNumber;
const int CMessageAddProductBrandTempResponse::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageAddProductBrandTempResponse::CMessageAddProductBrandTempResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fproduct_5fbrand_5ftemp_2eproto::InitDefaultsCMessageAddProductBrandTempResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.CMessageAddProductBrandTempResponse)
}
CMessageAddProductBrandTempResponse::CMessageAddProductBrandTempResponse(const CMessageAddProductBrandTempResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&type_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:d5.db2.CMessageAddProductBrandTempResponse)
}

void CMessageAddProductBrandTempResponse::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&type_)) + sizeof(state_));
  _cached_size_ = 0;
}

CMessageAddProductBrandTempResponse::~CMessageAddProductBrandTempResponse() {
  // @@protoc_insertion_point(destructor:d5.db2.CMessageAddProductBrandTempResponse)
  SharedDtor();
}

void CMessageAddProductBrandTempResponse::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMessageAddProductBrandTempResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageAddProductBrandTempResponse::descriptor() {
  ::protobuf_message_5fproduct_5fbrand_5ftemp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fproduct_5fbrand_5ftemp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageAddProductBrandTempResponse& CMessageAddProductBrandTempResponse::default_instance() {
  ::protobuf_message_5fproduct_5fbrand_5ftemp_2eproto::InitDefaultsCMessageAddProductBrandTempResponse();
  return *internal_default_instance();
}


void CMessageAddProductBrandTempResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.CMessageAddProductBrandTempResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&type_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool CMessageAddProductBrandTempResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.CMessageAddProductBrandTempResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.CMessageAddProductBrandTempResponse.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.CMessageAddProductBrandTempResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.CMessageAddProductBrandTempResponse)
  return false;
#undef DO_
}

void CMessageAddProductBrandTempResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.CMessageAddProductBrandTempResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.CMessageAddProductBrandTempResponse.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uuid(), output);
  }

  // int32 state = 3;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.CMessageAddProductBrandTempResponse)
}

::google::protobuf::uint8* CMessageAddProductBrandTempResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.CMessageAddProductBrandTempResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.CMessageAddProductBrandTempResponse.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uuid(), target);
  }

  // int32 state = 3;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.CMessageAddProductBrandTempResponse)
  return target;
}

size_t CMessageAddProductBrandTempResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.CMessageAddProductBrandTempResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uuid = 2;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 state = 3;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageAddProductBrandTempResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.CMessageAddProductBrandTempResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageAddProductBrandTempResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageAddProductBrandTempResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.CMessageAddProductBrandTempResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.CMessageAddProductBrandTempResponse)
    MergeFrom(*source);
  }
}

void CMessageAddProductBrandTempResponse::MergeFrom(const CMessageAddProductBrandTempResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.CMessageAddProductBrandTempResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void CMessageAddProductBrandTempResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.CMessageAddProductBrandTempResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageAddProductBrandTempResponse::CopyFrom(const CMessageAddProductBrandTempResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.CMessageAddProductBrandTempResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageAddProductBrandTempResponse::IsInitialized() const {
  return true;
}

void CMessageAddProductBrandTempResponse::Swap(CMessageAddProductBrandTempResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageAddProductBrandTempResponse::InternalSwap(CMessageAddProductBrandTempResponse* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_);
  swap(type_, other->type_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageAddProductBrandTempResponse::GetMetadata() const {
  protobuf_message_5fproduct_5fbrand_5ftemp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fproduct_5fbrand_5ftemp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace db2
}  // namespace d5
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::CMessageProductBrandTempRequest* Arena::Create< ::d5::db2::CMessageProductBrandTempRequest >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::CMessageProductBrandTempRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::CMessageProductBrandTempResponse* Arena::Create< ::d5::db2::CMessageProductBrandTempResponse >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::CMessageProductBrandTempResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::CMessageAddProductBrandTempRequest* Arena::Create< ::d5::db2::CMessageAddProductBrandTempRequest >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::CMessageAddProductBrandTempRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::CMessageAddProductBrandTempResponse* Arena::Create< ::d5::db2::CMessageAddProductBrandTempResponse >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::CMessageAddProductBrandTempResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
