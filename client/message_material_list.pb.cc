// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_material_list.proto

#include "message_material_list.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace d5 {
class CMessageMaterialListRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageMaterialListRequest>
      _instance;
} _CMessageMaterialListRequest_default_instance_;
class CMessageMaterialListUnitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageMaterialListUnit>
      _instance;
} _CMessageMaterialListUnit_default_instance_;
class CMessageMaterialListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageMaterialList>
      _instance;
} _CMessageMaterialList_default_instance_;
class CMessageMaterialListResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageMaterialListResponse>
      _instance;
} _CMessageMaterialListResponse_default_instance_;
}  // namespace d5
namespace protobuf_message_5fmaterial_5flist_2eproto {
void InitDefaultsCMessageMaterialListRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::_CMessageMaterialListRequest_default_instance_;
    new (ptr) ::d5::CMessageMaterialListRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageMaterialListRequest::InitAsDefaultInstance();
}

void InitDefaultsCMessageMaterialListRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageMaterialListRequestImpl);
}

void InitDefaultsCMessageMaterialListUnitImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::_CMessageMaterialListUnit_default_instance_;
    new (ptr) ::d5::CMessageMaterialListUnit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageMaterialListUnit::InitAsDefaultInstance();
}

void InitDefaultsCMessageMaterialListUnit() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageMaterialListUnitImpl);
}

void InitDefaultsCMessageMaterialListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_5fmaterial_5flist_2eproto::InitDefaultsCMessageMaterialListUnit();
  {
    void* ptr = &::d5::_CMessageMaterialList_default_instance_;
    new (ptr) ::d5::CMessageMaterialList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageMaterialList::InitAsDefaultInstance();
}

void InitDefaultsCMessageMaterialList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageMaterialListImpl);
}

void InitDefaultsCMessageMaterialListResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_5fmaterial_5flist_2eproto::InitDefaultsCMessageMaterialList();
  {
    void* ptr = &::d5::_CMessageMaterialListResponse_default_instance_;
    new (ptr) ::d5::CMessageMaterialListResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageMaterialListResponse::InitAsDefaultInstance();
}

void InitDefaultsCMessageMaterialListResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageMaterialListResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageMaterialListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageMaterialListRequest, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageMaterialListRequest, uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageMaterialListRequest, companyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageMaterialListRequest, updatetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageMaterialListRequest, pagesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageMaterialListRequest, pagenum_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageMaterialListUnit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageMaterialListUnit, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageMaterialListUnit, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageMaterialListUnit, uepath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageMaterialListUnit, matinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageMaterialListUnit, thumbnailurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageMaterialListUnit, isdel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageMaterialListUnit, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageMaterialListUnit, companyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageMaterialListUnit, createtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageMaterialListUnit, updatetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageMaterialListUnit, categoryid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageMaterialListUnit, pakurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageMaterialListUnit, dependentfilelist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageMaterialList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageMaterialList, rows_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageMaterialList, total_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageMaterialListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageMaterialListResponse, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageMaterialListResponse, uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageMaterialListResponse, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageMaterialListResponse, list_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::d5::CMessageMaterialListRequest)},
  { 11, -1, sizeof(::d5::CMessageMaterialListUnit)},
  { 29, -1, sizeof(::d5::CMessageMaterialList)},
  { 36, -1, sizeof(::d5::CMessageMaterialListResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageMaterialListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageMaterialListUnit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageMaterialList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageMaterialListResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "message_material_list.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\033message_material_list.proto\022\002d5\"\203\001\n\033CM"
      "essageMaterialListRequest\022\014\n\004type\030\001 \001(\005\022"
      "\014\n\004uuid\030\002 \001(\t\022\021\n\tcompanyid\030\003 \001(\005\022\022\n\nupda"
      "tetime\030\004 \001(\004\022\020\n\010pageSize\030\005 \001(\005\022\017\n\007pageNu"
      "m\030\006 \001(\005\"\205\002\n\030CMessageMaterialListUnit\022\n\n\002"
      "id\030\001 \001(\t\022\r\n\005title\030\002 \001(\t\022\016\n\006uePath\030\003 \001(\t\022"
      "\017\n\007matInfo\030\004 \001(\t\022\024\n\014thumbnailUrl\030\005 \001(\t\022\r"
      "\n\005isDel\030\006 \001(\005\022\016\n\006userId\030\007 \001(\005\022\021\n\tcompany"
      "Id\030\010 \001(\005\022\022\n\ncreateTime\030\t \001(\003\022\022\n\nupdateTi"
      "me\030\n \001(\003\022\022\n\ncategoryId\030\013 \001(\005\022\016\n\006pakUrl\030\014"
      " \001(\t\022\031\n\021dependentFileList\030\r \001(\t\"Q\n\024CMess"
      "ageMaterialList\022*\n\004rows\030\001 \003(\0132\034.d5.CMess"
      "ageMaterialListUnit\022\r\n\005total\030\002 \001(\005\"q\n\034CM"
      "essageMaterialListResponse\022\014\n\004type\030\001 \001(\005"
      "\022\014\n\004uuid\030\002 \001(\t\022\r\n\005state\030\003 \001(\005\022&\n\004list\030\004 "
      "\001(\0132\030.d5.CMessageMaterialListb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 637);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message_material_list.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_message_5fmaterial_5flist_2eproto
namespace d5 {

// ===================================================================

void CMessageMaterialListRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageMaterialListRequest::kTypeFieldNumber;
const int CMessageMaterialListRequest::kUuidFieldNumber;
const int CMessageMaterialListRequest::kCompanyidFieldNumber;
const int CMessageMaterialListRequest::kUpdatetimeFieldNumber;
const int CMessageMaterialListRequest::kPageSizeFieldNumber;
const int CMessageMaterialListRequest::kPageNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageMaterialListRequest::CMessageMaterialListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fmaterial_5flist_2eproto::InitDefaultsCMessageMaterialListRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageMaterialListRequest)
}
CMessageMaterialListRequest::CMessageMaterialListRequest(const CMessageMaterialListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&pagenum_) -
    reinterpret_cast<char*>(&type_)) + sizeof(pagenum_));
  // @@protoc_insertion_point(copy_constructor:d5.CMessageMaterialListRequest)
}

void CMessageMaterialListRequest::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pagenum_) -
      reinterpret_cast<char*>(&type_)) + sizeof(pagenum_));
  _cached_size_ = 0;
}

CMessageMaterialListRequest::~CMessageMaterialListRequest() {
  // @@protoc_insertion_point(destructor:d5.CMessageMaterialListRequest)
  SharedDtor();
}

void CMessageMaterialListRequest::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMessageMaterialListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageMaterialListRequest::descriptor() {
  ::protobuf_message_5fmaterial_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmaterial_5flist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageMaterialListRequest& CMessageMaterialListRequest::default_instance() {
  ::protobuf_message_5fmaterial_5flist_2eproto::InitDefaultsCMessageMaterialListRequest();
  return *internal_default_instance();
}


void CMessageMaterialListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageMaterialListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pagenum_) -
      reinterpret_cast<char*>(&type_)) + sizeof(pagenum_));
  _internal_metadata_.Clear();
}

bool CMessageMaterialListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageMaterialListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageMaterialListRequest.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 companyid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &companyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 updatetime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &updatetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 pageSize = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pagesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 pageNum = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pagenum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageMaterialListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageMaterialListRequest)
  return false;
#undef DO_
}

void CMessageMaterialListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageMaterialListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageMaterialListRequest.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uuid(), output);
  }

  // int32 companyid = 3;
  if (this->companyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->companyid(), output);
  }

  // uint64 updatetime = 4;
  if (this->updatetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->updatetime(), output);
  }

  // int32 pageSize = 5;
  if (this->pagesize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->pagesize(), output);
  }

  // int32 pageNum = 6;
  if (this->pagenum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->pagenum(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageMaterialListRequest)
}

::google::protobuf::uint8* CMessageMaterialListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageMaterialListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageMaterialListRequest.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uuid(), target);
  }

  // int32 companyid = 3;
  if (this->companyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->companyid(), target);
  }

  // uint64 updatetime = 4;
  if (this->updatetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->updatetime(), target);
  }

  // int32 pageSize = 5;
  if (this->pagesize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->pagesize(), target);
  }

  // int32 pageNum = 6;
  if (this->pagenum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->pagenum(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageMaterialListRequest)
  return target;
}

size_t CMessageMaterialListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageMaterialListRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uuid = 2;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 companyid = 3;
  if (this->companyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->companyid());
  }

  // uint64 updatetime = 4;
  if (this->updatetime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->updatetime());
  }

  // int32 pageSize = 5;
  if (this->pagesize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pagesize());
  }

  // int32 pageNum = 6;
  if (this->pagenum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pagenum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageMaterialListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageMaterialListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageMaterialListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageMaterialListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageMaterialListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageMaterialListRequest)
    MergeFrom(*source);
  }
}

void CMessageMaterialListRequest::MergeFrom(const CMessageMaterialListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageMaterialListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.companyid() != 0) {
    set_companyid(from.companyid());
  }
  if (from.updatetime() != 0) {
    set_updatetime(from.updatetime());
  }
  if (from.pagesize() != 0) {
    set_pagesize(from.pagesize());
  }
  if (from.pagenum() != 0) {
    set_pagenum(from.pagenum());
  }
}

void CMessageMaterialListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageMaterialListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageMaterialListRequest::CopyFrom(const CMessageMaterialListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageMaterialListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageMaterialListRequest::IsInitialized() const {
  return true;
}

void CMessageMaterialListRequest::Swap(CMessageMaterialListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageMaterialListRequest::InternalSwap(CMessageMaterialListRequest* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_);
  swap(type_, other->type_);
  swap(companyid_, other->companyid_);
  swap(updatetime_, other->updatetime_);
  swap(pagesize_, other->pagesize_);
  swap(pagenum_, other->pagenum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageMaterialListRequest::GetMetadata() const {
  protobuf_message_5fmaterial_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmaterial_5flist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMessageMaterialListUnit::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageMaterialListUnit::kIdFieldNumber;
const int CMessageMaterialListUnit::kTitleFieldNumber;
const int CMessageMaterialListUnit::kUePathFieldNumber;
const int CMessageMaterialListUnit::kMatInfoFieldNumber;
const int CMessageMaterialListUnit::kThumbnailUrlFieldNumber;
const int CMessageMaterialListUnit::kIsDelFieldNumber;
const int CMessageMaterialListUnit::kUserIdFieldNumber;
const int CMessageMaterialListUnit::kCompanyIdFieldNumber;
const int CMessageMaterialListUnit::kCreateTimeFieldNumber;
const int CMessageMaterialListUnit::kUpdateTimeFieldNumber;
const int CMessageMaterialListUnit::kCategoryIdFieldNumber;
const int CMessageMaterialListUnit::kPakUrlFieldNumber;
const int CMessageMaterialListUnit::kDependentFileListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageMaterialListUnit::CMessageMaterialListUnit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fmaterial_5flist_2eproto::InitDefaultsCMessageMaterialListUnit();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageMaterialListUnit)
}
CMessageMaterialListUnit::CMessageMaterialListUnit(const CMessageMaterialListUnit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  uepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uepath().size() > 0) {
    uepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uepath_);
  }
  matinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.matinfo().size() > 0) {
    matinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.matinfo_);
  }
  thumbnailurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.thumbnailurl().size() > 0) {
    thumbnailurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnailurl_);
  }
  pakurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pakurl().size() > 0) {
    pakurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pakurl_);
  }
  dependentfilelist_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dependentfilelist().size() > 0) {
    dependentfilelist_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dependentfilelist_);
  }
  ::memcpy(&isdel_, &from.isdel_,
    static_cast<size_t>(reinterpret_cast<char*>(&updatetime_) -
    reinterpret_cast<char*>(&isdel_)) + sizeof(updatetime_));
  // @@protoc_insertion_point(copy_constructor:d5.CMessageMaterialListUnit)
}

void CMessageMaterialListUnit::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  matinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnailurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pakurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dependentfilelist_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&isdel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&updatetime_) -
      reinterpret_cast<char*>(&isdel_)) + sizeof(updatetime_));
  _cached_size_ = 0;
}

CMessageMaterialListUnit::~CMessageMaterialListUnit() {
  // @@protoc_insertion_point(destructor:d5.CMessageMaterialListUnit)
  SharedDtor();
}

void CMessageMaterialListUnit::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uepath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  matinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnailurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pakurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dependentfilelist_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMessageMaterialListUnit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageMaterialListUnit::descriptor() {
  ::protobuf_message_5fmaterial_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmaterial_5flist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageMaterialListUnit& CMessageMaterialListUnit::default_instance() {
  ::protobuf_message_5fmaterial_5flist_2eproto::InitDefaultsCMessageMaterialListUnit();
  return *internal_default_instance();
}


void CMessageMaterialListUnit::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageMaterialListUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  matinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnailurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pakurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dependentfilelist_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&isdel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&updatetime_) -
      reinterpret_cast<char*>(&isdel_)) + sizeof(updatetime_));
  _internal_metadata_.Clear();
}

bool CMessageMaterialListUnit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageMaterialListUnit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageMaterialListUnit.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageMaterialListUnit.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uePath = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uepath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uepath().data(), static_cast<int>(this->uepath().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageMaterialListUnit.uePath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string matInfo = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_matinfo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->matinfo().data(), static_cast<int>(this->matinfo().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageMaterialListUnit.matInfo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string thumbnailUrl = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_thumbnailurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->thumbnailurl().data(), static_cast<int>(this->thumbnailurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageMaterialListUnit.thumbnailUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 isDel = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isdel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 userId = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 companyId = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &companyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 createTime = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &createtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 updateTime = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &updatetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 categoryId = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &categoryid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pakUrl = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pakurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pakurl().data(), static_cast<int>(this->pakurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageMaterialListUnit.pakUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dependentFileList = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dependentfilelist()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dependentfilelist().data(), static_cast<int>(this->dependentfilelist().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageMaterialListUnit.dependentFileList"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageMaterialListUnit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageMaterialListUnit)
  return false;
#undef DO_
}

void CMessageMaterialListUnit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageMaterialListUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageMaterialListUnit.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageMaterialListUnit.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // string uePath = 3;
  if (this->uepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uepath().data(), static_cast<int>(this->uepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageMaterialListUnit.uePath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->uepath(), output);
  }

  // string matInfo = 4;
  if (this->matinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->matinfo().data(), static_cast<int>(this->matinfo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageMaterialListUnit.matInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->matinfo(), output);
  }

  // string thumbnailUrl = 5;
  if (this->thumbnailurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thumbnailurl().data(), static_cast<int>(this->thumbnailurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageMaterialListUnit.thumbnailUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->thumbnailurl(), output);
  }

  // int32 isDel = 6;
  if (this->isdel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->isdel(), output);
  }

  // int32 userId = 7;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->userid(), output);
  }

  // int32 companyId = 8;
  if (this->companyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->companyid(), output);
  }

  // int64 createTime = 9;
  if (this->createtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->createtime(), output);
  }

  // int64 updateTime = 10;
  if (this->updatetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->updatetime(), output);
  }

  // int32 categoryId = 11;
  if (this->categoryid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->categoryid(), output);
  }

  // string pakUrl = 12;
  if (this->pakurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pakurl().data(), static_cast<int>(this->pakurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageMaterialListUnit.pakUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->pakurl(), output);
  }

  // string dependentFileList = 13;
  if (this->dependentfilelist().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dependentfilelist().data(), static_cast<int>(this->dependentfilelist().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageMaterialListUnit.dependentFileList");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->dependentfilelist(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageMaterialListUnit)
}

::google::protobuf::uint8* CMessageMaterialListUnit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageMaterialListUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageMaterialListUnit.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageMaterialListUnit.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // string uePath = 3;
  if (this->uepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uepath().data(), static_cast<int>(this->uepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageMaterialListUnit.uePath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->uepath(), target);
  }

  // string matInfo = 4;
  if (this->matinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->matinfo().data(), static_cast<int>(this->matinfo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageMaterialListUnit.matInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->matinfo(), target);
  }

  // string thumbnailUrl = 5;
  if (this->thumbnailurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thumbnailurl().data(), static_cast<int>(this->thumbnailurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageMaterialListUnit.thumbnailUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->thumbnailurl(), target);
  }

  // int32 isDel = 6;
  if (this->isdel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->isdel(), target);
  }

  // int32 userId = 7;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->userid(), target);
  }

  // int32 companyId = 8;
  if (this->companyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->companyid(), target);
  }

  // int64 createTime = 9;
  if (this->createtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->createtime(), target);
  }

  // int64 updateTime = 10;
  if (this->updatetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->updatetime(), target);
  }

  // int32 categoryId = 11;
  if (this->categoryid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->categoryid(), target);
  }

  // string pakUrl = 12;
  if (this->pakurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pakurl().data(), static_cast<int>(this->pakurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageMaterialListUnit.pakUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->pakurl(), target);
  }

  // string dependentFileList = 13;
  if (this->dependentfilelist().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dependentfilelist().data(), static_cast<int>(this->dependentfilelist().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageMaterialListUnit.dependentFileList");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->dependentfilelist(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageMaterialListUnit)
  return target;
}

size_t CMessageMaterialListUnit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageMaterialListUnit)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string uePath = 3;
  if (this->uepath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uepath());
  }

  // string matInfo = 4;
  if (this->matinfo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->matinfo());
  }

  // string thumbnailUrl = 5;
  if (this->thumbnailurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->thumbnailurl());
  }

  // string pakUrl = 12;
  if (this->pakurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pakurl());
  }

  // string dependentFileList = 13;
  if (this->dependentfilelist().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dependentfilelist());
  }

  // int32 isDel = 6;
  if (this->isdel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->isdel());
  }

  // int32 userId = 7;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  // int64 createTime = 9;
  if (this->createtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->createtime());
  }

  // int32 companyId = 8;
  if (this->companyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->companyid());
  }

  // int32 categoryId = 11;
  if (this->categoryid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->categoryid());
  }

  // int64 updateTime = 10;
  if (this->updatetime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->updatetime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageMaterialListUnit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageMaterialListUnit)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageMaterialListUnit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageMaterialListUnit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageMaterialListUnit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageMaterialListUnit)
    MergeFrom(*source);
  }
}

void CMessageMaterialListUnit::MergeFrom(const CMessageMaterialListUnit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageMaterialListUnit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.uepath().size() > 0) {

    uepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uepath_);
  }
  if (from.matinfo().size() > 0) {

    matinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.matinfo_);
  }
  if (from.thumbnailurl().size() > 0) {

    thumbnailurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnailurl_);
  }
  if (from.pakurl().size() > 0) {

    pakurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pakurl_);
  }
  if (from.dependentfilelist().size() > 0) {

    dependentfilelist_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dependentfilelist_);
  }
  if (from.isdel() != 0) {
    set_isdel(from.isdel());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.createtime() != 0) {
    set_createtime(from.createtime());
  }
  if (from.companyid() != 0) {
    set_companyid(from.companyid());
  }
  if (from.categoryid() != 0) {
    set_categoryid(from.categoryid());
  }
  if (from.updatetime() != 0) {
    set_updatetime(from.updatetime());
  }
}

void CMessageMaterialListUnit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageMaterialListUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageMaterialListUnit::CopyFrom(const CMessageMaterialListUnit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageMaterialListUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageMaterialListUnit::IsInitialized() const {
  return true;
}

void CMessageMaterialListUnit::Swap(CMessageMaterialListUnit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageMaterialListUnit::InternalSwap(CMessageMaterialListUnit* other) {
  using std::swap;
  id_.Swap(&other->id_);
  title_.Swap(&other->title_);
  uepath_.Swap(&other->uepath_);
  matinfo_.Swap(&other->matinfo_);
  thumbnailurl_.Swap(&other->thumbnailurl_);
  pakurl_.Swap(&other->pakurl_);
  dependentfilelist_.Swap(&other->dependentfilelist_);
  swap(isdel_, other->isdel_);
  swap(userid_, other->userid_);
  swap(createtime_, other->createtime_);
  swap(companyid_, other->companyid_);
  swap(categoryid_, other->categoryid_);
  swap(updatetime_, other->updatetime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageMaterialListUnit::GetMetadata() const {
  protobuf_message_5fmaterial_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmaterial_5flist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMessageMaterialList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageMaterialList::kRowsFieldNumber;
const int CMessageMaterialList::kTotalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageMaterialList::CMessageMaterialList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fmaterial_5flist_2eproto::InitDefaultsCMessageMaterialList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageMaterialList)
}
CMessageMaterialList::CMessageMaterialList(const CMessageMaterialList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rows_(from.rows_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  total_ = from.total_;
  // @@protoc_insertion_point(copy_constructor:d5.CMessageMaterialList)
}

void CMessageMaterialList::SharedCtor() {
  total_ = 0;
  _cached_size_ = 0;
}

CMessageMaterialList::~CMessageMaterialList() {
  // @@protoc_insertion_point(destructor:d5.CMessageMaterialList)
  SharedDtor();
}

void CMessageMaterialList::SharedDtor() {
}

void CMessageMaterialList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageMaterialList::descriptor() {
  ::protobuf_message_5fmaterial_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmaterial_5flist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageMaterialList& CMessageMaterialList::default_instance() {
  ::protobuf_message_5fmaterial_5flist_2eproto::InitDefaultsCMessageMaterialList();
  return *internal_default_instance();
}


void CMessageMaterialList::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageMaterialList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rows_.Clear();
  total_ = 0;
  _internal_metadata_.Clear();
}

bool CMessageMaterialList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageMaterialList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .d5.CMessageMaterialListUnit rows = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 total = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageMaterialList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageMaterialList)
  return false;
#undef DO_
}

void CMessageMaterialList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageMaterialList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .d5.CMessageMaterialListUnit rows = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rows_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->rows(static_cast<int>(i)),
      output);
  }

  // int32 total = 2;
  if (this->total() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageMaterialList)
}

::google::protobuf::uint8* CMessageMaterialList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageMaterialList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .d5.CMessageMaterialListUnit rows = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rows_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->rows(static_cast<int>(i)), deterministic, target);
  }

  // int32 total = 2;
  if (this->total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageMaterialList)
  return target;
}

size_t CMessageMaterialList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageMaterialList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .d5.CMessageMaterialListUnit rows = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->rows_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rows(static_cast<int>(i)));
    }
  }

  // int32 total = 2;
  if (this->total() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageMaterialList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageMaterialList)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageMaterialList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageMaterialList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageMaterialList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageMaterialList)
    MergeFrom(*source);
  }
}

void CMessageMaterialList::MergeFrom(const CMessageMaterialList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageMaterialList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rows_.MergeFrom(from.rows_);
  if (from.total() != 0) {
    set_total(from.total());
  }
}

void CMessageMaterialList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageMaterialList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageMaterialList::CopyFrom(const CMessageMaterialList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageMaterialList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageMaterialList::IsInitialized() const {
  return true;
}

void CMessageMaterialList::Swap(CMessageMaterialList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageMaterialList::InternalSwap(CMessageMaterialList* other) {
  using std::swap;
  CastToBase(&rows_)->InternalSwap(CastToBase(&other->rows_));
  swap(total_, other->total_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageMaterialList::GetMetadata() const {
  protobuf_message_5fmaterial_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmaterial_5flist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMessageMaterialListResponse::InitAsDefaultInstance() {
  ::d5::_CMessageMaterialListResponse_default_instance_._instance.get_mutable()->list_ = const_cast< ::d5::CMessageMaterialList*>(
      ::d5::CMessageMaterialList::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageMaterialListResponse::kTypeFieldNumber;
const int CMessageMaterialListResponse::kUuidFieldNumber;
const int CMessageMaterialListResponse::kStateFieldNumber;
const int CMessageMaterialListResponse::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageMaterialListResponse::CMessageMaterialListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fmaterial_5flist_2eproto::InitDefaultsCMessageMaterialListResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageMaterialListResponse)
}
CMessageMaterialListResponse::CMessageMaterialListResponse(const CMessageMaterialListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.has_list()) {
    list_ = new ::d5::CMessageMaterialList(*from.list_);
  } else {
    list_ = NULL;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&type_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:d5.CMessageMaterialListResponse)
}

void CMessageMaterialListResponse::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&list_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&list_)) + sizeof(state_));
  _cached_size_ = 0;
}

CMessageMaterialListResponse::~CMessageMaterialListResponse() {
  // @@protoc_insertion_point(destructor:d5.CMessageMaterialListResponse)
  SharedDtor();
}

void CMessageMaterialListResponse::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete list_;
}

void CMessageMaterialListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageMaterialListResponse::descriptor() {
  ::protobuf_message_5fmaterial_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmaterial_5flist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageMaterialListResponse& CMessageMaterialListResponse::default_instance() {
  ::protobuf_message_5fmaterial_5flist_2eproto::InitDefaultsCMessageMaterialListResponse();
  return *internal_default_instance();
}


void CMessageMaterialListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageMaterialListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && list_ != NULL) {
    delete list_;
  }
  list_ = NULL;
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&type_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool CMessageMaterialListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageMaterialListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageMaterialListResponse.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .d5.CMessageMaterialList list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageMaterialListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageMaterialListResponse)
  return false;
#undef DO_
}

void CMessageMaterialListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageMaterialListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageMaterialListResponse.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uuid(), output);
  }

  // int32 state = 3;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->state(), output);
  }

  // .d5.CMessageMaterialList list = 4;
  if (this->has_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *list_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageMaterialListResponse)
}

::google::protobuf::uint8* CMessageMaterialListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageMaterialListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageMaterialListResponse.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uuid(), target);
  }

  // int32 state = 3;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->state(), target);
  }

  // .d5.CMessageMaterialList list = 4;
  if (this->has_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *list_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageMaterialListResponse)
  return target;
}

size_t CMessageMaterialListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageMaterialListResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uuid = 2;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  // .d5.CMessageMaterialList list = 4;
  if (this->has_list()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *list_);
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 state = 3;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageMaterialListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageMaterialListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageMaterialListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageMaterialListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageMaterialListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageMaterialListResponse)
    MergeFrom(*source);
  }
}

void CMessageMaterialListResponse::MergeFrom(const CMessageMaterialListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageMaterialListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.has_list()) {
    mutable_list()->::d5::CMessageMaterialList::MergeFrom(from.list());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void CMessageMaterialListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageMaterialListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageMaterialListResponse::CopyFrom(const CMessageMaterialListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageMaterialListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageMaterialListResponse::IsInitialized() const {
  return true;
}

void CMessageMaterialListResponse::Swap(CMessageMaterialListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageMaterialListResponse::InternalSwap(CMessageMaterialListResponse* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_);
  swap(list_, other->list_);
  swap(type_, other->type_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageMaterialListResponse::GetMetadata() const {
  protobuf_message_5fmaterial_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmaterial_5flist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace d5
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageMaterialListRequest* Arena::Create< ::d5::CMessageMaterialListRequest >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageMaterialListRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageMaterialListUnit* Arena::Create< ::d5::CMessageMaterialListUnit >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageMaterialListUnit >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageMaterialList* Arena::Create< ::d5::CMessageMaterialList >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageMaterialList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageMaterialListResponse* Arena::Create< ::d5::CMessageMaterialListResponse >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageMaterialListResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
