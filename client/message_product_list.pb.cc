// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_product_list.proto

#include "message_product_list.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace d5 {
class CMessageProductListRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageProductListRequest>
      _instance;
} _CMessageProductListRequest_default_instance_;
class CMessageProductUnit_CMessageFurnitureUnitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageProductUnit_CMessageFurnitureUnit>
      _instance;
} _CMessageProductUnit_CMessageFurnitureUnit_default_instance_;
class CMessageProductUnit_CMessageProductImageUnitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageProductUnit_CMessageProductImageUnit>
      _instance;
} _CMessageProductUnit_CMessageProductImageUnit_default_instance_;
class CMessageProductUnit_CMessageProductBuildingMaterialDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageProductUnit_CMessageProductBuildingMaterial>
      _instance;
} _CMessageProductUnit_CMessageProductBuildingMaterial_default_instance_;
class CMessageProductUnitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageProductUnit>
      _instance;
} _CMessageProductUnit_default_instance_;
class CMessageProductListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageProductList>
      _instance;
} _CMessageProductList_default_instance_;
class CMessageProductListResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageProductListResponse>
      _instance;
} _CMessageProductListResponse_default_instance_;
}  // namespace d5
namespace protobuf_message_5fproduct_5flist_2eproto {
void InitDefaultsCMessageProductListRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::_CMessageProductListRequest_default_instance_;
    new (ptr) ::d5::CMessageProductListRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageProductListRequest::InitAsDefaultInstance();
}

void InitDefaultsCMessageProductListRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageProductListRequestImpl);
}

void InitDefaultsCMessageProductUnit_CMessageFurnitureUnitImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::_CMessageProductUnit_CMessageFurnitureUnit_default_instance_;
    new (ptr) ::d5::CMessageProductUnit_CMessageFurnitureUnit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageProductUnit_CMessageFurnitureUnit::InitAsDefaultInstance();
}

void InitDefaultsCMessageProductUnit_CMessageFurnitureUnit() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageProductUnit_CMessageFurnitureUnitImpl);
}

void InitDefaultsCMessageProductUnit_CMessageProductImageUnitImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::_CMessageProductUnit_CMessageProductImageUnit_default_instance_;
    new (ptr) ::d5::CMessageProductUnit_CMessageProductImageUnit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageProductUnit_CMessageProductImageUnit::InitAsDefaultInstance();
}

void InitDefaultsCMessageProductUnit_CMessageProductImageUnit() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageProductUnit_CMessageProductImageUnitImpl);
}

void InitDefaultsCMessageProductUnit_CMessageProductBuildingMaterialImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::_CMessageProductUnit_CMessageProductBuildingMaterial_default_instance_;
    new (ptr) ::d5::CMessageProductUnit_CMessageProductBuildingMaterial();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageProductUnit_CMessageProductBuildingMaterial::InitAsDefaultInstance();
}

void InitDefaultsCMessageProductUnit_CMessageProductBuildingMaterial() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageProductUnit_CMessageProductBuildingMaterialImpl);
}

void InitDefaultsCMessageProductUnitImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_5fproduct_5flist_2eproto::InitDefaultsCMessageProductUnit_CMessageFurnitureUnit();
  protobuf_message_5fproduct_5flist_2eproto::InitDefaultsCMessageProductUnit_CMessageProductBuildingMaterial();
  protobuf_message_5fproduct_5flist_2eproto::InitDefaultsCMessageProductUnit_CMessageProductImageUnit();
  {
    void* ptr = &::d5::_CMessageProductUnit_default_instance_;
    new (ptr) ::d5::CMessageProductUnit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageProductUnit::InitAsDefaultInstance();
}

void InitDefaultsCMessageProductUnit() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageProductUnitImpl);
}

void InitDefaultsCMessageProductListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_5fproduct_5flist_2eproto::InitDefaultsCMessageProductUnit();
  {
    void* ptr = &::d5::_CMessageProductList_default_instance_;
    new (ptr) ::d5::CMessageProductList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageProductList::InitAsDefaultInstance();
}

void InitDefaultsCMessageProductList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageProductListImpl);
}

void InitDefaultsCMessageProductListResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_5fproduct_5flist_2eproto::InitDefaultsCMessageProductList();
  {
    void* ptr = &::d5::_CMessageProductListResponse_default_instance_;
    new (ptr) ::d5::CMessageProductListResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageProductListResponse::InitAsDefaultInstance();
}

void InitDefaultsCMessageProductListResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageProductListResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductListRequest, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductListRequest, uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductListRequest, companyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductListRequest, updatetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductListRequest, pagesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductListRequest, pagenum_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit_CMessageFurnitureUnit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit_CMessageFurnitureUnit, productid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit_CMessageFurnitureUnit, uepath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit_CMessageFurnitureUnit, pakurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit_CMessageFurnitureUnit, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit_CMessageFurnitureUnit, depth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit_CMessageFurnitureUnit, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit_CMessageFurnitureUnit, isinteractive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit_CMessageFurnitureUnit, intelligenttype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit_CMessageFurnitureUnit, furniturestyleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit_CMessageFurnitureUnit, furnituremainmaterialid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit_CMessageFurnitureUnit, detailinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit_CMessageFurnitureUnit, furniturecoloridlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit_CMessageProductImageUnit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit_CMessageProductImageUnit, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit_CMessageProductImageUnit, displayindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit_CMessageProductImageUnit, fileurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit_CMessageProductImageUnit, productid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit_CMessageProductBuildingMaterial, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit_CMessageProductBuildingMaterial, productid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit_CMessageProductBuildingMaterial, isforfloor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit_CMessageProductBuildingMaterial, isforwall_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit_CMessageProductBuildingMaterial, isforceiling_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit_CMessageProductBuildingMaterial, materialid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit_CMessageProductBuildingMaterial, detailinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit_CMessageProductBuildingMaterial, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit_CMessageProductBuildingMaterial, width_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit, createtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit, updatetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit, brandid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit, producttype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit, isdel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit, companyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit, categoryid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit, buyurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit, furniture_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit, buildingmaterial_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit, productimagelist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit, dependentfilelist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit, brandtitle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductUnit, productcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductList, rows_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductList, total_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductListResponse, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductListResponse, uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductListResponse, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageProductListResponse, list_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::d5::CMessageProductListRequest)},
  { 11, -1, sizeof(::d5::CMessageProductUnit_CMessageFurnitureUnit)},
  { 28, -1, sizeof(::d5::CMessageProductUnit_CMessageProductImageUnit)},
  { 37, -1, sizeof(::d5::CMessageProductUnit_CMessageProductBuildingMaterial)},
  { 50, -1, sizeof(::d5::CMessageProductUnit)},
  { 74, -1, sizeof(::d5::CMessageProductList)},
  { 81, -1, sizeof(::d5::CMessageProductListResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageProductListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageProductUnit_CMessageFurnitureUnit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageProductUnit_CMessageProductImageUnit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageProductUnit_CMessageProductBuildingMaterial_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageProductUnit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageProductList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageProductListResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "message_product_list.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032message_product_list.proto\022\002d5\"\202\001\n\032CMe"
      "ssageProductListRequest\022\014\n\004type\030\001 \001(\005\022\014\n"
      "\004uuid\030\002 \001(\t\022\021\n\tcompanyid\030\003 \001(\005\022\022\n\nupdate"
      "time\030\004 \001(\004\022\020\n\010pageSize\030\005 \001(\005\022\017\n\007pageNum\030"
      "\006 \001(\005\"\323\010\n\023CMessageProductUnit\022\n\n\002id\030\001 \001("
      "\t\022\r\n\005title\030\002 \001(\t\022\r\n\005price\030\003 \001(\002\022\022\n\ncreat"
      "eTime\030\004 \001(\003\022\022\n\nupdateTime\030\005 \001(\003\022\017\n\007brand"
      "Id\030\006 \001(\005\022\023\n\013productType\030\007 \001(\005\022\r\n\005isDel\030\010"
      " \001(\005\022\016\n\006userId\030\t \001(\005\022\021\n\tcompanyId\030\n \001(\005\022"
      "\023\n\013description\030\013 \001(\t\022\022\n\ncategoryId\030\014 \001(\005"
      "\022\016\n\006buyUrl\030\r \001(\t\022@\n\tfurniture\030\016 \001(\0132-.d5"
      ".CMessageProductUnit.CMessageFurnitureUn"
      "it\022Q\n\020buildingMaterial\030\017 \001(\01327.d5.CMessa"
      "geProductUnit.CMessageProductBuildingMat"
      "erial\022J\n\020productImageList\030\020 \003(\01320.d5.CMe"
      "ssageProductUnit.CMessageProductImageUni"
      "t\022\031\n\021dependentFileList\030\021 \001(\t\022\022\n\nbrandTit"
      "le\030\022 \001(\t\022\023\n\013productCode\030\023 \001(\t\032\226\002\n\025CMessa"
      "geFurnitureUnit\022\021\n\tproductId\030\001 \001(\t\022\016\n\006ue"
      "Path\030\002 \001(\t\022\016\n\006pakUrl\030\003 \001(\t\022\016\n\006length\030\004 \001"
      "(\002\022\r\n\005depth\030\005 \001(\002\022\016\n\006height\030\006 \001(\002\022\025\n\risI"
      "nteractive\030\007 \001(\005\022\027\n\017intelligentType\030\010 \001("
      "\005\022\030\n\020furnitureStyleId\030\t \001(\005\022\037\n\027furniture"
      "MainMaterialId\030\n \001(\005\022\022\n\ndetailInfo\030\013 \001(\t"
      "\022\034\n\024furnitureColorIdList\030\014 \003(\005\032`\n\030CMessa"
      "geProductImageUnit\022\n\n\002id\030\001 \001(\t\022\024\n\014displa"
      "yIndex\030\002 \001(\005\022\017\n\007fileUrl\030\003 \001(\t\022\021\n\tproduct"
      "Id\030\004 \001(\t\032\270\001\n\037CMessageProductBuildingMate"
      "rial\022\021\n\tproductId\030\001 \001(\t\022\022\n\nisForFloor\030\002 "
      "\001(\005\022\021\n\tisForWall\030\003 \001(\005\022\024\n\014isForCeiling\030\004"
      " \001(\005\022\022\n\nmaterialId\030\005 \001(\t\022\022\n\ndetailInfo\030\006"
      " \001(\t\022\016\n\006length\030\007 \001(\005\022\r\n\005width\030\010 \001(\005\"K\n\023C"
      "MessageProductList\022%\n\004rows\030\001 \003(\0132\027.d5.CM"
      "essageProductUnit\022\r\n\005total\030\002 \001(\005\"o\n\033CMes"
      "sageProductListResponse\022\014\n\004type\030\001 \001(\005\022\014\n"
      "\004uuid\030\002 \001(\t\022\r\n\005state\030\003 \001(\005\022%\n\004list\030\004 \001(\013"
      "2\027.d5.CMessageProductListb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1473);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message_product_list.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_message_5fproduct_5flist_2eproto
namespace d5 {

// ===================================================================

void CMessageProductListRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageProductListRequest::kTypeFieldNumber;
const int CMessageProductListRequest::kUuidFieldNumber;
const int CMessageProductListRequest::kCompanyidFieldNumber;
const int CMessageProductListRequest::kUpdatetimeFieldNumber;
const int CMessageProductListRequest::kPageSizeFieldNumber;
const int CMessageProductListRequest::kPageNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageProductListRequest::CMessageProductListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fproduct_5flist_2eproto::InitDefaultsCMessageProductListRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageProductListRequest)
}
CMessageProductListRequest::CMessageProductListRequest(const CMessageProductListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&pagenum_) -
    reinterpret_cast<char*>(&type_)) + sizeof(pagenum_));
  // @@protoc_insertion_point(copy_constructor:d5.CMessageProductListRequest)
}

void CMessageProductListRequest::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pagenum_) -
      reinterpret_cast<char*>(&type_)) + sizeof(pagenum_));
  _cached_size_ = 0;
}

CMessageProductListRequest::~CMessageProductListRequest() {
  // @@protoc_insertion_point(destructor:d5.CMessageProductListRequest)
  SharedDtor();
}

void CMessageProductListRequest::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMessageProductListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageProductListRequest::descriptor() {
  ::protobuf_message_5fproduct_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fproduct_5flist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageProductListRequest& CMessageProductListRequest::default_instance() {
  ::protobuf_message_5fproduct_5flist_2eproto::InitDefaultsCMessageProductListRequest();
  return *internal_default_instance();
}


void CMessageProductListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageProductListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pagenum_) -
      reinterpret_cast<char*>(&type_)) + sizeof(pagenum_));
  _internal_metadata_.Clear();
}

bool CMessageProductListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageProductListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageProductListRequest.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 companyid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &companyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 updatetime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &updatetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 pageSize = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pagesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 pageNum = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pagenum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageProductListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageProductListRequest)
  return false;
#undef DO_
}

void CMessageProductListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageProductListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductListRequest.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uuid(), output);
  }

  // int32 companyid = 3;
  if (this->companyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->companyid(), output);
  }

  // uint64 updatetime = 4;
  if (this->updatetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->updatetime(), output);
  }

  // int32 pageSize = 5;
  if (this->pagesize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->pagesize(), output);
  }

  // int32 pageNum = 6;
  if (this->pagenum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->pagenum(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageProductListRequest)
}

::google::protobuf::uint8* CMessageProductListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageProductListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductListRequest.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uuid(), target);
  }

  // int32 companyid = 3;
  if (this->companyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->companyid(), target);
  }

  // uint64 updatetime = 4;
  if (this->updatetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->updatetime(), target);
  }

  // int32 pageSize = 5;
  if (this->pagesize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->pagesize(), target);
  }

  // int32 pageNum = 6;
  if (this->pagenum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->pagenum(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageProductListRequest)
  return target;
}

size_t CMessageProductListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageProductListRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uuid = 2;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 companyid = 3;
  if (this->companyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->companyid());
  }

  // uint64 updatetime = 4;
  if (this->updatetime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->updatetime());
  }

  // int32 pageSize = 5;
  if (this->pagesize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pagesize());
  }

  // int32 pageNum = 6;
  if (this->pagenum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pagenum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageProductListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageProductListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageProductListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageProductListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageProductListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageProductListRequest)
    MergeFrom(*source);
  }
}

void CMessageProductListRequest::MergeFrom(const CMessageProductListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageProductListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.companyid() != 0) {
    set_companyid(from.companyid());
  }
  if (from.updatetime() != 0) {
    set_updatetime(from.updatetime());
  }
  if (from.pagesize() != 0) {
    set_pagesize(from.pagesize());
  }
  if (from.pagenum() != 0) {
    set_pagenum(from.pagenum());
  }
}

void CMessageProductListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageProductListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageProductListRequest::CopyFrom(const CMessageProductListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageProductListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageProductListRequest::IsInitialized() const {
  return true;
}

void CMessageProductListRequest::Swap(CMessageProductListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageProductListRequest::InternalSwap(CMessageProductListRequest* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_);
  swap(type_, other->type_);
  swap(companyid_, other->companyid_);
  swap(updatetime_, other->updatetime_);
  swap(pagesize_, other->pagesize_);
  swap(pagenum_, other->pagenum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageProductListRequest::GetMetadata() const {
  protobuf_message_5fproduct_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fproduct_5flist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMessageProductUnit_CMessageFurnitureUnit::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageProductUnit_CMessageFurnitureUnit::kProductIdFieldNumber;
const int CMessageProductUnit_CMessageFurnitureUnit::kUePathFieldNumber;
const int CMessageProductUnit_CMessageFurnitureUnit::kPakUrlFieldNumber;
const int CMessageProductUnit_CMessageFurnitureUnit::kLengthFieldNumber;
const int CMessageProductUnit_CMessageFurnitureUnit::kDepthFieldNumber;
const int CMessageProductUnit_CMessageFurnitureUnit::kHeightFieldNumber;
const int CMessageProductUnit_CMessageFurnitureUnit::kIsInteractiveFieldNumber;
const int CMessageProductUnit_CMessageFurnitureUnit::kIntelligentTypeFieldNumber;
const int CMessageProductUnit_CMessageFurnitureUnit::kFurnitureStyleIdFieldNumber;
const int CMessageProductUnit_CMessageFurnitureUnit::kFurnitureMainMaterialIdFieldNumber;
const int CMessageProductUnit_CMessageFurnitureUnit::kDetailInfoFieldNumber;
const int CMessageProductUnit_CMessageFurnitureUnit::kFurnitureColorIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageProductUnit_CMessageFurnitureUnit::CMessageProductUnit_CMessageFurnitureUnit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fproduct_5flist_2eproto::InitDefaultsCMessageProductUnit_CMessageFurnitureUnit();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageProductUnit.CMessageFurnitureUnit)
}
CMessageProductUnit_CMessageFurnitureUnit::CMessageProductUnit_CMessageFurnitureUnit(const CMessageProductUnit_CMessageFurnitureUnit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      furniturecoloridlist_(from.furniturecoloridlist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  productid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.productid().size() > 0) {
    productid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productid_);
  }
  uepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uepath().size() > 0) {
    uepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uepath_);
  }
  pakurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pakurl().size() > 0) {
    pakurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pakurl_);
  }
  detailinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.detailinfo().size() > 0) {
    detailinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detailinfo_);
  }
  ::memcpy(&length_, &from.length_,
    static_cast<size_t>(reinterpret_cast<char*>(&furnituremainmaterialid_) -
    reinterpret_cast<char*>(&length_)) + sizeof(furnituremainmaterialid_));
  // @@protoc_insertion_point(copy_constructor:d5.CMessageProductUnit.CMessageFurnitureUnit)
}

void CMessageProductUnit_CMessageFurnitureUnit::SharedCtor() {
  productid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pakurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detailinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&furnituremainmaterialid_) -
      reinterpret_cast<char*>(&length_)) + sizeof(furnituremainmaterialid_));
  _cached_size_ = 0;
}

CMessageProductUnit_CMessageFurnitureUnit::~CMessageProductUnit_CMessageFurnitureUnit() {
  // @@protoc_insertion_point(destructor:d5.CMessageProductUnit.CMessageFurnitureUnit)
  SharedDtor();
}

void CMessageProductUnit_CMessageFurnitureUnit::SharedDtor() {
  productid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uepath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pakurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detailinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMessageProductUnit_CMessageFurnitureUnit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageProductUnit_CMessageFurnitureUnit::descriptor() {
  ::protobuf_message_5fproduct_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fproduct_5flist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageProductUnit_CMessageFurnitureUnit& CMessageProductUnit_CMessageFurnitureUnit::default_instance() {
  ::protobuf_message_5fproduct_5flist_2eproto::InitDefaultsCMessageProductUnit_CMessageFurnitureUnit();
  return *internal_default_instance();
}


void CMessageProductUnit_CMessageFurnitureUnit::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageProductUnit.CMessageFurnitureUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  furniturecoloridlist_.Clear();
  productid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pakurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detailinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&furnituremainmaterialid_) -
      reinterpret_cast<char*>(&length_)) + sizeof(furnituremainmaterialid_));
  _internal_metadata_.Clear();
}

bool CMessageProductUnit_CMessageFurnitureUnit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageProductUnit.CMessageFurnitureUnit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string productId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->productid().data(), static_cast<int>(this->productid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageProductUnit.CMessageFurnitureUnit.productId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uePath = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uepath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uepath().data(), static_cast<int>(this->uepath().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageProductUnit.CMessageFurnitureUnit.uePath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pakUrl = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pakurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pakurl().data(), static_cast<int>(this->pakurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageProductUnit.CMessageFurnitureUnit.pakUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float length = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float depth = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &depth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float height = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 isInteractive = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isinteractive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 intelligentType = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &intelligenttype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 furnitureStyleId = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &furniturestyleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 furnitureMainMaterialId = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &furnituremainmaterialid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string detailInfo = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_detailinfo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->detailinfo().data(), static_cast<int>(this->detailinfo().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageProductUnit.CMessageFurnitureUnit.detailInfo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 furnitureColorIdList = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_furniturecoloridlist())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 98u, input, this->mutable_furniturecoloridlist())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageProductUnit.CMessageFurnitureUnit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageProductUnit.CMessageFurnitureUnit)
  return false;
#undef DO_
}

void CMessageProductUnit_CMessageFurnitureUnit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageProductUnit.CMessageFurnitureUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string productId = 1;
  if (this->productid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productid().data(), static_cast<int>(this->productid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.CMessageFurnitureUnit.productId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->productid(), output);
  }

  // string uePath = 2;
  if (this->uepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uepath().data(), static_cast<int>(this->uepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.CMessageFurnitureUnit.uePath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uepath(), output);
  }

  // string pakUrl = 3;
  if (this->pakurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pakurl().data(), static_cast<int>(this->pakurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.CMessageFurnitureUnit.pakUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->pakurl(), output);
  }

  // float length = 4;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->length(), output);
  }

  // float depth = 5;
  if (this->depth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->depth(), output);
  }

  // float height = 6;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->height(), output);
  }

  // int32 isInteractive = 7;
  if (this->isinteractive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->isinteractive(), output);
  }

  // int32 intelligentType = 8;
  if (this->intelligenttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->intelligenttype(), output);
  }

  // int32 furnitureStyleId = 9;
  if (this->furniturestyleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->furniturestyleid(), output);
  }

  // int32 furnitureMainMaterialId = 10;
  if (this->furnituremainmaterialid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->furnituremainmaterialid(), output);
  }

  // string detailInfo = 11;
  if (this->detailinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detailinfo().data(), static_cast<int>(this->detailinfo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.CMessageFurnitureUnit.detailInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->detailinfo(), output);
  }

  // repeated int32 furnitureColorIdList = 12;
  if (this->furniturecoloridlist_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _furniturecoloridlist_cached_byte_size_));
  }
  for (int i = 0, n = this->furniturecoloridlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->furniturecoloridlist(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageProductUnit.CMessageFurnitureUnit)
}

::google::protobuf::uint8* CMessageProductUnit_CMessageFurnitureUnit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageProductUnit.CMessageFurnitureUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string productId = 1;
  if (this->productid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productid().data(), static_cast<int>(this->productid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.CMessageFurnitureUnit.productId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->productid(), target);
  }

  // string uePath = 2;
  if (this->uepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uepath().data(), static_cast<int>(this->uepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.CMessageFurnitureUnit.uePath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uepath(), target);
  }

  // string pakUrl = 3;
  if (this->pakurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pakurl().data(), static_cast<int>(this->pakurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.CMessageFurnitureUnit.pakUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->pakurl(), target);
  }

  // float length = 4;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->length(), target);
  }

  // float depth = 5;
  if (this->depth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->depth(), target);
  }

  // float height = 6;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->height(), target);
  }

  // int32 isInteractive = 7;
  if (this->isinteractive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->isinteractive(), target);
  }

  // int32 intelligentType = 8;
  if (this->intelligenttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->intelligenttype(), target);
  }

  // int32 furnitureStyleId = 9;
  if (this->furniturestyleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->furniturestyleid(), target);
  }

  // int32 furnitureMainMaterialId = 10;
  if (this->furnituremainmaterialid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->furnituremainmaterialid(), target);
  }

  // string detailInfo = 11;
  if (this->detailinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detailinfo().data(), static_cast<int>(this->detailinfo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.CMessageFurnitureUnit.detailInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->detailinfo(), target);
  }

  // repeated int32 furnitureColorIdList = 12;
  if (this->furniturecoloridlist_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      12,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _furniturecoloridlist_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->furniturecoloridlist_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageProductUnit.CMessageFurnitureUnit)
  return target;
}

size_t CMessageProductUnit_CMessageFurnitureUnit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageProductUnit.CMessageFurnitureUnit)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 furnitureColorIdList = 12;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->furniturecoloridlist_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _furniturecoloridlist_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string productId = 1;
  if (this->productid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->productid());
  }

  // string uePath = 2;
  if (this->uepath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uepath());
  }

  // string pakUrl = 3;
  if (this->pakurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pakurl());
  }

  // string detailInfo = 11;
  if (this->detailinfo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->detailinfo());
  }

  // float length = 4;
  if (this->length() != 0) {
    total_size += 1 + 4;
  }

  // float depth = 5;
  if (this->depth() != 0) {
    total_size += 1 + 4;
  }

  // float height = 6;
  if (this->height() != 0) {
    total_size += 1 + 4;
  }

  // int32 isInteractive = 7;
  if (this->isinteractive() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->isinteractive());
  }

  // int32 intelligentType = 8;
  if (this->intelligenttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->intelligenttype());
  }

  // int32 furnitureStyleId = 9;
  if (this->furniturestyleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->furniturestyleid());
  }

  // int32 furnitureMainMaterialId = 10;
  if (this->furnituremainmaterialid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->furnituremainmaterialid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageProductUnit_CMessageFurnitureUnit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageProductUnit.CMessageFurnitureUnit)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageProductUnit_CMessageFurnitureUnit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageProductUnit_CMessageFurnitureUnit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageProductUnit.CMessageFurnitureUnit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageProductUnit.CMessageFurnitureUnit)
    MergeFrom(*source);
  }
}

void CMessageProductUnit_CMessageFurnitureUnit::MergeFrom(const CMessageProductUnit_CMessageFurnitureUnit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageProductUnit.CMessageFurnitureUnit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  furniturecoloridlist_.MergeFrom(from.furniturecoloridlist_);
  if (from.productid().size() > 0) {

    productid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productid_);
  }
  if (from.uepath().size() > 0) {

    uepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uepath_);
  }
  if (from.pakurl().size() > 0) {

    pakurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pakurl_);
  }
  if (from.detailinfo().size() > 0) {

    detailinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detailinfo_);
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
  if (from.depth() != 0) {
    set_depth(from.depth());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.isinteractive() != 0) {
    set_isinteractive(from.isinteractive());
  }
  if (from.intelligenttype() != 0) {
    set_intelligenttype(from.intelligenttype());
  }
  if (from.furniturestyleid() != 0) {
    set_furniturestyleid(from.furniturestyleid());
  }
  if (from.furnituremainmaterialid() != 0) {
    set_furnituremainmaterialid(from.furnituremainmaterialid());
  }
}

void CMessageProductUnit_CMessageFurnitureUnit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageProductUnit.CMessageFurnitureUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageProductUnit_CMessageFurnitureUnit::CopyFrom(const CMessageProductUnit_CMessageFurnitureUnit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageProductUnit.CMessageFurnitureUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageProductUnit_CMessageFurnitureUnit::IsInitialized() const {
  return true;
}

void CMessageProductUnit_CMessageFurnitureUnit::Swap(CMessageProductUnit_CMessageFurnitureUnit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageProductUnit_CMessageFurnitureUnit::InternalSwap(CMessageProductUnit_CMessageFurnitureUnit* other) {
  using std::swap;
  furniturecoloridlist_.InternalSwap(&other->furniturecoloridlist_);
  productid_.Swap(&other->productid_);
  uepath_.Swap(&other->uepath_);
  pakurl_.Swap(&other->pakurl_);
  detailinfo_.Swap(&other->detailinfo_);
  swap(length_, other->length_);
  swap(depth_, other->depth_);
  swap(height_, other->height_);
  swap(isinteractive_, other->isinteractive_);
  swap(intelligenttype_, other->intelligenttype_);
  swap(furniturestyleid_, other->furniturestyleid_);
  swap(furnituremainmaterialid_, other->furnituremainmaterialid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageProductUnit_CMessageFurnitureUnit::GetMetadata() const {
  protobuf_message_5fproduct_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fproduct_5flist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMessageProductUnit_CMessageProductImageUnit::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageProductUnit_CMessageProductImageUnit::kIdFieldNumber;
const int CMessageProductUnit_CMessageProductImageUnit::kDisplayIndexFieldNumber;
const int CMessageProductUnit_CMessageProductImageUnit::kFileUrlFieldNumber;
const int CMessageProductUnit_CMessageProductImageUnit::kProductIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageProductUnit_CMessageProductImageUnit::CMessageProductUnit_CMessageProductImageUnit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fproduct_5flist_2eproto::InitDefaultsCMessageProductUnit_CMessageProductImageUnit();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageProductUnit.CMessageProductImageUnit)
}
CMessageProductUnit_CMessageProductImageUnit::CMessageProductUnit_CMessageProductImageUnit(const CMessageProductUnit_CMessageProductImageUnit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  fileurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fileurl().size() > 0) {
    fileurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fileurl_);
  }
  productid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.productid().size() > 0) {
    productid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productid_);
  }
  displayindex_ = from.displayindex_;
  // @@protoc_insertion_point(copy_constructor:d5.CMessageProductUnit.CMessageProductImageUnit)
}

void CMessageProductUnit_CMessageProductImageUnit::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fileurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  displayindex_ = 0;
  _cached_size_ = 0;
}

CMessageProductUnit_CMessageProductImageUnit::~CMessageProductUnit_CMessageProductImageUnit() {
  // @@protoc_insertion_point(destructor:d5.CMessageProductUnit.CMessageProductImageUnit)
  SharedDtor();
}

void CMessageProductUnit_CMessageProductImageUnit::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fileurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMessageProductUnit_CMessageProductImageUnit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageProductUnit_CMessageProductImageUnit::descriptor() {
  ::protobuf_message_5fproduct_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fproduct_5flist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageProductUnit_CMessageProductImageUnit& CMessageProductUnit_CMessageProductImageUnit::default_instance() {
  ::protobuf_message_5fproduct_5flist_2eproto::InitDefaultsCMessageProductUnit_CMessageProductImageUnit();
  return *internal_default_instance();
}


void CMessageProductUnit_CMessageProductImageUnit::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageProductUnit.CMessageProductImageUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fileurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  displayindex_ = 0;
  _internal_metadata_.Clear();
}

bool CMessageProductUnit_CMessageProductImageUnit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageProductUnit.CMessageProductImageUnit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageProductUnit.CMessageProductImageUnit.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 displayIndex = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &displayindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fileUrl = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fileurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fileurl().data(), static_cast<int>(this->fileurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageProductUnit.CMessageProductImageUnit.fileUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string productId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->productid().data(), static_cast<int>(this->productid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageProductUnit.CMessageProductImageUnit.productId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageProductUnit.CMessageProductImageUnit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageProductUnit.CMessageProductImageUnit)
  return false;
#undef DO_
}

void CMessageProductUnit_CMessageProductImageUnit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageProductUnit.CMessageProductImageUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.CMessageProductImageUnit.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // int32 displayIndex = 2;
  if (this->displayindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->displayindex(), output);
  }

  // string fileUrl = 3;
  if (this->fileurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fileurl().data(), static_cast<int>(this->fileurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.CMessageProductImageUnit.fileUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->fileurl(), output);
  }

  // string productId = 4;
  if (this->productid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productid().data(), static_cast<int>(this->productid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.CMessageProductImageUnit.productId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->productid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageProductUnit.CMessageProductImageUnit)
}

::google::protobuf::uint8* CMessageProductUnit_CMessageProductImageUnit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageProductUnit.CMessageProductImageUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.CMessageProductImageUnit.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // int32 displayIndex = 2;
  if (this->displayindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->displayindex(), target);
  }

  // string fileUrl = 3;
  if (this->fileurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fileurl().data(), static_cast<int>(this->fileurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.CMessageProductImageUnit.fileUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->fileurl(), target);
  }

  // string productId = 4;
  if (this->productid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productid().data(), static_cast<int>(this->productid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.CMessageProductImageUnit.productId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->productid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageProductUnit.CMessageProductImageUnit)
  return target;
}

size_t CMessageProductUnit_CMessageProductImageUnit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageProductUnit.CMessageProductImageUnit)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string fileUrl = 3;
  if (this->fileurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fileurl());
  }

  // string productId = 4;
  if (this->productid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->productid());
  }

  // int32 displayIndex = 2;
  if (this->displayindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->displayindex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageProductUnit_CMessageProductImageUnit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageProductUnit.CMessageProductImageUnit)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageProductUnit_CMessageProductImageUnit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageProductUnit_CMessageProductImageUnit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageProductUnit.CMessageProductImageUnit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageProductUnit.CMessageProductImageUnit)
    MergeFrom(*source);
  }
}

void CMessageProductUnit_CMessageProductImageUnit::MergeFrom(const CMessageProductUnit_CMessageProductImageUnit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageProductUnit.CMessageProductImageUnit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.fileurl().size() > 0) {

    fileurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fileurl_);
  }
  if (from.productid().size() > 0) {

    productid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productid_);
  }
  if (from.displayindex() != 0) {
    set_displayindex(from.displayindex());
  }
}

void CMessageProductUnit_CMessageProductImageUnit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageProductUnit.CMessageProductImageUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageProductUnit_CMessageProductImageUnit::CopyFrom(const CMessageProductUnit_CMessageProductImageUnit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageProductUnit.CMessageProductImageUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageProductUnit_CMessageProductImageUnit::IsInitialized() const {
  return true;
}

void CMessageProductUnit_CMessageProductImageUnit::Swap(CMessageProductUnit_CMessageProductImageUnit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageProductUnit_CMessageProductImageUnit::InternalSwap(CMessageProductUnit_CMessageProductImageUnit* other) {
  using std::swap;
  id_.Swap(&other->id_);
  fileurl_.Swap(&other->fileurl_);
  productid_.Swap(&other->productid_);
  swap(displayindex_, other->displayindex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageProductUnit_CMessageProductImageUnit::GetMetadata() const {
  protobuf_message_5fproduct_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fproduct_5flist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMessageProductUnit_CMessageProductBuildingMaterial::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageProductUnit_CMessageProductBuildingMaterial::kProductIdFieldNumber;
const int CMessageProductUnit_CMessageProductBuildingMaterial::kIsForFloorFieldNumber;
const int CMessageProductUnit_CMessageProductBuildingMaterial::kIsForWallFieldNumber;
const int CMessageProductUnit_CMessageProductBuildingMaterial::kIsForCeilingFieldNumber;
const int CMessageProductUnit_CMessageProductBuildingMaterial::kMaterialIdFieldNumber;
const int CMessageProductUnit_CMessageProductBuildingMaterial::kDetailInfoFieldNumber;
const int CMessageProductUnit_CMessageProductBuildingMaterial::kLengthFieldNumber;
const int CMessageProductUnit_CMessageProductBuildingMaterial::kWidthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageProductUnit_CMessageProductBuildingMaterial::CMessageProductUnit_CMessageProductBuildingMaterial()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fproduct_5flist_2eproto::InitDefaultsCMessageProductUnit_CMessageProductBuildingMaterial();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageProductUnit.CMessageProductBuildingMaterial)
}
CMessageProductUnit_CMessageProductBuildingMaterial::CMessageProductUnit_CMessageProductBuildingMaterial(const CMessageProductUnit_CMessageProductBuildingMaterial& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  productid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.productid().size() > 0) {
    productid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productid_);
  }
  materialid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.materialid().size() > 0) {
    materialid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.materialid_);
  }
  detailinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.detailinfo().size() > 0) {
    detailinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detailinfo_);
  }
  ::memcpy(&isforfloor_, &from.isforfloor_,
    static_cast<size_t>(reinterpret_cast<char*>(&width_) -
    reinterpret_cast<char*>(&isforfloor_)) + sizeof(width_));
  // @@protoc_insertion_point(copy_constructor:d5.CMessageProductUnit.CMessageProductBuildingMaterial)
}

void CMessageProductUnit_CMessageProductBuildingMaterial::SharedCtor() {
  productid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  materialid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detailinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&isforfloor_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&width_) -
      reinterpret_cast<char*>(&isforfloor_)) + sizeof(width_));
  _cached_size_ = 0;
}

CMessageProductUnit_CMessageProductBuildingMaterial::~CMessageProductUnit_CMessageProductBuildingMaterial() {
  // @@protoc_insertion_point(destructor:d5.CMessageProductUnit.CMessageProductBuildingMaterial)
  SharedDtor();
}

void CMessageProductUnit_CMessageProductBuildingMaterial::SharedDtor() {
  productid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  materialid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detailinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMessageProductUnit_CMessageProductBuildingMaterial::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageProductUnit_CMessageProductBuildingMaterial::descriptor() {
  ::protobuf_message_5fproduct_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fproduct_5flist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageProductUnit_CMessageProductBuildingMaterial& CMessageProductUnit_CMessageProductBuildingMaterial::default_instance() {
  ::protobuf_message_5fproduct_5flist_2eproto::InitDefaultsCMessageProductUnit_CMessageProductBuildingMaterial();
  return *internal_default_instance();
}


void CMessageProductUnit_CMessageProductBuildingMaterial::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageProductUnit.CMessageProductBuildingMaterial)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  productid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  materialid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detailinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&isforfloor_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&width_) -
      reinterpret_cast<char*>(&isforfloor_)) + sizeof(width_));
  _internal_metadata_.Clear();
}

bool CMessageProductUnit_CMessageProductBuildingMaterial::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageProductUnit.CMessageProductBuildingMaterial)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string productId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->productid().data(), static_cast<int>(this->productid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageProductUnit.CMessageProductBuildingMaterial.productId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 isForFloor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isforfloor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 isForWall = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isforwall_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 isForCeiling = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isforceiling_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string materialId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_materialid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->materialid().data(), static_cast<int>(this->materialid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageProductUnit.CMessageProductBuildingMaterial.materialId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string detailInfo = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_detailinfo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->detailinfo().data(), static_cast<int>(this->detailinfo().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageProductUnit.CMessageProductBuildingMaterial.detailInfo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 length = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 width = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageProductUnit.CMessageProductBuildingMaterial)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageProductUnit.CMessageProductBuildingMaterial)
  return false;
#undef DO_
}

void CMessageProductUnit_CMessageProductBuildingMaterial::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageProductUnit.CMessageProductBuildingMaterial)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string productId = 1;
  if (this->productid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productid().data(), static_cast<int>(this->productid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.CMessageProductBuildingMaterial.productId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->productid(), output);
  }

  // int32 isForFloor = 2;
  if (this->isforfloor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->isforfloor(), output);
  }

  // int32 isForWall = 3;
  if (this->isforwall() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->isforwall(), output);
  }

  // int32 isForCeiling = 4;
  if (this->isforceiling() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->isforceiling(), output);
  }

  // string materialId = 5;
  if (this->materialid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->materialid().data(), static_cast<int>(this->materialid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.CMessageProductBuildingMaterial.materialId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->materialid(), output);
  }

  // string detailInfo = 6;
  if (this->detailinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detailinfo().data(), static_cast<int>(this->detailinfo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.CMessageProductBuildingMaterial.detailInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->detailinfo(), output);
  }

  // int32 length = 7;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->length(), output);
  }

  // int32 width = 8;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->width(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageProductUnit.CMessageProductBuildingMaterial)
}

::google::protobuf::uint8* CMessageProductUnit_CMessageProductBuildingMaterial::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageProductUnit.CMessageProductBuildingMaterial)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string productId = 1;
  if (this->productid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productid().data(), static_cast<int>(this->productid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.CMessageProductBuildingMaterial.productId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->productid(), target);
  }

  // int32 isForFloor = 2;
  if (this->isforfloor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->isforfloor(), target);
  }

  // int32 isForWall = 3;
  if (this->isforwall() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->isforwall(), target);
  }

  // int32 isForCeiling = 4;
  if (this->isforceiling() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->isforceiling(), target);
  }

  // string materialId = 5;
  if (this->materialid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->materialid().data(), static_cast<int>(this->materialid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.CMessageProductBuildingMaterial.materialId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->materialid(), target);
  }

  // string detailInfo = 6;
  if (this->detailinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detailinfo().data(), static_cast<int>(this->detailinfo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.CMessageProductBuildingMaterial.detailInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->detailinfo(), target);
  }

  // int32 length = 7;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->length(), target);
  }

  // int32 width = 8;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->width(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageProductUnit.CMessageProductBuildingMaterial)
  return target;
}

size_t CMessageProductUnit_CMessageProductBuildingMaterial::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageProductUnit.CMessageProductBuildingMaterial)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string productId = 1;
  if (this->productid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->productid());
  }

  // string materialId = 5;
  if (this->materialid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->materialid());
  }

  // string detailInfo = 6;
  if (this->detailinfo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->detailinfo());
  }

  // int32 isForFloor = 2;
  if (this->isforfloor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->isforfloor());
  }

  // int32 isForWall = 3;
  if (this->isforwall() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->isforwall());
  }

  // int32 isForCeiling = 4;
  if (this->isforceiling() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->isforceiling());
  }

  // int32 length = 7;
  if (this->length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->length());
  }

  // int32 width = 8;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageProductUnit_CMessageProductBuildingMaterial::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageProductUnit.CMessageProductBuildingMaterial)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageProductUnit_CMessageProductBuildingMaterial* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageProductUnit_CMessageProductBuildingMaterial>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageProductUnit.CMessageProductBuildingMaterial)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageProductUnit.CMessageProductBuildingMaterial)
    MergeFrom(*source);
  }
}

void CMessageProductUnit_CMessageProductBuildingMaterial::MergeFrom(const CMessageProductUnit_CMessageProductBuildingMaterial& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageProductUnit.CMessageProductBuildingMaterial)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.productid().size() > 0) {

    productid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productid_);
  }
  if (from.materialid().size() > 0) {

    materialid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.materialid_);
  }
  if (from.detailinfo().size() > 0) {

    detailinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detailinfo_);
  }
  if (from.isforfloor() != 0) {
    set_isforfloor(from.isforfloor());
  }
  if (from.isforwall() != 0) {
    set_isforwall(from.isforwall());
  }
  if (from.isforceiling() != 0) {
    set_isforceiling(from.isforceiling());
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
}

void CMessageProductUnit_CMessageProductBuildingMaterial::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageProductUnit.CMessageProductBuildingMaterial)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageProductUnit_CMessageProductBuildingMaterial::CopyFrom(const CMessageProductUnit_CMessageProductBuildingMaterial& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageProductUnit.CMessageProductBuildingMaterial)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageProductUnit_CMessageProductBuildingMaterial::IsInitialized() const {
  return true;
}

void CMessageProductUnit_CMessageProductBuildingMaterial::Swap(CMessageProductUnit_CMessageProductBuildingMaterial* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageProductUnit_CMessageProductBuildingMaterial::InternalSwap(CMessageProductUnit_CMessageProductBuildingMaterial* other) {
  using std::swap;
  productid_.Swap(&other->productid_);
  materialid_.Swap(&other->materialid_);
  detailinfo_.Swap(&other->detailinfo_);
  swap(isforfloor_, other->isforfloor_);
  swap(isforwall_, other->isforwall_);
  swap(isforceiling_, other->isforceiling_);
  swap(length_, other->length_);
  swap(width_, other->width_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageProductUnit_CMessageProductBuildingMaterial::GetMetadata() const {
  protobuf_message_5fproduct_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fproduct_5flist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMessageProductUnit::InitAsDefaultInstance() {
  ::d5::_CMessageProductUnit_default_instance_._instance.get_mutable()->furniture_ = const_cast< ::d5::CMessageProductUnit_CMessageFurnitureUnit*>(
      ::d5::CMessageProductUnit_CMessageFurnitureUnit::internal_default_instance());
  ::d5::_CMessageProductUnit_default_instance_._instance.get_mutable()->buildingmaterial_ = const_cast< ::d5::CMessageProductUnit_CMessageProductBuildingMaterial*>(
      ::d5::CMessageProductUnit_CMessageProductBuildingMaterial::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageProductUnit::kIdFieldNumber;
const int CMessageProductUnit::kTitleFieldNumber;
const int CMessageProductUnit::kPriceFieldNumber;
const int CMessageProductUnit::kCreateTimeFieldNumber;
const int CMessageProductUnit::kUpdateTimeFieldNumber;
const int CMessageProductUnit::kBrandIdFieldNumber;
const int CMessageProductUnit::kProductTypeFieldNumber;
const int CMessageProductUnit::kIsDelFieldNumber;
const int CMessageProductUnit::kUserIdFieldNumber;
const int CMessageProductUnit::kCompanyIdFieldNumber;
const int CMessageProductUnit::kDescriptionFieldNumber;
const int CMessageProductUnit::kCategoryIdFieldNumber;
const int CMessageProductUnit::kBuyUrlFieldNumber;
const int CMessageProductUnit::kFurnitureFieldNumber;
const int CMessageProductUnit::kBuildingMaterialFieldNumber;
const int CMessageProductUnit::kProductImageListFieldNumber;
const int CMessageProductUnit::kDependentFileListFieldNumber;
const int CMessageProductUnit::kBrandTitleFieldNumber;
const int CMessageProductUnit::kProductCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageProductUnit::CMessageProductUnit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fproduct_5flist_2eproto::InitDefaultsCMessageProductUnit();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageProductUnit)
}
CMessageProductUnit::CMessageProductUnit(const CMessageProductUnit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      productimagelist_(from.productimagelist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  buyurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.buyurl().size() > 0) {
    buyurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buyurl_);
  }
  dependentfilelist_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dependentfilelist().size() > 0) {
    dependentfilelist_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dependentfilelist_);
  }
  brandtitle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.brandtitle().size() > 0) {
    brandtitle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brandtitle_);
  }
  productcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.productcode().size() > 0) {
    productcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productcode_);
  }
  if (from.has_furniture()) {
    furniture_ = new ::d5::CMessageProductUnit_CMessageFurnitureUnit(*from.furniture_);
  } else {
    furniture_ = NULL;
  }
  if (from.has_buildingmaterial()) {
    buildingmaterial_ = new ::d5::CMessageProductUnit_CMessageProductBuildingMaterial(*from.buildingmaterial_);
  } else {
    buildingmaterial_ = NULL;
  }
  ::memcpy(&createtime_, &from.createtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&categoryid_) -
    reinterpret_cast<char*>(&createtime_)) + sizeof(categoryid_));
  // @@protoc_insertion_point(copy_constructor:d5.CMessageProductUnit)
}

void CMessageProductUnit::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buyurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dependentfilelist_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brandtitle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&furniture_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&categoryid_) -
      reinterpret_cast<char*>(&furniture_)) + sizeof(categoryid_));
  _cached_size_ = 0;
}

CMessageProductUnit::~CMessageProductUnit() {
  // @@protoc_insertion_point(destructor:d5.CMessageProductUnit)
  SharedDtor();
}

void CMessageProductUnit::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buyurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dependentfilelist_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brandtitle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete furniture_;
  if (this != internal_default_instance()) delete buildingmaterial_;
}

void CMessageProductUnit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageProductUnit::descriptor() {
  ::protobuf_message_5fproduct_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fproduct_5flist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageProductUnit& CMessageProductUnit::default_instance() {
  ::protobuf_message_5fproduct_5flist_2eproto::InitDefaultsCMessageProductUnit();
  return *internal_default_instance();
}


void CMessageProductUnit::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageProductUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  productimagelist_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buyurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dependentfilelist_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brandtitle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && furniture_ != NULL) {
    delete furniture_;
  }
  furniture_ = NULL;
  if (GetArenaNoVirtual() == NULL && buildingmaterial_ != NULL) {
    delete buildingmaterial_;
  }
  buildingmaterial_ = NULL;
  ::memset(&createtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&categoryid_) -
      reinterpret_cast<char*>(&createtime_)) + sizeof(categoryid_));
  _internal_metadata_.Clear();
}

bool CMessageProductUnit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageProductUnit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageProductUnit.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageProductUnit.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float price = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 createTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &createtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 updateTime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &updatetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 brandId = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &brandid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 productType = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &producttype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 isDel = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isdel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 userId = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 companyId = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &companyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageProductUnit.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 categoryId = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &categoryid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string buyUrl = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buyurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->buyurl().data(), static_cast<int>(this->buyurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageProductUnit.buyUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .d5.CMessageProductUnit.CMessageFurnitureUnit furniture = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_furniture()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .d5.CMessageProductUnit.CMessageProductBuildingMaterial buildingMaterial = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_buildingmaterial()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .d5.CMessageProductUnit.CMessageProductImageUnit productImageList = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_productimagelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dependentFileList = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dependentfilelist()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dependentfilelist().data(), static_cast<int>(this->dependentfilelist().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageProductUnit.dependentFileList"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string brandTitle = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_brandtitle()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->brandtitle().data(), static_cast<int>(this->brandtitle().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageProductUnit.brandTitle"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string productCode = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->productcode().data(), static_cast<int>(this->productcode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageProductUnit.productCode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageProductUnit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageProductUnit)
  return false;
#undef DO_
}

void CMessageProductUnit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageProductUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // float price = 3;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->price(), output);
  }

  // int64 createTime = 4;
  if (this->createtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->createtime(), output);
  }

  // int64 updateTime = 5;
  if (this->updatetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->updatetime(), output);
  }

  // int32 brandId = 6;
  if (this->brandid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->brandid(), output);
  }

  // int32 productType = 7;
  if (this->producttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->producttype(), output);
  }

  // int32 isDel = 8;
  if (this->isdel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->isdel(), output);
  }

  // int32 userId = 9;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->userid(), output);
  }

  // int32 companyId = 10;
  if (this->companyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->companyid(), output);
  }

  // string description = 11;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->description(), output);
  }

  // int32 categoryId = 12;
  if (this->categoryid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->categoryid(), output);
  }

  // string buyUrl = 13;
  if (this->buyurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buyurl().data(), static_cast<int>(this->buyurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.buyUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->buyurl(), output);
  }

  // .d5.CMessageProductUnit.CMessageFurnitureUnit furniture = 14;
  if (this->has_furniture()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *furniture_, output);
  }

  // .d5.CMessageProductUnit.CMessageProductBuildingMaterial buildingMaterial = 15;
  if (this->has_buildingmaterial()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *buildingmaterial_, output);
  }

  // repeated .d5.CMessageProductUnit.CMessageProductImageUnit productImageList = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->productimagelist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16,
      this->productimagelist(static_cast<int>(i)),
      output);
  }

  // string dependentFileList = 17;
  if (this->dependentfilelist().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dependentfilelist().data(), static_cast<int>(this->dependentfilelist().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.dependentFileList");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->dependentfilelist(), output);
  }

  // string brandTitle = 18;
  if (this->brandtitle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brandtitle().data(), static_cast<int>(this->brandtitle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.brandTitle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->brandtitle(), output);
  }

  // string productCode = 19;
  if (this->productcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productcode().data(), static_cast<int>(this->productcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.productCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->productcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageProductUnit)
}

::google::protobuf::uint8* CMessageProductUnit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageProductUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // float price = 3;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->price(), target);
  }

  // int64 createTime = 4;
  if (this->createtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->createtime(), target);
  }

  // int64 updateTime = 5;
  if (this->updatetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->updatetime(), target);
  }

  // int32 brandId = 6;
  if (this->brandid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->brandid(), target);
  }

  // int32 productType = 7;
  if (this->producttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->producttype(), target);
  }

  // int32 isDel = 8;
  if (this->isdel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->isdel(), target);
  }

  // int32 userId = 9;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->userid(), target);
  }

  // int32 companyId = 10;
  if (this->companyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->companyid(), target);
  }

  // string description = 11;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->description(), target);
  }

  // int32 categoryId = 12;
  if (this->categoryid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->categoryid(), target);
  }

  // string buyUrl = 13;
  if (this->buyurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buyurl().data(), static_cast<int>(this->buyurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.buyUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->buyurl(), target);
  }

  // .d5.CMessageProductUnit.CMessageFurnitureUnit furniture = 14;
  if (this->has_furniture()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, *furniture_, deterministic, target);
  }

  // .d5.CMessageProductUnit.CMessageProductBuildingMaterial buildingMaterial = 15;
  if (this->has_buildingmaterial()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, *buildingmaterial_, deterministic, target);
  }

  // repeated .d5.CMessageProductUnit.CMessageProductImageUnit productImageList = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->productimagelist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->productimagelist(static_cast<int>(i)), deterministic, target);
  }

  // string dependentFileList = 17;
  if (this->dependentfilelist().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dependentfilelist().data(), static_cast<int>(this->dependentfilelist().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.dependentFileList");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->dependentfilelist(), target);
  }

  // string brandTitle = 18;
  if (this->brandtitle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brandtitle().data(), static_cast<int>(this->brandtitle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.brandTitle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->brandtitle(), target);
  }

  // string productCode = 19;
  if (this->productcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productcode().data(), static_cast<int>(this->productcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductUnit.productCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->productcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageProductUnit)
  return target;
}

size_t CMessageProductUnit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageProductUnit)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .d5.CMessageProductUnit.CMessageProductImageUnit productImageList = 16;
  {
    unsigned int count = static_cast<unsigned int>(this->productimagelist_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->productimagelist(static_cast<int>(i)));
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string description = 11;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string buyUrl = 13;
  if (this->buyurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->buyurl());
  }

  // string dependentFileList = 17;
  if (this->dependentfilelist().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dependentfilelist());
  }

  // string brandTitle = 18;
  if (this->brandtitle().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->brandtitle());
  }

  // string productCode = 19;
  if (this->productcode().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->productcode());
  }

  // .d5.CMessageProductUnit.CMessageFurnitureUnit furniture = 14;
  if (this->has_furniture()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *furniture_);
  }

  // .d5.CMessageProductUnit.CMessageProductBuildingMaterial buildingMaterial = 15;
  if (this->has_buildingmaterial()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *buildingmaterial_);
  }

  // int64 createTime = 4;
  if (this->createtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->createtime());
  }

  // float price = 3;
  if (this->price() != 0) {
    total_size += 1 + 4;
  }

  // int32 brandId = 6;
  if (this->brandid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->brandid());
  }

  // int64 updateTime = 5;
  if (this->updatetime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->updatetime());
  }

  // int32 productType = 7;
  if (this->producttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->producttype());
  }

  // int32 isDel = 8;
  if (this->isdel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->isdel());
  }

  // int32 userId = 9;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  // int32 companyId = 10;
  if (this->companyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->companyid());
  }

  // int32 categoryId = 12;
  if (this->categoryid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->categoryid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageProductUnit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageProductUnit)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageProductUnit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageProductUnit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageProductUnit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageProductUnit)
    MergeFrom(*source);
  }
}

void CMessageProductUnit::MergeFrom(const CMessageProductUnit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageProductUnit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  productimagelist_.MergeFrom(from.productimagelist_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.buyurl().size() > 0) {

    buyurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buyurl_);
  }
  if (from.dependentfilelist().size() > 0) {

    dependentfilelist_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dependentfilelist_);
  }
  if (from.brandtitle().size() > 0) {

    brandtitle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brandtitle_);
  }
  if (from.productcode().size() > 0) {

    productcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productcode_);
  }
  if (from.has_furniture()) {
    mutable_furniture()->::d5::CMessageProductUnit_CMessageFurnitureUnit::MergeFrom(from.furniture());
  }
  if (from.has_buildingmaterial()) {
    mutable_buildingmaterial()->::d5::CMessageProductUnit_CMessageProductBuildingMaterial::MergeFrom(from.buildingmaterial());
  }
  if (from.createtime() != 0) {
    set_createtime(from.createtime());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.brandid() != 0) {
    set_brandid(from.brandid());
  }
  if (from.updatetime() != 0) {
    set_updatetime(from.updatetime());
  }
  if (from.producttype() != 0) {
    set_producttype(from.producttype());
  }
  if (from.isdel() != 0) {
    set_isdel(from.isdel());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.companyid() != 0) {
    set_companyid(from.companyid());
  }
  if (from.categoryid() != 0) {
    set_categoryid(from.categoryid());
  }
}

void CMessageProductUnit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageProductUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageProductUnit::CopyFrom(const CMessageProductUnit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageProductUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageProductUnit::IsInitialized() const {
  return true;
}

void CMessageProductUnit::Swap(CMessageProductUnit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageProductUnit::InternalSwap(CMessageProductUnit* other) {
  using std::swap;
  CastToBase(&productimagelist_)->InternalSwap(CastToBase(&other->productimagelist_));
  id_.Swap(&other->id_);
  title_.Swap(&other->title_);
  description_.Swap(&other->description_);
  buyurl_.Swap(&other->buyurl_);
  dependentfilelist_.Swap(&other->dependentfilelist_);
  brandtitle_.Swap(&other->brandtitle_);
  productcode_.Swap(&other->productcode_);
  swap(furniture_, other->furniture_);
  swap(buildingmaterial_, other->buildingmaterial_);
  swap(createtime_, other->createtime_);
  swap(price_, other->price_);
  swap(brandid_, other->brandid_);
  swap(updatetime_, other->updatetime_);
  swap(producttype_, other->producttype_);
  swap(isdel_, other->isdel_);
  swap(userid_, other->userid_);
  swap(companyid_, other->companyid_);
  swap(categoryid_, other->categoryid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageProductUnit::GetMetadata() const {
  protobuf_message_5fproduct_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fproduct_5flist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMessageProductList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageProductList::kRowsFieldNumber;
const int CMessageProductList::kTotalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageProductList::CMessageProductList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fproduct_5flist_2eproto::InitDefaultsCMessageProductList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageProductList)
}
CMessageProductList::CMessageProductList(const CMessageProductList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rows_(from.rows_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  total_ = from.total_;
  // @@protoc_insertion_point(copy_constructor:d5.CMessageProductList)
}

void CMessageProductList::SharedCtor() {
  total_ = 0;
  _cached_size_ = 0;
}

CMessageProductList::~CMessageProductList() {
  // @@protoc_insertion_point(destructor:d5.CMessageProductList)
  SharedDtor();
}

void CMessageProductList::SharedDtor() {
}

void CMessageProductList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageProductList::descriptor() {
  ::protobuf_message_5fproduct_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fproduct_5flist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageProductList& CMessageProductList::default_instance() {
  ::protobuf_message_5fproduct_5flist_2eproto::InitDefaultsCMessageProductList();
  return *internal_default_instance();
}


void CMessageProductList::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageProductList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rows_.Clear();
  total_ = 0;
  _internal_metadata_.Clear();
}

bool CMessageProductList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageProductList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .d5.CMessageProductUnit rows = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 total = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageProductList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageProductList)
  return false;
#undef DO_
}

void CMessageProductList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageProductList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .d5.CMessageProductUnit rows = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rows_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->rows(static_cast<int>(i)),
      output);
  }

  // int32 total = 2;
  if (this->total() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageProductList)
}

::google::protobuf::uint8* CMessageProductList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageProductList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .d5.CMessageProductUnit rows = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rows_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->rows(static_cast<int>(i)), deterministic, target);
  }

  // int32 total = 2;
  if (this->total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageProductList)
  return target;
}

size_t CMessageProductList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageProductList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .d5.CMessageProductUnit rows = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->rows_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rows(static_cast<int>(i)));
    }
  }

  // int32 total = 2;
  if (this->total() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageProductList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageProductList)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageProductList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageProductList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageProductList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageProductList)
    MergeFrom(*source);
  }
}

void CMessageProductList::MergeFrom(const CMessageProductList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageProductList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rows_.MergeFrom(from.rows_);
  if (from.total() != 0) {
    set_total(from.total());
  }
}

void CMessageProductList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageProductList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageProductList::CopyFrom(const CMessageProductList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageProductList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageProductList::IsInitialized() const {
  return true;
}

void CMessageProductList::Swap(CMessageProductList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageProductList::InternalSwap(CMessageProductList* other) {
  using std::swap;
  CastToBase(&rows_)->InternalSwap(CastToBase(&other->rows_));
  swap(total_, other->total_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageProductList::GetMetadata() const {
  protobuf_message_5fproduct_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fproduct_5flist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMessageProductListResponse::InitAsDefaultInstance() {
  ::d5::_CMessageProductListResponse_default_instance_._instance.get_mutable()->list_ = const_cast< ::d5::CMessageProductList*>(
      ::d5::CMessageProductList::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageProductListResponse::kTypeFieldNumber;
const int CMessageProductListResponse::kUuidFieldNumber;
const int CMessageProductListResponse::kStateFieldNumber;
const int CMessageProductListResponse::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageProductListResponse::CMessageProductListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fproduct_5flist_2eproto::InitDefaultsCMessageProductListResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageProductListResponse)
}
CMessageProductListResponse::CMessageProductListResponse(const CMessageProductListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.has_list()) {
    list_ = new ::d5::CMessageProductList(*from.list_);
  } else {
    list_ = NULL;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&type_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:d5.CMessageProductListResponse)
}

void CMessageProductListResponse::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&list_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&list_)) + sizeof(state_));
  _cached_size_ = 0;
}

CMessageProductListResponse::~CMessageProductListResponse() {
  // @@protoc_insertion_point(destructor:d5.CMessageProductListResponse)
  SharedDtor();
}

void CMessageProductListResponse::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete list_;
}

void CMessageProductListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageProductListResponse::descriptor() {
  ::protobuf_message_5fproduct_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fproduct_5flist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageProductListResponse& CMessageProductListResponse::default_instance() {
  ::protobuf_message_5fproduct_5flist_2eproto::InitDefaultsCMessageProductListResponse();
  return *internal_default_instance();
}


void CMessageProductListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageProductListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && list_ != NULL) {
    delete list_;
  }
  list_ = NULL;
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&type_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool CMessageProductListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageProductListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageProductListResponse.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .d5.CMessageProductList list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageProductListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageProductListResponse)
  return false;
#undef DO_
}

void CMessageProductListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageProductListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductListResponse.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uuid(), output);
  }

  // int32 state = 3;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->state(), output);
  }

  // .d5.CMessageProductList list = 4;
  if (this->has_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *list_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageProductListResponse)
}

::google::protobuf::uint8* CMessageProductListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageProductListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageProductListResponse.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uuid(), target);
  }

  // int32 state = 3;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->state(), target);
  }

  // .d5.CMessageProductList list = 4;
  if (this->has_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *list_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageProductListResponse)
  return target;
}

size_t CMessageProductListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageProductListResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uuid = 2;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  // .d5.CMessageProductList list = 4;
  if (this->has_list()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *list_);
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 state = 3;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageProductListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageProductListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageProductListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageProductListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageProductListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageProductListResponse)
    MergeFrom(*source);
  }
}

void CMessageProductListResponse::MergeFrom(const CMessageProductListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageProductListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.has_list()) {
    mutable_list()->::d5::CMessageProductList::MergeFrom(from.list());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void CMessageProductListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageProductListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageProductListResponse::CopyFrom(const CMessageProductListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageProductListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageProductListResponse::IsInitialized() const {
  return true;
}

void CMessageProductListResponse::Swap(CMessageProductListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageProductListResponse::InternalSwap(CMessageProductListResponse* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_);
  swap(list_, other->list_);
  swap(type_, other->type_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageProductListResponse::GetMetadata() const {
  protobuf_message_5fproduct_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fproduct_5flist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace d5
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageProductListRequest* Arena::Create< ::d5::CMessageProductListRequest >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageProductListRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageProductUnit_CMessageFurnitureUnit* Arena::Create< ::d5::CMessageProductUnit_CMessageFurnitureUnit >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageProductUnit_CMessageFurnitureUnit >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageProductUnit_CMessageProductImageUnit* Arena::Create< ::d5::CMessageProductUnit_CMessageProductImageUnit >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageProductUnit_CMessageProductImageUnit >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageProductUnit_CMessageProductBuildingMaterial* Arena::Create< ::d5::CMessageProductUnit_CMessageProductBuildingMaterial >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageProductUnit_CMessageProductBuildingMaterial >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageProductUnit* Arena::Create< ::d5::CMessageProductUnit >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageProductUnit >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageProductList* Arena::Create< ::d5::CMessageProductList >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageProductList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageProductListResponse* Arena::Create< ::d5::CMessageProductListResponse >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageProductListResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
