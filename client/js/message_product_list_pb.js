/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.d5.CMessageProductList', null, global);
goog.exportSymbol('proto.d5.CMessageProductListRequest', null, global);
goog.exportSymbol('proto.d5.CMessageProductListResponse', null, global);
goog.exportSymbol('proto.d5.CMessageProductUnit', null, global);
goog.exportSymbol('proto.d5.CMessageProductUnit.CMessageFurnitureUnit', null, global);
goog.exportSymbol('proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial', null, global);
goog.exportSymbol('proto.d5.CMessageProductUnit.CMessageProductImageUnit', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.CMessageProductListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.CMessageProductListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.CMessageProductListRequest.displayName = 'proto.d5.CMessageProductListRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.CMessageProductListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.CMessageProductListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.CMessageProductListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessageProductListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    companyid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    updatetime: jspb.Message.getFieldWithDefault(msg, 4, 0),
    pagesize: jspb.Message.getFieldWithDefault(msg, 5, 0),
    pagenum: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.CMessageProductListRequest}
 */
proto.d5.CMessageProductListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.CMessageProductListRequest;
  return proto.d5.CMessageProductListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.CMessageProductListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.CMessageProductListRequest}
 */
proto.d5.CMessageProductListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCompanyid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdatetime(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagesize(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagenum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.CMessageProductListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.CMessageProductListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.CMessageProductListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessageProductListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCompanyid();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getUpdatetime();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getPagesize();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getPagenum();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.d5.CMessageProductListRequest.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.CMessageProductListRequest.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.d5.CMessageProductListRequest.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.CMessageProductListRequest.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 companyid = 3;
 * @return {number}
 */
proto.d5.CMessageProductListRequest.prototype.getCompanyid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.d5.CMessageProductListRequest.prototype.setCompanyid = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 updatetime = 4;
 * @return {number}
 */
proto.d5.CMessageProductListRequest.prototype.getUpdatetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.d5.CMessageProductListRequest.prototype.setUpdatetime = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 pageSize = 5;
 * @return {number}
 */
proto.d5.CMessageProductListRequest.prototype.getPagesize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.d5.CMessageProductListRequest.prototype.setPagesize = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 pageNum = 6;
 * @return {number}
 */
proto.d5.CMessageProductListRequest.prototype.getPagenum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.d5.CMessageProductListRequest.prototype.setPagenum = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.CMessageProductUnit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.d5.CMessageProductUnit.repeatedFields_, null);
};
goog.inherits(proto.d5.CMessageProductUnit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.CMessageProductUnit.displayName = 'proto.d5.CMessageProductUnit';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.d5.CMessageProductUnit.repeatedFields_ = [16];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.CMessageProductUnit.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.CMessageProductUnit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.CMessageProductUnit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessageProductUnit.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    price: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    createtime: jspb.Message.getFieldWithDefault(msg, 4, 0),
    updatetime: jspb.Message.getFieldWithDefault(msg, 5, 0),
    brandid: jspb.Message.getFieldWithDefault(msg, 6, 0),
    producttype: jspb.Message.getFieldWithDefault(msg, 7, 0),
    isdel: jspb.Message.getFieldWithDefault(msg, 8, 0),
    userid: jspb.Message.getFieldWithDefault(msg, 9, 0),
    companyid: jspb.Message.getFieldWithDefault(msg, 10, 0),
    description: jspb.Message.getFieldWithDefault(msg, 11, ""),
    categoryid: jspb.Message.getFieldWithDefault(msg, 12, 0),
    buyurl: jspb.Message.getFieldWithDefault(msg, 13, ""),
    furniture: (f = msg.getFurniture()) && proto.d5.CMessageProductUnit.CMessageFurnitureUnit.toObject(includeInstance, f),
    buildingmaterial: (f = msg.getBuildingmaterial()) && proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial.toObject(includeInstance, f),
    productimagelistList: jspb.Message.toObjectList(msg.getProductimagelistList(),
    proto.d5.CMessageProductUnit.CMessageProductImageUnit.toObject, includeInstance),
    dependentfilelist: jspb.Message.getFieldWithDefault(msg, 17, ""),
    brandtitle: jspb.Message.getFieldWithDefault(msg, 18, ""),
    productcode: jspb.Message.getFieldWithDefault(msg, 19, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.CMessageProductUnit}
 */
proto.d5.CMessageProductUnit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.CMessageProductUnit;
  return proto.d5.CMessageProductUnit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.CMessageProductUnit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.CMessageProductUnit}
 */
proto.d5.CMessageProductUnit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPrice(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatetime(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatetime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBrandid(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProducttype(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsdel(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserid(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCompanyid(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCategoryid(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyurl(value);
      break;
    case 14:
      var value = new proto.d5.CMessageProductUnit.CMessageFurnitureUnit;
      reader.readMessage(value,proto.d5.CMessageProductUnit.CMessageFurnitureUnit.deserializeBinaryFromReader);
      msg.setFurniture(value);
      break;
    case 15:
      var value = new proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial;
      reader.readMessage(value,proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial.deserializeBinaryFromReader);
      msg.setBuildingmaterial(value);
      break;
    case 16:
      var value = new proto.d5.CMessageProductUnit.CMessageProductImageUnit;
      reader.readMessage(value,proto.d5.CMessageProductUnit.CMessageProductImageUnit.deserializeBinaryFromReader);
      msg.addProductimagelist(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setDependentfilelist(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrandtitle(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductcode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.CMessageProductUnit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.CMessageProductUnit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.CMessageProductUnit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessageProductUnit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getCreatetime();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getUpdatetime();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getBrandid();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getProducttype();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getIsdel();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getUserid();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getCompanyid();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getCategoryid();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getBuyurl();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getFurniture();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.d5.CMessageProductUnit.CMessageFurnitureUnit.serializeBinaryToWriter
    );
  }
  f = message.getBuildingmaterial();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial.serializeBinaryToWriter
    );
  }
  f = message.getProductimagelistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      proto.d5.CMessageProductUnit.CMessageProductImageUnit.serializeBinaryToWriter
    );
  }
  f = message.getDependentfilelist();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getBrandtitle();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getProductcode();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.d5.CMessageProductUnit.CMessageFurnitureUnit.repeatedFields_, null);
};
goog.inherits(proto.d5.CMessageProductUnit.CMessageFurnitureUnit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.CMessageProductUnit.CMessageFurnitureUnit.displayName = 'proto.d5.CMessageProductUnit.CMessageFurnitureUnit';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit.repeatedFields_ = [12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.CMessageProductUnit.CMessageFurnitureUnit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.CMessageProductUnit.CMessageFurnitureUnit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit.toObject = function(includeInstance, msg) {
  var f, obj = {
    productid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    uepath: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pakurl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    length: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    depth: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    height: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),
    isinteractive: jspb.Message.getFieldWithDefault(msg, 7, 0),
    intelligenttype: jspb.Message.getFieldWithDefault(msg, 8, 0),
    furniturestyleid: jspb.Message.getFieldWithDefault(msg, 9, 0),
    furnituremainmaterialid: jspb.Message.getFieldWithDefault(msg, 10, 0),
    detailinfo: jspb.Message.getFieldWithDefault(msg, 11, ""),
    furniturecoloridlistList: jspb.Message.getRepeatedField(msg, 12)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.CMessageProductUnit.CMessageFurnitureUnit}
 */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.CMessageProductUnit.CMessageFurnitureUnit;
  return proto.d5.CMessageProductUnit.CMessageFurnitureUnit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.CMessageProductUnit.CMessageFurnitureUnit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.CMessageProductUnit.CMessageFurnitureUnit}
 */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUepath(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPakurl(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLength(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDepth(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setHeight(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsinteractive(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIntelligenttype(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFurniturestyleid(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFurnituremainmaterialid(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setDetailinfo(value);
      break;
    case 12:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setFurniturecoloridlistList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.CMessageProductUnit.CMessageFurnitureUnit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.CMessageProductUnit.CMessageFurnitureUnit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUepath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPakurl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLength();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getDepth();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getIsinteractive();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getIntelligenttype();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getFurniturestyleid();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getFurnituremainmaterialid();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getDetailinfo();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getFurniturecoloridlistList();
  if (f.length > 0) {
    writer.writePackedInt32(
      12,
      f
    );
  }
};


/**
 * optional string productId = 1;
 * @return {string}
 */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit.prototype.getProductid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit.prototype.setProductid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string uePath = 2;
 * @return {string}
 */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit.prototype.getUepath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit.prototype.setUepath = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string pakUrl = 3;
 * @return {string}
 */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit.prototype.getPakurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit.prototype.setPakurl = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional float length = 4;
 * @return {number}
 */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit.prototype.getLength = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit.prototype.setLength = function(value) {
  jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional float depth = 5;
 * @return {number}
 */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit.prototype.getDepth = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit.prototype.setDepth = function(value) {
  jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional float height = 6;
 * @return {number}
 */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit.prototype.getHeight = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit.prototype.setHeight = function(value) {
  jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional int32 isInteractive = 7;
 * @return {number}
 */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit.prototype.getIsinteractive = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit.prototype.setIsinteractive = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 intelligentType = 8;
 * @return {number}
 */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit.prototype.getIntelligenttype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit.prototype.setIntelligenttype = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 furnitureStyleId = 9;
 * @return {number}
 */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit.prototype.getFurniturestyleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit.prototype.setFurniturestyleid = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 furnitureMainMaterialId = 10;
 * @return {number}
 */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit.prototype.getFurnituremainmaterialid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit.prototype.setFurnituremainmaterialid = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string detailInfo = 11;
 * @return {string}
 */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit.prototype.getDetailinfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit.prototype.setDetailinfo = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * repeated int32 furnitureColorIdList = 12;
 * @return {!Array<number>}
 */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit.prototype.getFurniturecoloridlistList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 12));
};


/** @param {!Array<number>} value */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit.prototype.setFurniturecoloridlistList = function(value) {
  jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.d5.CMessageProductUnit.CMessageFurnitureUnit.prototype.addFurniturecoloridlist = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


proto.d5.CMessageProductUnit.CMessageFurnitureUnit.prototype.clearFurniturecoloridlistList = function() {
  this.setFurniturecoloridlistList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.CMessageProductUnit.CMessageProductImageUnit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.CMessageProductUnit.CMessageProductImageUnit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.CMessageProductUnit.CMessageProductImageUnit.displayName = 'proto.d5.CMessageProductUnit.CMessageProductImageUnit';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.CMessageProductUnit.CMessageProductImageUnit.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.CMessageProductUnit.CMessageProductImageUnit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.CMessageProductUnit.CMessageProductImageUnit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessageProductUnit.CMessageProductImageUnit.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    displayindex: jspb.Message.getFieldWithDefault(msg, 2, 0),
    fileurl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    productid: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.CMessageProductUnit.CMessageProductImageUnit}
 */
proto.d5.CMessageProductUnit.CMessageProductImageUnit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.CMessageProductUnit.CMessageProductImageUnit;
  return proto.d5.CMessageProductUnit.CMessageProductImageUnit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.CMessageProductUnit.CMessageProductImageUnit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.CMessageProductUnit.CMessageProductImageUnit}
 */
proto.d5.CMessageProductUnit.CMessageProductImageUnit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDisplayindex(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileurl(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.CMessageProductUnit.CMessageProductImageUnit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.CMessageProductUnit.CMessageProductImageUnit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.CMessageProductUnit.CMessageProductImageUnit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessageProductUnit.CMessageProductImageUnit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDisplayindex();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getFileurl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProductid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.d5.CMessageProductUnit.CMessageProductImageUnit.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.d5.CMessageProductUnit.CMessageProductImageUnit.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 displayIndex = 2;
 * @return {number}
 */
proto.d5.CMessageProductUnit.CMessageProductImageUnit.prototype.getDisplayindex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.d5.CMessageProductUnit.CMessageProductImageUnit.prototype.setDisplayindex = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string fileUrl = 3;
 * @return {string}
 */
proto.d5.CMessageProductUnit.CMessageProductImageUnit.prototype.getFileurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.d5.CMessageProductUnit.CMessageProductImageUnit.prototype.setFileurl = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string productId = 4;
 * @return {string}
 */
proto.d5.CMessageProductUnit.CMessageProductImageUnit.prototype.getProductid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.d5.CMessageProductUnit.CMessageProductImageUnit.prototype.setProductid = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial.displayName = 'proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial.toObject = function(includeInstance, msg) {
  var f, obj = {
    productid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    isforfloor: jspb.Message.getFieldWithDefault(msg, 2, 0),
    isforwall: jspb.Message.getFieldWithDefault(msg, 3, 0),
    isforceiling: jspb.Message.getFieldWithDefault(msg, 4, 0),
    materialid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    detailinfo: jspb.Message.getFieldWithDefault(msg, 6, ""),
    length: jspb.Message.getFieldWithDefault(msg, 7, 0),
    width: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial}
 */
proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial;
  return proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial}
 */
proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsforfloor(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsforwall(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsforceiling(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaterialid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDetailinfo(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLength(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWidth(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIsforfloor();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getIsforwall();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getIsforceiling();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getMaterialid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDetailinfo();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLength();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getWidth();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
};


/**
 * optional string productId = 1;
 * @return {string}
 */
proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial.prototype.getProductid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial.prototype.setProductid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 isForFloor = 2;
 * @return {number}
 */
proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial.prototype.getIsforfloor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial.prototype.setIsforfloor = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 isForWall = 3;
 * @return {number}
 */
proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial.prototype.getIsforwall = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial.prototype.setIsforwall = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 isForCeiling = 4;
 * @return {number}
 */
proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial.prototype.getIsforceiling = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial.prototype.setIsforceiling = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string materialId = 5;
 * @return {string}
 */
proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial.prototype.getMaterialid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial.prototype.setMaterialid = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string detailInfo = 6;
 * @return {string}
 */
proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial.prototype.getDetailinfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial.prototype.setDetailinfo = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 length = 7;
 * @return {number}
 */
proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial.prototype.getLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial.prototype.setLength = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 width = 8;
 * @return {number}
 */
proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial.prototype.setWidth = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.d5.CMessageProductUnit.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.d5.CMessageProductUnit.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.d5.CMessageProductUnit.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.CMessageProductUnit.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional float price = 3;
 * @return {number}
 */
proto.d5.CMessageProductUnit.prototype.getPrice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.d5.CMessageProductUnit.prototype.setPrice = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional int64 createTime = 4;
 * @return {number}
 */
proto.d5.CMessageProductUnit.prototype.getCreatetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.d5.CMessageProductUnit.prototype.setCreatetime = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 updateTime = 5;
 * @return {number}
 */
proto.d5.CMessageProductUnit.prototype.getUpdatetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.d5.CMessageProductUnit.prototype.setUpdatetime = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 brandId = 6;
 * @return {number}
 */
proto.d5.CMessageProductUnit.prototype.getBrandid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.d5.CMessageProductUnit.prototype.setBrandid = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 productType = 7;
 * @return {number}
 */
proto.d5.CMessageProductUnit.prototype.getProducttype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.d5.CMessageProductUnit.prototype.setProducttype = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 isDel = 8;
 * @return {number}
 */
proto.d5.CMessageProductUnit.prototype.getIsdel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.d5.CMessageProductUnit.prototype.setIsdel = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 userId = 9;
 * @return {number}
 */
proto.d5.CMessageProductUnit.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.d5.CMessageProductUnit.prototype.setUserid = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 companyId = 10;
 * @return {number}
 */
proto.d5.CMessageProductUnit.prototype.getCompanyid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.d5.CMessageProductUnit.prototype.setCompanyid = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string description = 11;
 * @return {string}
 */
proto.d5.CMessageProductUnit.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.d5.CMessageProductUnit.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional int32 categoryId = 12;
 * @return {number}
 */
proto.d5.CMessageProductUnit.prototype.getCategoryid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.d5.CMessageProductUnit.prototype.setCategoryid = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string buyUrl = 13;
 * @return {string}
 */
proto.d5.CMessageProductUnit.prototype.getBuyurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.d5.CMessageProductUnit.prototype.setBuyurl = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional CMessageFurnitureUnit furniture = 14;
 * @return {?proto.d5.CMessageProductUnit.CMessageFurnitureUnit}
 */
proto.d5.CMessageProductUnit.prototype.getFurniture = function() {
  return /** @type{?proto.d5.CMessageProductUnit.CMessageFurnitureUnit} */ (
    jspb.Message.getWrapperField(this, proto.d5.CMessageProductUnit.CMessageFurnitureUnit, 14));
};


/** @param {?proto.d5.CMessageProductUnit.CMessageFurnitureUnit|undefined} value */
proto.d5.CMessageProductUnit.prototype.setFurniture = function(value) {
  jspb.Message.setWrapperField(this, 14, value);
};


proto.d5.CMessageProductUnit.prototype.clearFurniture = function() {
  this.setFurniture(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.CMessageProductUnit.prototype.hasFurniture = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional CMessageProductBuildingMaterial buildingMaterial = 15;
 * @return {?proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial}
 */
proto.d5.CMessageProductUnit.prototype.getBuildingmaterial = function() {
  return /** @type{?proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial} */ (
    jspb.Message.getWrapperField(this, proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial, 15));
};


/** @param {?proto.d5.CMessageProductUnit.CMessageProductBuildingMaterial|undefined} value */
proto.d5.CMessageProductUnit.prototype.setBuildingmaterial = function(value) {
  jspb.Message.setWrapperField(this, 15, value);
};


proto.d5.CMessageProductUnit.prototype.clearBuildingmaterial = function() {
  this.setBuildingmaterial(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.CMessageProductUnit.prototype.hasBuildingmaterial = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * repeated CMessageProductImageUnit productImageList = 16;
 * @return {!Array<!proto.d5.CMessageProductUnit.CMessageProductImageUnit>}
 */
proto.d5.CMessageProductUnit.prototype.getProductimagelistList = function() {
  return /** @type{!Array<!proto.d5.CMessageProductUnit.CMessageProductImageUnit>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.d5.CMessageProductUnit.CMessageProductImageUnit, 16));
};


/** @param {!Array<!proto.d5.CMessageProductUnit.CMessageProductImageUnit>} value */
proto.d5.CMessageProductUnit.prototype.setProductimagelistList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.d5.CMessageProductUnit.CMessageProductImageUnit=} opt_value
 * @param {number=} opt_index
 * @return {!proto.d5.CMessageProductUnit.CMessageProductImageUnit}
 */
proto.d5.CMessageProductUnit.prototype.addProductimagelist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.d5.CMessageProductUnit.CMessageProductImageUnit, opt_index);
};


proto.d5.CMessageProductUnit.prototype.clearProductimagelistList = function() {
  this.setProductimagelistList([]);
};


/**
 * optional string dependentFileList = 17;
 * @return {string}
 */
proto.d5.CMessageProductUnit.prototype.getDependentfilelist = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/** @param {string} value */
proto.d5.CMessageProductUnit.prototype.setDependentfilelist = function(value) {
  jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string brandTitle = 18;
 * @return {string}
 */
proto.d5.CMessageProductUnit.prototype.getBrandtitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/** @param {string} value */
proto.d5.CMessageProductUnit.prototype.setBrandtitle = function(value) {
  jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string productCode = 19;
 * @return {string}
 */
proto.d5.CMessageProductUnit.prototype.getProductcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/** @param {string} value */
proto.d5.CMessageProductUnit.prototype.setProductcode = function(value) {
  jspb.Message.setProto3StringField(this, 19, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.CMessageProductList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.d5.CMessageProductList.repeatedFields_, null);
};
goog.inherits(proto.d5.CMessageProductList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.CMessageProductList.displayName = 'proto.d5.CMessageProductList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.d5.CMessageProductList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.CMessageProductList.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.CMessageProductList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.CMessageProductList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessageProductList.toObject = function(includeInstance, msg) {
  var f, obj = {
    rowsList: jspb.Message.toObjectList(msg.getRowsList(),
    proto.d5.CMessageProductUnit.toObject, includeInstance),
    total: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.CMessageProductList}
 */
proto.d5.CMessageProductList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.CMessageProductList;
  return proto.d5.CMessageProductList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.CMessageProductList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.CMessageProductList}
 */
proto.d5.CMessageProductList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.d5.CMessageProductUnit;
      reader.readMessage(value,proto.d5.CMessageProductUnit.deserializeBinaryFromReader);
      msg.addRows(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.CMessageProductList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.CMessageProductList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.CMessageProductList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessageProductList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.d5.CMessageProductUnit.serializeBinaryToWriter
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * repeated CMessageProductUnit rows = 1;
 * @return {!Array<!proto.d5.CMessageProductUnit>}
 */
proto.d5.CMessageProductList.prototype.getRowsList = function() {
  return /** @type{!Array<!proto.d5.CMessageProductUnit>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.d5.CMessageProductUnit, 1));
};


/** @param {!Array<!proto.d5.CMessageProductUnit>} value */
proto.d5.CMessageProductList.prototype.setRowsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.d5.CMessageProductUnit=} opt_value
 * @param {number=} opt_index
 * @return {!proto.d5.CMessageProductUnit}
 */
proto.d5.CMessageProductList.prototype.addRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.d5.CMessageProductUnit, opt_index);
};


proto.d5.CMessageProductList.prototype.clearRowsList = function() {
  this.setRowsList([]);
};


/**
 * optional int32 total = 2;
 * @return {number}
 */
proto.d5.CMessageProductList.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.d5.CMessageProductList.prototype.setTotal = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.CMessageProductListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.CMessageProductListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.CMessageProductListResponse.displayName = 'proto.d5.CMessageProductListResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.CMessageProductListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.CMessageProductListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.CMessageProductListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessageProductListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    state: jspb.Message.getFieldWithDefault(msg, 3, 0),
    list: (f = msg.getList()) && proto.d5.CMessageProductList.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.CMessageProductListResponse}
 */
proto.d5.CMessageProductListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.CMessageProductListResponse;
  return proto.d5.CMessageProductListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.CMessageProductListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.CMessageProductListResponse}
 */
proto.d5.CMessageProductListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setState(value);
      break;
    case 4:
      var value = new proto.d5.CMessageProductList;
      reader.readMessage(value,proto.d5.CMessageProductList.deserializeBinaryFromReader);
      msg.setList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.CMessageProductListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.CMessageProductListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.CMessageProductListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessageProductListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getState();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getList();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.d5.CMessageProductList.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.d5.CMessageProductListResponse.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.CMessageProductListResponse.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.d5.CMessageProductListResponse.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.CMessageProductListResponse.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 state = 3;
 * @return {number}
 */
proto.d5.CMessageProductListResponse.prototype.getState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.d5.CMessageProductListResponse.prototype.setState = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional CMessageProductList list = 4;
 * @return {?proto.d5.CMessageProductList}
 */
proto.d5.CMessageProductListResponse.prototype.getList = function() {
  return /** @type{?proto.d5.CMessageProductList} */ (
    jspb.Message.getWrapperField(this, proto.d5.CMessageProductList, 4));
};


/** @param {?proto.d5.CMessageProductList|undefined} value */
proto.d5.CMessageProductListResponse.prototype.setList = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.d5.CMessageProductListResponse.prototype.clearList = function() {
  this.setList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.CMessageProductListResponse.prototype.hasList = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.d5);
