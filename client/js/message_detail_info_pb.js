/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.d5.CMessageFurnitureDetailInfo', null, global);
goog.exportSymbol('proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale', null, global);
goog.exportSymbol('proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas', null, global);
goog.exportSymbol('proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements', null, global);
goog.exportSymbol('proto.d5.CMessageMaterialInfo', null, global);
goog.exportSymbol('proto.d5.CMessagePlanDesignDetailInfo', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.CMessagePlanDesignDetailInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.d5.CMessagePlanDesignDetailInfo.repeatedFields_, null);
};
goog.inherits(proto.d5.CMessagePlanDesignDetailInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.CMessagePlanDesignDetailInfo.displayName = 'proto.d5.CMessagePlanDesignDetailInfo';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.d5.CMessagePlanDesignDetailInfo.repeatedFields_ = [5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.CMessagePlanDesignDetailInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.CMessagePlanDesignDetailInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.CMessagePlanDesignDetailInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessagePlanDesignDetailInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    maxLength: jspb.Message.getFieldWithDefault(msg, 1, 0),
    startLocation: jspb.Message.getFieldWithDefault(msg, 2, ""),
    startRotation: jspb.Message.getFieldWithDefault(msg, 3, ""),
    floorCenter: jspb.Message.getFieldWithDefault(msg, 4, ""),
    roomCentersList: jspb.Message.getRepeatedField(msg, 5),
    filelistList: jspb.Message.getRepeatedField(msg, 6)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.CMessagePlanDesignDetailInfo}
 */
proto.d5.CMessagePlanDesignDetailInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.CMessagePlanDesignDetailInfo;
  return proto.d5.CMessagePlanDesignDetailInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.CMessagePlanDesignDetailInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.CMessagePlanDesignDetailInfo}
 */
proto.d5.CMessagePlanDesignDetailInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxLength(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartLocation(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartRotation(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFloorCenter(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addRoomCenters(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addFilelist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.CMessagePlanDesignDetailInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.CMessagePlanDesignDetailInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.CMessagePlanDesignDetailInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessagePlanDesignDetailInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaxLength();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getStartLocation();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStartRotation();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFloorCenter();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRoomCentersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getFilelistList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
};


/**
 * optional int64 max_length = 1;
 * @return {number}
 */
proto.d5.CMessagePlanDesignDetailInfo.prototype.getMaxLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.CMessagePlanDesignDetailInfo.prototype.setMaxLength = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string start_location = 2;
 * @return {string}
 */
proto.d5.CMessagePlanDesignDetailInfo.prototype.getStartLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.CMessagePlanDesignDetailInfo.prototype.setStartLocation = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string start_rotation = 3;
 * @return {string}
 */
proto.d5.CMessagePlanDesignDetailInfo.prototype.getStartRotation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.d5.CMessagePlanDesignDetailInfo.prototype.setStartRotation = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string floor_center = 4;
 * @return {string}
 */
proto.d5.CMessagePlanDesignDetailInfo.prototype.getFloorCenter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.d5.CMessagePlanDesignDetailInfo.prototype.setFloorCenter = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated string room_centers = 5;
 * @return {!Array<string>}
 */
proto.d5.CMessagePlanDesignDetailInfo.prototype.getRoomCentersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array<string>} value */
proto.d5.CMessagePlanDesignDetailInfo.prototype.setRoomCentersList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.d5.CMessagePlanDesignDetailInfo.prototype.addRoomCenters = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.d5.CMessagePlanDesignDetailInfo.prototype.clearRoomCentersList = function() {
  this.setRoomCentersList([]);
};


/**
 * repeated string fileList = 6;
 * @return {!Array<string>}
 */
proto.d5.CMessagePlanDesignDetailInfo.prototype.getFilelistList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array<string>} value */
proto.d5.CMessagePlanDesignDetailInfo.prototype.setFilelistList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.d5.CMessagePlanDesignDetailInfo.prototype.addFilelist = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


proto.d5.CMessagePlanDesignDetailInfo.prototype.clearFilelistList = function() {
  this.setFilelistList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.CMessageMaterialInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.CMessageMaterialInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.CMessageMaterialInfo.displayName = 'proto.d5.CMessageMaterialInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.CMessageMaterialInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.CMessageMaterialInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.CMessageMaterialInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessageMaterialInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    matinfo: jspb.Message.getFieldWithDefault(msg, 1, ""),
    uepath: jspb.Message.getFieldWithDefault(msg, 2, ""),
    thumbnailurl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    title: jspb.Message.getFieldWithDefault(msg, 4, ""),
    pakurl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    parentpak: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.CMessageMaterialInfo}
 */
proto.d5.CMessageMaterialInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.CMessageMaterialInfo;
  return proto.d5.CMessageMaterialInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.CMessageMaterialInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.CMessageMaterialInfo}
 */
proto.d5.CMessageMaterialInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMatinfo(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUepath(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setThumbnailurl(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPakurl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentpak(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.CMessageMaterialInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.CMessageMaterialInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.CMessageMaterialInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessageMaterialInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatinfo();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUepath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getThumbnailurl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPakurl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getParentpak();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string matInfo = 1;
 * @return {string}
 */
proto.d5.CMessageMaterialInfo.prototype.getMatinfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.d5.CMessageMaterialInfo.prototype.setMatinfo = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string uePath = 2;
 * @return {string}
 */
proto.d5.CMessageMaterialInfo.prototype.getUepath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.CMessageMaterialInfo.prototype.setUepath = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string thumbnailUrl = 3;
 * @return {string}
 */
proto.d5.CMessageMaterialInfo.prototype.getThumbnailurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.d5.CMessageMaterialInfo.prototype.setThumbnailurl = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string title = 4;
 * @return {string}
 */
proto.d5.CMessageMaterialInfo.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.d5.CMessageMaterialInfo.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string pakUrl = 5;
 * @return {string}
 */
proto.d5.CMessageMaterialInfo.prototype.getPakurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.d5.CMessageMaterialInfo.prototype.setPakurl = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string parentPak = 6;
 * @return {string}
 */
proto.d5.CMessageMaterialInfo.prototype.getParentpak = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.d5.CMessageMaterialInfo.prototype.setParentpak = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.CMessageFurnitureDetailInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.d5.CMessageFurnitureDetailInfo.repeatedFields_, null);
};
goog.inherits(proto.d5.CMessageFurnitureDetailInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.CMessageFurnitureDetailInfo.displayName = 'proto.d5.CMessageFurnitureDetailInfo';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.d5.CMessageFurnitureDetailInfo.repeatedFields_ = [4,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.CMessageFurnitureDetailInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.CMessageFurnitureDetailInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.CMessageFurnitureDetailInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessageFurnitureDetailInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    detailversion: jspb.Message.getFieldWithDefault(msg, 1, 0),
    furnitureid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    otherdetails: jspb.Message.getFieldWithDefault(msg, 3, ""),
    styledatasList: jspb.Message.toObjectList(msg.getStyledatasList(),
    proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.toObject, includeInstance),
    customdetails: jspb.Message.getFieldWithDefault(msg, 5, ""),
    filelistList: jspb.Message.getRepeatedField(msg, 6),
    originalscale: (f = msg.getOriginalscale()) && proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.CMessageFurnitureDetailInfo}
 */
proto.d5.CMessageFurnitureDetailInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.CMessageFurnitureDetailInfo;
  return proto.d5.CMessageFurnitureDetailInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.CMessageFurnitureDetailInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.CMessageFurnitureDetailInfo}
 */
proto.d5.CMessageFurnitureDetailInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDetailversion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFurnitureid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOtherdetails(value);
      break;
    case 4:
      var value = new proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas;
      reader.readMessage(value,proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.deserializeBinaryFromReader);
      msg.addStyledatas(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomdetails(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addFilelist(value);
      break;
    case 7:
      var value = new proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale;
      reader.readMessage(value,proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale.deserializeBinaryFromReader);
      msg.setOriginalscale(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.CMessageFurnitureDetailInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.CMessageFurnitureDetailInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.CMessageFurnitureDetailInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessageFurnitureDetailInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDetailversion();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getFurnitureid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOtherdetails();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStyledatasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.serializeBinaryToWriter
    );
  }
  f = message.getCustomdetails();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFilelistList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getOriginalscale();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.repeatedFields_, null);
};
goog.inherits(proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.displayName = 'proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.toObject = function(includeInstance, msg) {
  var f, obj = {
    bactive: jspb.Message.getFieldWithDefault(msg, 1, false),
    thumbnailpath: jspb.Message.getFieldWithDefault(msg, 2, ""),
    elementsList: jspb.Message.toObjectList(msg.getElementsList(),
    proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements.toObject, includeInstance),
    styleid: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas}
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas;
  return proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas}
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBactive(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setThumbnailpath(value);
      break;
    case 3:
      var value = new proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements;
      reader.readMessage(value,proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements.deserializeBinaryFromReader);
      msg.addElements(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStyleid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBactive();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getThumbnailpath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getElementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements.serializeBinaryToWriter
    );
  }
  f = message.getStyleid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements.displayName = 'proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements.toObject = function(includeInstance, msg) {
  var f, obj = {
    materialindex: jspb.Message.getFieldWithDefault(msg, 1, 0),
    elementname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    materialdata: (f = msg.getMaterialdata()) && proto.d5.CMessageMaterialInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements}
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements;
  return proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements}
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaterialindex(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setElementname(value);
      break;
    case 3:
      var value = new proto.d5.CMessageMaterialInfo;
      reader.readMessage(value,proto.d5.CMessageMaterialInfo.deserializeBinaryFromReader);
      msg.setMaterialdata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaterialindex();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getElementname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMaterialdata();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.d5.CMessageMaterialInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 materialIndex = 1;
 * @return {number}
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements.prototype.getMaterialindex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements.prototype.setMaterialindex = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string elementName = 2;
 * @return {string}
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements.prototype.getElementname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements.prototype.setElementname = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional CMessageMaterialInfo materialData = 3;
 * @return {?proto.d5.CMessageMaterialInfo}
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements.prototype.getMaterialdata = function() {
  return /** @type{?proto.d5.CMessageMaterialInfo} */ (
    jspb.Message.getWrapperField(this, proto.d5.CMessageMaterialInfo, 3));
};


/** @param {?proto.d5.CMessageMaterialInfo|undefined} value */
proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements.prototype.setMaterialdata = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements.prototype.clearMaterialdata = function() {
  this.setMaterialdata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements.prototype.hasMaterialdata = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool bActive = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.prototype.getBactive = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.prototype.setBactive = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string thumbnailPath = 2;
 * @return {string}
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.prototype.getThumbnailpath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.prototype.setThumbnailpath = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated CMessageElements elements = 3;
 * @return {!Array<!proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements>}
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.prototype.getElementsList = function() {
  return /** @type{!Array<!proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements, 3));
};


/** @param {!Array<!proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements>} value */
proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.prototype.setElementsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements=} opt_value
 * @param {number=} opt_index
 * @return {!proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements}
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.prototype.addElements = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.CMessageElements, opt_index);
};


proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.prototype.clearElementsList = function() {
  this.setElementsList([]);
};


/**
 * optional string styleId = 4;
 * @return {string}
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.prototype.getStyleid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas.prototype.setStyleid = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale.displayName = 'proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFieldWithDefault(msg, 1, 0),
    y: jspb.Message.getFieldWithDefault(msg, 2, 0),
    z: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale}
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale;
  return proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale}
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setZ(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getZ();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional int64 x = 1;
 * @return {number}
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale.prototype.setX = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 y = 2;
 * @return {number}
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale.prototype.setY = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 z = 3;
 * @return {number}
 */
proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale.prototype.getZ = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale.prototype.setZ = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 detailVersion = 1;
 * @return {number}
 */
proto.d5.CMessageFurnitureDetailInfo.prototype.getDetailversion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.CMessageFurnitureDetailInfo.prototype.setDetailversion = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string furnitureId = 2;
 * @return {string}
 */
proto.d5.CMessageFurnitureDetailInfo.prototype.getFurnitureid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.CMessageFurnitureDetailInfo.prototype.setFurnitureid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string otherDetails = 3;
 * @return {string}
 */
proto.d5.CMessageFurnitureDetailInfo.prototype.getOtherdetails = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.d5.CMessageFurnitureDetailInfo.prototype.setOtherdetails = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated CMessageStyleDatas styleDatas = 4;
 * @return {!Array<!proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas>}
 */
proto.d5.CMessageFurnitureDetailInfo.prototype.getStyledatasList = function() {
  return /** @type{!Array<!proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas, 4));
};


/** @param {!Array<!proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas>} value */
proto.d5.CMessageFurnitureDetailInfo.prototype.setStyledatasList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas=} opt_value
 * @param {number=} opt_index
 * @return {!proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas}
 */
proto.d5.CMessageFurnitureDetailInfo.prototype.addStyledatas = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.d5.CMessageFurnitureDetailInfo.CMessageStyleDatas, opt_index);
};


proto.d5.CMessageFurnitureDetailInfo.prototype.clearStyledatasList = function() {
  this.setStyledatasList([]);
};


/**
 * optional string customDetails = 5;
 * @return {string}
 */
proto.d5.CMessageFurnitureDetailInfo.prototype.getCustomdetails = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.d5.CMessageFurnitureDetailInfo.prototype.setCustomdetails = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated string fileList = 6;
 * @return {!Array<string>}
 */
proto.d5.CMessageFurnitureDetailInfo.prototype.getFilelistList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array<string>} value */
proto.d5.CMessageFurnitureDetailInfo.prototype.setFilelistList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.d5.CMessageFurnitureDetailInfo.prototype.addFilelist = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


proto.d5.CMessageFurnitureDetailInfo.prototype.clearFilelistList = function() {
  this.setFilelistList([]);
};


/**
 * optional CMessageOriginalScale originalScale = 7;
 * @return {?proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale}
 */
proto.d5.CMessageFurnitureDetailInfo.prototype.getOriginalscale = function() {
  return /** @type{?proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale} */ (
    jspb.Message.getWrapperField(this, proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale, 7));
};


/** @param {?proto.d5.CMessageFurnitureDetailInfo.CMessageOriginalScale|undefined} value */
proto.d5.CMessageFurnitureDetailInfo.prototype.setOriginalscale = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.d5.CMessageFurnitureDetailInfo.prototype.clearOriginalscale = function() {
  this.setOriginalscale(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.CMessageFurnitureDetailInfo.prototype.hasOriginalscale = function() {
  return jspb.Message.getField(this, 7) != null;
};


goog.object.extend(exports, proto.d5);
