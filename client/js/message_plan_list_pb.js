/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.d5.CMessageHttpPlanList', null, global);
goog.exportSymbol('proto.d5.CMessageHttpPlanUnit', null, global);
goog.exportSymbol('proto.d5.CMessagePlanListRequest', null, global);
goog.exportSymbol('proto.d5.CMessagePlanListResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.CMessagePlanListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.CMessagePlanListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.CMessagePlanListRequest.displayName = 'proto.d5.CMessagePlanListRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.CMessagePlanListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.CMessagePlanListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.CMessagePlanListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessagePlanListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    companyid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    updatetime: jspb.Message.getFieldWithDefault(msg, 4, 0),
    pagesize: jspb.Message.getFieldWithDefault(msg, 5, 0),
    pagenum: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.CMessagePlanListRequest}
 */
proto.d5.CMessagePlanListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.CMessagePlanListRequest;
  return proto.d5.CMessagePlanListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.CMessagePlanListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.CMessagePlanListRequest}
 */
proto.d5.CMessagePlanListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCompanyid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdatetime(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagesize(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagenum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.CMessagePlanListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.CMessagePlanListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.CMessagePlanListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessagePlanListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCompanyid();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getUpdatetime();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getPagesize();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getPagenum();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.d5.CMessagePlanListRequest.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.CMessagePlanListRequest.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.d5.CMessagePlanListRequest.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.CMessagePlanListRequest.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 companyid = 3;
 * @return {number}
 */
proto.d5.CMessagePlanListRequest.prototype.getCompanyid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.d5.CMessagePlanListRequest.prototype.setCompanyid = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 updatetime = 4;
 * @return {number}
 */
proto.d5.CMessagePlanListRequest.prototype.getUpdatetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.d5.CMessagePlanListRequest.prototype.setUpdatetime = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 pageSize = 5;
 * @return {number}
 */
proto.d5.CMessagePlanListRequest.prototype.getPagesize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.d5.CMessagePlanListRequest.prototype.setPagesize = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 pageNum = 6;
 * @return {number}
 */
proto.d5.CMessagePlanListRequest.prototype.getPagenum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.d5.CMessagePlanListRequest.prototype.setPagenum = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.CMessageHttpPlanUnit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.CMessageHttpPlanUnit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.CMessageHttpPlanUnit.displayName = 'proto.d5.CMessageHttpPlanUnit';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.CMessageHttpPlanUnit.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.CMessageHttpPlanUnit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.CMessageHttpPlanUnit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessageHttpPlanUnit.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    size: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    pakurl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    thumbnailurl: jspb.Message.getFieldWithDefault(msg, 6, ""),
    flooreditfileurl: jspb.Message.getFieldWithDefault(msg, 7, ""),
    detailinfo: jspb.Message.getFieldWithDefault(msg, 8, ""),
    designfileurl: jspb.Message.getFieldWithDefault(msg, 9, ""),
    districtid: jspb.Message.getFieldWithDefault(msg, 10, 0),
    propertytypeid: jspb.Message.getFieldWithDefault(msg, 11, 0),
    roomtypeid: jspb.Message.getFieldWithDefault(msg, 12, 0),
    templatetypeid: jspb.Message.getFieldWithDefault(msg, 13, 0),
    isdel: jspb.Message.getFieldWithDefault(msg, 14, 0),
    createtime: jspb.Message.getFieldWithDefault(msg, 15, 0),
    updatetime: jspb.Message.getFieldWithDefault(msg, 16, 0),
    userid: jspb.Message.getFieldWithDefault(msg, 17, 0),
    companyid: jspb.Message.getFieldWithDefault(msg, 18, 0),
    floorrefurl: jspb.Message.getFieldWithDefault(msg, 20, ""),
    floorrefwidth: +jspb.Message.getFieldWithDefault(msg, 21, 0.0),
    floorrefheight: +jspb.Message.getFieldWithDefault(msg, 22, 0.0),
    groupid: jspb.Message.getFieldWithDefault(msg, 25, 0),
    condoid: jspb.Message.getFieldWithDefault(msg, 26, 0),
    username: jspb.Message.getFieldWithDefault(msg, 27, ""),
    dependentfilelist: jspb.Message.getFieldWithDefault(msg, 28, ""),
    source: jspb.Message.getFieldWithDefault(msg, 29, 0),
    quotationinfo: jspb.Message.getFieldWithDefault(msg, 30, ""),
    isprivate: jspb.Message.getFieldWithDefault(msg, 31, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.CMessageHttpPlanUnit}
 */
proto.d5.CMessageHttpPlanUnit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.CMessageHttpPlanUnit;
  return proto.d5.CMessageHttpPlanUnit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.CMessageHttpPlanUnit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.CMessageHttpPlanUnit}
 */
proto.d5.CMessageHttpPlanUnit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSize(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPakurl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setThumbnailurl(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setFlooreditfileurl(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDetailinfo(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setDesignfileurl(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDistrictid(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPropertytypeid(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRoomtypeid(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTemplatetypeid(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsdel(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatetime(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatetime(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserid(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCompanyid(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setFloorrefurl(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFloorrefwidth(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFloorrefheight(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGroupid(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCondoid(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setDependentfilelist(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSource(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuotationinfo(value);
      break;
    case 31:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsprivate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.CMessageHttpPlanUnit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.CMessageHttpPlanUnit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.CMessageHttpPlanUnit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessageHttpPlanUnit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSize();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getPakurl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getThumbnailurl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getFlooreditfileurl();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDetailinfo();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getDesignfileurl();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getDistrictid();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getPropertytypeid();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getRoomtypeid();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getTemplatetypeid();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getIsdel();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getCreatetime();
  if (f !== 0) {
    writer.writeInt64(
      15,
      f
    );
  }
  f = message.getUpdatetime();
  if (f !== 0) {
    writer.writeInt64(
      16,
      f
    );
  }
  f = message.getUserid();
  if (f !== 0) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = message.getCompanyid();
  if (f !== 0) {
    writer.writeInt32(
      18,
      f
    );
  }
  f = message.getFloorrefurl();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getFloorrefwidth();
  if (f !== 0.0) {
    writer.writeFloat(
      21,
      f
    );
  }
  f = message.getFloorrefheight();
  if (f !== 0.0) {
    writer.writeFloat(
      22,
      f
    );
  }
  f = message.getGroupid();
  if (f !== 0) {
    writer.writeInt32(
      25,
      f
    );
  }
  f = message.getCondoid();
  if (f !== 0) {
    writer.writeInt32(
      26,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getDependentfilelist();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getSource();
  if (f !== 0) {
    writer.writeInt32(
      29,
      f
    );
  }
  f = message.getQuotationinfo();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getIsprivate();
  if (f !== 0) {
    writer.writeInt32(
      31,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.d5.CMessageHttpPlanUnit.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.d5.CMessageHttpPlanUnit.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.d5.CMessageHttpPlanUnit.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.CMessageHttpPlanUnit.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional float size = 3;
 * @return {number}
 */
proto.d5.CMessageHttpPlanUnit.prototype.getSize = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.d5.CMessageHttpPlanUnit.prototype.setSize = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional string pakUrl = 5;
 * @return {string}
 */
proto.d5.CMessageHttpPlanUnit.prototype.getPakurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.d5.CMessageHttpPlanUnit.prototype.setPakurl = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string thumbnailUrl = 6;
 * @return {string}
 */
proto.d5.CMessageHttpPlanUnit.prototype.getThumbnailurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.d5.CMessageHttpPlanUnit.prototype.setThumbnailurl = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string floorEditFileUrl = 7;
 * @return {string}
 */
proto.d5.CMessageHttpPlanUnit.prototype.getFlooreditfileurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.d5.CMessageHttpPlanUnit.prototype.setFlooreditfileurl = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string detailInfo = 8;
 * @return {string}
 */
proto.d5.CMessageHttpPlanUnit.prototype.getDetailinfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.d5.CMessageHttpPlanUnit.prototype.setDetailinfo = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string designFileUrl = 9;
 * @return {string}
 */
proto.d5.CMessageHttpPlanUnit.prototype.getDesignfileurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.d5.CMessageHttpPlanUnit.prototype.setDesignfileurl = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int32 districtId = 10;
 * @return {number}
 */
proto.d5.CMessageHttpPlanUnit.prototype.getDistrictid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.d5.CMessageHttpPlanUnit.prototype.setDistrictid = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 propertyTypeId = 11;
 * @return {number}
 */
proto.d5.CMessageHttpPlanUnit.prototype.getPropertytypeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.d5.CMessageHttpPlanUnit.prototype.setPropertytypeid = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 roomTypeId = 12;
 * @return {number}
 */
proto.d5.CMessageHttpPlanUnit.prototype.getRoomtypeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.d5.CMessageHttpPlanUnit.prototype.setRoomtypeid = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 templateTypeId = 13;
 * @return {number}
 */
proto.d5.CMessageHttpPlanUnit.prototype.getTemplatetypeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.d5.CMessageHttpPlanUnit.prototype.setTemplatetypeid = function(value) {
  jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 isDel = 14;
 * @return {number}
 */
proto.d5.CMessageHttpPlanUnit.prototype.getIsdel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.d5.CMessageHttpPlanUnit.prototype.setIsdel = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int64 createTime = 15;
 * @return {number}
 */
proto.d5.CMessageHttpPlanUnit.prototype.getCreatetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.d5.CMessageHttpPlanUnit.prototype.setCreatetime = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional int64 updateTime = 16;
 * @return {number}
 */
proto.d5.CMessageHttpPlanUnit.prototype.getUpdatetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.d5.CMessageHttpPlanUnit.prototype.setUpdatetime = function(value) {
  jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional int32 userId = 17;
 * @return {number}
 */
proto.d5.CMessageHttpPlanUnit.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.d5.CMessageHttpPlanUnit.prototype.setUserid = function(value) {
  jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional int32 companyId = 18;
 * @return {number}
 */
proto.d5.CMessageHttpPlanUnit.prototype.getCompanyid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {number} value */
proto.d5.CMessageHttpPlanUnit.prototype.setCompanyid = function(value) {
  jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional string floorRefUrl = 20;
 * @return {string}
 */
proto.d5.CMessageHttpPlanUnit.prototype.getFloorrefurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/** @param {string} value */
proto.d5.CMessageHttpPlanUnit.prototype.setFloorrefurl = function(value) {
  jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional float floorRefWidth = 21;
 * @return {number}
 */
proto.d5.CMessageHttpPlanUnit.prototype.getFloorrefwidth = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 21, 0.0));
};


/** @param {number} value */
proto.d5.CMessageHttpPlanUnit.prototype.setFloorrefwidth = function(value) {
  jspb.Message.setProto3FloatField(this, 21, value);
};


/**
 * optional float floorRefHeight = 22;
 * @return {number}
 */
proto.d5.CMessageHttpPlanUnit.prototype.getFloorrefheight = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 22, 0.0));
};


/** @param {number} value */
proto.d5.CMessageHttpPlanUnit.prototype.setFloorrefheight = function(value) {
  jspb.Message.setProto3FloatField(this, 22, value);
};


/**
 * optional int32 groupId = 25;
 * @return {number}
 */
proto.d5.CMessageHttpPlanUnit.prototype.getGroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/** @param {number} value */
proto.d5.CMessageHttpPlanUnit.prototype.setGroupid = function(value) {
  jspb.Message.setProto3IntField(this, 25, value);
};


/**
 * optional int32 condoId = 26;
 * @return {number}
 */
proto.d5.CMessageHttpPlanUnit.prototype.getCondoid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/** @param {number} value */
proto.d5.CMessageHttpPlanUnit.prototype.setCondoid = function(value) {
  jspb.Message.setProto3IntField(this, 26, value);
};


/**
 * optional string userName = 27;
 * @return {string}
 */
proto.d5.CMessageHttpPlanUnit.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/** @param {string} value */
proto.d5.CMessageHttpPlanUnit.prototype.setUsername = function(value) {
  jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional string dependentFileList = 28;
 * @return {string}
 */
proto.d5.CMessageHttpPlanUnit.prototype.getDependentfilelist = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/** @param {string} value */
proto.d5.CMessageHttpPlanUnit.prototype.setDependentfilelist = function(value) {
  jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional int32 source = 29;
 * @return {number}
 */
proto.d5.CMessageHttpPlanUnit.prototype.getSource = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 29, 0));
};


/** @param {number} value */
proto.d5.CMessageHttpPlanUnit.prototype.setSource = function(value) {
  jspb.Message.setProto3IntField(this, 29, value);
};


/**
 * optional string quotationInfo = 30;
 * @return {string}
 */
proto.d5.CMessageHttpPlanUnit.prototype.getQuotationinfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/** @param {string} value */
proto.d5.CMessageHttpPlanUnit.prototype.setQuotationinfo = function(value) {
  jspb.Message.setProto3StringField(this, 30, value);
};


/**
 * optional int32 isPrivate = 31;
 * @return {number}
 */
proto.d5.CMessageHttpPlanUnit.prototype.getIsprivate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 31, 0));
};


/** @param {number} value */
proto.d5.CMessageHttpPlanUnit.prototype.setIsprivate = function(value) {
  jspb.Message.setProto3IntField(this, 31, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.CMessageHttpPlanList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.d5.CMessageHttpPlanList.repeatedFields_, null);
};
goog.inherits(proto.d5.CMessageHttpPlanList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.CMessageHttpPlanList.displayName = 'proto.d5.CMessageHttpPlanList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.d5.CMessageHttpPlanList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.CMessageHttpPlanList.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.CMessageHttpPlanList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.CMessageHttpPlanList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessageHttpPlanList.toObject = function(includeInstance, msg) {
  var f, obj = {
    rowsList: jspb.Message.toObjectList(msg.getRowsList(),
    proto.d5.CMessageHttpPlanUnit.toObject, includeInstance),
    total: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.CMessageHttpPlanList}
 */
proto.d5.CMessageHttpPlanList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.CMessageHttpPlanList;
  return proto.d5.CMessageHttpPlanList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.CMessageHttpPlanList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.CMessageHttpPlanList}
 */
proto.d5.CMessageHttpPlanList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.d5.CMessageHttpPlanUnit;
      reader.readMessage(value,proto.d5.CMessageHttpPlanUnit.deserializeBinaryFromReader);
      msg.addRows(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.CMessageHttpPlanList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.CMessageHttpPlanList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.CMessageHttpPlanList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessageHttpPlanList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.d5.CMessageHttpPlanUnit.serializeBinaryToWriter
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * repeated CMessageHttpPlanUnit rows = 1;
 * @return {!Array<!proto.d5.CMessageHttpPlanUnit>}
 */
proto.d5.CMessageHttpPlanList.prototype.getRowsList = function() {
  return /** @type{!Array<!proto.d5.CMessageHttpPlanUnit>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.d5.CMessageHttpPlanUnit, 1));
};


/** @param {!Array<!proto.d5.CMessageHttpPlanUnit>} value */
proto.d5.CMessageHttpPlanList.prototype.setRowsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.d5.CMessageHttpPlanUnit=} opt_value
 * @param {number=} opt_index
 * @return {!proto.d5.CMessageHttpPlanUnit}
 */
proto.d5.CMessageHttpPlanList.prototype.addRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.d5.CMessageHttpPlanUnit, opt_index);
};


proto.d5.CMessageHttpPlanList.prototype.clearRowsList = function() {
  this.setRowsList([]);
};


/**
 * optional int32 total = 2;
 * @return {number}
 */
proto.d5.CMessageHttpPlanList.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.d5.CMessageHttpPlanList.prototype.setTotal = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.CMessagePlanListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.CMessagePlanListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.CMessagePlanListResponse.displayName = 'proto.d5.CMessagePlanListResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.CMessagePlanListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.CMessagePlanListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.CMessagePlanListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessagePlanListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    state: jspb.Message.getFieldWithDefault(msg, 3, 0),
    list: (f = msg.getList()) && proto.d5.CMessageHttpPlanList.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.CMessagePlanListResponse}
 */
proto.d5.CMessagePlanListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.CMessagePlanListResponse;
  return proto.d5.CMessagePlanListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.CMessagePlanListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.CMessagePlanListResponse}
 */
proto.d5.CMessagePlanListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setState(value);
      break;
    case 4:
      var value = new proto.d5.CMessageHttpPlanList;
      reader.readMessage(value,proto.d5.CMessageHttpPlanList.deserializeBinaryFromReader);
      msg.setList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.CMessagePlanListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.CMessagePlanListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.CMessagePlanListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.CMessagePlanListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getState();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getList();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.d5.CMessageHttpPlanList.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.d5.CMessagePlanListResponse.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.CMessagePlanListResponse.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.d5.CMessagePlanListResponse.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.CMessagePlanListResponse.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 state = 3;
 * @return {number}
 */
proto.d5.CMessagePlanListResponse.prototype.getState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.d5.CMessagePlanListResponse.prototype.setState = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional CMessageHttpPlanList list = 4;
 * @return {?proto.d5.CMessageHttpPlanList}
 */
proto.d5.CMessagePlanListResponse.prototype.getList = function() {
  return /** @type{?proto.d5.CMessageHttpPlanList} */ (
    jspb.Message.getWrapperField(this, proto.d5.CMessageHttpPlanList, 4));
};


/** @param {?proto.d5.CMessageHttpPlanList|undefined} value */
proto.d5.CMessagePlanListResponse.prototype.setList = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.d5.CMessagePlanListResponse.prototype.clearList = function() {
  this.setList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.CMessagePlanListResponse.prototype.hasList = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.d5);
