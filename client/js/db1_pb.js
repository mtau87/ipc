/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.d5.db1.asset_light_style', null, global);
goog.exportSymbol('proto.d5.db1.asset_material', null, global);
goog.exportSymbol('proto.d5.db1.asset_material_category', null, global);
goog.exportSymbol('proto.d5.db1.effect_mode', null, global);
goog.exportSymbol('proto.d5.db1.environment_light_template', null, global);
goog.exportSymbol('proto.d5.db1.furniture_color', null, global);
goog.exportSymbol('proto.d5.db1.furniture_main_material', null, global);
goog.exportSymbol('proto.d5.db1.furniture_style', null, global);
goog.exportSymbol('proto.d5.db1.outdoor_light_style', null, global);
goog.exportSymbol('proto.d5.db1.plan_design_template', null, global);
goog.exportSymbol('proto.d5.db1.plan_district', null, global);
goog.exportSymbol('proto.d5.db1.plan_property_type', null, global);
goog.exportSymbol('proto.d5.db1.plan_room_type', null, global);
goog.exportSymbol('proto.d5.db1.plan_template_type', null, global);
goog.exportSymbol('proto.d5.db1.product_brand', null, global);
goog.exportSymbol('proto.d5.db1.product_category1', null, global);
goog.exportSymbol('proto.d5.db1.product_category2', null, global);
goog.exportSymbol('proto.d5.db1.product_category3', null, global);
goog.exportSymbol('proto.d5.db1.sqlite_sequence', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db1.asset_light_style = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db1.asset_light_style, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db1.asset_light_style.displayName = 'proto.d5.db1.asset_light_style';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db1.asset_light_style.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db1.asset_light_style.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db1.asset_light_style} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.asset_light_style.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    folderName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    createTime: jspb.Message.getFieldWithDefault(msg, 3, 0),
    updateTime: jspb.Message.getFieldWithDefault(msg, 4, 0),
    isDel: jspb.Message.getFieldWithDefault(msg, 5, 0),
    uePath: jspb.Message.getFieldWithDefault(msg, 6, ""),
    pakUrl: jspb.Message.getFieldWithDefault(msg, 7, ""),
    type: jspb.Message.getFieldWithDefault(msg, 8, 0),
    thumbnailUrl: jspb.Message.getFieldWithDefault(msg, 9, ""),
    title: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db1.asset_light_style}
 */
proto.d5.db1.asset_light_style.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db1.asset_light_style;
  return proto.d5.db1.asset_light_style.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db1.asset_light_style} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db1.asset_light_style}
 */
proto.d5.db1.asset_light_style.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFolderName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateTime(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdateTime(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsDel(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUePath(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPakUrl(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setThumbnailUrl(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db1.asset_light_style.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db1.asset_light_style.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db1.asset_light_style} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.asset_light_style.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFolderName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCreateTime();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getUpdateTime();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getIsDel();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getUePath();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPakUrl();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getThumbnailUrl();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.d5.db1.asset_light_style.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.d5.db1.asset_light_style.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string folder_name = 2;
 * @return {string}
 */
proto.d5.db1.asset_light_style.prototype.getFolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db1.asset_light_style.prototype.setFolderName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 create_time = 3;
 * @return {number}
 */
proto.d5.db1.asset_light_style.prototype.getCreateTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.d5.db1.asset_light_style.prototype.setCreateTime = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 update_time = 4;
 * @return {number}
 */
proto.d5.db1.asset_light_style.prototype.getUpdateTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.d5.db1.asset_light_style.prototype.setUpdateTime = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 is_del = 5;
 * @return {number}
 */
proto.d5.db1.asset_light_style.prototype.getIsDel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.d5.db1.asset_light_style.prototype.setIsDel = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string ue_path = 6;
 * @return {string}
 */
proto.d5.db1.asset_light_style.prototype.getUePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.d5.db1.asset_light_style.prototype.setUePath = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string pak_url = 7;
 * @return {string}
 */
proto.d5.db1.asset_light_style.prototype.getPakUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.d5.db1.asset_light_style.prototype.setPakUrl = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 type = 8;
 * @return {number}
 */
proto.d5.db1.asset_light_style.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.d5.db1.asset_light_style.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string thumbnail_url = 9;
 * @return {string}
 */
proto.d5.db1.asset_light_style.prototype.getThumbnailUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.d5.db1.asset_light_style.prototype.setThumbnailUrl = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string title = 10;
 * @return {string}
 */
proto.d5.db1.asset_light_style.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.d5.db1.asset_light_style.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db1.asset_material = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db1.asset_material, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db1.asset_material.displayName = 'proto.d5.db1.asset_material';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db1.asset_material.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db1.asset_material.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db1.asset_material} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.asset_material.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    uePath: jspb.Message.getFieldWithDefault(msg, 3, ""),
    matInfo: jspb.Message.getFieldWithDefault(msg, 4, ""),
    thumbnailUrl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    isDel: jspb.Message.getFieldWithDefault(msg, 6, 0),
    isPrivate: jspb.Message.getFieldWithDefault(msg, 7, 0),
    userId: jspb.Message.getFieldWithDefault(msg, 8, 0),
    companyId: jspb.Message.getFieldWithDefault(msg, 9, 0),
    createTime: jspb.Message.getFieldWithDefault(msg, 10, 0),
    updateTime: jspb.Message.getFieldWithDefault(msg, 11, 0),
    categoryId: jspb.Message.getFieldWithDefault(msg, 12, 0),
    metallic: jspb.Message.getFieldWithDefault(msg, 17, 0),
    roughness: jspb.Message.getFieldWithDefault(msg, 18, 0),
    emissiveColor: jspb.Message.getFieldWithDefault(msg, 19, 0),
    type: jspb.Message.getFieldWithDefault(msg, 20, 0),
    isRepeat: jspb.Message.getFieldWithDefault(msg, 21, 0),
    source: jspb.Message.getFieldWithDefault(msg, 22, 0),
    publishStatus: jspb.Message.getFieldWithDefault(msg, 23, 0),
    pakUrl: jspb.Message.getFieldWithDefault(msg, 24, ""),
    folderName: jspb.Message.getFieldWithDefault(msg, 25, ""),
    syncStatus: jspb.Message.getFieldWithDefault(msg, 26, 0),
    dependentFileList: jspb.Message.getFieldWithDefault(msg, 27, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db1.asset_material}
 */
proto.d5.db1.asset_material.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db1.asset_material;
  return proto.d5.db1.asset_material.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db1.asset_material} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db1.asset_material}
 */
proto.d5.db1.asset_material.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUePath(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMatInfo(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setThumbnailUrl(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsDel(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsPrivate(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserId(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCompanyId(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateTime(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdateTime(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCategoryId(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMetallic(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRoughness(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEmissiveColor(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsRepeat(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSource(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPublishStatus(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setPakUrl(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setFolderName(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSyncStatus(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setDependentFileList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db1.asset_material.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db1.asset_material.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db1.asset_material} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.asset_material.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUePath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMatInfo();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getThumbnailUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIsDel();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getIsPrivate();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getCompanyId();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getCreateTime();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getUpdateTime();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getCategoryId();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getMetallic();
  if (f !== 0) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = message.getRoughness();
  if (f !== 0) {
    writer.writeInt32(
      18,
      f
    );
  }
  f = message.getEmissiveColor();
  if (f !== 0) {
    writer.writeInt32(
      19,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = message.getIsRepeat();
  if (f !== 0) {
    writer.writeInt32(
      21,
      f
    );
  }
  f = message.getSource();
  if (f !== 0) {
    writer.writeInt32(
      22,
      f
    );
  }
  f = message.getPublishStatus();
  if (f !== 0) {
    writer.writeInt32(
      23,
      f
    );
  }
  f = message.getPakUrl();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getFolderName();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getSyncStatus();
  if (f !== 0) {
    writer.writeInt32(
      26,
      f
    );
  }
  f = message.getDependentFileList();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.d5.db1.asset_material.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.d5.db1.asset_material.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.d5.db1.asset_material.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db1.asset_material.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ue_path = 3;
 * @return {string}
 */
proto.d5.db1.asset_material.prototype.getUePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.d5.db1.asset_material.prototype.setUePath = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string mat_info = 4;
 * @return {string}
 */
proto.d5.db1.asset_material.prototype.getMatInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.d5.db1.asset_material.prototype.setMatInfo = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string thumbnail_url = 5;
 * @return {string}
 */
proto.d5.db1.asset_material.prototype.getThumbnailUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.d5.db1.asset_material.prototype.setThumbnailUrl = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 is_del = 6;
 * @return {number}
 */
proto.d5.db1.asset_material.prototype.getIsDel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.d5.db1.asset_material.prototype.setIsDel = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 is_private = 7;
 * @return {number}
 */
proto.d5.db1.asset_material.prototype.getIsPrivate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.d5.db1.asset_material.prototype.setIsPrivate = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 user_id = 8;
 * @return {number}
 */
proto.d5.db1.asset_material.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.d5.db1.asset_material.prototype.setUserId = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 company_id = 9;
 * @return {number}
 */
proto.d5.db1.asset_material.prototype.getCompanyId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.d5.db1.asset_material.prototype.setCompanyId = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 create_time = 10;
 * @return {number}
 */
proto.d5.db1.asset_material.prototype.getCreateTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.d5.db1.asset_material.prototype.setCreateTime = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 update_time = 11;
 * @return {number}
 */
proto.d5.db1.asset_material.prototype.getUpdateTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.d5.db1.asset_material.prototype.setUpdateTime = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 category_id = 12;
 * @return {number}
 */
proto.d5.db1.asset_material.prototype.getCategoryId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.d5.db1.asset_material.prototype.setCategoryId = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 metallic = 17;
 * @return {number}
 */
proto.d5.db1.asset_material.prototype.getMetallic = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.d5.db1.asset_material.prototype.setMetallic = function(value) {
  jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional int32 roughness = 18;
 * @return {number}
 */
proto.d5.db1.asset_material.prototype.getRoughness = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {number} value */
proto.d5.db1.asset_material.prototype.setRoughness = function(value) {
  jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional int32 emissive_color = 19;
 * @return {number}
 */
proto.d5.db1.asset_material.prototype.getEmissiveColor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/** @param {number} value */
proto.d5.db1.asset_material.prototype.setEmissiveColor = function(value) {
  jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional int32 type = 20;
 * @return {number}
 */
proto.d5.db1.asset_material.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/** @param {number} value */
proto.d5.db1.asset_material.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional int32 is_repeat = 21;
 * @return {number}
 */
proto.d5.db1.asset_material.prototype.getIsRepeat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/** @param {number} value */
proto.d5.db1.asset_material.prototype.setIsRepeat = function(value) {
  jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional int32 source = 22;
 * @return {number}
 */
proto.d5.db1.asset_material.prototype.getSource = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/** @param {number} value */
proto.d5.db1.asset_material.prototype.setSource = function(value) {
  jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional int32 publish_status = 23;
 * @return {number}
 */
proto.d5.db1.asset_material.prototype.getPublishStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/** @param {number} value */
proto.d5.db1.asset_material.prototype.setPublishStatus = function(value) {
  jspb.Message.setProto3IntField(this, 23, value);
};


/**
 * optional string pak_url = 24;
 * @return {string}
 */
proto.d5.db1.asset_material.prototype.getPakUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/** @param {string} value */
proto.d5.db1.asset_material.prototype.setPakUrl = function(value) {
  jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional string folder_name = 25;
 * @return {string}
 */
proto.d5.db1.asset_material.prototype.getFolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/** @param {string} value */
proto.d5.db1.asset_material.prototype.setFolderName = function(value) {
  jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional int32 sync_status = 26;
 * @return {number}
 */
proto.d5.db1.asset_material.prototype.getSyncStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/** @param {number} value */
proto.d5.db1.asset_material.prototype.setSyncStatus = function(value) {
  jspb.Message.setProto3IntField(this, 26, value);
};


/**
 * optional string dependent_file_list = 27;
 * @return {string}
 */
proto.d5.db1.asset_material.prototype.getDependentFileList = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/** @param {string} value */
proto.d5.db1.asset_material.prototype.setDependentFileList = function(value) {
  jspb.Message.setProto3StringField(this, 27, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db1.asset_material_category = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db1.asset_material_category, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db1.asset_material_category.displayName = 'proto.d5.db1.asset_material_category';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db1.asset_material_category.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db1.asset_material_category.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db1.asset_material_category} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.asset_material_category.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    parentId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    level: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db1.asset_material_category}
 */
proto.d5.db1.asset_material_category.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db1.asset_material_category;
  return proto.d5.db1.asset_material_category.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db1.asset_material_category} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db1.asset_material_category}
 */
proto.d5.db1.asset_material_category.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setParentId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db1.asset_material_category.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db1.asset_material_category.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db1.asset_material_category} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.asset_material_category.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getParentId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getLevel();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.d5.db1.asset_material_category.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db1.asset_material_category.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.d5.db1.asset_material_category.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db1.asset_material_category.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 parent_id = 3;
 * @return {number}
 */
proto.d5.db1.asset_material_category.prototype.getParentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.d5.db1.asset_material_category.prototype.setParentId = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 level = 4;
 * @return {number}
 */
proto.d5.db1.asset_material_category.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.d5.db1.asset_material_category.prototype.setLevel = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db1.effect_mode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db1.effect_mode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db1.effect_mode.displayName = 'proto.d5.db1.effect_mode';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db1.effect_mode.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db1.effect_mode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db1.effect_mode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.effect_mode.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    modeName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    modeData: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db1.effect_mode}
 */
proto.d5.db1.effect_mode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db1.effect_mode;
  return proto.d5.db1.effect_mode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db1.effect_mode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db1.effect_mode}
 */
proto.d5.db1.effect_mode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModeName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setModeData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db1.effect_mode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db1.effect_mode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db1.effect_mode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.effect_mode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getModeName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getModeData();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.d5.db1.effect_mode.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db1.effect_mode.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string mode_name = 2;
 * @return {string}
 */
proto.d5.db1.effect_mode.prototype.getModeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db1.effect_mode.prototype.setModeName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string mode_data = 3;
 * @return {string}
 */
proto.d5.db1.effect_mode.prototype.getModeData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.d5.db1.effect_mode.prototype.setModeData = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db1.environment_light_template = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db1.environment_light_template, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db1.environment_light_template.displayName = 'proto.d5.db1.environment_light_template';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db1.environment_light_template.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db1.environment_light_template.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db1.environment_light_template} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.environment_light_template.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    thumbnailUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    whiteBalanceTemp: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    filmTint: jspb.Message.getFieldWithDefault(msg, 5, ""),
    filmTintShadow: jspb.Message.getFieldWithDefault(msg, 6, ""),
    filmTintShadowBlend: +jspb.Message.getFieldWithDefault(msg, 7, 0.0),
    filmTintShadowAmount: +jspb.Message.getFieldWithDefault(msg, 8, 0.0),
    filmSaturation: +jspb.Message.getFieldWithDefault(msg, 9, 0.0),
    filmChannelMixerRed: +jspb.Message.getFieldWithDefault(msg, 10, 0.0),
    filmChannelMixerGreen: +jspb.Message.getFieldWithDefault(msg, 11, 0.0),
    filmChannelMixerBlue: +jspb.Message.getFieldWithDefault(msg, 12, 0.0),
    filmContrast: +jspb.Message.getFieldWithDefault(msg, 13, 0.0),
    filmCrushShadows: +jspb.Message.getFieldWithDefault(msg, 14, 0.0),
    filmCrushHighlights: +jspb.Message.getFieldWithDefault(msg, 15, 0.0),
    sceneColorVignetteIntensity: +jspb.Message.getFieldWithDefault(msg, 16, 0.0),
    sceneColorGrainJitter: +jspb.Message.getFieldWithDefault(msg, 17, 0.0),
    sceneColorGrainIntensity: +jspb.Message.getFieldWithDefault(msg, 18, 0.0),
    bloomIntensity: +jspb.Message.getFieldWithDefault(msg, 19, 0.0),
    bloomThreshold: +jspb.Message.getFieldWithDefault(msg, 20, 0.0),
    bloomSizeScale: +jspb.Message.getFieldWithDefault(msg, 21, 0.0),
    bloomTint1: jspb.Message.getFieldWithDefault(msg, 22, ""),
    bloomTint2: jspb.Message.getFieldWithDefault(msg, 23, ""),
    bloomTint3: jspb.Message.getFieldWithDefault(msg, 24, ""),
    bloomTint4: jspb.Message.getFieldWithDefault(msg, 25, ""),
    bloomTint5: jspb.Message.getFieldWithDefault(msg, 26, ""),
    bloomDirtMaskIntensity: +jspb.Message.getFieldWithDefault(msg, 27, 0.0),
    bloomDirtMaskTint: jspb.Message.getFieldWithDefault(msg, 28, ""),
    autoExposureExposureBias: +jspb.Message.getFieldWithDefault(msg, 29, 0.0),
    globalIlluminationIndirectLightingColor: jspb.Message.getFieldWithDefault(msg, 30, ""),
    globalIlluminationIndirectLightingIntensity: +jspb.Message.getFieldWithDefault(msg, 31, 0.0),
    ambientOcclusionIntensity: +jspb.Message.getFieldWithDefault(msg, 32, 0.0),
    ambientOcclusionStaticFraction: +jspb.Message.getFieldWithDefault(msg, 33, 0.0),
    ambientOcclusionRadius: +jspb.Message.getFieldWithDefault(msg, 34, 0.0),
    isShow: jspb.Message.getFieldWithDefault(msg, 35, 0),
    minBrightness: +jspb.Message.getFieldWithDefault(msg, 36, 0.0),
    maxBrightness: +jspb.Message.getFieldWithDefault(msg, 37, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db1.environment_light_template}
 */
proto.d5.db1.environment_light_template.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db1.environment_light_template;
  return proto.d5.db1.environment_light_template.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db1.environment_light_template} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db1.environment_light_template}
 */
proto.d5.db1.environment_light_template.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setThumbnailUrl(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setWhiteBalanceTemp(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilmTint(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilmTintShadow(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFilmTintShadowBlend(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFilmTintShadowAmount(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFilmSaturation(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFilmChannelMixerRed(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFilmChannelMixerGreen(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFilmChannelMixerBlue(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFilmContrast(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFilmCrushShadows(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFilmCrushHighlights(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSceneColorVignetteIntensity(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSceneColorGrainJitter(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSceneColorGrainIntensity(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBloomIntensity(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBloomThreshold(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBloomSizeScale(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setBloomTint1(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setBloomTint2(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setBloomTint3(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setBloomTint4(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setBloomTint5(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBloomDirtMaskIntensity(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setBloomDirtMaskTint(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAutoExposureExposureBias(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setGlobalIlluminationIndirectLightingColor(value);
      break;
    case 31:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGlobalIlluminationIndirectLightingIntensity(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmbientOcclusionIntensity(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmbientOcclusionStaticFraction(value);
      break;
    case 34:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmbientOcclusionRadius(value);
      break;
    case 35:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsShow(value);
      break;
    case 36:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMinBrightness(value);
      break;
    case 37:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxBrightness(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db1.environment_light_template.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db1.environment_light_template.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db1.environment_light_template} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.environment_light_template.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getThumbnailUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWhiteBalanceTemp();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getFilmTint();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFilmTintShadow();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getFilmTintShadowBlend();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getFilmTintShadowAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getFilmSaturation();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getFilmChannelMixerRed();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getFilmChannelMixerGreen();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getFilmChannelMixerBlue();
  if (f !== 0.0) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = message.getFilmContrast();
  if (f !== 0.0) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = message.getFilmCrushShadows();
  if (f !== 0.0) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = message.getFilmCrushHighlights();
  if (f !== 0.0) {
    writer.writeDouble(
      15,
      f
    );
  }
  f = message.getSceneColorVignetteIntensity();
  if (f !== 0.0) {
    writer.writeDouble(
      16,
      f
    );
  }
  f = message.getSceneColorGrainJitter();
  if (f !== 0.0) {
    writer.writeDouble(
      17,
      f
    );
  }
  f = message.getSceneColorGrainIntensity();
  if (f !== 0.0) {
    writer.writeDouble(
      18,
      f
    );
  }
  f = message.getBloomIntensity();
  if (f !== 0.0) {
    writer.writeDouble(
      19,
      f
    );
  }
  f = message.getBloomThreshold();
  if (f !== 0.0) {
    writer.writeDouble(
      20,
      f
    );
  }
  f = message.getBloomSizeScale();
  if (f !== 0.0) {
    writer.writeDouble(
      21,
      f
    );
  }
  f = message.getBloomTint1();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getBloomTint2();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getBloomTint3();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getBloomTint4();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getBloomTint5();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getBloomDirtMaskIntensity();
  if (f !== 0.0) {
    writer.writeDouble(
      27,
      f
    );
  }
  f = message.getBloomDirtMaskTint();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getAutoExposureExposureBias();
  if (f !== 0.0) {
    writer.writeDouble(
      29,
      f
    );
  }
  f = message.getGlobalIlluminationIndirectLightingColor();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getGlobalIlluminationIndirectLightingIntensity();
  if (f !== 0.0) {
    writer.writeDouble(
      31,
      f
    );
  }
  f = message.getAmbientOcclusionIntensity();
  if (f !== 0.0) {
    writer.writeDouble(
      32,
      f
    );
  }
  f = message.getAmbientOcclusionStaticFraction();
  if (f !== 0.0) {
    writer.writeDouble(
      33,
      f
    );
  }
  f = message.getAmbientOcclusionRadius();
  if (f !== 0.0) {
    writer.writeDouble(
      34,
      f
    );
  }
  f = message.getIsShow();
  if (f !== 0) {
    writer.writeInt32(
      35,
      f
    );
  }
  f = message.getMinBrightness();
  if (f !== 0.0) {
    writer.writeDouble(
      36,
      f
    );
  }
  f = message.getMaxBrightness();
  if (f !== 0.0) {
    writer.writeDouble(
      37,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.d5.db1.environment_light_template.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db1.environment_light_template.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.d5.db1.environment_light_template.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db1.environment_light_template.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string thumbnail_url = 3;
 * @return {string}
 */
proto.d5.db1.environment_light_template.prototype.getThumbnailUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.d5.db1.environment_light_template.prototype.setThumbnailUrl = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional double white_balance_temp = 4;
 * @return {number}
 */
proto.d5.db1.environment_light_template.prototype.getWhiteBalanceTemp = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.d5.db1.environment_light_template.prototype.setWhiteBalanceTemp = function(value) {
  jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional string film_tint = 5;
 * @return {string}
 */
proto.d5.db1.environment_light_template.prototype.getFilmTint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.d5.db1.environment_light_template.prototype.setFilmTint = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string film_tint_shadow = 6;
 * @return {string}
 */
proto.d5.db1.environment_light_template.prototype.getFilmTintShadow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.d5.db1.environment_light_template.prototype.setFilmTintShadow = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional double film_tint_shadow_blend = 7;
 * @return {number}
 */
proto.d5.db1.environment_light_template.prototype.getFilmTintShadowBlend = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 7, 0.0));
};


/** @param {number} value */
proto.d5.db1.environment_light_template.prototype.setFilmTintShadowBlend = function(value) {
  jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double film_tint_shadow_amount = 8;
 * @return {number}
 */
proto.d5.db1.environment_light_template.prototype.getFilmTintShadowAmount = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 8, 0.0));
};


/** @param {number} value */
proto.d5.db1.environment_light_template.prototype.setFilmTintShadowAmount = function(value) {
  jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional double film_saturation = 9;
 * @return {number}
 */
proto.d5.db1.environment_light_template.prototype.getFilmSaturation = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 9, 0.0));
};


/** @param {number} value */
proto.d5.db1.environment_light_template.prototype.setFilmSaturation = function(value) {
  jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional double film_channel_mixer_red = 10;
 * @return {number}
 */
proto.d5.db1.environment_light_template.prototype.getFilmChannelMixerRed = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 10, 0.0));
};


/** @param {number} value */
proto.d5.db1.environment_light_template.prototype.setFilmChannelMixerRed = function(value) {
  jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional double film_channel_mixer_green = 11;
 * @return {number}
 */
proto.d5.db1.environment_light_template.prototype.getFilmChannelMixerGreen = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 11, 0.0));
};


/** @param {number} value */
proto.d5.db1.environment_light_template.prototype.setFilmChannelMixerGreen = function(value) {
  jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional double film_channel_mixer_blue = 12;
 * @return {number}
 */
proto.d5.db1.environment_light_template.prototype.getFilmChannelMixerBlue = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 12, 0.0));
};


/** @param {number} value */
proto.d5.db1.environment_light_template.prototype.setFilmChannelMixerBlue = function(value) {
  jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional double film_contrast = 13;
 * @return {number}
 */
proto.d5.db1.environment_light_template.prototype.getFilmContrast = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 13, 0.0));
};


/** @param {number} value */
proto.d5.db1.environment_light_template.prototype.setFilmContrast = function(value) {
  jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional double film_crush_shadows = 14;
 * @return {number}
 */
proto.d5.db1.environment_light_template.prototype.getFilmCrushShadows = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 14, 0.0));
};


/** @param {number} value */
proto.d5.db1.environment_light_template.prototype.setFilmCrushShadows = function(value) {
  jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional double film_crush_highlights = 15;
 * @return {number}
 */
proto.d5.db1.environment_light_template.prototype.getFilmCrushHighlights = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 15, 0.0));
};


/** @param {number} value */
proto.d5.db1.environment_light_template.prototype.setFilmCrushHighlights = function(value) {
  jspb.Message.setProto3FloatField(this, 15, value);
};


/**
 * optional double scene_color_vignette_intensity = 16;
 * @return {number}
 */
proto.d5.db1.environment_light_template.prototype.getSceneColorVignetteIntensity = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 16, 0.0));
};


/** @param {number} value */
proto.d5.db1.environment_light_template.prototype.setSceneColorVignetteIntensity = function(value) {
  jspb.Message.setProto3FloatField(this, 16, value);
};


/**
 * optional double scene_color_grain_jitter = 17;
 * @return {number}
 */
proto.d5.db1.environment_light_template.prototype.getSceneColorGrainJitter = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 17, 0.0));
};


/** @param {number} value */
proto.d5.db1.environment_light_template.prototype.setSceneColorGrainJitter = function(value) {
  jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * optional double scene_color_grain_intensity = 18;
 * @return {number}
 */
proto.d5.db1.environment_light_template.prototype.getSceneColorGrainIntensity = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 18, 0.0));
};


/** @param {number} value */
proto.d5.db1.environment_light_template.prototype.setSceneColorGrainIntensity = function(value) {
  jspb.Message.setProto3FloatField(this, 18, value);
};


/**
 * optional double bloom_intensity = 19;
 * @return {number}
 */
proto.d5.db1.environment_light_template.prototype.getBloomIntensity = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 19, 0.0));
};


/** @param {number} value */
proto.d5.db1.environment_light_template.prototype.setBloomIntensity = function(value) {
  jspb.Message.setProto3FloatField(this, 19, value);
};


/**
 * optional double bloom_threshold = 20;
 * @return {number}
 */
proto.d5.db1.environment_light_template.prototype.getBloomThreshold = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 20, 0.0));
};


/** @param {number} value */
proto.d5.db1.environment_light_template.prototype.setBloomThreshold = function(value) {
  jspb.Message.setProto3FloatField(this, 20, value);
};


/**
 * optional double bloom_size_scale = 21;
 * @return {number}
 */
proto.d5.db1.environment_light_template.prototype.getBloomSizeScale = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 21, 0.0));
};


/** @param {number} value */
proto.d5.db1.environment_light_template.prototype.setBloomSizeScale = function(value) {
  jspb.Message.setProto3FloatField(this, 21, value);
};


/**
 * optional string bloom_tint_1 = 22;
 * @return {string}
 */
proto.d5.db1.environment_light_template.prototype.getBloomTint1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/** @param {string} value */
proto.d5.db1.environment_light_template.prototype.setBloomTint1 = function(value) {
  jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string bloom_tint_2 = 23;
 * @return {string}
 */
proto.d5.db1.environment_light_template.prototype.getBloomTint2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/** @param {string} value */
proto.d5.db1.environment_light_template.prototype.setBloomTint2 = function(value) {
  jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string bloom_tint_3 = 24;
 * @return {string}
 */
proto.d5.db1.environment_light_template.prototype.getBloomTint3 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/** @param {string} value */
proto.d5.db1.environment_light_template.prototype.setBloomTint3 = function(value) {
  jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional string bloom_tint_4 = 25;
 * @return {string}
 */
proto.d5.db1.environment_light_template.prototype.getBloomTint4 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/** @param {string} value */
proto.d5.db1.environment_light_template.prototype.setBloomTint4 = function(value) {
  jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional string bloom_tint_5 = 26;
 * @return {string}
 */
proto.d5.db1.environment_light_template.prototype.getBloomTint5 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/** @param {string} value */
proto.d5.db1.environment_light_template.prototype.setBloomTint5 = function(value) {
  jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional double bloom_dirt_mask_intensity = 27;
 * @return {number}
 */
proto.d5.db1.environment_light_template.prototype.getBloomDirtMaskIntensity = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 27, 0.0));
};


/** @param {number} value */
proto.d5.db1.environment_light_template.prototype.setBloomDirtMaskIntensity = function(value) {
  jspb.Message.setProto3FloatField(this, 27, value);
};


/**
 * optional string bloom_dirt_mask_tint = 28;
 * @return {string}
 */
proto.d5.db1.environment_light_template.prototype.getBloomDirtMaskTint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/** @param {string} value */
proto.d5.db1.environment_light_template.prototype.setBloomDirtMaskTint = function(value) {
  jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional double auto_exposure_exposure_bias = 29;
 * @return {number}
 */
proto.d5.db1.environment_light_template.prototype.getAutoExposureExposureBias = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 29, 0.0));
};


/** @param {number} value */
proto.d5.db1.environment_light_template.prototype.setAutoExposureExposureBias = function(value) {
  jspb.Message.setProto3FloatField(this, 29, value);
};


/**
 * optional string global_illumination_indirect_lighting_color = 30;
 * @return {string}
 */
proto.d5.db1.environment_light_template.prototype.getGlobalIlluminationIndirectLightingColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/** @param {string} value */
proto.d5.db1.environment_light_template.prototype.setGlobalIlluminationIndirectLightingColor = function(value) {
  jspb.Message.setProto3StringField(this, 30, value);
};


/**
 * optional double global_illumination_indirect_lighting_intensity = 31;
 * @return {number}
 */
proto.d5.db1.environment_light_template.prototype.getGlobalIlluminationIndirectLightingIntensity = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 31, 0.0));
};


/** @param {number} value */
proto.d5.db1.environment_light_template.prototype.setGlobalIlluminationIndirectLightingIntensity = function(value) {
  jspb.Message.setProto3FloatField(this, 31, value);
};


/**
 * optional double ambient_occlusion_intensity = 32;
 * @return {number}
 */
proto.d5.db1.environment_light_template.prototype.getAmbientOcclusionIntensity = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 32, 0.0));
};


/** @param {number} value */
proto.d5.db1.environment_light_template.prototype.setAmbientOcclusionIntensity = function(value) {
  jspb.Message.setProto3FloatField(this, 32, value);
};


/**
 * optional double ambient_occlusion_static_fraction = 33;
 * @return {number}
 */
proto.d5.db1.environment_light_template.prototype.getAmbientOcclusionStaticFraction = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 33, 0.0));
};


/** @param {number} value */
proto.d5.db1.environment_light_template.prototype.setAmbientOcclusionStaticFraction = function(value) {
  jspb.Message.setProto3FloatField(this, 33, value);
};


/**
 * optional double ambient_occlusion_radius = 34;
 * @return {number}
 */
proto.d5.db1.environment_light_template.prototype.getAmbientOcclusionRadius = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 34, 0.0));
};


/** @param {number} value */
proto.d5.db1.environment_light_template.prototype.setAmbientOcclusionRadius = function(value) {
  jspb.Message.setProto3FloatField(this, 34, value);
};


/**
 * optional int32 is_show = 35;
 * @return {number}
 */
proto.d5.db1.environment_light_template.prototype.getIsShow = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 35, 0));
};


/** @param {number} value */
proto.d5.db1.environment_light_template.prototype.setIsShow = function(value) {
  jspb.Message.setProto3IntField(this, 35, value);
};


/**
 * optional double min_brightness = 36;
 * @return {number}
 */
proto.d5.db1.environment_light_template.prototype.getMinBrightness = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 36, 0.0));
};


/** @param {number} value */
proto.d5.db1.environment_light_template.prototype.setMinBrightness = function(value) {
  jspb.Message.setProto3FloatField(this, 36, value);
};


/**
 * optional double max_brightness = 37;
 * @return {number}
 */
proto.d5.db1.environment_light_template.prototype.getMaxBrightness = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 37, 0.0));
};


/** @param {number} value */
proto.d5.db1.environment_light_template.prototype.setMaxBrightness = function(value) {
  jspb.Message.setProto3FloatField(this, 37, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db1.furniture_color = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db1.furniture_color, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db1.furniture_color.displayName = 'proto.d5.db1.furniture_color';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db1.furniture_color.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db1.furniture_color.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db1.furniture_color} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.furniture_color.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    hex: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db1.furniture_color}
 */
proto.d5.db1.furniture_color.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db1.furniture_color;
  return proto.d5.db1.furniture_color.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db1.furniture_color} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db1.furniture_color}
 */
proto.d5.db1.furniture_color.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db1.furniture_color.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db1.furniture_color.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db1.furniture_color} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.furniture_color.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHex();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.d5.db1.furniture_color.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db1.furniture_color.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.d5.db1.furniture_color.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db1.furniture_color.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string hex = 3;
 * @return {string}
 */
proto.d5.db1.furniture_color.prototype.getHex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.d5.db1.furniture_color.prototype.setHex = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db1.furniture_main_material = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db1.furniture_main_material, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db1.furniture_main_material.displayName = 'proto.d5.db1.furniture_main_material';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db1.furniture_main_material.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db1.furniture_main_material.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db1.furniture_main_material} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.furniture_main_material.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db1.furniture_main_material}
 */
proto.d5.db1.furniture_main_material.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db1.furniture_main_material;
  return proto.d5.db1.furniture_main_material.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db1.furniture_main_material} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db1.furniture_main_material}
 */
proto.d5.db1.furniture_main_material.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db1.furniture_main_material.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db1.furniture_main_material.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db1.furniture_main_material} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.furniture_main_material.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.d5.db1.furniture_main_material.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db1.furniture_main_material.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.d5.db1.furniture_main_material.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db1.furniture_main_material.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db1.furniture_style = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db1.furniture_style, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db1.furniture_style.displayName = 'proto.d5.db1.furniture_style';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db1.furniture_style.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db1.furniture_style.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db1.furniture_style} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.furniture_style.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db1.furniture_style}
 */
proto.d5.db1.furniture_style.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db1.furniture_style;
  return proto.d5.db1.furniture_style.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db1.furniture_style} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db1.furniture_style}
 */
proto.d5.db1.furniture_style.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db1.furniture_style.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db1.furniture_style.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db1.furniture_style} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.furniture_style.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.d5.db1.furniture_style.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db1.furniture_style.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.d5.db1.furniture_style.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db1.furniture_style.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db1.outdoor_light_style = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db1.outdoor_light_style, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db1.outdoor_light_style.displayName = 'proto.d5.db1.outdoor_light_style';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db1.outdoor_light_style.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db1.outdoor_light_style.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db1.outdoor_light_style} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.outdoor_light_style.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    directionalLightRotation: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    directionalLightIntensity: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    directionalLightLightColor: jspb.Message.getFieldWithDefault(msg, 4, ""),
    directionalLightUseTemperature: jspb.Message.getFieldWithDefault(msg, 5, 0),
    directionalLightTemperature: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),
    directionalLightCastShadows: jspb.Message.getFieldWithDefault(msg, 7, 0),
    directionalLightShadowBias: +jspb.Message.getFieldWithDefault(msg, 8, 0.0),
    directionalLightLightingChannels0: jspb.Message.getFieldWithDefault(msg, 9, 0),
    directionalLightLightingChannels1: jspb.Message.getFieldWithDefault(msg, 10, 0),
    directionalLightLightingChannels2: jspb.Message.getFieldWithDefault(msg, 11, 0),
    skyLightIntensity: +jspb.Message.getFieldWithDefault(msg, 12, 0.0),
    skyLightLightColor: jspb.Message.getFieldWithDefault(msg, 13, ""),
    title: jspb.Message.getFieldWithDefault(msg, 14, ""),
    thumbnailUrl: jspb.Message.getFieldWithDefault(msg, 15, ""),
    uePath: jspb.Message.getFieldWithDefault(msg, 16, ""),
    naturalMaterialLightingIntensity: +jspb.Message.getFieldWithDefault(msg, 17, 0.0),
    naturalMaterialLightingColor: jspb.Message.getFieldWithDefault(msg, 18, ""),
    environmentLightId: jspb.Message.getFieldWithDefault(msg, 19, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db1.outdoor_light_style}
 */
proto.d5.db1.outdoor_light_style.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db1.outdoor_light_style;
  return proto.d5.db1.outdoor_light_style.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db1.outdoor_light_style} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db1.outdoor_light_style}
 */
proto.d5.db1.outdoor_light_style.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDirectionalLightRotation(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDirectionalLightIntensity(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDirectionalLightLightColor(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDirectionalLightUseTemperature(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDirectionalLightTemperature(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDirectionalLightCastShadows(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDirectionalLightShadowBias(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDirectionalLightLightingChannels0(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDirectionalLightLightingChannels1(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDirectionalLightLightingChannels2(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSkyLightIntensity(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setSkyLightLightColor(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setThumbnailUrl(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setUePath(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setNaturalMaterialLightingIntensity(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setNaturalMaterialLightingColor(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEnvironmentLightId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db1.outdoor_light_style.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db1.outdoor_light_style.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db1.outdoor_light_style} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.outdoor_light_style.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDirectionalLightRotation();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getDirectionalLightIntensity();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getDirectionalLightLightColor();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDirectionalLightUseTemperature();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getDirectionalLightTemperature();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getDirectionalLightCastShadows();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getDirectionalLightShadowBias();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getDirectionalLightLightingChannels0();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getDirectionalLightLightingChannels1();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getDirectionalLightLightingChannels2();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getSkyLightIntensity();
  if (f !== 0.0) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = message.getSkyLightLightColor();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getThumbnailUrl();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getUePath();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getNaturalMaterialLightingIntensity();
  if (f !== 0.0) {
    writer.writeDouble(
      17,
      f
    );
  }
  f = message.getNaturalMaterialLightingColor();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getEnvironmentLightId();
  if (f !== 0) {
    writer.writeInt32(
      19,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.d5.db1.outdoor_light_style.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db1.outdoor_light_style.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional double directional_light_rotation = 2;
 * @return {number}
 */
proto.d5.db1.outdoor_light_style.prototype.getDirectionalLightRotation = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.d5.db1.outdoor_light_style.prototype.setDirectionalLightRotation = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double directional_light_intensity = 3;
 * @return {number}
 */
proto.d5.db1.outdoor_light_style.prototype.getDirectionalLightIntensity = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.d5.db1.outdoor_light_style.prototype.setDirectionalLightIntensity = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional string directional_light_light_color = 4;
 * @return {string}
 */
proto.d5.db1.outdoor_light_style.prototype.getDirectionalLightLightColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.d5.db1.outdoor_light_style.prototype.setDirectionalLightLightColor = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 directional_light_use_temperature = 5;
 * @return {number}
 */
proto.d5.db1.outdoor_light_style.prototype.getDirectionalLightUseTemperature = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.d5.db1.outdoor_light_style.prototype.setDirectionalLightUseTemperature = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional double directional_light_temperature = 6;
 * @return {number}
 */
proto.d5.db1.outdoor_light_style.prototype.getDirectionalLightTemperature = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.d5.db1.outdoor_light_style.prototype.setDirectionalLightTemperature = function(value) {
  jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional int32 directional_light_cast_shadows = 7;
 * @return {number}
 */
proto.d5.db1.outdoor_light_style.prototype.getDirectionalLightCastShadows = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.d5.db1.outdoor_light_style.prototype.setDirectionalLightCastShadows = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional double directional_light_shadow_bias = 8;
 * @return {number}
 */
proto.d5.db1.outdoor_light_style.prototype.getDirectionalLightShadowBias = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 8, 0.0));
};


/** @param {number} value */
proto.d5.db1.outdoor_light_style.prototype.setDirectionalLightShadowBias = function(value) {
  jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional int32 directional_light_lighting_channels0 = 9;
 * @return {number}
 */
proto.d5.db1.outdoor_light_style.prototype.getDirectionalLightLightingChannels0 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.d5.db1.outdoor_light_style.prototype.setDirectionalLightLightingChannels0 = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 directional_light_lighting_channels1 = 10;
 * @return {number}
 */
proto.d5.db1.outdoor_light_style.prototype.getDirectionalLightLightingChannels1 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.d5.db1.outdoor_light_style.prototype.setDirectionalLightLightingChannels1 = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 directional_light_lighting_channels2 = 11;
 * @return {number}
 */
proto.d5.db1.outdoor_light_style.prototype.getDirectionalLightLightingChannels2 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.d5.db1.outdoor_light_style.prototype.setDirectionalLightLightingChannels2 = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional double sky_light_intensity = 12;
 * @return {number}
 */
proto.d5.db1.outdoor_light_style.prototype.getSkyLightIntensity = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 12, 0.0));
};


/** @param {number} value */
proto.d5.db1.outdoor_light_style.prototype.setSkyLightIntensity = function(value) {
  jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional string sky_light_light_color = 13;
 * @return {string}
 */
proto.d5.db1.outdoor_light_style.prototype.getSkyLightLightColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.d5.db1.outdoor_light_style.prototype.setSkyLightLightColor = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string title = 14;
 * @return {string}
 */
proto.d5.db1.outdoor_light_style.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.d5.db1.outdoor_light_style.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string thumbnail_url = 15;
 * @return {string}
 */
proto.d5.db1.outdoor_light_style.prototype.getThumbnailUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.d5.db1.outdoor_light_style.prototype.setThumbnailUrl = function(value) {
  jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string ue_path = 16;
 * @return {string}
 */
proto.d5.db1.outdoor_light_style.prototype.getUePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.d5.db1.outdoor_light_style.prototype.setUePath = function(value) {
  jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional double natural_material_lighting_intensity = 17;
 * @return {number}
 */
proto.d5.db1.outdoor_light_style.prototype.getNaturalMaterialLightingIntensity = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 17, 0.0));
};


/** @param {number} value */
proto.d5.db1.outdoor_light_style.prototype.setNaturalMaterialLightingIntensity = function(value) {
  jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * optional string natural_material_lighting_color = 18;
 * @return {string}
 */
proto.d5.db1.outdoor_light_style.prototype.getNaturalMaterialLightingColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/** @param {string} value */
proto.d5.db1.outdoor_light_style.prototype.setNaturalMaterialLightingColor = function(value) {
  jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional int32 environment_light_id = 19;
 * @return {number}
 */
proto.d5.db1.outdoor_light_style.prototype.getEnvironmentLightId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/** @param {number} value */
proto.d5.db1.outdoor_light_style.prototype.setEnvironmentLightId = function(value) {
  jspb.Message.setProto3IntField(this, 19, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db1.plan_design_template = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db1.plan_design_template, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db1.plan_design_template.displayName = 'proto.d5.db1.plan_design_template';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db1.plan_design_template.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db1.plan_design_template.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db1.plan_design_template} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.plan_design_template.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    designFileUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    size: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    pakUrl: jspb.Message.getFieldWithDefault(msg, 6, ""),
    thumbnailUrl: jspb.Message.getFieldWithDefault(msg, 7, ""),
    floorEditFileUrl: jspb.Message.getFieldWithDefault(msg, 8, ""),
    detailInfo: jspb.Message.getFieldWithDefault(msg, 9, ""),
    districtId: jspb.Message.getFieldWithDefault(msg, 10, 0),
    propertyTypeId: jspb.Message.getFieldWithDefault(msg, 11, 0),
    roomTypeId: jspb.Message.getFieldWithDefault(msg, 12, 0),
    templateTypeId: jspb.Message.getFieldWithDefault(msg, 13, 0),
    createTime: jspb.Message.getFieldWithDefault(msg, 14, 0),
    updateTime: jspb.Message.getFieldWithDefault(msg, 15, 0),
    isPublished: jspb.Message.getFieldWithDefault(msg, 16, 0),
    floorRefUrl: jspb.Message.getFieldWithDefault(msg, 17, ""),
    floorRefWidth: +jspb.Message.getFieldWithDefault(msg, 18, 0.0),
    floorRefHeight: +jspb.Message.getFieldWithDefault(msg, 19, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db1.plan_design_template}
 */
proto.d5.db1.plan_design_template.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db1.plan_design_template;
  return proto.d5.db1.plan_design_template.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db1.plan_design_template} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db1.plan_design_template}
 */
proto.d5.db1.plan_design_template.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDesignFileUrl(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSize(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPakUrl(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setThumbnailUrl(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setFloorEditFileUrl(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setDetailInfo(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDistrictId(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPropertyTypeId(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRoomTypeId(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTemplateTypeId(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateTime(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdateTime(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsPublished(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setFloorRefUrl(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFloorRefWidth(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFloorRefHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db1.plan_design_template.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db1.plan_design_template.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db1.plan_design_template} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.plan_design_template.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDesignFileUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSize();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getPakUrl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getThumbnailUrl();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getFloorEditFileUrl();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getDetailInfo();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getDistrictId();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getPropertyTypeId();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getRoomTypeId();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getTemplateTypeId();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getCreateTime();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = message.getUpdateTime();
  if (f !== 0) {
    writer.writeInt64(
      15,
      f
    );
  }
  f = message.getIsPublished();
  if (f !== 0) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = message.getFloorRefUrl();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getFloorRefWidth();
  if (f !== 0.0) {
    writer.writeDouble(
      18,
      f
    );
  }
  f = message.getFloorRefHeight();
  if (f !== 0.0) {
    writer.writeDouble(
      19,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.d5.db1.plan_design_template.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.d5.db1.plan_design_template.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.d5.db1.plan_design_template.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db1.plan_design_template.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string design_file_url = 3;
 * @return {string}
 */
proto.d5.db1.plan_design_template.prototype.getDesignFileUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.d5.db1.plan_design_template.prototype.setDesignFileUrl = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional double size = 4;
 * @return {number}
 */
proto.d5.db1.plan_design_template.prototype.getSize = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.d5.db1.plan_design_template.prototype.setSize = function(value) {
  jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional string pak_url = 6;
 * @return {string}
 */
proto.d5.db1.plan_design_template.prototype.getPakUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.d5.db1.plan_design_template.prototype.setPakUrl = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string thumbnail_url = 7;
 * @return {string}
 */
proto.d5.db1.plan_design_template.prototype.getThumbnailUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.d5.db1.plan_design_template.prototype.setThumbnailUrl = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string floor_edit_file_url = 8;
 * @return {string}
 */
proto.d5.db1.plan_design_template.prototype.getFloorEditFileUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.d5.db1.plan_design_template.prototype.setFloorEditFileUrl = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string detail_info = 9;
 * @return {string}
 */
proto.d5.db1.plan_design_template.prototype.getDetailInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.d5.db1.plan_design_template.prototype.setDetailInfo = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int32 district_id = 10;
 * @return {number}
 */
proto.d5.db1.plan_design_template.prototype.getDistrictId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.d5.db1.plan_design_template.prototype.setDistrictId = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 property_type_id = 11;
 * @return {number}
 */
proto.d5.db1.plan_design_template.prototype.getPropertyTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.d5.db1.plan_design_template.prototype.setPropertyTypeId = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 room_type_id = 12;
 * @return {number}
 */
proto.d5.db1.plan_design_template.prototype.getRoomTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.d5.db1.plan_design_template.prototype.setRoomTypeId = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 template_type_id = 13;
 * @return {number}
 */
proto.d5.db1.plan_design_template.prototype.getTemplateTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.d5.db1.plan_design_template.prototype.setTemplateTypeId = function(value) {
  jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int64 create_time = 14;
 * @return {number}
 */
proto.d5.db1.plan_design_template.prototype.getCreateTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.d5.db1.plan_design_template.prototype.setCreateTime = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int64 update_time = 15;
 * @return {number}
 */
proto.d5.db1.plan_design_template.prototype.getUpdateTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.d5.db1.plan_design_template.prototype.setUpdateTime = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional int32 is_published = 16;
 * @return {number}
 */
proto.d5.db1.plan_design_template.prototype.getIsPublished = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.d5.db1.plan_design_template.prototype.setIsPublished = function(value) {
  jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional string floor_ref_url = 17;
 * @return {string}
 */
proto.d5.db1.plan_design_template.prototype.getFloorRefUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/** @param {string} value */
proto.d5.db1.plan_design_template.prototype.setFloorRefUrl = function(value) {
  jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional double floor_ref_width = 18;
 * @return {number}
 */
proto.d5.db1.plan_design_template.prototype.getFloorRefWidth = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 18, 0.0));
};


/** @param {number} value */
proto.d5.db1.plan_design_template.prototype.setFloorRefWidth = function(value) {
  jspb.Message.setProto3FloatField(this, 18, value);
};


/**
 * optional double floor_ref_height = 19;
 * @return {number}
 */
proto.d5.db1.plan_design_template.prototype.getFloorRefHeight = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 19, 0.0));
};


/** @param {number} value */
proto.d5.db1.plan_design_template.prototype.setFloorRefHeight = function(value) {
  jspb.Message.setProto3FloatField(this, 19, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db1.plan_district = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db1.plan_district, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db1.plan_district.displayName = 'proto.d5.db1.plan_district';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db1.plan_district.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db1.plan_district.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db1.plan_district} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.plan_district.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    parentId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    level: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db1.plan_district}
 */
proto.d5.db1.plan_district.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db1.plan_district;
  return proto.d5.db1.plan_district.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db1.plan_district} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db1.plan_district}
 */
proto.d5.db1.plan_district.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setParentId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db1.plan_district.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db1.plan_district.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db1.plan_district} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.plan_district.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getParentId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getLevel();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.d5.db1.plan_district.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db1.plan_district.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.d5.db1.plan_district.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db1.plan_district.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 parent_id = 3;
 * @return {number}
 */
proto.d5.db1.plan_district.prototype.getParentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.d5.db1.plan_district.prototype.setParentId = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 level = 4;
 * @return {number}
 */
proto.d5.db1.plan_district.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.d5.db1.plan_district.prototype.setLevel = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db1.plan_property_type = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db1.plan_property_type, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db1.plan_property_type.displayName = 'proto.d5.db1.plan_property_type';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db1.plan_property_type.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db1.plan_property_type.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db1.plan_property_type} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.plan_property_type.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db1.plan_property_type}
 */
proto.d5.db1.plan_property_type.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db1.plan_property_type;
  return proto.d5.db1.plan_property_type.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db1.plan_property_type} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db1.plan_property_type}
 */
proto.d5.db1.plan_property_type.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db1.plan_property_type.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db1.plan_property_type.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db1.plan_property_type} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.plan_property_type.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.d5.db1.plan_property_type.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db1.plan_property_type.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.d5.db1.plan_property_type.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db1.plan_property_type.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db1.plan_room_type = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db1.plan_room_type, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db1.plan_room_type.displayName = 'proto.d5.db1.plan_room_type';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db1.plan_room_type.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db1.plan_room_type.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db1.plan_room_type} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.plan_room_type.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db1.plan_room_type}
 */
proto.d5.db1.plan_room_type.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db1.plan_room_type;
  return proto.d5.db1.plan_room_type.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db1.plan_room_type} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db1.plan_room_type}
 */
proto.d5.db1.plan_room_type.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db1.plan_room_type.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db1.plan_room_type.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db1.plan_room_type} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.plan_room_type.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.d5.db1.plan_room_type.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db1.plan_room_type.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.d5.db1.plan_room_type.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db1.plan_room_type.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db1.plan_template_type = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db1.plan_template_type, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db1.plan_template_type.displayName = 'proto.d5.db1.plan_template_type';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db1.plan_template_type.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db1.plan_template_type.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db1.plan_template_type} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.plan_template_type.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db1.plan_template_type}
 */
proto.d5.db1.plan_template_type.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db1.plan_template_type;
  return proto.d5.db1.plan_template_type.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db1.plan_template_type} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db1.plan_template_type}
 */
proto.d5.db1.plan_template_type.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db1.plan_template_type.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db1.plan_template_type.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db1.plan_template_type} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.plan_template_type.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.d5.db1.plan_template_type.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db1.plan_template_type.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.d5.db1.plan_template_type.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db1.plan_template_type.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db1.product_brand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db1.product_brand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db1.product_brand.displayName = 'proto.d5.db1.product_brand';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db1.product_brand.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db1.product_brand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db1.product_brand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.product_brand.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db1.product_brand}
 */
proto.d5.db1.product_brand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db1.product_brand;
  return proto.d5.db1.product_brand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db1.product_brand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db1.product_brand}
 */
proto.d5.db1.product_brand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db1.product_brand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db1.product_brand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db1.product_brand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.product_brand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.d5.db1.product_brand.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db1.product_brand.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.d5.db1.product_brand.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db1.product_brand.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db1.product_category1 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db1.product_category1, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db1.product_category1.displayName = 'proto.d5.db1.product_category1';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db1.product_category1.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db1.product_category1.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db1.product_category1} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.product_category1.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db1.product_category1}
 */
proto.d5.db1.product_category1.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db1.product_category1;
  return proto.d5.db1.product_category1.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db1.product_category1} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db1.product_category1}
 */
proto.d5.db1.product_category1.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db1.product_category1.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db1.product_category1.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db1.product_category1} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.product_category1.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.d5.db1.product_category1.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db1.product_category1.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.d5.db1.product_category1.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db1.product_category1.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db1.product_category2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db1.product_category2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db1.product_category2.displayName = 'proto.d5.db1.product_category2';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db1.product_category2.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db1.product_category2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db1.product_category2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.product_category2.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    category1Id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    title: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db1.product_category2}
 */
proto.d5.db1.product_category2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db1.product_category2;
  return proto.d5.db1.product_category2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db1.product_category2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db1.product_category2}
 */
proto.d5.db1.product_category2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCategory1Id(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db1.product_category2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db1.product_category2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db1.product_category2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.product_category2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCategory1Id();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.d5.db1.product_category2.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db1.product_category2.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 category1_id = 2;
 * @return {number}
 */
proto.d5.db1.product_category2.prototype.getCategory1Id = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.d5.db1.product_category2.prototype.setCategory1Id = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.d5.db1.product_category2.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.d5.db1.product_category2.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db1.product_category3 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db1.product_category3, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db1.product_category3.displayName = 'proto.d5.db1.product_category3';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db1.product_category3.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db1.product_category3.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db1.product_category3} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.product_category3.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    category1Id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    category2Id: jspb.Message.getFieldWithDefault(msg, 3, 0),
    title: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db1.product_category3}
 */
proto.d5.db1.product_category3.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db1.product_category3;
  return proto.d5.db1.product_category3.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db1.product_category3} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db1.product_category3}
 */
proto.d5.db1.product_category3.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCategory1Id(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCategory2Id(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db1.product_category3.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db1.product_category3.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db1.product_category3} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.product_category3.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCategory1Id();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCategory2Id();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.d5.db1.product_category3.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db1.product_category3.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 category1_id = 2;
 * @return {number}
 */
proto.d5.db1.product_category3.prototype.getCategory1Id = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.d5.db1.product_category3.prototype.setCategory1Id = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 category2_id = 3;
 * @return {number}
 */
proto.d5.db1.product_category3.prototype.getCategory2Id = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.d5.db1.product_category3.prototype.setCategory2Id = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string title = 4;
 * @return {string}
 */
proto.d5.db1.product_category3.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.d5.db1.product_category3.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db1.sqlite_sequence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db1.sqlite_sequence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db1.sqlite_sequence.displayName = 'proto.d5.db1.sqlite_sequence';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db1.sqlite_sequence.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db1.sqlite_sequence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db1.sqlite_sequence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.sqlite_sequence.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    seq: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db1.sqlite_sequence}
 */
proto.d5.db1.sqlite_sequence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db1.sqlite_sequence;
  return proto.d5.db1.sqlite_sequence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db1.sqlite_sequence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db1.sqlite_sequence}
 */
proto.d5.db1.sqlite_sequence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeq(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db1.sqlite_sequence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db1.sqlite_sequence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db1.sqlite_sequence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db1.sqlite_sequence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSeq();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.d5.db1.sqlite_sequence.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.d5.db1.sqlite_sequence.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string seq = 2;
 * @return {string}
 */
proto.d5.db1.sqlite_sequence.prototype.getSeq = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db1.sqlite_sequence.prototype.setSeq = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.d5.db1);
