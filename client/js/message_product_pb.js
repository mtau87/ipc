/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var db2_pb = require('./db2_pb.js');
var message_common_pb = require('./message_common_pb.js');
goog.exportSymbol('proto.d5.db2.CMessageAddBuildingMaterialRequest', null, global);
goog.exportSymbol('proto.d5.db2.CMessageAddBuildingMaterialResponse', null, global);
goog.exportSymbol('proto.d5.db2.CMessageAddFurnitureRequest', null, global);
goog.exportSymbol('proto.d5.db2.CMessageAddFurnitureResponse', null, global);
goog.exportSymbol('proto.d5.db2.CMessageAddProductRequest', null, global);
goog.exportSymbol('proto.d5.db2.CMessageAddProductResponse', null, global);
goog.exportSymbol('proto.d5.db2.CMessageCreateProductRequest', null, global);
goog.exportSymbol('proto.d5.db2.CMessageCreateProductResponse', null, global);
goog.exportSymbol('proto.d5.db2.CMessageDefaultProductRequest', null, global);
goog.exportSymbol('proto.d5.db2.CMessageDefaultProductResponse', null, global);
goog.exportSymbol('proto.d5.db2.CMessageDelProductRequest', null, global);
goog.exportSymbol('proto.d5.db2.CMessageDelProductResponse', null, global);
goog.exportSymbol('proto.d5.db2.CMessageProductByIdRequest', null, global);
goog.exportSymbol('proto.d5.db2.CMessageProductByIdResponse', null, global);
goog.exportSymbol('proto.d5.db2.CMessageProductCountRequest', null, global);
goog.exportSymbol('proto.d5.db2.CMessageProductCountResponse', null, global);
goog.exportSymbol('proto.d5.db2.CMessageProductDetailResponse', null, global);
goog.exportSymbol('proto.d5.db2.CMessageProductDownloadProcessResponse', null, global);
goog.exportSymbol('proto.d5.db2.CMessageProductDownloadRequest', null, global);
goog.exportSymbol('proto.d5.db2.CMessageProductDownloadResponse', null, global);
goog.exportSymbol('proto.d5.db2.CMessageProductRequest', null, global);
goog.exportSymbol('proto.d5.db2.CMessageProductRequest.EScope', null, global);
goog.exportSymbol('proto.d5.db2.CMessageProductRequest.Order', null, global);
goog.exportSymbol('proto.d5.db2.CMessageProductRequest.ProductType', null, global);
goog.exportSymbol('proto.d5.db2.CMessageProductResponse', null, global);
goog.exportSymbol('proto.d5.db2.CMessageProductSaveProcessResponse', null, global);
goog.exportSymbol('proto.d5.db2.CMessageProductSaveRequest', null, global);
goog.exportSymbol('proto.d5.db2.CMessageProductSaveResponse', null, global);
goog.exportSymbol('proto.d5.db2.CProductDetailUnit', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.CMessageProductCountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.CMessageProductCountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.CMessageProductCountRequest.displayName = 'proto.d5.db2.CMessageProductCountRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.CMessageProductCountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.CMessageProductCountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.CMessageProductCountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageProductCountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    id: jspb.Message.getFieldWithDefault(msg, 3, ""),
    idvalid: jspb.Message.getFieldWithDefault(msg, 4, false),
    companyid: jspb.Message.getFieldWithDefault(msg, 5, 0),
    companyidvalid: jspb.Message.getFieldWithDefault(msg, 6, false),
    brandid: jspb.Message.getFieldWithDefault(msg, 7, 0),
    brandidvalid: jspb.Message.getFieldWithDefault(msg, 8, false),
    styleid: jspb.Message.getFieldWithDefault(msg, 9, 0),
    styleidvalid: jspb.Message.getFieldWithDefault(msg, 10, false),
    title: jspb.Message.getFieldWithDefault(msg, 11, ""),
    titlevalid: jspb.Message.getFieldWithDefault(msg, 12, false),
    mainmaterialid: jspb.Message.getFieldWithDefault(msg, 13, 0),
    mainmaterialidvalid: jspb.Message.getFieldWithDefault(msg, 14, false),
    colorid: jspb.Message.getFieldWithDefault(msg, 15, 0),
    coloridvalid: jspb.Message.getFieldWithDefault(msg, 16, false),
    pricemin: +jspb.Message.getFieldWithDefault(msg, 17, 0.0),
    priceminvalid: jspb.Message.getFieldWithDefault(msg, 18, false),
    pricemax: +jspb.Message.getFieldWithDefault(msg, 19, 0.0),
    pricemaxvalid: jspb.Message.getFieldWithDefault(msg, 20, false),
    categoryid: jspb.Message.getFieldWithDefault(msg, 21, 0),
    categoryidvalid: jspb.Message.getFieldWithDefault(msg, 22, false),
    categorylevel: jspb.Message.getFieldWithDefault(msg, 23, 0),
    categorylevelvalid: jspb.Message.getFieldWithDefault(msg, 24, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.CMessageProductCountRequest}
 */
proto.d5.db2.CMessageProductCountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.CMessageProductCountRequest;
  return proto.d5.db2.CMessageProductCountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.CMessageProductCountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.CMessageProductCountRequest}
 */
proto.d5.db2.CMessageProductCountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIdvalid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCompanyid(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCompanyidvalid(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBrandid(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBrandidvalid(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStyleid(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStyleidvalid(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTitlevalid(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMainmaterialid(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMainmaterialidvalid(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setColorid(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setColoridvalid(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPricemin(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPriceminvalid(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPricemax(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPricemaxvalid(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCategoryid(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCategoryidvalid(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCategorylevel(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCategorylevelvalid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.CMessageProductCountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.CMessageProductCountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.CMessageProductCountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageProductCountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIdvalid();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getCompanyid();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getCompanyidvalid();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getBrandid();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getBrandidvalid();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getStyleid();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getStyleidvalid();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getTitlevalid();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getMainmaterialid();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getMainmaterialidvalid();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getColorid();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getColoridvalid();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getPricemin();
  if (f !== 0.0) {
    writer.writeDouble(
      17,
      f
    );
  }
  f = message.getPriceminvalid();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getPricemax();
  if (f !== 0.0) {
    writer.writeDouble(
      19,
      f
    );
  }
  f = message.getPricemaxvalid();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getCategoryid();
  if (f !== 0) {
    writer.writeInt32(
      21,
      f
    );
  }
  f = message.getCategoryidvalid();
  if (f) {
    writer.writeBool(
      22,
      f
    );
  }
  f = message.getCategorylevel();
  if (f !== 0) {
    writer.writeInt32(
      23,
      f
    );
  }
  f = message.getCategorylevelvalid();
  if (f) {
    writer.writeBool(
      24,
      f
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.d5.db2.CMessageProductCountRequest.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductCountRequest.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.d5.db2.CMessageProductCountRequest.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageProductCountRequest.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string id = 3;
 * @return {string}
 */
proto.d5.db2.CMessageProductCountRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageProductCountRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool idValid = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.d5.db2.CMessageProductCountRequest.prototype.getIdvalid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.d5.db2.CMessageProductCountRequest.prototype.setIdvalid = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional int32 companyId = 5;
 * @return {number}
 */
proto.d5.db2.CMessageProductCountRequest.prototype.getCompanyid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductCountRequest.prototype.setCompanyid = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool companyIdValid = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.d5.db2.CMessageProductCountRequest.prototype.getCompanyidvalid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.d5.db2.CMessageProductCountRequest.prototype.setCompanyidvalid = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional int32 brandId = 7;
 * @return {number}
 */
proto.d5.db2.CMessageProductCountRequest.prototype.getBrandid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductCountRequest.prototype.setBrandid = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional bool brandIdValid = 8;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.d5.db2.CMessageProductCountRequest.prototype.getBrandidvalid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));
};


/** @param {boolean} value */
proto.d5.db2.CMessageProductCountRequest.prototype.setBrandidvalid = function(value) {
  jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional int32 styleId = 9;
 * @return {number}
 */
proto.d5.db2.CMessageProductCountRequest.prototype.getStyleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductCountRequest.prototype.setStyleid = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional bool styleIdValid = 10;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.d5.db2.CMessageProductCountRequest.prototype.getStyleidvalid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 10, false));
};


/** @param {boolean} value */
proto.d5.db2.CMessageProductCountRequest.prototype.setStyleidvalid = function(value) {
  jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional string title = 11;
 * @return {string}
 */
proto.d5.db2.CMessageProductCountRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageProductCountRequest.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional bool titleValid = 12;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.d5.db2.CMessageProductCountRequest.prototype.getTitlevalid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 12, false));
};


/** @param {boolean} value */
proto.d5.db2.CMessageProductCountRequest.prototype.setTitlevalid = function(value) {
  jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional int32 mainMaterialId = 13;
 * @return {number}
 */
proto.d5.db2.CMessageProductCountRequest.prototype.getMainmaterialid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductCountRequest.prototype.setMainmaterialid = function(value) {
  jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional bool mainMaterialIdValid = 14;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.d5.db2.CMessageProductCountRequest.prototype.getMainmaterialidvalid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 14, false));
};


/** @param {boolean} value */
proto.d5.db2.CMessageProductCountRequest.prototype.setMainmaterialidvalid = function(value) {
  jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional int32 colorId = 15;
 * @return {number}
 */
proto.d5.db2.CMessageProductCountRequest.prototype.getColorid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductCountRequest.prototype.setColorid = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional bool colorIdValid = 16;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.d5.db2.CMessageProductCountRequest.prototype.getColoridvalid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 16, false));
};


/** @param {boolean} value */
proto.d5.db2.CMessageProductCountRequest.prototype.setColoridvalid = function(value) {
  jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional double priceMin = 17;
 * @return {number}
 */
proto.d5.db2.CMessageProductCountRequest.prototype.getPricemin = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 17, 0.0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductCountRequest.prototype.setPricemin = function(value) {
  jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * optional bool priceMinValid = 18;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.d5.db2.CMessageProductCountRequest.prototype.getPriceminvalid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 18, false));
};


/** @param {boolean} value */
proto.d5.db2.CMessageProductCountRequest.prototype.setPriceminvalid = function(value) {
  jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional double priceMax = 19;
 * @return {number}
 */
proto.d5.db2.CMessageProductCountRequest.prototype.getPricemax = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 19, 0.0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductCountRequest.prototype.setPricemax = function(value) {
  jspb.Message.setProto3FloatField(this, 19, value);
};


/**
 * optional bool priceMaxValid = 20;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.d5.db2.CMessageProductCountRequest.prototype.getPricemaxvalid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 20, false));
};


/** @param {boolean} value */
proto.d5.db2.CMessageProductCountRequest.prototype.setPricemaxvalid = function(value) {
  jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional int32 categoryId = 21;
 * @return {number}
 */
proto.d5.db2.CMessageProductCountRequest.prototype.getCategoryid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductCountRequest.prototype.setCategoryid = function(value) {
  jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional bool categoryIdValid = 22;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.d5.db2.CMessageProductCountRequest.prototype.getCategoryidvalid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 22, false));
};


/** @param {boolean} value */
proto.d5.db2.CMessageProductCountRequest.prototype.setCategoryidvalid = function(value) {
  jspb.Message.setProto3BooleanField(this, 22, value);
};


/**
 * optional int32 categoryLevel = 23;
 * @return {number}
 */
proto.d5.db2.CMessageProductCountRequest.prototype.getCategorylevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductCountRequest.prototype.setCategorylevel = function(value) {
  jspb.Message.setProto3IntField(this, 23, value);
};


/**
 * optional bool categoryLevelValid = 24;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.d5.db2.CMessageProductCountRequest.prototype.getCategorylevelvalid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 24, false));
};


/** @param {boolean} value */
proto.d5.db2.CMessageProductCountRequest.prototype.setCategorylevelvalid = function(value) {
  jspb.Message.setProto3BooleanField(this, 24, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.CMessageProductCountResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.CMessageProductCountResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.CMessageProductCountResponse.displayName = 'proto.d5.db2.CMessageProductCountResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.CMessageProductCountResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.CMessageProductCountResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.CMessageProductCountResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageProductCountResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    state: jspb.Message.getFieldWithDefault(msg, 3, 0),
    number: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.CMessageProductCountResponse}
 */
proto.d5.db2.CMessageProductCountResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.CMessageProductCountResponse;
  return proto.d5.db2.CMessageProductCountResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.CMessageProductCountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.CMessageProductCountResponse}
 */
proto.d5.db2.CMessageProductCountResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setState(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.CMessageProductCountResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.CMessageProductCountResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.CMessageProductCountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageProductCountResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getState();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getNumber();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.d5.db2.CMessageProductCountResponse.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductCountResponse.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.d5.db2.CMessageProductCountResponse.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageProductCountResponse.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 state = 3;
 * @return {number}
 */
proto.d5.db2.CMessageProductCountResponse.prototype.getState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductCountResponse.prototype.setState = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 number = 4;
 * @return {number}
 */
proto.d5.db2.CMessageProductCountResponse.prototype.getNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductCountResponse.prototype.setNumber = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.CMessageProductRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.CMessageProductRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.CMessageProductRequest.displayName = 'proto.d5.db2.CMessageProductRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.CMessageProductRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.CMessageProductRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.CMessageProductRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageProductRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    id: jspb.Message.getFieldWithDefault(msg, 3, ""),
    idvalid: jspb.Message.getFieldWithDefault(msg, 4, false),
    companyid: jspb.Message.getFieldWithDefault(msg, 5, 0),
    companyidvalid: jspb.Message.getFieldWithDefault(msg, 6, false),
    brandid: jspb.Message.getFieldWithDefault(msg, 7, 0),
    brandidvalid: jspb.Message.getFieldWithDefault(msg, 8, false),
    styleid: jspb.Message.getFieldWithDefault(msg, 9, 0),
    styleidvalid: jspb.Message.getFieldWithDefault(msg, 10, false),
    title: jspb.Message.getFieldWithDefault(msg, 11, ""),
    titlevalid: jspb.Message.getFieldWithDefault(msg, 12, false),
    mainmaterialid: jspb.Message.getFieldWithDefault(msg, 13, 0),
    mainmaterialidvalid: jspb.Message.getFieldWithDefault(msg, 14, false),
    colorid: jspb.Message.getFieldWithDefault(msg, 15, 0),
    coloridvalid: jspb.Message.getFieldWithDefault(msg, 16, false),
    pricemin: +jspb.Message.getFieldWithDefault(msg, 17, 0.0),
    priceminvalid: jspb.Message.getFieldWithDefault(msg, 18, false),
    pricemax: +jspb.Message.getFieldWithDefault(msg, 19, 0.0),
    pricemaxvalid: jspb.Message.getFieldWithDefault(msg, 20, false),
    categoryid: jspb.Message.getFieldWithDefault(msg, 21, 0),
    categoryidvalid: jspb.Message.getFieldWithDefault(msg, 22, false),
    categorylevel: jspb.Message.getFieldWithDefault(msg, 23, 0),
    categorylevelvalid: jspb.Message.getFieldWithDefault(msg, 24, false),
    titleorder: jspb.Message.getFieldWithDefault(msg, 25, 0),
    updatetimeorder: jspb.Message.getFieldWithDefault(msg, 26, 0),
    pagenum: jspb.Message.getFieldWithDefault(msg, 27, 0),
    pagesize: jspb.Message.getFieldWithDefault(msg, 28, 0),
    priceorder: jspb.Message.getFieldWithDefault(msg, 29, 0),
    isforcompany: jspb.Message.getFieldWithDefault(msg, 30, false),
    producttype: jspb.Message.getFieldWithDefault(msg, 31, 0),
    userid: jspb.Message.getFieldWithDefault(msg, 32, 0),
    useridvalid: jspb.Message.getFieldWithDefault(msg, 33, false),
    scope: jspb.Message.getFieldWithDefault(msg, 34, 0),
    scopevalid: jspb.Message.getFieldWithDefault(msg, 35, false),
    createtimeorder: jspb.Message.getFieldWithDefault(msg, 36, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.CMessageProductRequest}
 */
proto.d5.db2.CMessageProductRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.CMessageProductRequest;
  return proto.d5.db2.CMessageProductRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.CMessageProductRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.CMessageProductRequest}
 */
proto.d5.db2.CMessageProductRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIdvalid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCompanyid(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCompanyidvalid(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBrandid(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBrandidvalid(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStyleid(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStyleidvalid(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTitlevalid(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMainmaterialid(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMainmaterialidvalid(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setColorid(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setColoridvalid(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPricemin(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPriceminvalid(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPricemax(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPricemaxvalid(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCategoryid(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCategoryidvalid(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCategorylevel(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCategorylevelvalid(value);
      break;
    case 25:
      var value = /** @type {!proto.d5.db2.CMessageProductRequest.Order} */ (reader.readEnum());
      msg.setTitleorder(value);
      break;
    case 26:
      var value = /** @type {!proto.d5.db2.CMessageProductRequest.Order} */ (reader.readEnum());
      msg.setUpdatetimeorder(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagenum(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagesize(value);
      break;
    case 29:
      var value = /** @type {!proto.d5.db2.CMessageProductRequest.Order} */ (reader.readEnum());
      msg.setPriceorder(value);
      break;
    case 30:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsforcompany(value);
      break;
    case 31:
      var value = /** @type {!proto.d5.db2.CMessageProductRequest.ProductType} */ (reader.readEnum());
      msg.setProducttype(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserid(value);
      break;
    case 33:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseridvalid(value);
      break;
    case 34:
      var value = /** @type {!proto.d5.db2.CMessageProductRequest.EScope} */ (reader.readEnum());
      msg.setScope(value);
      break;
    case 35:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setScopevalid(value);
      break;
    case 36:
      var value = /** @type {!proto.d5.db2.CMessageProductRequest.Order} */ (reader.readEnum());
      msg.setCreatetimeorder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.CMessageProductRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.CMessageProductRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.CMessageProductRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageProductRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIdvalid();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getCompanyid();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getCompanyidvalid();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getBrandid();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getBrandidvalid();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getStyleid();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getStyleidvalid();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getTitlevalid();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getMainmaterialid();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getMainmaterialidvalid();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getColorid();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getColoridvalid();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getPricemin();
  if (f !== 0.0) {
    writer.writeDouble(
      17,
      f
    );
  }
  f = message.getPriceminvalid();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getPricemax();
  if (f !== 0.0) {
    writer.writeDouble(
      19,
      f
    );
  }
  f = message.getPricemaxvalid();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getCategoryid();
  if (f !== 0) {
    writer.writeInt32(
      21,
      f
    );
  }
  f = message.getCategoryidvalid();
  if (f) {
    writer.writeBool(
      22,
      f
    );
  }
  f = message.getCategorylevel();
  if (f !== 0) {
    writer.writeInt32(
      23,
      f
    );
  }
  f = message.getCategorylevelvalid();
  if (f) {
    writer.writeBool(
      24,
      f
    );
  }
  f = message.getTitleorder();
  if (f !== 0.0) {
    writer.writeEnum(
      25,
      f
    );
  }
  f = message.getUpdatetimeorder();
  if (f !== 0.0) {
    writer.writeEnum(
      26,
      f
    );
  }
  f = message.getPagenum();
  if (f !== 0) {
    writer.writeInt32(
      27,
      f
    );
  }
  f = message.getPagesize();
  if (f !== 0) {
    writer.writeInt32(
      28,
      f
    );
  }
  f = message.getPriceorder();
  if (f !== 0.0) {
    writer.writeEnum(
      29,
      f
    );
  }
  f = message.getIsforcompany();
  if (f) {
    writer.writeBool(
      30,
      f
    );
  }
  f = message.getProducttype();
  if (f !== 0.0) {
    writer.writeEnum(
      31,
      f
    );
  }
  f = message.getUserid();
  if (f !== 0) {
    writer.writeInt32(
      32,
      f
    );
  }
  f = message.getUseridvalid();
  if (f) {
    writer.writeBool(
      33,
      f
    );
  }
  f = message.getScope();
  if (f !== 0.0) {
    writer.writeEnum(
      34,
      f
    );
  }
  f = message.getScopevalid();
  if (f) {
    writer.writeBool(
      35,
      f
    );
  }
  f = message.getCreatetimeorder();
  if (f !== 0.0) {
    writer.writeEnum(
      36,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.d5.db2.CMessageProductRequest.Order = {
  NORMAL: 0,
  ASC: 1,
  DESC: 2
};

/**
 * @enum {number}
 */
proto.d5.db2.CMessageProductRequest.ProductType = {
  ALL: 0,
  FURNITURE: 1,
  MATERIAL: 2
};

/**
 * @enum {number}
 */
proto.d5.db2.CMessageProductRequest.EScope = {
  ESOPE_ALL: 0,
  ESOPE_PUBLIC: 1,
  ESOPE_COMPANY: 2
};

/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.d5.db2.CMessageProductRequest.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductRequest.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.d5.db2.CMessageProductRequest.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageProductRequest.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string id = 3;
 * @return {string}
 */
proto.d5.db2.CMessageProductRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageProductRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool idValid = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.d5.db2.CMessageProductRequest.prototype.getIdvalid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.d5.db2.CMessageProductRequest.prototype.setIdvalid = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional int32 companyId = 5;
 * @return {number}
 */
proto.d5.db2.CMessageProductRequest.prototype.getCompanyid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductRequest.prototype.setCompanyid = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool companyIdValid = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.d5.db2.CMessageProductRequest.prototype.getCompanyidvalid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.d5.db2.CMessageProductRequest.prototype.setCompanyidvalid = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional int32 brandId = 7;
 * @return {number}
 */
proto.d5.db2.CMessageProductRequest.prototype.getBrandid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductRequest.prototype.setBrandid = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional bool brandIdValid = 8;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.d5.db2.CMessageProductRequest.prototype.getBrandidvalid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));
};


/** @param {boolean} value */
proto.d5.db2.CMessageProductRequest.prototype.setBrandidvalid = function(value) {
  jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional int32 styleId = 9;
 * @return {number}
 */
proto.d5.db2.CMessageProductRequest.prototype.getStyleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductRequest.prototype.setStyleid = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional bool styleIdValid = 10;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.d5.db2.CMessageProductRequest.prototype.getStyleidvalid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 10, false));
};


/** @param {boolean} value */
proto.d5.db2.CMessageProductRequest.prototype.setStyleidvalid = function(value) {
  jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional string title = 11;
 * @return {string}
 */
proto.d5.db2.CMessageProductRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageProductRequest.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional bool titleValid = 12;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.d5.db2.CMessageProductRequest.prototype.getTitlevalid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 12, false));
};


/** @param {boolean} value */
proto.d5.db2.CMessageProductRequest.prototype.setTitlevalid = function(value) {
  jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional int32 mainMaterialId = 13;
 * @return {number}
 */
proto.d5.db2.CMessageProductRequest.prototype.getMainmaterialid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductRequest.prototype.setMainmaterialid = function(value) {
  jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional bool mainMaterialIdValid = 14;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.d5.db2.CMessageProductRequest.prototype.getMainmaterialidvalid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 14, false));
};


/** @param {boolean} value */
proto.d5.db2.CMessageProductRequest.prototype.setMainmaterialidvalid = function(value) {
  jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional int32 colorId = 15;
 * @return {number}
 */
proto.d5.db2.CMessageProductRequest.prototype.getColorid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductRequest.prototype.setColorid = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional bool colorIdValid = 16;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.d5.db2.CMessageProductRequest.prototype.getColoridvalid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 16, false));
};


/** @param {boolean} value */
proto.d5.db2.CMessageProductRequest.prototype.setColoridvalid = function(value) {
  jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional double priceMin = 17;
 * @return {number}
 */
proto.d5.db2.CMessageProductRequest.prototype.getPricemin = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 17, 0.0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductRequest.prototype.setPricemin = function(value) {
  jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * optional bool priceMinValid = 18;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.d5.db2.CMessageProductRequest.prototype.getPriceminvalid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 18, false));
};


/** @param {boolean} value */
proto.d5.db2.CMessageProductRequest.prototype.setPriceminvalid = function(value) {
  jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional double priceMax = 19;
 * @return {number}
 */
proto.d5.db2.CMessageProductRequest.prototype.getPricemax = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 19, 0.0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductRequest.prototype.setPricemax = function(value) {
  jspb.Message.setProto3FloatField(this, 19, value);
};


/**
 * optional bool priceMaxValid = 20;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.d5.db2.CMessageProductRequest.prototype.getPricemaxvalid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 20, false));
};


/** @param {boolean} value */
proto.d5.db2.CMessageProductRequest.prototype.setPricemaxvalid = function(value) {
  jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional int32 categoryId = 21;
 * @return {number}
 */
proto.d5.db2.CMessageProductRequest.prototype.getCategoryid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductRequest.prototype.setCategoryid = function(value) {
  jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional bool categoryIdValid = 22;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.d5.db2.CMessageProductRequest.prototype.getCategoryidvalid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 22, false));
};


/** @param {boolean} value */
proto.d5.db2.CMessageProductRequest.prototype.setCategoryidvalid = function(value) {
  jspb.Message.setProto3BooleanField(this, 22, value);
};


/**
 * optional int32 categoryLevel = 23;
 * @return {number}
 */
proto.d5.db2.CMessageProductRequest.prototype.getCategorylevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductRequest.prototype.setCategorylevel = function(value) {
  jspb.Message.setProto3IntField(this, 23, value);
};


/**
 * optional bool categoryLevelValid = 24;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.d5.db2.CMessageProductRequest.prototype.getCategorylevelvalid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 24, false));
};


/** @param {boolean} value */
proto.d5.db2.CMessageProductRequest.prototype.setCategorylevelvalid = function(value) {
  jspb.Message.setProto3BooleanField(this, 24, value);
};


/**
 * optional Order titleOrder = 25;
 * @return {!proto.d5.db2.CMessageProductRequest.Order}
 */
proto.d5.db2.CMessageProductRequest.prototype.getTitleorder = function() {
  return /** @type {!proto.d5.db2.CMessageProductRequest.Order} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/** @param {!proto.d5.db2.CMessageProductRequest.Order} value */
proto.d5.db2.CMessageProductRequest.prototype.setTitleorder = function(value) {
  jspb.Message.setProto3EnumField(this, 25, value);
};


/**
 * optional Order updateTimeOrder = 26;
 * @return {!proto.d5.db2.CMessageProductRequest.Order}
 */
proto.d5.db2.CMessageProductRequest.prototype.getUpdatetimeorder = function() {
  return /** @type {!proto.d5.db2.CMessageProductRequest.Order} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/** @param {!proto.d5.db2.CMessageProductRequest.Order} value */
proto.d5.db2.CMessageProductRequest.prototype.setUpdatetimeorder = function(value) {
  jspb.Message.setProto3EnumField(this, 26, value);
};


/**
 * optional int32 pageNum = 27;
 * @return {number}
 */
proto.d5.db2.CMessageProductRequest.prototype.getPagenum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductRequest.prototype.setPagenum = function(value) {
  jspb.Message.setProto3IntField(this, 27, value);
};


/**
 * optional int32 pageSize = 28;
 * @return {number}
 */
proto.d5.db2.CMessageProductRequest.prototype.getPagesize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductRequest.prototype.setPagesize = function(value) {
  jspb.Message.setProto3IntField(this, 28, value);
};


/**
 * optional Order priceOrder = 29;
 * @return {!proto.d5.db2.CMessageProductRequest.Order}
 */
proto.d5.db2.CMessageProductRequest.prototype.getPriceorder = function() {
  return /** @type {!proto.d5.db2.CMessageProductRequest.Order} */ (jspb.Message.getFieldWithDefault(this, 29, 0));
};


/** @param {!proto.d5.db2.CMessageProductRequest.Order} value */
proto.d5.db2.CMessageProductRequest.prototype.setPriceorder = function(value) {
  jspb.Message.setProto3EnumField(this, 29, value);
};


/**
 * optional bool isForCompany = 30;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.d5.db2.CMessageProductRequest.prototype.getIsforcompany = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 30, false));
};


/** @param {boolean} value */
proto.d5.db2.CMessageProductRequest.prototype.setIsforcompany = function(value) {
  jspb.Message.setProto3BooleanField(this, 30, value);
};


/**
 * optional ProductType productType = 31;
 * @return {!proto.d5.db2.CMessageProductRequest.ProductType}
 */
proto.d5.db2.CMessageProductRequest.prototype.getProducttype = function() {
  return /** @type {!proto.d5.db2.CMessageProductRequest.ProductType} */ (jspb.Message.getFieldWithDefault(this, 31, 0));
};


/** @param {!proto.d5.db2.CMessageProductRequest.ProductType} value */
proto.d5.db2.CMessageProductRequest.prototype.setProducttype = function(value) {
  jspb.Message.setProto3EnumField(this, 31, value);
};


/**
 * optional int32 userId = 32;
 * @return {number}
 */
proto.d5.db2.CMessageProductRequest.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductRequest.prototype.setUserid = function(value) {
  jspb.Message.setProto3IntField(this, 32, value);
};


/**
 * optional bool userIdValid = 33;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.d5.db2.CMessageProductRequest.prototype.getUseridvalid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 33, false));
};


/** @param {boolean} value */
proto.d5.db2.CMessageProductRequest.prototype.setUseridvalid = function(value) {
  jspb.Message.setProto3BooleanField(this, 33, value);
};


/**
 * optional EScope scope = 34;
 * @return {!proto.d5.db2.CMessageProductRequest.EScope}
 */
proto.d5.db2.CMessageProductRequest.prototype.getScope = function() {
  return /** @type {!proto.d5.db2.CMessageProductRequest.EScope} */ (jspb.Message.getFieldWithDefault(this, 34, 0));
};


/** @param {!proto.d5.db2.CMessageProductRequest.EScope} value */
proto.d5.db2.CMessageProductRequest.prototype.setScope = function(value) {
  jspb.Message.setProto3EnumField(this, 34, value);
};


/**
 * optional bool scopeValid = 35;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.d5.db2.CMessageProductRequest.prototype.getScopevalid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 35, false));
};


/** @param {boolean} value */
proto.d5.db2.CMessageProductRequest.prototype.setScopevalid = function(value) {
  jspb.Message.setProto3BooleanField(this, 35, value);
};


/**
 * optional Order createTimeOrder = 36;
 * @return {!proto.d5.db2.CMessageProductRequest.Order}
 */
proto.d5.db2.CMessageProductRequest.prototype.getCreatetimeorder = function() {
  return /** @type {!proto.d5.db2.CMessageProductRequest.Order} */ (jspb.Message.getFieldWithDefault(this, 36, 0));
};


/** @param {!proto.d5.db2.CMessageProductRequest.Order} value */
proto.d5.db2.CMessageProductRequest.prototype.setCreatetimeorder = function(value) {
  jspb.Message.setProto3EnumField(this, 36, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.CMessageProductResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.d5.db2.CMessageProductResponse.repeatedFields_, null);
};
goog.inherits(proto.d5.db2.CMessageProductResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.CMessageProductResponse.displayName = 'proto.d5.db2.CMessageProductResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.d5.db2.CMessageProductResponse.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.CMessageProductResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.CMessageProductResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.CMessageProductResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageProductResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    state: jspb.Message.getFieldWithDefault(msg, 3, 0),
    listList: jspb.Message.toObjectList(msg.getListList(),
    db2_pb.product.toObject, includeInstance),
    pagenum: jspb.Message.getFieldWithDefault(msg, 5, 0),
    pagetotal: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.CMessageProductResponse}
 */
proto.d5.db2.CMessageProductResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.CMessageProductResponse;
  return proto.d5.db2.CMessageProductResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.CMessageProductResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.CMessageProductResponse}
 */
proto.d5.db2.CMessageProductResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setState(value);
      break;
    case 4:
      var value = new db2_pb.product;
      reader.readMessage(value,db2_pb.product.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagenum(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagetotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.CMessageProductResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.CMessageProductResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.CMessageProductResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageProductResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getState();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      db2_pb.product.serializeBinaryToWriter
    );
  }
  f = message.getPagenum();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getPagetotal();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.d5.db2.CMessageProductResponse.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductResponse.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.d5.db2.CMessageProductResponse.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageProductResponse.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 state = 3;
 * @return {number}
 */
proto.d5.db2.CMessageProductResponse.prototype.getState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductResponse.prototype.setState = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated product list = 4;
 * @return {!Array<!proto.d5.db2.product>}
 */
proto.d5.db2.CMessageProductResponse.prototype.getListList = function() {
  return /** @type{!Array<!proto.d5.db2.product>} */ (
    jspb.Message.getRepeatedWrapperField(this, db2_pb.product, 4));
};


/** @param {!Array<!proto.d5.db2.product>} value */
proto.d5.db2.CMessageProductResponse.prototype.setListList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.d5.db2.product=} opt_value
 * @param {number=} opt_index
 * @return {!proto.d5.db2.product}
 */
proto.d5.db2.CMessageProductResponse.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.d5.db2.product, opt_index);
};


proto.d5.db2.CMessageProductResponse.prototype.clearListList = function() {
  this.setListList([]);
};


/**
 * optional int32 pageNum = 5;
 * @return {number}
 */
proto.d5.db2.CMessageProductResponse.prototype.getPagenum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductResponse.prototype.setPagenum = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 pageTotal = 6;
 * @return {number}
 */
proto.d5.db2.CMessageProductResponse.prototype.getPagetotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductResponse.prototype.setPagetotal = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.CProductDetailUnit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.d5.db2.CProductDetailUnit.repeatedFields_, null);
};
goog.inherits(proto.d5.db2.CProductDetailUnit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.CProductDetailUnit.displayName = 'proto.d5.db2.CProductDetailUnit';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.d5.db2.CProductDetailUnit.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.CProductDetailUnit.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.CProductDetailUnit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.CProductDetailUnit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CProductDetailUnit.toObject = function(includeInstance, msg) {
  var f, obj = {
    publicdata: (f = msg.getPublicdata()) && db2_pb.product_detail_virtual.toObject(includeInstance, f),
    imagedataList: jspb.Message.toObjectList(msg.getImagedataList(),
    db2_pb.product_image.toObject, includeInstance),
    furniturecoloridlistList: jspb.Message.getRepeatedField(msg, 3),
    brandname: jspb.Message.getFieldWithDefault(msg, 4, ""),
    filelist: (f = msg.getFilelist()) && message_common_pb.CMessageDependentPakList.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.CProductDetailUnit}
 */
proto.d5.db2.CProductDetailUnit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.CProductDetailUnit;
  return proto.d5.db2.CProductDetailUnit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.CProductDetailUnit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.CProductDetailUnit}
 */
proto.d5.db2.CProductDetailUnit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new db2_pb.product_detail_virtual;
      reader.readMessage(value,db2_pb.product_detail_virtual.deserializeBinaryFromReader);
      msg.setPublicdata(value);
      break;
    case 2:
      var value = new db2_pb.product_image;
      reader.readMessage(value,db2_pb.product_image.deserializeBinaryFromReader);
      msg.addImagedata(value);
      break;
    case 3:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setFurniturecoloridlistList(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrandname(value);
      break;
    case 5:
      var value = new message_common_pb.CMessageDependentPakList;
      reader.readMessage(value,message_common_pb.CMessageDependentPakList.deserializeBinaryFromReader);
      msg.setFilelist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.CProductDetailUnit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.CProductDetailUnit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.CProductDetailUnit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CProductDetailUnit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPublicdata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      db2_pb.product_detail_virtual.serializeBinaryToWriter
    );
  }
  f = message.getImagedataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      db2_pb.product_image.serializeBinaryToWriter
    );
  }
  f = message.getFurniturecoloridlistList();
  if (f.length > 0) {
    writer.writePackedInt32(
      3,
      f
    );
  }
  f = message.getBrandname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFilelist();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      message_common_pb.CMessageDependentPakList.serializeBinaryToWriter
    );
  }
};


/**
 * optional product_detail_virtual publicData = 1;
 * @return {?proto.d5.db2.product_detail_virtual}
 */
proto.d5.db2.CProductDetailUnit.prototype.getPublicdata = function() {
  return /** @type{?proto.d5.db2.product_detail_virtual} */ (
    jspb.Message.getWrapperField(this, db2_pb.product_detail_virtual, 1));
};


/** @param {?proto.d5.db2.product_detail_virtual|undefined} value */
proto.d5.db2.CProductDetailUnit.prototype.setPublicdata = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.d5.db2.CProductDetailUnit.prototype.clearPublicdata = function() {
  this.setPublicdata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.db2.CProductDetailUnit.prototype.hasPublicdata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated product_image imageData = 2;
 * @return {!Array<!proto.d5.db2.product_image>}
 */
proto.d5.db2.CProductDetailUnit.prototype.getImagedataList = function() {
  return /** @type{!Array<!proto.d5.db2.product_image>} */ (
    jspb.Message.getRepeatedWrapperField(this, db2_pb.product_image, 2));
};


/** @param {!Array<!proto.d5.db2.product_image>} value */
proto.d5.db2.CProductDetailUnit.prototype.setImagedataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.d5.db2.product_image=} opt_value
 * @param {number=} opt_index
 * @return {!proto.d5.db2.product_image}
 */
proto.d5.db2.CProductDetailUnit.prototype.addImagedata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.d5.db2.product_image, opt_index);
};


proto.d5.db2.CProductDetailUnit.prototype.clearImagedataList = function() {
  this.setImagedataList([]);
};


/**
 * repeated int32 furnitureColorIdList = 3;
 * @return {!Array<number>}
 */
proto.d5.db2.CProductDetailUnit.prototype.getFurniturecoloridlistList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<number>} value */
proto.d5.db2.CProductDetailUnit.prototype.setFurniturecoloridlistList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.d5.db2.CProductDetailUnit.prototype.addFurniturecoloridlist = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.d5.db2.CProductDetailUnit.prototype.clearFurniturecoloridlistList = function() {
  this.setFurniturecoloridlistList([]);
};


/**
 * optional string brandName = 4;
 * @return {string}
 */
proto.d5.db2.CProductDetailUnit.prototype.getBrandname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.d5.db2.CProductDetailUnit.prototype.setBrandname = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional d5.CMessageDependentPakList fileList = 5;
 * @return {?proto.d5.CMessageDependentPakList}
 */
proto.d5.db2.CProductDetailUnit.prototype.getFilelist = function() {
  return /** @type{?proto.d5.CMessageDependentPakList} */ (
    jspb.Message.getWrapperField(this, message_common_pb.CMessageDependentPakList, 5));
};


/** @param {?proto.d5.CMessageDependentPakList|undefined} value */
proto.d5.db2.CProductDetailUnit.prototype.setFilelist = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.d5.db2.CProductDetailUnit.prototype.clearFilelist = function() {
  this.setFilelist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.db2.CProductDetailUnit.prototype.hasFilelist = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.CMessageProductDetailResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.d5.db2.CMessageProductDetailResponse.repeatedFields_, null);
};
goog.inherits(proto.d5.db2.CMessageProductDetailResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.CMessageProductDetailResponse.displayName = 'proto.d5.db2.CMessageProductDetailResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.d5.db2.CMessageProductDetailResponse.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.CMessageProductDetailResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.CMessageProductDetailResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.CMessageProductDetailResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageProductDetailResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    state: jspb.Message.getFieldWithDefault(msg, 3, 0),
    listList: jspb.Message.toObjectList(msg.getListList(),
    proto.d5.db2.CProductDetailUnit.toObject, includeInstance),
    pagenum: jspb.Message.getFieldWithDefault(msg, 5, 0),
    pagetotal: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.CMessageProductDetailResponse}
 */
proto.d5.db2.CMessageProductDetailResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.CMessageProductDetailResponse;
  return proto.d5.db2.CMessageProductDetailResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.CMessageProductDetailResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.CMessageProductDetailResponse}
 */
proto.d5.db2.CMessageProductDetailResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setState(value);
      break;
    case 4:
      var value = new proto.d5.db2.CProductDetailUnit;
      reader.readMessage(value,proto.d5.db2.CProductDetailUnit.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagenum(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagetotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.CMessageProductDetailResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.CMessageProductDetailResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.CMessageProductDetailResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageProductDetailResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getState();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.d5.db2.CProductDetailUnit.serializeBinaryToWriter
    );
  }
  f = message.getPagenum();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getPagetotal();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.d5.db2.CMessageProductDetailResponse.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductDetailResponse.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.d5.db2.CMessageProductDetailResponse.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageProductDetailResponse.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 state = 3;
 * @return {number}
 */
proto.d5.db2.CMessageProductDetailResponse.prototype.getState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductDetailResponse.prototype.setState = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated CProductDetailUnit list = 4;
 * @return {!Array<!proto.d5.db2.CProductDetailUnit>}
 */
proto.d5.db2.CMessageProductDetailResponse.prototype.getListList = function() {
  return /** @type{!Array<!proto.d5.db2.CProductDetailUnit>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.d5.db2.CProductDetailUnit, 4));
};


/** @param {!Array<!proto.d5.db2.CProductDetailUnit>} value */
proto.d5.db2.CMessageProductDetailResponse.prototype.setListList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.d5.db2.CProductDetailUnit=} opt_value
 * @param {number=} opt_index
 * @return {!proto.d5.db2.CProductDetailUnit}
 */
proto.d5.db2.CMessageProductDetailResponse.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.d5.db2.CProductDetailUnit, opt_index);
};


proto.d5.db2.CMessageProductDetailResponse.prototype.clearListList = function() {
  this.setListList([]);
};


/**
 * optional int32 pageNum = 5;
 * @return {number}
 */
proto.d5.db2.CMessageProductDetailResponse.prototype.getPagenum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductDetailResponse.prototype.setPagenum = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 pageTotal = 6;
 * @return {number}
 */
proto.d5.db2.CMessageProductDetailResponse.prototype.getPagetotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductDetailResponse.prototype.setPagetotal = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.CMessageCreateProductRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.d5.db2.CMessageCreateProductRequest.repeatedFields_, null);
};
goog.inherits(proto.d5.db2.CMessageCreateProductRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.CMessageCreateProductRequest.displayName = 'proto.d5.db2.CMessageCreateProductRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.d5.db2.CMessageCreateProductRequest.repeatedFields_ = [6,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.CMessageCreateProductRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.CMessageCreateProductRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.CMessageCreateProductRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageCreateProductRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    data: (f = msg.getData()) && db2_pb.product.toObject(includeInstance, f),
    materialdata: (f = msg.getMaterialdata()) && db2_pb.asset_building_material.toObject(includeInstance, f),
    furnituredata: (f = msg.getFurnituredata()) && db2_pb.asset_furniture.toObject(includeInstance, f),
    furniturecolormapdataList: jspb.Message.toObjectList(msg.getFurniturecolormapdataList(),
    db2_pb.furniture_color_map.toObject, includeInstance),
    productbrandtemp: jspb.Message.getFieldWithDefault(msg, 7, ""),
    productbrandtempvalid: jspb.Message.getFieldWithDefault(msg, 8, false),
    imagelistList: jspb.Message.toObjectList(msg.getImagelistList(),
    db2_pb.product_image.toObject, includeInstance),
    filelist: (f = msg.getFilelist()) && message_common_pb.CMessageDependentPakList.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.CMessageCreateProductRequest}
 */
proto.d5.db2.CMessageCreateProductRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.CMessageCreateProductRequest;
  return proto.d5.db2.CMessageCreateProductRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.CMessageCreateProductRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.CMessageCreateProductRequest}
 */
proto.d5.db2.CMessageCreateProductRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = new db2_pb.product;
      reader.readMessage(value,db2_pb.product.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 4:
      var value = new db2_pb.asset_building_material;
      reader.readMessage(value,db2_pb.asset_building_material.deserializeBinaryFromReader);
      msg.setMaterialdata(value);
      break;
    case 5:
      var value = new db2_pb.asset_furniture;
      reader.readMessage(value,db2_pb.asset_furniture.deserializeBinaryFromReader);
      msg.setFurnituredata(value);
      break;
    case 6:
      var value = new db2_pb.furniture_color_map;
      reader.readMessage(value,db2_pb.furniture_color_map.deserializeBinaryFromReader);
      msg.addFurniturecolormapdata(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductbrandtemp(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setProductbrandtempvalid(value);
      break;
    case 9:
      var value = new db2_pb.product_image;
      reader.readMessage(value,db2_pb.product_image.deserializeBinaryFromReader);
      msg.addImagelist(value);
      break;
    case 10:
      var value = new message_common_pb.CMessageDependentPakList;
      reader.readMessage(value,message_common_pb.CMessageDependentPakList.deserializeBinaryFromReader);
      msg.setFilelist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.CMessageCreateProductRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.CMessageCreateProductRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.CMessageCreateProductRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageCreateProductRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      db2_pb.product.serializeBinaryToWriter
    );
  }
  f = message.getMaterialdata();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      db2_pb.asset_building_material.serializeBinaryToWriter
    );
  }
  f = message.getFurnituredata();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      db2_pb.asset_furniture.serializeBinaryToWriter
    );
  }
  f = message.getFurniturecolormapdataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      db2_pb.furniture_color_map.serializeBinaryToWriter
    );
  }
  f = message.getProductbrandtemp();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getProductbrandtempvalid();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getImagelistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      db2_pb.product_image.serializeBinaryToWriter
    );
  }
  f = message.getFilelist();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      message_common_pb.CMessageDependentPakList.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.d5.db2.CMessageCreateProductRequest.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageCreateProductRequest.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.d5.db2.CMessageCreateProductRequest.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageCreateProductRequest.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional product data = 3;
 * @return {?proto.d5.db2.product}
 */
proto.d5.db2.CMessageCreateProductRequest.prototype.getData = function() {
  return /** @type{?proto.d5.db2.product} */ (
    jspb.Message.getWrapperField(this, db2_pb.product, 3));
};


/** @param {?proto.d5.db2.product|undefined} value */
proto.d5.db2.CMessageCreateProductRequest.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.d5.db2.CMessageCreateProductRequest.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.db2.CMessageCreateProductRequest.prototype.hasData = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional asset_building_material materialData = 4;
 * @return {?proto.d5.db2.asset_building_material}
 */
proto.d5.db2.CMessageCreateProductRequest.prototype.getMaterialdata = function() {
  return /** @type{?proto.d5.db2.asset_building_material} */ (
    jspb.Message.getWrapperField(this, db2_pb.asset_building_material, 4));
};


/** @param {?proto.d5.db2.asset_building_material|undefined} value */
proto.d5.db2.CMessageCreateProductRequest.prototype.setMaterialdata = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.d5.db2.CMessageCreateProductRequest.prototype.clearMaterialdata = function() {
  this.setMaterialdata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.db2.CMessageCreateProductRequest.prototype.hasMaterialdata = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional asset_furniture furnitureData = 5;
 * @return {?proto.d5.db2.asset_furniture}
 */
proto.d5.db2.CMessageCreateProductRequest.prototype.getFurnituredata = function() {
  return /** @type{?proto.d5.db2.asset_furniture} */ (
    jspb.Message.getWrapperField(this, db2_pb.asset_furniture, 5));
};


/** @param {?proto.d5.db2.asset_furniture|undefined} value */
proto.d5.db2.CMessageCreateProductRequest.prototype.setFurnituredata = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.d5.db2.CMessageCreateProductRequest.prototype.clearFurnituredata = function() {
  this.setFurnituredata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.db2.CMessageCreateProductRequest.prototype.hasFurnituredata = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated furniture_color_map furnitureColorMapData = 6;
 * @return {!Array<!proto.d5.db2.furniture_color_map>}
 */
proto.d5.db2.CMessageCreateProductRequest.prototype.getFurniturecolormapdataList = function() {
  return /** @type{!Array<!proto.d5.db2.furniture_color_map>} */ (
    jspb.Message.getRepeatedWrapperField(this, db2_pb.furniture_color_map, 6));
};


/** @param {!Array<!proto.d5.db2.furniture_color_map>} value */
proto.d5.db2.CMessageCreateProductRequest.prototype.setFurniturecolormapdataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.d5.db2.furniture_color_map=} opt_value
 * @param {number=} opt_index
 * @return {!proto.d5.db2.furniture_color_map}
 */
proto.d5.db2.CMessageCreateProductRequest.prototype.addFurniturecolormapdata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.d5.db2.furniture_color_map, opt_index);
};


proto.d5.db2.CMessageCreateProductRequest.prototype.clearFurniturecolormapdataList = function() {
  this.setFurniturecolormapdataList([]);
};


/**
 * optional string productBrandTemp = 7;
 * @return {string}
 */
proto.d5.db2.CMessageCreateProductRequest.prototype.getProductbrandtemp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageCreateProductRequest.prototype.setProductbrandtemp = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool productBrandTempValid = 8;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.d5.db2.CMessageCreateProductRequest.prototype.getProductbrandtempvalid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));
};


/** @param {boolean} value */
proto.d5.db2.CMessageCreateProductRequest.prototype.setProductbrandtempvalid = function(value) {
  jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * repeated product_image imageList = 9;
 * @return {!Array<!proto.d5.db2.product_image>}
 */
proto.d5.db2.CMessageCreateProductRequest.prototype.getImagelistList = function() {
  return /** @type{!Array<!proto.d5.db2.product_image>} */ (
    jspb.Message.getRepeatedWrapperField(this, db2_pb.product_image, 9));
};


/** @param {!Array<!proto.d5.db2.product_image>} value */
proto.d5.db2.CMessageCreateProductRequest.prototype.setImagelistList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.d5.db2.product_image=} opt_value
 * @param {number=} opt_index
 * @return {!proto.d5.db2.product_image}
 */
proto.d5.db2.CMessageCreateProductRequest.prototype.addImagelist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.d5.db2.product_image, opt_index);
};


proto.d5.db2.CMessageCreateProductRequest.prototype.clearImagelistList = function() {
  this.setImagelistList([]);
};


/**
 * optional d5.CMessageDependentPakList fileList = 10;
 * @return {?proto.d5.CMessageDependentPakList}
 */
proto.d5.db2.CMessageCreateProductRequest.prototype.getFilelist = function() {
  return /** @type{?proto.d5.CMessageDependentPakList} */ (
    jspb.Message.getWrapperField(this, message_common_pb.CMessageDependentPakList, 10));
};


/** @param {?proto.d5.CMessageDependentPakList|undefined} value */
proto.d5.db2.CMessageCreateProductRequest.prototype.setFilelist = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.d5.db2.CMessageCreateProductRequest.prototype.clearFilelist = function() {
  this.setFilelist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.db2.CMessageCreateProductRequest.prototype.hasFilelist = function() {
  return jspb.Message.getField(this, 10) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.CMessageCreateProductResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.CMessageCreateProductResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.CMessageCreateProductResponse.displayName = 'proto.d5.db2.CMessageCreateProductResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.CMessageCreateProductResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.CMessageCreateProductResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.CMessageCreateProductResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageCreateProductResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    state: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.CMessageCreateProductResponse}
 */
proto.d5.db2.CMessageCreateProductResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.CMessageCreateProductResponse;
  return proto.d5.db2.CMessageCreateProductResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.CMessageCreateProductResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.CMessageCreateProductResponse}
 */
proto.d5.db2.CMessageCreateProductResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.CMessageCreateProductResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.CMessageCreateProductResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.CMessageCreateProductResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageCreateProductResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getState();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.d5.db2.CMessageCreateProductResponse.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageCreateProductResponse.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.d5.db2.CMessageCreateProductResponse.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageCreateProductResponse.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 state = 3;
 * @return {number}
 */
proto.d5.db2.CMessageCreateProductResponse.prototype.getState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageCreateProductResponse.prototype.setState = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.CMessageAddProductRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.CMessageAddProductRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.CMessageAddProductRequest.displayName = 'proto.d5.db2.CMessageAddProductRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.CMessageAddProductRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.CMessageAddProductRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.CMessageAddProductRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageAddProductRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    data: (f = msg.getData()) && db2_pb.product.toObject(includeInstance, f),
    filelist: (f = msg.getFilelist()) && message_common_pb.CMessageDependentPakList.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.CMessageAddProductRequest}
 */
proto.d5.db2.CMessageAddProductRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.CMessageAddProductRequest;
  return proto.d5.db2.CMessageAddProductRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.CMessageAddProductRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.CMessageAddProductRequest}
 */
proto.d5.db2.CMessageAddProductRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = new db2_pb.product;
      reader.readMessage(value,db2_pb.product.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 4:
      var value = new message_common_pb.CMessageDependentPakList;
      reader.readMessage(value,message_common_pb.CMessageDependentPakList.deserializeBinaryFromReader);
      msg.setFilelist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.CMessageAddProductRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.CMessageAddProductRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.CMessageAddProductRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageAddProductRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      db2_pb.product.serializeBinaryToWriter
    );
  }
  f = message.getFilelist();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      message_common_pb.CMessageDependentPakList.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.d5.db2.CMessageAddProductRequest.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageAddProductRequest.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.d5.db2.CMessageAddProductRequest.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageAddProductRequest.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional product data = 3;
 * @return {?proto.d5.db2.product}
 */
proto.d5.db2.CMessageAddProductRequest.prototype.getData = function() {
  return /** @type{?proto.d5.db2.product} */ (
    jspb.Message.getWrapperField(this, db2_pb.product, 3));
};


/** @param {?proto.d5.db2.product|undefined} value */
proto.d5.db2.CMessageAddProductRequest.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.d5.db2.CMessageAddProductRequest.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.db2.CMessageAddProductRequest.prototype.hasData = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional d5.CMessageDependentPakList fileList = 4;
 * @return {?proto.d5.CMessageDependentPakList}
 */
proto.d5.db2.CMessageAddProductRequest.prototype.getFilelist = function() {
  return /** @type{?proto.d5.CMessageDependentPakList} */ (
    jspb.Message.getWrapperField(this, message_common_pb.CMessageDependentPakList, 4));
};


/** @param {?proto.d5.CMessageDependentPakList|undefined} value */
proto.d5.db2.CMessageAddProductRequest.prototype.setFilelist = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.d5.db2.CMessageAddProductRequest.prototype.clearFilelist = function() {
  this.setFilelist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.db2.CMessageAddProductRequest.prototype.hasFilelist = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.CMessageAddProductResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.CMessageAddProductResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.CMessageAddProductResponse.displayName = 'proto.d5.db2.CMessageAddProductResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.CMessageAddProductResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.CMessageAddProductResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.CMessageAddProductResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageAddProductResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    state: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.CMessageAddProductResponse}
 */
proto.d5.db2.CMessageAddProductResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.CMessageAddProductResponse;
  return proto.d5.db2.CMessageAddProductResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.CMessageAddProductResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.CMessageAddProductResponse}
 */
proto.d5.db2.CMessageAddProductResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.CMessageAddProductResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.CMessageAddProductResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.CMessageAddProductResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageAddProductResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getState();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.d5.db2.CMessageAddProductResponse.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageAddProductResponse.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.d5.db2.CMessageAddProductResponse.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageAddProductResponse.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 state = 3;
 * @return {number}
 */
proto.d5.db2.CMessageAddProductResponse.prototype.getState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageAddProductResponse.prototype.setState = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.CMessageDelProductRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.CMessageDelProductRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.CMessageDelProductRequest.displayName = 'proto.d5.db2.CMessageDelProductRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.CMessageDelProductRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.CMessageDelProductRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.CMessageDelProductRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageDelProductRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    id: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.CMessageDelProductRequest}
 */
proto.d5.db2.CMessageDelProductRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.CMessageDelProductRequest;
  return proto.d5.db2.CMessageDelProductRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.CMessageDelProductRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.CMessageDelProductRequest}
 */
proto.d5.db2.CMessageDelProductRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.CMessageDelProductRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.CMessageDelProductRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.CMessageDelProductRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageDelProductRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.d5.db2.CMessageDelProductRequest.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageDelProductRequest.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.d5.db2.CMessageDelProductRequest.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageDelProductRequest.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string id = 3;
 * @return {string}
 */
proto.d5.db2.CMessageDelProductRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageDelProductRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.CMessageDelProductResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.CMessageDelProductResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.CMessageDelProductResponse.displayName = 'proto.d5.db2.CMessageDelProductResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.CMessageDelProductResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.CMessageDelProductResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.CMessageDelProductResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageDelProductResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    state: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.CMessageDelProductResponse}
 */
proto.d5.db2.CMessageDelProductResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.CMessageDelProductResponse;
  return proto.d5.db2.CMessageDelProductResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.CMessageDelProductResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.CMessageDelProductResponse}
 */
proto.d5.db2.CMessageDelProductResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.CMessageDelProductResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.CMessageDelProductResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.CMessageDelProductResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageDelProductResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getState();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.d5.db2.CMessageDelProductResponse.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageDelProductResponse.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.d5.db2.CMessageDelProductResponse.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageDelProductResponse.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 state = 3;
 * @return {number}
 */
proto.d5.db2.CMessageDelProductResponse.prototype.getState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageDelProductResponse.prototype.setState = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.CMessageProductByIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.d5.db2.CMessageProductByIdRequest.repeatedFields_, null);
};
goog.inherits(proto.d5.db2.CMessageProductByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.CMessageProductByIdRequest.displayName = 'proto.d5.db2.CMessageProductByIdRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.d5.db2.CMessageProductByIdRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.CMessageProductByIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.CMessageProductByIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.CMessageProductByIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageProductByIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    idList: jspb.Message.getRepeatedField(msg, 3),
    isforcompany: jspb.Message.getFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.CMessageProductByIdRequest}
 */
proto.d5.db2.CMessageProductByIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.CMessageProductByIdRequest;
  return proto.d5.db2.CMessageProductByIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.CMessageProductByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.CMessageProductByIdRequest}
 */
proto.d5.db2.CMessageProductByIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addId(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsforcompany(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.CMessageProductByIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.CMessageProductByIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.CMessageProductByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageProductByIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIdList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getIsforcompany();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.d5.db2.CMessageProductByIdRequest.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductByIdRequest.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.d5.db2.CMessageProductByIdRequest.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageProductByIdRequest.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string id = 3;
 * @return {!Array<string>}
 */
proto.d5.db2.CMessageProductByIdRequest.prototype.getIdList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.d5.db2.CMessageProductByIdRequest.prototype.setIdList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.d5.db2.CMessageProductByIdRequest.prototype.addId = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.d5.db2.CMessageProductByIdRequest.prototype.clearIdList = function() {
  this.setIdList([]);
};


/**
 * optional bool isForCompany = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.d5.db2.CMessageProductByIdRequest.prototype.getIsforcompany = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.d5.db2.CMessageProductByIdRequest.prototype.setIsforcompany = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.CMessageProductByIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.d5.db2.CMessageProductByIdResponse.repeatedFields_, null);
};
goog.inherits(proto.d5.db2.CMessageProductByIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.CMessageProductByIdResponse.displayName = 'proto.d5.db2.CMessageProductByIdResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.d5.db2.CMessageProductByIdResponse.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.CMessageProductByIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.CMessageProductByIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.CMessageProductByIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageProductByIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    state: jspb.Message.getFieldWithDefault(msg, 3, 0),
    listList: jspb.Message.toObjectList(msg.getListList(),
    db2_pb.product.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.CMessageProductByIdResponse}
 */
proto.d5.db2.CMessageProductByIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.CMessageProductByIdResponse;
  return proto.d5.db2.CMessageProductByIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.CMessageProductByIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.CMessageProductByIdResponse}
 */
proto.d5.db2.CMessageProductByIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setState(value);
      break;
    case 4:
      var value = new db2_pb.product;
      reader.readMessage(value,db2_pb.product.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.CMessageProductByIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.CMessageProductByIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.CMessageProductByIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageProductByIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getState();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      db2_pb.product.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.d5.db2.CMessageProductByIdResponse.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductByIdResponse.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.d5.db2.CMessageProductByIdResponse.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageProductByIdResponse.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 state = 3;
 * @return {number}
 */
proto.d5.db2.CMessageProductByIdResponse.prototype.getState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductByIdResponse.prototype.setState = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated product list = 4;
 * @return {!Array<!proto.d5.db2.product>}
 */
proto.d5.db2.CMessageProductByIdResponse.prototype.getListList = function() {
  return /** @type{!Array<!proto.d5.db2.product>} */ (
    jspb.Message.getRepeatedWrapperField(this, db2_pb.product, 4));
};


/** @param {!Array<!proto.d5.db2.product>} value */
proto.d5.db2.CMessageProductByIdResponse.prototype.setListList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.d5.db2.product=} opt_value
 * @param {number=} opt_index
 * @return {!proto.d5.db2.product}
 */
proto.d5.db2.CMessageProductByIdResponse.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.d5.db2.product, opt_index);
};


proto.d5.db2.CMessageProductByIdResponse.prototype.clearListList = function() {
  this.setListList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.CMessageAddBuildingMaterialRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.CMessageAddBuildingMaterialRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.CMessageAddBuildingMaterialRequest.displayName = 'proto.d5.db2.CMessageAddBuildingMaterialRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.CMessageAddBuildingMaterialRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.CMessageAddBuildingMaterialRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.CMessageAddBuildingMaterialRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageAddBuildingMaterialRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    data: (f = msg.getData()) && db2_pb.asset_building_material.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.CMessageAddBuildingMaterialRequest}
 */
proto.d5.db2.CMessageAddBuildingMaterialRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.CMessageAddBuildingMaterialRequest;
  return proto.d5.db2.CMessageAddBuildingMaterialRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.CMessageAddBuildingMaterialRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.CMessageAddBuildingMaterialRequest}
 */
proto.d5.db2.CMessageAddBuildingMaterialRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = new db2_pb.asset_building_material;
      reader.readMessage(value,db2_pb.asset_building_material.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.CMessageAddBuildingMaterialRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.CMessageAddBuildingMaterialRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.CMessageAddBuildingMaterialRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageAddBuildingMaterialRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      db2_pb.asset_building_material.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.d5.db2.CMessageAddBuildingMaterialRequest.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageAddBuildingMaterialRequest.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.d5.db2.CMessageAddBuildingMaterialRequest.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageAddBuildingMaterialRequest.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional asset_building_material data = 3;
 * @return {?proto.d5.db2.asset_building_material}
 */
proto.d5.db2.CMessageAddBuildingMaterialRequest.prototype.getData = function() {
  return /** @type{?proto.d5.db2.asset_building_material} */ (
    jspb.Message.getWrapperField(this, db2_pb.asset_building_material, 3));
};


/** @param {?proto.d5.db2.asset_building_material|undefined} value */
proto.d5.db2.CMessageAddBuildingMaterialRequest.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.d5.db2.CMessageAddBuildingMaterialRequest.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.db2.CMessageAddBuildingMaterialRequest.prototype.hasData = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.CMessageAddBuildingMaterialResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.CMessageAddBuildingMaterialResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.CMessageAddBuildingMaterialResponse.displayName = 'proto.d5.db2.CMessageAddBuildingMaterialResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.CMessageAddBuildingMaterialResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.CMessageAddBuildingMaterialResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.CMessageAddBuildingMaterialResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageAddBuildingMaterialResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    state: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.CMessageAddBuildingMaterialResponse}
 */
proto.d5.db2.CMessageAddBuildingMaterialResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.CMessageAddBuildingMaterialResponse;
  return proto.d5.db2.CMessageAddBuildingMaterialResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.CMessageAddBuildingMaterialResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.CMessageAddBuildingMaterialResponse}
 */
proto.d5.db2.CMessageAddBuildingMaterialResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.CMessageAddBuildingMaterialResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.CMessageAddBuildingMaterialResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.CMessageAddBuildingMaterialResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageAddBuildingMaterialResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getState();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.d5.db2.CMessageAddBuildingMaterialResponse.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageAddBuildingMaterialResponse.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.d5.db2.CMessageAddBuildingMaterialResponse.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageAddBuildingMaterialResponse.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 state = 3;
 * @return {number}
 */
proto.d5.db2.CMessageAddBuildingMaterialResponse.prototype.getState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageAddBuildingMaterialResponse.prototype.setState = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.CMessageAddFurnitureRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.CMessageAddFurnitureRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.CMessageAddFurnitureRequest.displayName = 'proto.d5.db2.CMessageAddFurnitureRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.CMessageAddFurnitureRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.CMessageAddFurnitureRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.CMessageAddFurnitureRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageAddFurnitureRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    data: (f = msg.getData()) && db2_pb.asset_furniture.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.CMessageAddFurnitureRequest}
 */
proto.d5.db2.CMessageAddFurnitureRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.CMessageAddFurnitureRequest;
  return proto.d5.db2.CMessageAddFurnitureRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.CMessageAddFurnitureRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.CMessageAddFurnitureRequest}
 */
proto.d5.db2.CMessageAddFurnitureRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = new db2_pb.asset_furniture;
      reader.readMessage(value,db2_pb.asset_furniture.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.CMessageAddFurnitureRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.CMessageAddFurnitureRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.CMessageAddFurnitureRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageAddFurnitureRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      db2_pb.asset_furniture.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.d5.db2.CMessageAddFurnitureRequest.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageAddFurnitureRequest.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.d5.db2.CMessageAddFurnitureRequest.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageAddFurnitureRequest.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional asset_furniture data = 3;
 * @return {?proto.d5.db2.asset_furniture}
 */
proto.d5.db2.CMessageAddFurnitureRequest.prototype.getData = function() {
  return /** @type{?proto.d5.db2.asset_furniture} */ (
    jspb.Message.getWrapperField(this, db2_pb.asset_furniture, 3));
};


/** @param {?proto.d5.db2.asset_furniture|undefined} value */
proto.d5.db2.CMessageAddFurnitureRequest.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.d5.db2.CMessageAddFurnitureRequest.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.db2.CMessageAddFurnitureRequest.prototype.hasData = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.CMessageAddFurnitureResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.CMessageAddFurnitureResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.CMessageAddFurnitureResponse.displayName = 'proto.d5.db2.CMessageAddFurnitureResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.CMessageAddFurnitureResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.CMessageAddFurnitureResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.CMessageAddFurnitureResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageAddFurnitureResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    state: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.CMessageAddFurnitureResponse}
 */
proto.d5.db2.CMessageAddFurnitureResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.CMessageAddFurnitureResponse;
  return proto.d5.db2.CMessageAddFurnitureResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.CMessageAddFurnitureResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.CMessageAddFurnitureResponse}
 */
proto.d5.db2.CMessageAddFurnitureResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.CMessageAddFurnitureResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.CMessageAddFurnitureResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.CMessageAddFurnitureResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageAddFurnitureResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getState();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.d5.db2.CMessageAddFurnitureResponse.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageAddFurnitureResponse.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.d5.db2.CMessageAddFurnitureResponse.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageAddFurnitureResponse.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 state = 3;
 * @return {number}
 */
proto.d5.db2.CMessageAddFurnitureResponse.prototype.getState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageAddFurnitureResponse.prototype.setState = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.CMessageProductDownloadRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.CMessageProductDownloadRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.CMessageProductDownloadRequest.displayName = 'proto.d5.db2.CMessageProductDownloadRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.CMessageProductDownloadRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.CMessageProductDownloadRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.CMessageProductDownloadRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageProductDownloadRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    id: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.CMessageProductDownloadRequest}
 */
proto.d5.db2.CMessageProductDownloadRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.CMessageProductDownloadRequest;
  return proto.d5.db2.CMessageProductDownloadRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.CMessageProductDownloadRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.CMessageProductDownloadRequest}
 */
proto.d5.db2.CMessageProductDownloadRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.CMessageProductDownloadRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.CMessageProductDownloadRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.CMessageProductDownloadRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageProductDownloadRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.d5.db2.CMessageProductDownloadRequest.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductDownloadRequest.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.d5.db2.CMessageProductDownloadRequest.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageProductDownloadRequest.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string id = 3;
 * @return {string}
 */
proto.d5.db2.CMessageProductDownloadRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageProductDownloadRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.CMessageProductDownloadResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.CMessageProductDownloadResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.CMessageProductDownloadResponse.displayName = 'proto.d5.db2.CMessageProductDownloadResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.CMessageProductDownloadResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.CMessageProductDownloadResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.CMessageProductDownloadResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageProductDownloadResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    state: jspb.Message.getFieldWithDefault(msg, 3, 0),
    filelist: (f = msg.getFilelist()) && message_common_pb.CMessageDependentPakList.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.CMessageProductDownloadResponse}
 */
proto.d5.db2.CMessageProductDownloadResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.CMessageProductDownloadResponse;
  return proto.d5.db2.CMessageProductDownloadResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.CMessageProductDownloadResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.CMessageProductDownloadResponse}
 */
proto.d5.db2.CMessageProductDownloadResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setState(value);
      break;
    case 4:
      var value = new message_common_pb.CMessageDependentPakList;
      reader.readMessage(value,message_common_pb.CMessageDependentPakList.deserializeBinaryFromReader);
      msg.setFilelist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.CMessageProductDownloadResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.CMessageProductDownloadResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.CMessageProductDownloadResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageProductDownloadResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getState();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getFilelist();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      message_common_pb.CMessageDependentPakList.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.d5.db2.CMessageProductDownloadResponse.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductDownloadResponse.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.d5.db2.CMessageProductDownloadResponse.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageProductDownloadResponse.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 state = 3;
 * @return {number}
 */
proto.d5.db2.CMessageProductDownloadResponse.prototype.getState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductDownloadResponse.prototype.setState = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional d5.CMessageDependentPakList fileList = 4;
 * @return {?proto.d5.CMessageDependentPakList}
 */
proto.d5.db2.CMessageProductDownloadResponse.prototype.getFilelist = function() {
  return /** @type{?proto.d5.CMessageDependentPakList} */ (
    jspb.Message.getWrapperField(this, message_common_pb.CMessageDependentPakList, 4));
};


/** @param {?proto.d5.CMessageDependentPakList|undefined} value */
proto.d5.db2.CMessageProductDownloadResponse.prototype.setFilelist = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.d5.db2.CMessageProductDownloadResponse.prototype.clearFilelist = function() {
  this.setFilelist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.db2.CMessageProductDownloadResponse.prototype.hasFilelist = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.CMessageProductDownloadProcessResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.CMessageProductDownloadProcessResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.CMessageProductDownloadProcessResponse.displayName = 'proto.d5.db2.CMessageProductDownloadProcessResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.CMessageProductDownloadProcessResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.CMessageProductDownloadProcessResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.CMessageProductDownloadProcessResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageProductDownloadProcessResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    percent: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.CMessageProductDownloadProcessResponse}
 */
proto.d5.db2.CMessageProductDownloadProcessResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.CMessageProductDownloadProcessResponse;
  return proto.d5.db2.CMessageProductDownloadProcessResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.CMessageProductDownloadProcessResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.CMessageProductDownloadProcessResponse}
 */
proto.d5.db2.CMessageProductDownloadProcessResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPercent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.CMessageProductDownloadProcessResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.CMessageProductDownloadProcessResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.CMessageProductDownloadProcessResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageProductDownloadProcessResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPercent();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.d5.db2.CMessageProductDownloadProcessResponse.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductDownloadProcessResponse.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.d5.db2.CMessageProductDownloadProcessResponse.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageProductDownloadProcessResponse.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 percent = 3;
 * @return {number}
 */
proto.d5.db2.CMessageProductDownloadProcessResponse.prototype.getPercent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductDownloadProcessResponse.prototype.setPercent = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.CMessageProductSaveRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.CMessageProductSaveRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.CMessageProductSaveRequest.displayName = 'proto.d5.db2.CMessageProductSaveRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.CMessageProductSaveRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.CMessageProductSaveRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.CMessageProductSaveRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageProductSaveRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    id: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.CMessageProductSaveRequest}
 */
proto.d5.db2.CMessageProductSaveRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.CMessageProductSaveRequest;
  return proto.d5.db2.CMessageProductSaveRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.CMessageProductSaveRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.CMessageProductSaveRequest}
 */
proto.d5.db2.CMessageProductSaveRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.CMessageProductSaveRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.CMessageProductSaveRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.CMessageProductSaveRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageProductSaveRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.d5.db2.CMessageProductSaveRequest.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductSaveRequest.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.d5.db2.CMessageProductSaveRequest.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageProductSaveRequest.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string id = 3;
 * @return {string}
 */
proto.d5.db2.CMessageProductSaveRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageProductSaveRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.CMessageProductSaveResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.CMessageProductSaveResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.CMessageProductSaveResponse.displayName = 'proto.d5.db2.CMessageProductSaveResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.CMessageProductSaveResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.CMessageProductSaveResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.CMessageProductSaveResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageProductSaveResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    state: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.CMessageProductSaveResponse}
 */
proto.d5.db2.CMessageProductSaveResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.CMessageProductSaveResponse;
  return proto.d5.db2.CMessageProductSaveResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.CMessageProductSaveResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.CMessageProductSaveResponse}
 */
proto.d5.db2.CMessageProductSaveResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.CMessageProductSaveResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.CMessageProductSaveResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.CMessageProductSaveResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageProductSaveResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getState();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.d5.db2.CMessageProductSaveResponse.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductSaveResponse.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.d5.db2.CMessageProductSaveResponse.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageProductSaveResponse.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 state = 3;
 * @return {number}
 */
proto.d5.db2.CMessageProductSaveResponse.prototype.getState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductSaveResponse.prototype.setState = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.CMessageProductSaveProcessResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.CMessageProductSaveProcessResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.CMessageProductSaveProcessResponse.displayName = 'proto.d5.db2.CMessageProductSaveProcessResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.CMessageProductSaveProcessResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.CMessageProductSaveProcessResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.CMessageProductSaveProcessResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageProductSaveProcessResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    percent: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.CMessageProductSaveProcessResponse}
 */
proto.d5.db2.CMessageProductSaveProcessResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.CMessageProductSaveProcessResponse;
  return proto.d5.db2.CMessageProductSaveProcessResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.CMessageProductSaveProcessResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.CMessageProductSaveProcessResponse}
 */
proto.d5.db2.CMessageProductSaveProcessResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPercent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.CMessageProductSaveProcessResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.CMessageProductSaveProcessResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.CMessageProductSaveProcessResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageProductSaveProcessResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPercent();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.d5.db2.CMessageProductSaveProcessResponse.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductSaveProcessResponse.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.d5.db2.CMessageProductSaveProcessResponse.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageProductSaveProcessResponse.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 percent = 3;
 * @return {number}
 */
proto.d5.db2.CMessageProductSaveProcessResponse.prototype.getPercent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageProductSaveProcessResponse.prototype.setPercent = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.CMessageDefaultProductRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.CMessageDefaultProductRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.CMessageDefaultProductRequest.displayName = 'proto.d5.db2.CMessageDefaultProductRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.CMessageDefaultProductRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.CMessageDefaultProductRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.CMessageDefaultProductRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageDefaultProductRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    uepath: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.CMessageDefaultProductRequest}
 */
proto.d5.db2.CMessageDefaultProductRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.CMessageDefaultProductRequest;
  return proto.d5.db2.CMessageDefaultProductRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.CMessageDefaultProductRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.CMessageDefaultProductRequest}
 */
proto.d5.db2.CMessageDefaultProductRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUepath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.CMessageDefaultProductRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.CMessageDefaultProductRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.CMessageDefaultProductRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageDefaultProductRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUepath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.d5.db2.CMessageDefaultProductRequest.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageDefaultProductRequest.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.d5.db2.CMessageDefaultProductRequest.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageDefaultProductRequest.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string uePath = 3;
 * @return {string}
 */
proto.d5.db2.CMessageDefaultProductRequest.prototype.getUepath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageDefaultProductRequest.prototype.setUepath = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.CMessageDefaultProductResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.CMessageDefaultProductResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.CMessageDefaultProductResponse.displayName = 'proto.d5.db2.CMessageDefaultProductResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.CMessageDefaultProductResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.CMessageDefaultProductResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.CMessageDefaultProductResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageDefaultProductResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    state: jspb.Message.getFieldWithDefault(msg, 3, 0),
    data: (f = msg.getData()) && proto.d5.db2.CProductDetailUnit.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.CMessageDefaultProductResponse}
 */
proto.d5.db2.CMessageDefaultProductResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.CMessageDefaultProductResponse;
  return proto.d5.db2.CMessageDefaultProductResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.CMessageDefaultProductResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.CMessageDefaultProductResponse}
 */
proto.d5.db2.CMessageDefaultProductResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setState(value);
      break;
    case 4:
      var value = new proto.d5.db2.CProductDetailUnit;
      reader.readMessage(value,proto.d5.db2.CProductDetailUnit.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.CMessageDefaultProductResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.CMessageDefaultProductResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.CMessageDefaultProductResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.CMessageDefaultProductResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getState();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.d5.db2.CProductDetailUnit.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.d5.db2.CMessageDefaultProductResponse.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageDefaultProductResponse.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.d5.db2.CMessageDefaultProductResponse.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.CMessageDefaultProductResponse.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 state = 3;
 * @return {number}
 */
proto.d5.db2.CMessageDefaultProductResponse.prototype.getState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.d5.db2.CMessageDefaultProductResponse.prototype.setState = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional CProductDetailUnit data = 4;
 * @return {?proto.d5.db2.CProductDetailUnit}
 */
proto.d5.db2.CMessageDefaultProductResponse.prototype.getData = function() {
  return /** @type{?proto.d5.db2.CProductDetailUnit} */ (
    jspb.Message.getWrapperField(this, proto.d5.db2.CProductDetailUnit, 4));
};


/** @param {?proto.d5.db2.CProductDetailUnit|undefined} value */
proto.d5.db2.CMessageDefaultProductResponse.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.d5.db2.CMessageDefaultProductResponse.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.db2.CMessageDefaultProductResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.d5.db2);
