/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.d5.db2.GA', null, global);
goog.exportSymbol('proto.d5.db2.GA_db', null, global);
goog.exportSymbol('proto.d5.db2.asset_building_material', null, global);
goog.exportSymbol('proto.d5.db2.asset_building_material_db', null, global);
goog.exportSymbol('proto.d5.db2.asset_furniture', null, global);
goog.exportSymbol('proto.d5.db2.asset_furniture_db', null, global);
goog.exportSymbol('proto.d5.db2.asset_furniture_style', null, global);
goog.exportSymbol('proto.d5.db2.asset_furniture_style_db', null, global);
goog.exportSymbol('proto.d5.db2.asset_furniture_style_material_map', null, global);
goog.exportSymbol('proto.d5.db2.asset_furniture_style_material_map_db', null, global);
goog.exportSymbol('proto.d5.db2.asset_material', null, global);
goog.exportSymbol('proto.d5.db2.asset_material_category', null, global);
goog.exportSymbol('proto.d5.db2.asset_material_category_db', null, global);
goog.exportSymbol('proto.d5.db2.asset_material_db', null, global);
goog.exportSymbol('proto.d5.db2.files_map', null, global);
goog.exportSymbol('proto.d5.db2.furniture_color_map', null, global);
goog.exportSymbol('proto.d5.db2.furniture_color_map_db', null, global);
goog.exportSymbol('proto.d5.db2.header', null, global);
goog.exportSymbol('proto.d5.db2.plan_desgin_template_statu', null, global);
goog.exportSymbol('proto.d5.db2.plan_desgin_template_statu_db', null, global);
goog.exportSymbol('proto.d5.db2.plan_design', null, global);
goog.exportSymbol('proto.d5.db2.plan_design_db', null, global);
goog.exportSymbol('proto.d5.db2.product', null, global);
goog.exportSymbol('proto.d5.db2.product_brand_temp', null, global);
goog.exportSymbol('proto.d5.db2.product_brand_temp_db', null, global);
goog.exportSymbol('proto.d5.db2.product_category_map', null, global);
goog.exportSymbol('proto.d5.db2.product_category_map_db', null, global);
goog.exportSymbol('proto.d5.db2.product_db', null, global);
goog.exportSymbol('proto.d5.db2.product_detail_virtual', null, global);
goog.exportSymbol('proto.d5.db2.product_image', null, global);
goog.exportSymbol('proto.d5.db2.product_image_db', null, global);
goog.exportSymbol('proto.d5.db2.setting_remember', null, global);
goog.exportSymbol('proto.d5.db2.setting_remember_db', null, global);
goog.exportSymbol('proto.d5.db2.user_login', null, global);
goog.exportSymbol('proto.d5.db2.user_login_db', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.asset_building_material = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.asset_building_material, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.asset_building_material.displayName = 'proto.d5.db2.asset_building_material';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.asset_building_material.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.asset_building_material.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.asset_building_material} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.asset_building_material.toObject = function(includeInstance, msg) {
  var f, obj = {
    productId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    isForFloor: jspb.Message.getFieldWithDefault(msg, 2, 0),
    isForWall: jspb.Message.getFieldWithDefault(msg, 3, 0),
    isForCeiling: jspb.Message.getFieldWithDefault(msg, 4, 0),
    materialId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    detailInfo: jspb.Message.getFieldWithDefault(msg, 6, ""),
    length: jspb.Message.getFieldWithDefault(msg, 7, 0),
    width: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.asset_building_material}
 */
proto.d5.db2.asset_building_material.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.asset_building_material;
  return proto.d5.db2.asset_building_material.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.asset_building_material} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.asset_building_material}
 */
proto.d5.db2.asset_building_material.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsForFloor(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsForWall(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsForCeiling(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaterialId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDetailInfo(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLength(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWidth(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.asset_building_material.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.asset_building_material.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.asset_building_material} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.asset_building_material.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIsForFloor();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getIsForWall();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getIsForCeiling();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getMaterialId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDetailInfo();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLength();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getWidth();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
};


/**
 * optional string product_id = 1;
 * @return {string}
 */
proto.d5.db2.asset_building_material.prototype.getProductId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.d5.db2.asset_building_material.prototype.setProductId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 is_for_floor = 2;
 * @return {number}
 */
proto.d5.db2.asset_building_material.prototype.getIsForFloor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.d5.db2.asset_building_material.prototype.setIsForFloor = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 is_for_wall = 3;
 * @return {number}
 */
proto.d5.db2.asset_building_material.prototype.getIsForWall = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.d5.db2.asset_building_material.prototype.setIsForWall = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 is_for_ceiling = 4;
 * @return {number}
 */
proto.d5.db2.asset_building_material.prototype.getIsForCeiling = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.d5.db2.asset_building_material.prototype.setIsForCeiling = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string material_id = 5;
 * @return {string}
 */
proto.d5.db2.asset_building_material.prototype.getMaterialId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.d5.db2.asset_building_material.prototype.setMaterialId = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string detail_info = 6;
 * @return {string}
 */
proto.d5.db2.asset_building_material.prototype.getDetailInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.d5.db2.asset_building_material.prototype.setDetailInfo = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 length = 7;
 * @return {number}
 */
proto.d5.db2.asset_building_material.prototype.getLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.d5.db2.asset_building_material.prototype.setLength = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 width = 8;
 * @return {number}
 */
proto.d5.db2.asset_building_material.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.d5.db2.asset_building_material.prototype.setWidth = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.asset_furniture = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.asset_furniture, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.asset_furniture.displayName = 'proto.d5.db2.asset_furniture';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.asset_furniture.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.asset_furniture.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.asset_furniture} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.asset_furniture.toObject = function(includeInstance, msg) {
  var f, obj = {
    productId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    uePath: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pakUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    length: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    depth: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    height: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),
    isInteractive: jspb.Message.getFieldWithDefault(msg, 7, 0),
    intelligentType: jspb.Message.getFieldWithDefault(msg, 8, 0),
    furnitureStyleId: jspb.Message.getFieldWithDefault(msg, 9, 0),
    furnitureMainMaterialId: jspb.Message.getFieldWithDefault(msg, 10, 0),
    detailInfo: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.asset_furniture}
 */
proto.d5.db2.asset_furniture.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.asset_furniture;
  return proto.d5.db2.asset_furniture.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.asset_furniture} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.asset_furniture}
 */
proto.d5.db2.asset_furniture.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUePath(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPakUrl(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLength(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDepth(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHeight(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsInteractive(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIntelligentType(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFurnitureStyleId(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFurnitureMainMaterialId(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setDetailInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.asset_furniture.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.asset_furniture.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.asset_furniture} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.asset_furniture.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUePath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPakUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLength();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getDepth();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getIsInteractive();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getIntelligentType();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getFurnitureStyleId();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getFurnitureMainMaterialId();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getDetailInfo();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string product_id = 1;
 * @return {string}
 */
proto.d5.db2.asset_furniture.prototype.getProductId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.d5.db2.asset_furniture.prototype.setProductId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ue_path = 2;
 * @return {string}
 */
proto.d5.db2.asset_furniture.prototype.getUePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.asset_furniture.prototype.setUePath = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string pak_url = 3;
 * @return {string}
 */
proto.d5.db2.asset_furniture.prototype.getPakUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.d5.db2.asset_furniture.prototype.setPakUrl = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional double length = 4;
 * @return {number}
 */
proto.d5.db2.asset_furniture.prototype.getLength = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.d5.db2.asset_furniture.prototype.setLength = function(value) {
  jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double depth = 5;
 * @return {number}
 */
proto.d5.db2.asset_furniture.prototype.getDepth = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.d5.db2.asset_furniture.prototype.setDepth = function(value) {
  jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double height = 6;
 * @return {number}
 */
proto.d5.db2.asset_furniture.prototype.getHeight = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.d5.db2.asset_furniture.prototype.setHeight = function(value) {
  jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional int32 is_interactive = 7;
 * @return {number}
 */
proto.d5.db2.asset_furniture.prototype.getIsInteractive = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.d5.db2.asset_furniture.prototype.setIsInteractive = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 intelligent_type = 8;
 * @return {number}
 */
proto.d5.db2.asset_furniture.prototype.getIntelligentType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.d5.db2.asset_furniture.prototype.setIntelligentType = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 furniture_style_id = 9;
 * @return {number}
 */
proto.d5.db2.asset_furniture.prototype.getFurnitureStyleId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.d5.db2.asset_furniture.prototype.setFurnitureStyleId = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 furniture_main_material_id = 10;
 * @return {number}
 */
proto.d5.db2.asset_furniture.prototype.getFurnitureMainMaterialId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.d5.db2.asset_furniture.prototype.setFurnitureMainMaterialId = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string detail_info = 11;
 * @return {string}
 */
proto.d5.db2.asset_furniture.prototype.getDetailInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.d5.db2.asset_furniture.prototype.setDetailInfo = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.asset_furniture_style = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.asset_furniture_style, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.asset_furniture_style.displayName = 'proto.d5.db2.asset_furniture_style';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.asset_furniture_style.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.asset_furniture_style.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.asset_furniture_style} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.asset_furniture_style.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    thumbnailUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    displayIndex: jspb.Message.getFieldWithDefault(msg, 4, 0),
    productId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    createTime: jspb.Message.getFieldWithDefault(msg, 6, 0),
    updateTime: jspb.Message.getFieldWithDefault(msg, 7, 0),
    syncStatus: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.asset_furniture_style}
 */
proto.d5.db2.asset_furniture_style.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.asset_furniture_style;
  return proto.d5.db2.asset_furniture_style.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.asset_furniture_style} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.asset_furniture_style}
 */
proto.d5.db2.asset_furniture_style.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setThumbnailUrl(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDisplayIndex(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductId(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateTime(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdateTime(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSyncStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.asset_furniture_style.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.asset_furniture_style.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.asset_furniture_style} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.asset_furniture_style.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getThumbnailUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDisplayIndex();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getProductId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreateTime();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getUpdateTime();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getSyncStatus();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.d5.db2.asset_furniture_style.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.d5.db2.asset_furniture_style.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.d5.db2.asset_furniture_style.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.asset_furniture_style.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string thumbnail_url = 3;
 * @return {string}
 */
proto.d5.db2.asset_furniture_style.prototype.getThumbnailUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.d5.db2.asset_furniture_style.prototype.setThumbnailUrl = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 display_index = 4;
 * @return {number}
 */
proto.d5.db2.asset_furniture_style.prototype.getDisplayIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.d5.db2.asset_furniture_style.prototype.setDisplayIndex = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string product_id = 5;
 * @return {string}
 */
proto.d5.db2.asset_furniture_style.prototype.getProductId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.d5.db2.asset_furniture_style.prototype.setProductId = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int64 create_time = 6;
 * @return {number}
 */
proto.d5.db2.asset_furniture_style.prototype.getCreateTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.d5.db2.asset_furniture_style.prototype.setCreateTime = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 update_time = 7;
 * @return {number}
 */
proto.d5.db2.asset_furniture_style.prototype.getUpdateTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.d5.db2.asset_furniture_style.prototype.setUpdateTime = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 sync_status = 8;
 * @return {number}
 */
proto.d5.db2.asset_furniture_style.prototype.getSyncStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.d5.db2.asset_furniture_style.prototype.setSyncStatus = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.asset_furniture_style_material_map = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.asset_furniture_style_material_map, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.asset_furniture_style_material_map.displayName = 'proto.d5.db2.asset_furniture_style_material_map';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.asset_furniture_style_material_map.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.asset_furniture_style_material_map.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.asset_furniture_style_material_map} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.asset_furniture_style_material_map.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    materialId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    styleId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    materialIndex: jspb.Message.getFieldWithDefault(msg, 4, 0),
    elementName: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.asset_furniture_style_material_map}
 */
proto.d5.db2.asset_furniture_style_material_map.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.asset_furniture_style_material_map;
  return proto.d5.db2.asset_furniture_style_material_map.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.asset_furniture_style_material_map} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.asset_furniture_style_material_map}
 */
proto.d5.db2.asset_furniture_style_material_map.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaterialId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStyleId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaterialIndex(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setElementName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.asset_furniture_style_material_map.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.asset_furniture_style_material_map.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.asset_furniture_style_material_map} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.asset_furniture_style_material_map.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMaterialId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStyleId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMaterialIndex();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getElementName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.d5.db2.asset_furniture_style_material_map.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.d5.db2.asset_furniture_style_material_map.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string material_id = 2;
 * @return {string}
 */
proto.d5.db2.asset_furniture_style_material_map.prototype.getMaterialId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.asset_furniture_style_material_map.prototype.setMaterialId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string style_id = 3;
 * @return {string}
 */
proto.d5.db2.asset_furniture_style_material_map.prototype.getStyleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.d5.db2.asset_furniture_style_material_map.prototype.setStyleId = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 material_index = 4;
 * @return {number}
 */
proto.d5.db2.asset_furniture_style_material_map.prototype.getMaterialIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.d5.db2.asset_furniture_style_material_map.prototype.setMaterialIndex = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string element_name = 5;
 * @return {string}
 */
proto.d5.db2.asset_furniture_style_material_map.prototype.getElementName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.d5.db2.asset_furniture_style_material_map.prototype.setElementName = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.asset_material = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.asset_material, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.asset_material.displayName = 'proto.d5.db2.asset_material';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.asset_material.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.asset_material.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.asset_material} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.asset_material.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    uePath: jspb.Message.getFieldWithDefault(msg, 3, ""),
    matInfo: jspb.Message.getFieldWithDefault(msg, 4, ""),
    thumbnailUrl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    isDel: jspb.Message.getFieldWithDefault(msg, 6, 0),
    isPrivate: jspb.Message.getFieldWithDefault(msg, 7, 0),
    userId: jspb.Message.getFieldWithDefault(msg, 8, 0),
    companyId: jspb.Message.getFieldWithDefault(msg, 9, 0),
    createTime: jspb.Message.getFieldWithDefault(msg, 10, 0),
    updateTime: jspb.Message.getFieldWithDefault(msg, 11, 0),
    categoryId: jspb.Message.getFieldWithDefault(msg, 12, 0),
    metallic: jspb.Message.getFieldWithDefault(msg, 17, 0),
    roughness: jspb.Message.getFieldWithDefault(msg, 18, 0),
    emissiveColor: jspb.Message.getFieldWithDefault(msg, 19, 0),
    type: jspb.Message.getFieldWithDefault(msg, 20, 0),
    isRepeat: jspb.Message.getFieldWithDefault(msg, 21, 0),
    isSubmit: jspb.Message.getFieldWithDefault(msg, 22, 0),
    source: jspb.Message.getFieldWithDefault(msg, 23, 0),
    syncStatus: jspb.Message.getFieldWithDefault(msg, 24, 0),
    pakUrl: jspb.Message.getFieldWithDefault(msg, 25, ""),
    dependentFileList: jspb.Message.getFieldWithDefault(msg, 26, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.asset_material}
 */
proto.d5.db2.asset_material.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.asset_material;
  return proto.d5.db2.asset_material.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.asset_material} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.asset_material}
 */
proto.d5.db2.asset_material.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUePath(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMatInfo(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setThumbnailUrl(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsDel(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsPrivate(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserId(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCompanyId(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateTime(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdateTime(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCategoryId(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMetallic(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRoughness(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEmissiveColor(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsRepeat(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsSubmit(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSource(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSyncStatus(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setPakUrl(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setDependentFileList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.asset_material.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.asset_material.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.asset_material} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.asset_material.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUePath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMatInfo();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getThumbnailUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIsDel();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getIsPrivate();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getCompanyId();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getCreateTime();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getUpdateTime();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getCategoryId();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getMetallic();
  if (f !== 0) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = message.getRoughness();
  if (f !== 0) {
    writer.writeInt32(
      18,
      f
    );
  }
  f = message.getEmissiveColor();
  if (f !== 0) {
    writer.writeInt32(
      19,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = message.getIsRepeat();
  if (f !== 0) {
    writer.writeInt32(
      21,
      f
    );
  }
  f = message.getIsSubmit();
  if (f !== 0) {
    writer.writeInt32(
      22,
      f
    );
  }
  f = message.getSource();
  if (f !== 0) {
    writer.writeInt32(
      23,
      f
    );
  }
  f = message.getSyncStatus();
  if (f !== 0) {
    writer.writeInt32(
      24,
      f
    );
  }
  f = message.getPakUrl();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getDependentFileList();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.d5.db2.asset_material.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.d5.db2.asset_material.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.d5.db2.asset_material.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.asset_material.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ue_path = 3;
 * @return {string}
 */
proto.d5.db2.asset_material.prototype.getUePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.d5.db2.asset_material.prototype.setUePath = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string mat_info = 4;
 * @return {string}
 */
proto.d5.db2.asset_material.prototype.getMatInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.d5.db2.asset_material.prototype.setMatInfo = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string thumbnail_url = 5;
 * @return {string}
 */
proto.d5.db2.asset_material.prototype.getThumbnailUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.d5.db2.asset_material.prototype.setThumbnailUrl = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 is_del = 6;
 * @return {number}
 */
proto.d5.db2.asset_material.prototype.getIsDel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.d5.db2.asset_material.prototype.setIsDel = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 is_private = 7;
 * @return {number}
 */
proto.d5.db2.asset_material.prototype.getIsPrivate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.d5.db2.asset_material.prototype.setIsPrivate = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 user_id = 8;
 * @return {number}
 */
proto.d5.db2.asset_material.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.d5.db2.asset_material.prototype.setUserId = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 company_id = 9;
 * @return {number}
 */
proto.d5.db2.asset_material.prototype.getCompanyId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.d5.db2.asset_material.prototype.setCompanyId = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 create_time = 10;
 * @return {number}
 */
proto.d5.db2.asset_material.prototype.getCreateTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.d5.db2.asset_material.prototype.setCreateTime = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 update_time = 11;
 * @return {number}
 */
proto.d5.db2.asset_material.prototype.getUpdateTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.d5.db2.asset_material.prototype.setUpdateTime = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 category_id = 12;
 * @return {number}
 */
proto.d5.db2.asset_material.prototype.getCategoryId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.d5.db2.asset_material.prototype.setCategoryId = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 metallic = 17;
 * @return {number}
 */
proto.d5.db2.asset_material.prototype.getMetallic = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.d5.db2.asset_material.prototype.setMetallic = function(value) {
  jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional int32 roughness = 18;
 * @return {number}
 */
proto.d5.db2.asset_material.prototype.getRoughness = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {number} value */
proto.d5.db2.asset_material.prototype.setRoughness = function(value) {
  jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional int32 emissive_color = 19;
 * @return {number}
 */
proto.d5.db2.asset_material.prototype.getEmissiveColor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/** @param {number} value */
proto.d5.db2.asset_material.prototype.setEmissiveColor = function(value) {
  jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional int32 type = 20;
 * @return {number}
 */
proto.d5.db2.asset_material.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/** @param {number} value */
proto.d5.db2.asset_material.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional int32 is_repeat = 21;
 * @return {number}
 */
proto.d5.db2.asset_material.prototype.getIsRepeat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/** @param {number} value */
proto.d5.db2.asset_material.prototype.setIsRepeat = function(value) {
  jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional int32 is_submit = 22;
 * @return {number}
 */
proto.d5.db2.asset_material.prototype.getIsSubmit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/** @param {number} value */
proto.d5.db2.asset_material.prototype.setIsSubmit = function(value) {
  jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional int32 source = 23;
 * @return {number}
 */
proto.d5.db2.asset_material.prototype.getSource = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/** @param {number} value */
proto.d5.db2.asset_material.prototype.setSource = function(value) {
  jspb.Message.setProto3IntField(this, 23, value);
};


/**
 * optional int32 sync_status = 24;
 * @return {number}
 */
proto.d5.db2.asset_material.prototype.getSyncStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/** @param {number} value */
proto.d5.db2.asset_material.prototype.setSyncStatus = function(value) {
  jspb.Message.setProto3IntField(this, 24, value);
};


/**
 * optional string pak_url = 25;
 * @return {string}
 */
proto.d5.db2.asset_material.prototype.getPakUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/** @param {string} value */
proto.d5.db2.asset_material.prototype.setPakUrl = function(value) {
  jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional string dependent_file_list = 26;
 * @return {string}
 */
proto.d5.db2.asset_material.prototype.getDependentFileList = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/** @param {string} value */
proto.d5.db2.asset_material.prototype.setDependentFileList = function(value) {
  jspb.Message.setProto3StringField(this, 26, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.asset_material_category = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.asset_material_category, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.asset_material_category.displayName = 'proto.d5.db2.asset_material_category';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.asset_material_category.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.asset_material_category.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.asset_material_category} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.asset_material_category.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    parentId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    level: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.asset_material_category}
 */
proto.d5.db2.asset_material_category.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.asset_material_category;
  return proto.d5.db2.asset_material_category.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.asset_material_category} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.asset_material_category}
 */
proto.d5.db2.asset_material_category.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setParentId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.asset_material_category.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.asset_material_category.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.asset_material_category} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.asset_material_category.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getParentId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getLevel();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.d5.db2.asset_material_category.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db2.asset_material_category.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.d5.db2.asset_material_category.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.asset_material_category.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 parent_id = 3;
 * @return {number}
 */
proto.d5.db2.asset_material_category.prototype.getParentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.d5.db2.asset_material_category.prototype.setParentId = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 level = 4;
 * @return {number}
 */
proto.d5.db2.asset_material_category.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.d5.db2.asset_material_category.prototype.setLevel = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.furniture_color_map = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.furniture_color_map, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.furniture_color_map.displayName = 'proto.d5.db2.furniture_color_map';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.furniture_color_map.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.furniture_color_map.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.furniture_color_map} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.furniture_color_map.toObject = function(includeInstance, msg) {
  var f, obj = {
    colorId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    productId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.furniture_color_map}
 */
proto.d5.db2.furniture_color_map.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.furniture_color_map;
  return proto.d5.db2.furniture_color_map.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.furniture_color_map} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.furniture_color_map}
 */
proto.d5.db2.furniture_color_map.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setColorId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.furniture_color_map.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.furniture_color_map.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.furniture_color_map} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.furniture_color_map.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColorId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getProductId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 color_id = 2;
 * @return {number}
 */
proto.d5.db2.furniture_color_map.prototype.getColorId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.d5.db2.furniture_color_map.prototype.setColorId = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string product_id = 3;
 * @return {string}
 */
proto.d5.db2.furniture_color_map.prototype.getProductId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.d5.db2.furniture_color_map.prototype.setProductId = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.GA = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.GA, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.GA.displayName = 'proto.d5.db2.GA';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.GA.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.GA.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.GA} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.GA.toObject = function(includeInstance, msg) {
  var f, obj = {
    cid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.GA}
 */
proto.d5.db2.GA.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.GA;
  return proto.d5.db2.GA.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.GA} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.GA}
 */
proto.d5.db2.GA.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.GA.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.GA.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.GA} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.GA.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 cid = 1;
 * @return {number}
 */
proto.d5.db2.GA.prototype.getCid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db2.GA.prototype.setCid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.plan_desgin_template_statu = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.plan_desgin_template_statu, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.plan_desgin_template_statu.displayName = 'proto.d5.db2.plan_desgin_template_statu';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.plan_desgin_template_statu.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.plan_desgin_template_statu.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.plan_desgin_template_statu} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.plan_desgin_template_statu.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    updatetime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    dependFiles: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.plan_desgin_template_statu}
 */
proto.d5.db2.plan_desgin_template_statu.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.plan_desgin_template_statu;
  return proto.d5.db2.plan_desgin_template_statu.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.plan_desgin_template_statu} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.plan_desgin_template_statu}
 */
proto.d5.db2.plan_desgin_template_statu.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatetime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDependFiles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.plan_desgin_template_statu.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.plan_desgin_template_statu.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.plan_desgin_template_statu} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.plan_desgin_template_statu.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUpdatetime();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getDependFiles();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.d5.db2.plan_desgin_template_statu.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.d5.db2.plan_desgin_template_statu.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 updatetime = 2;
 * @return {number}
 */
proto.d5.db2.plan_desgin_template_statu.prototype.getUpdatetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.d5.db2.plan_desgin_template_statu.prototype.setUpdatetime = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string depend_files = 3;
 * @return {string}
 */
proto.d5.db2.plan_desgin_template_statu.prototype.getDependFiles = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.d5.db2.plan_desgin_template_statu.prototype.setDependFiles = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.plan_design = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.plan_design, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.plan_design.displayName = 'proto.d5.db2.plan_design';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.plan_design.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.plan_design.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.plan_design} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.plan_design.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    size: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    pakUrl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    thumbnailUrl: jspb.Message.getFieldWithDefault(msg, 6, ""),
    floorEditFileUrl: jspb.Message.getFieldWithDefault(msg, 7, ""),
    detailInfo: jspb.Message.getFieldWithDefault(msg, 8, ""),
    designFileUrl: jspb.Message.getFieldWithDefault(msg, 9, ""),
    districtId: jspb.Message.getFieldWithDefault(msg, 10, 0),
    propertyTypeId: jspb.Message.getFieldWithDefault(msg, 11, 0),
    roomTypeId: jspb.Message.getFieldWithDefault(msg, 12, 0),
    templateTypeId: jspb.Message.getFieldWithDefault(msg, 13, 0),
    cookStage: jspb.Message.getFieldWithDefault(msg, 14, 0),
    isDel: jspb.Message.getFieldWithDefault(msg, 15, 0),
    createTime: jspb.Message.getFieldWithDefault(msg, 16, 0),
    updateTime: jspb.Message.getFieldWithDefault(msg, 17, 0),
    userId: jspb.Message.getFieldWithDefault(msg, 18, 0),
    companyId: jspb.Message.getFieldWithDefault(msg, 19, 0),
    syncStatus: jspb.Message.getFieldWithDefault(msg, 20, 0),
    floorEditErrorCode: jspb.Message.getFieldWithDefault(msg, 21, 0),
    cookId: jspb.Message.getFieldWithDefault(msg, 23, ""),
    floorRefUrl: jspb.Message.getFieldWithDefault(msg, 24, ""),
    floorRefWidth: +jspb.Message.getFieldWithDefault(msg, 25, 0.0),
    floorRefHeight: +jspb.Message.getFieldWithDefault(msg, 26, 0.0),
    floorRefAngle: +jspb.Message.getFieldWithDefault(msg, 27, 0.0),
    groupId: jspb.Message.getFieldWithDefault(msg, 28, 0),
    condoId: jspb.Message.getFieldWithDefault(msg, 29, 0),
    username: jspb.Message.getFieldWithDefault(msg, 30, ""),
    dependentFileList: jspb.Message.getFieldWithDefault(msg, 31, ""),
    source: jspb.Message.getFieldWithDefault(msg, 32, 0),
    quotationInfo: jspb.Message.getFieldWithDefault(msg, 33, ""),
    isPrivate: jspb.Message.getFieldWithDefault(msg, 34, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.plan_design}
 */
proto.d5.db2.plan_design.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.plan_design;
  return proto.d5.db2.plan_design.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.plan_design} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.plan_design}
 */
proto.d5.db2.plan_design.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSize(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPakUrl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setThumbnailUrl(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setFloorEditFileUrl(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDetailInfo(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setDesignFileUrl(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDistrictId(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPropertyTypeId(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRoomTypeId(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTemplateTypeId(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCookStage(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsDel(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateTime(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdateTime(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserId(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCompanyId(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSyncStatus(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFloorEditErrorCode(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setCookId(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setFloorRefUrl(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFloorRefWidth(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFloorRefHeight(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFloorRefAngle(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGroupId(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCondoId(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setDependentFileList(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSource(value);
      break;
    case 33:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuotationInfo(value);
      break;
    case 34:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsPrivate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.plan_design.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.plan_design.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.plan_design} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.plan_design.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSize();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getPakUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getThumbnailUrl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getFloorEditFileUrl();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDetailInfo();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getDesignFileUrl();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getDistrictId();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getPropertyTypeId();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getRoomTypeId();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getTemplateTypeId();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getCookStage();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getIsDel();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getCreateTime();
  if (f !== 0) {
    writer.writeInt64(
      16,
      f
    );
  }
  f = message.getUpdateTime();
  if (f !== 0) {
    writer.writeInt64(
      17,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      18,
      f
    );
  }
  f = message.getCompanyId();
  if (f !== 0) {
    writer.writeInt32(
      19,
      f
    );
  }
  f = message.getSyncStatus();
  if (f !== 0) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = message.getFloorEditErrorCode();
  if (f !== 0) {
    writer.writeInt32(
      21,
      f
    );
  }
  f = message.getCookId();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getFloorRefUrl();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getFloorRefWidth();
  if (f !== 0.0) {
    writer.writeDouble(
      25,
      f
    );
  }
  f = message.getFloorRefHeight();
  if (f !== 0.0) {
    writer.writeDouble(
      26,
      f
    );
  }
  f = message.getFloorRefAngle();
  if (f !== 0.0) {
    writer.writeDouble(
      27,
      f
    );
  }
  f = message.getGroupId();
  if (f !== 0) {
    writer.writeInt32(
      28,
      f
    );
  }
  f = message.getCondoId();
  if (f !== 0) {
    writer.writeInt32(
      29,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getDependentFileList();
  if (f.length > 0) {
    writer.writeString(
      31,
      f
    );
  }
  f = message.getSource();
  if (f !== 0) {
    writer.writeInt32(
      32,
      f
    );
  }
  f = message.getQuotationInfo();
  if (f.length > 0) {
    writer.writeString(
      33,
      f
    );
  }
  f = message.getIsPrivate();
  if (f !== 0) {
    writer.writeInt32(
      34,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.d5.db2.plan_design.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.d5.db2.plan_design.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.d5.db2.plan_design.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.plan_design.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double size = 3;
 * @return {number}
 */
proto.d5.db2.plan_design.prototype.getSize = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.d5.db2.plan_design.prototype.setSize = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional string pak_url = 5;
 * @return {string}
 */
proto.d5.db2.plan_design.prototype.getPakUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.d5.db2.plan_design.prototype.setPakUrl = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string thumbnail_url = 6;
 * @return {string}
 */
proto.d5.db2.plan_design.prototype.getThumbnailUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.d5.db2.plan_design.prototype.setThumbnailUrl = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string floor_edit_file_url = 7;
 * @return {string}
 */
proto.d5.db2.plan_design.prototype.getFloorEditFileUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.d5.db2.plan_design.prototype.setFloorEditFileUrl = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string detail_info = 8;
 * @return {string}
 */
proto.d5.db2.plan_design.prototype.getDetailInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.d5.db2.plan_design.prototype.setDetailInfo = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string design_file_url = 9;
 * @return {string}
 */
proto.d5.db2.plan_design.prototype.getDesignFileUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.d5.db2.plan_design.prototype.setDesignFileUrl = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int32 district_id = 10;
 * @return {number}
 */
proto.d5.db2.plan_design.prototype.getDistrictId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.d5.db2.plan_design.prototype.setDistrictId = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 property_type_id = 11;
 * @return {number}
 */
proto.d5.db2.plan_design.prototype.getPropertyTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.d5.db2.plan_design.prototype.setPropertyTypeId = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 room_type_id = 12;
 * @return {number}
 */
proto.d5.db2.plan_design.prototype.getRoomTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.d5.db2.plan_design.prototype.setRoomTypeId = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 template_type_id = 13;
 * @return {number}
 */
proto.d5.db2.plan_design.prototype.getTemplateTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.d5.db2.plan_design.prototype.setTemplateTypeId = function(value) {
  jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 cook_stage = 14;
 * @return {number}
 */
proto.d5.db2.plan_design.prototype.getCookStage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.d5.db2.plan_design.prototype.setCookStage = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 is_del = 15;
 * @return {number}
 */
proto.d5.db2.plan_design.prototype.getIsDel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.d5.db2.plan_design.prototype.setIsDel = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional int64 create_time = 16;
 * @return {number}
 */
proto.d5.db2.plan_design.prototype.getCreateTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.d5.db2.plan_design.prototype.setCreateTime = function(value) {
  jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional int64 update_time = 17;
 * @return {number}
 */
proto.d5.db2.plan_design.prototype.getUpdateTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.d5.db2.plan_design.prototype.setUpdateTime = function(value) {
  jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional int32 user_id = 18;
 * @return {number}
 */
proto.d5.db2.plan_design.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {number} value */
proto.d5.db2.plan_design.prototype.setUserId = function(value) {
  jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional int32 company_id = 19;
 * @return {number}
 */
proto.d5.db2.plan_design.prototype.getCompanyId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/** @param {number} value */
proto.d5.db2.plan_design.prototype.setCompanyId = function(value) {
  jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional int32 sync_status = 20;
 * @return {number}
 */
proto.d5.db2.plan_design.prototype.getSyncStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/** @param {number} value */
proto.d5.db2.plan_design.prototype.setSyncStatus = function(value) {
  jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional int32 floor_edit_error_code = 21;
 * @return {number}
 */
proto.d5.db2.plan_design.prototype.getFloorEditErrorCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/** @param {number} value */
proto.d5.db2.plan_design.prototype.setFloorEditErrorCode = function(value) {
  jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional string cook_id = 23;
 * @return {string}
 */
proto.d5.db2.plan_design.prototype.getCookId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/** @param {string} value */
proto.d5.db2.plan_design.prototype.setCookId = function(value) {
  jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string floor_ref_url = 24;
 * @return {string}
 */
proto.d5.db2.plan_design.prototype.getFloorRefUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/** @param {string} value */
proto.d5.db2.plan_design.prototype.setFloorRefUrl = function(value) {
  jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional double floor_ref_width = 25;
 * @return {number}
 */
proto.d5.db2.plan_design.prototype.getFloorRefWidth = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 25, 0.0));
};


/** @param {number} value */
proto.d5.db2.plan_design.prototype.setFloorRefWidth = function(value) {
  jspb.Message.setProto3FloatField(this, 25, value);
};


/**
 * optional double floor_ref_height = 26;
 * @return {number}
 */
proto.d5.db2.plan_design.prototype.getFloorRefHeight = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 26, 0.0));
};


/** @param {number} value */
proto.d5.db2.plan_design.prototype.setFloorRefHeight = function(value) {
  jspb.Message.setProto3FloatField(this, 26, value);
};


/**
 * optional double floor_ref_angle = 27;
 * @return {number}
 */
proto.d5.db2.plan_design.prototype.getFloorRefAngle = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 27, 0.0));
};


/** @param {number} value */
proto.d5.db2.plan_design.prototype.setFloorRefAngle = function(value) {
  jspb.Message.setProto3FloatField(this, 27, value);
};


/**
 * optional int32 group_id = 28;
 * @return {number}
 */
proto.d5.db2.plan_design.prototype.getGroupId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/** @param {number} value */
proto.d5.db2.plan_design.prototype.setGroupId = function(value) {
  jspb.Message.setProto3IntField(this, 28, value);
};


/**
 * optional int32 condo_id = 29;
 * @return {number}
 */
proto.d5.db2.plan_design.prototype.getCondoId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 29, 0));
};


/** @param {number} value */
proto.d5.db2.plan_design.prototype.setCondoId = function(value) {
  jspb.Message.setProto3IntField(this, 29, value);
};


/**
 * optional string username = 30;
 * @return {string}
 */
proto.d5.db2.plan_design.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/** @param {string} value */
proto.d5.db2.plan_design.prototype.setUsername = function(value) {
  jspb.Message.setProto3StringField(this, 30, value);
};


/**
 * optional string dependent_file_list = 31;
 * @return {string}
 */
proto.d5.db2.plan_design.prototype.getDependentFileList = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/** @param {string} value */
proto.d5.db2.plan_design.prototype.setDependentFileList = function(value) {
  jspb.Message.setProto3StringField(this, 31, value);
};


/**
 * optional int32 source = 32;
 * @return {number}
 */
proto.d5.db2.plan_design.prototype.getSource = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/** @param {number} value */
proto.d5.db2.plan_design.prototype.setSource = function(value) {
  jspb.Message.setProto3IntField(this, 32, value);
};


/**
 * optional string quotation_info = 33;
 * @return {string}
 */
proto.d5.db2.plan_design.prototype.getQuotationInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 33, ""));
};


/** @param {string} value */
proto.d5.db2.plan_design.prototype.setQuotationInfo = function(value) {
  jspb.Message.setProto3StringField(this, 33, value);
};


/**
 * optional int32 is_private = 34;
 * @return {number}
 */
proto.d5.db2.plan_design.prototype.getIsPrivate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 34, 0));
};


/** @param {number} value */
proto.d5.db2.plan_design.prototype.setIsPrivate = function(value) {
  jspb.Message.setProto3IntField(this, 34, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.product = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.product, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.product.displayName = 'proto.d5.db2.product';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.product.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.product.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.product} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.product.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    price: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    createTime: jspb.Message.getFieldWithDefault(msg, 5, 0),
    updateTime: jspb.Message.getFieldWithDefault(msg, 6, 0),
    brandId: jspb.Message.getFieldWithDefault(msg, 7, 0),
    source: jspb.Message.getFieldWithDefault(msg, 8, 0),
    productType: jspb.Message.getFieldWithDefault(msg, 9, 0),
    isPublished: jspb.Message.getFieldWithDefault(msg, 10, 0),
    isPrivate: jspb.Message.getFieldWithDefault(msg, 11, 0),
    isDel: jspb.Message.getFieldWithDefault(msg, 12, 0),
    userId: jspb.Message.getFieldWithDefault(msg, 13, 0),
    companyId: jspb.Message.getFieldWithDefault(msg, 14, 0),
    folderName: jspb.Message.getFieldWithDefault(msg, 15, ""),
    syncStatus: jspb.Message.getFieldWithDefault(msg, 16, 0),
    categoryId: jspb.Message.getFieldWithDefault(msg, 17, 0),
    buyUrl: jspb.Message.getFieldWithDefault(msg, 18, ""),
    dependentFileList: jspb.Message.getFieldWithDefault(msg, 19, ""),
    productCode: jspb.Message.getFieldWithDefault(msg, 20, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.product}
 */
proto.d5.db2.product.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.product;
  return proto.d5.db2.product.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.product} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.product}
 */
proto.d5.db2.product.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateTime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdateTime(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBrandId(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSource(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProductType(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsPublished(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsPrivate(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsDel(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserId(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCompanyId(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setFolderName(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSyncStatus(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCategoryId(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyUrl(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setDependentFileList(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.product.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.product.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.product} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.product.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getCreateTime();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getUpdateTime();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getBrandId();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getSource();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getProductType();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getIsPublished();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getIsPrivate();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getIsDel();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getCompanyId();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getFolderName();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getSyncStatus();
  if (f !== 0) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = message.getCategoryId();
  if (f !== 0) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = message.getBuyUrl();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getDependentFileList();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getProductCode();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.d5.db2.product.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.d5.db2.product.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.d5.db2.product.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.product.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.d5.db2.product.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.d5.db2.product.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional double price = 4;
 * @return {number}
 */
proto.d5.db2.product.prototype.getPrice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.d5.db2.product.prototype.setPrice = function(value) {
  jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional int64 create_time = 5;
 * @return {number}
 */
proto.d5.db2.product.prototype.getCreateTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.d5.db2.product.prototype.setCreateTime = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 update_time = 6;
 * @return {number}
 */
proto.d5.db2.product.prototype.getUpdateTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.d5.db2.product.prototype.setUpdateTime = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 brand_id = 7;
 * @return {number}
 */
proto.d5.db2.product.prototype.getBrandId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.d5.db2.product.prototype.setBrandId = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 source = 8;
 * @return {number}
 */
proto.d5.db2.product.prototype.getSource = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.d5.db2.product.prototype.setSource = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 product_type = 9;
 * @return {number}
 */
proto.d5.db2.product.prototype.getProductType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.d5.db2.product.prototype.setProductType = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 is_published = 10;
 * @return {number}
 */
proto.d5.db2.product.prototype.getIsPublished = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.d5.db2.product.prototype.setIsPublished = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 is_private = 11;
 * @return {number}
 */
proto.d5.db2.product.prototype.getIsPrivate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.d5.db2.product.prototype.setIsPrivate = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 is_del = 12;
 * @return {number}
 */
proto.d5.db2.product.prototype.getIsDel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.d5.db2.product.prototype.setIsDel = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 user_id = 13;
 * @return {number}
 */
proto.d5.db2.product.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.d5.db2.product.prototype.setUserId = function(value) {
  jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 company_id = 14;
 * @return {number}
 */
proto.d5.db2.product.prototype.getCompanyId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.d5.db2.product.prototype.setCompanyId = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional string folder_name = 15;
 * @return {string}
 */
proto.d5.db2.product.prototype.getFolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.d5.db2.product.prototype.setFolderName = function(value) {
  jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional int32 sync_status = 16;
 * @return {number}
 */
proto.d5.db2.product.prototype.getSyncStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.d5.db2.product.prototype.setSyncStatus = function(value) {
  jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional int32 category_id = 17;
 * @return {number}
 */
proto.d5.db2.product.prototype.getCategoryId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.d5.db2.product.prototype.setCategoryId = function(value) {
  jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional string buy_url = 18;
 * @return {string}
 */
proto.d5.db2.product.prototype.getBuyUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/** @param {string} value */
proto.d5.db2.product.prototype.setBuyUrl = function(value) {
  jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string dependent_file_list = 19;
 * @return {string}
 */
proto.d5.db2.product.prototype.getDependentFileList = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/** @param {string} value */
proto.d5.db2.product.prototype.setDependentFileList = function(value) {
  jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string product_code = 20;
 * @return {string}
 */
proto.d5.db2.product.prototype.getProductCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/** @param {string} value */
proto.d5.db2.product.prototype.setProductCode = function(value) {
  jspb.Message.setProto3StringField(this, 20, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.product_detail_virtual = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.product_detail_virtual, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.product_detail_virtual.displayName = 'proto.d5.db2.product_detail_virtual';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.product_detail_virtual.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.product_detail_virtual.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.product_detail_virtual} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.product_detail_virtual.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    price: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    createTime: jspb.Message.getFieldWithDefault(msg, 5, 0),
    updateTime: jspb.Message.getFieldWithDefault(msg, 6, 0),
    brandId: jspb.Message.getFieldWithDefault(msg, 7, 0),
    source: jspb.Message.getFieldWithDefault(msg, 8, 0),
    productType: jspb.Message.getFieldWithDefault(msg, 9, 0),
    isPublished: jspb.Message.getFieldWithDefault(msg, 10, 0),
    isPrivate: jspb.Message.getFieldWithDefault(msg, 11, 0),
    isDel: jspb.Message.getFieldWithDefault(msg, 12, 0),
    userId: jspb.Message.getFieldWithDefault(msg, 13, 0),
    companyId: jspb.Message.getFieldWithDefault(msg, 14, 0),
    folderName: jspb.Message.getFieldWithDefault(msg, 15, ""),
    syncStatus: jspb.Message.getFieldWithDefault(msg, 16, 0),
    categoryId: jspb.Message.getFieldWithDefault(msg, 17, 0),
    buyUrl: jspb.Message.getFieldWithDefault(msg, 18, ""),
    furnitureProductId: jspb.Message.getFieldWithDefault(msg, 19, ""),
    furnitureUePath: jspb.Message.getFieldWithDefault(msg, 20, ""),
    furniturePakUrl: jspb.Message.getFieldWithDefault(msg, 21, ""),
    furnitureLength: +jspb.Message.getFieldWithDefault(msg, 22, 0.0),
    furnitureDepth: +jspb.Message.getFieldWithDefault(msg, 23, 0.0),
    furnitureHeight: +jspb.Message.getFieldWithDefault(msg, 24, 0.0),
    furnitureIsInteractive: jspb.Message.getFieldWithDefault(msg, 25, 0),
    furnitureIntelligentType: jspb.Message.getFieldWithDefault(msg, 26, 0),
    furnitureFurnitureStyleId: jspb.Message.getFieldWithDefault(msg, 27, 0),
    furnitureFurnitureMainMaterialId: jspb.Message.getFieldWithDefault(msg, 28, 0),
    furnitureDetailInfo: jspb.Message.getFieldWithDefault(msg, 29, ""),
    buildingMaterialProductId: jspb.Message.getFieldWithDefault(msg, 30, ""),
    buildingMaterialIsForFloor: jspb.Message.getFieldWithDefault(msg, 31, 0),
    buildingMaterialIsForWall: jspb.Message.getFieldWithDefault(msg, 32, 0),
    buildingMaterialIsForCeiling: jspb.Message.getFieldWithDefault(msg, 33, 0),
    buildingMaterialMaterialId: jspb.Message.getFieldWithDefault(msg, 34, ""),
    buildingMaterialDetailInfo: jspb.Message.getFieldWithDefault(msg, 35, ""),
    buildingMaterialLength: jspb.Message.getFieldWithDefault(msg, 36, 0),
    buildingMaterialWidth: jspb.Message.getFieldWithDefault(msg, 37, 0),
    dependentFileList: jspb.Message.getFieldWithDefault(msg, 38, ""),
    productCode: jspb.Message.getFieldWithDefault(msg, 39, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.product_detail_virtual}
 */
proto.d5.db2.product_detail_virtual.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.product_detail_virtual;
  return proto.d5.db2.product_detail_virtual.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.product_detail_virtual} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.product_detail_virtual}
 */
proto.d5.db2.product_detail_virtual.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateTime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdateTime(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBrandId(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSource(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProductType(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsPublished(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsPrivate(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsDel(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserId(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCompanyId(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setFolderName(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSyncStatus(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCategoryId(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyUrl(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setFurnitureProductId(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setFurnitureUePath(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setFurniturePakUrl(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFurnitureLength(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFurnitureDepth(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFurnitureHeight(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFurnitureIsInteractive(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFurnitureIntelligentType(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFurnitureFurnitureStyleId(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFurnitureFurnitureMainMaterialId(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.setFurnitureDetailInfo(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuildingMaterialProductId(value);
      break;
    case 31:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBuildingMaterialIsForFloor(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBuildingMaterialIsForWall(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBuildingMaterialIsForCeiling(value);
      break;
    case 34:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuildingMaterialMaterialId(value);
      break;
    case 35:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuildingMaterialDetailInfo(value);
      break;
    case 36:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBuildingMaterialLength(value);
      break;
    case 37:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBuildingMaterialWidth(value);
      break;
    case 38:
      var value = /** @type {string} */ (reader.readString());
      msg.setDependentFileList(value);
      break;
    case 39:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.product_detail_virtual.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.product_detail_virtual.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.product_detail_virtual} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.product_detail_virtual.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getCreateTime();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getUpdateTime();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getBrandId();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getSource();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getProductType();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getIsPublished();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getIsPrivate();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getIsDel();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getCompanyId();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getFolderName();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getSyncStatus();
  if (f !== 0) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = message.getCategoryId();
  if (f !== 0) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = message.getBuyUrl();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getFurnitureProductId();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getFurnitureUePath();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getFurniturePakUrl();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getFurnitureLength();
  if (f !== 0.0) {
    writer.writeDouble(
      22,
      f
    );
  }
  f = message.getFurnitureDepth();
  if (f !== 0.0) {
    writer.writeDouble(
      23,
      f
    );
  }
  f = message.getFurnitureHeight();
  if (f !== 0.0) {
    writer.writeDouble(
      24,
      f
    );
  }
  f = message.getFurnitureIsInteractive();
  if (f !== 0) {
    writer.writeInt32(
      25,
      f
    );
  }
  f = message.getFurnitureIntelligentType();
  if (f !== 0) {
    writer.writeInt32(
      26,
      f
    );
  }
  f = message.getFurnitureFurnitureStyleId();
  if (f !== 0) {
    writer.writeInt32(
      27,
      f
    );
  }
  f = message.getFurnitureFurnitureMainMaterialId();
  if (f !== 0) {
    writer.writeInt32(
      28,
      f
    );
  }
  f = message.getFurnitureDetailInfo();
  if (f.length > 0) {
    writer.writeString(
      29,
      f
    );
  }
  f = message.getBuildingMaterialProductId();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getBuildingMaterialIsForFloor();
  if (f !== 0) {
    writer.writeInt32(
      31,
      f
    );
  }
  f = message.getBuildingMaterialIsForWall();
  if (f !== 0) {
    writer.writeInt32(
      32,
      f
    );
  }
  f = message.getBuildingMaterialIsForCeiling();
  if (f !== 0) {
    writer.writeInt32(
      33,
      f
    );
  }
  f = message.getBuildingMaterialMaterialId();
  if (f.length > 0) {
    writer.writeString(
      34,
      f
    );
  }
  f = message.getBuildingMaterialDetailInfo();
  if (f.length > 0) {
    writer.writeString(
      35,
      f
    );
  }
  f = message.getBuildingMaterialLength();
  if (f !== 0) {
    writer.writeInt32(
      36,
      f
    );
  }
  f = message.getBuildingMaterialWidth();
  if (f !== 0) {
    writer.writeInt32(
      37,
      f
    );
  }
  f = message.getDependentFileList();
  if (f.length > 0) {
    writer.writeString(
      38,
      f
    );
  }
  f = message.getProductCode();
  if (f.length > 0) {
    writer.writeString(
      39,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.d5.db2.product_detail_virtual.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.d5.db2.product_detail_virtual.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.d5.db2.product_detail_virtual.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.product_detail_virtual.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.d5.db2.product_detail_virtual.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.d5.db2.product_detail_virtual.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional double price = 4;
 * @return {number}
 */
proto.d5.db2.product_detail_virtual.prototype.getPrice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.d5.db2.product_detail_virtual.prototype.setPrice = function(value) {
  jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional int64 create_time = 5;
 * @return {number}
 */
proto.d5.db2.product_detail_virtual.prototype.getCreateTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.d5.db2.product_detail_virtual.prototype.setCreateTime = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 update_time = 6;
 * @return {number}
 */
proto.d5.db2.product_detail_virtual.prototype.getUpdateTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.d5.db2.product_detail_virtual.prototype.setUpdateTime = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 brand_id = 7;
 * @return {number}
 */
proto.d5.db2.product_detail_virtual.prototype.getBrandId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.d5.db2.product_detail_virtual.prototype.setBrandId = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 source = 8;
 * @return {number}
 */
proto.d5.db2.product_detail_virtual.prototype.getSource = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.d5.db2.product_detail_virtual.prototype.setSource = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 product_type = 9;
 * @return {number}
 */
proto.d5.db2.product_detail_virtual.prototype.getProductType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.d5.db2.product_detail_virtual.prototype.setProductType = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 is_published = 10;
 * @return {number}
 */
proto.d5.db2.product_detail_virtual.prototype.getIsPublished = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.d5.db2.product_detail_virtual.prototype.setIsPublished = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 is_private = 11;
 * @return {number}
 */
proto.d5.db2.product_detail_virtual.prototype.getIsPrivate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.d5.db2.product_detail_virtual.prototype.setIsPrivate = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 is_del = 12;
 * @return {number}
 */
proto.d5.db2.product_detail_virtual.prototype.getIsDel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.d5.db2.product_detail_virtual.prototype.setIsDel = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 user_id = 13;
 * @return {number}
 */
proto.d5.db2.product_detail_virtual.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.d5.db2.product_detail_virtual.prototype.setUserId = function(value) {
  jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 company_id = 14;
 * @return {number}
 */
proto.d5.db2.product_detail_virtual.prototype.getCompanyId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.d5.db2.product_detail_virtual.prototype.setCompanyId = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional string folder_name = 15;
 * @return {string}
 */
proto.d5.db2.product_detail_virtual.prototype.getFolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.d5.db2.product_detail_virtual.prototype.setFolderName = function(value) {
  jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional int32 sync_status = 16;
 * @return {number}
 */
proto.d5.db2.product_detail_virtual.prototype.getSyncStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.d5.db2.product_detail_virtual.prototype.setSyncStatus = function(value) {
  jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional int32 category_id = 17;
 * @return {number}
 */
proto.d5.db2.product_detail_virtual.prototype.getCategoryId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.d5.db2.product_detail_virtual.prototype.setCategoryId = function(value) {
  jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional string buy_url = 18;
 * @return {string}
 */
proto.d5.db2.product_detail_virtual.prototype.getBuyUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/** @param {string} value */
proto.d5.db2.product_detail_virtual.prototype.setBuyUrl = function(value) {
  jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string furniture_product_id = 19;
 * @return {string}
 */
proto.d5.db2.product_detail_virtual.prototype.getFurnitureProductId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/** @param {string} value */
proto.d5.db2.product_detail_virtual.prototype.setFurnitureProductId = function(value) {
  jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string furniture_ue_path = 20;
 * @return {string}
 */
proto.d5.db2.product_detail_virtual.prototype.getFurnitureUePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/** @param {string} value */
proto.d5.db2.product_detail_virtual.prototype.setFurnitureUePath = function(value) {
  jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string furniture_pak_url = 21;
 * @return {string}
 */
proto.d5.db2.product_detail_virtual.prototype.getFurniturePakUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/** @param {string} value */
proto.d5.db2.product_detail_virtual.prototype.setFurniturePakUrl = function(value) {
  jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional double furniture_length = 22;
 * @return {number}
 */
proto.d5.db2.product_detail_virtual.prototype.getFurnitureLength = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 22, 0.0));
};


/** @param {number} value */
proto.d5.db2.product_detail_virtual.prototype.setFurnitureLength = function(value) {
  jspb.Message.setProto3FloatField(this, 22, value);
};


/**
 * optional double furniture_depth = 23;
 * @return {number}
 */
proto.d5.db2.product_detail_virtual.prototype.getFurnitureDepth = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 23, 0.0));
};


/** @param {number} value */
proto.d5.db2.product_detail_virtual.prototype.setFurnitureDepth = function(value) {
  jspb.Message.setProto3FloatField(this, 23, value);
};


/**
 * optional double furniture_height = 24;
 * @return {number}
 */
proto.d5.db2.product_detail_virtual.prototype.getFurnitureHeight = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 24, 0.0));
};


/** @param {number} value */
proto.d5.db2.product_detail_virtual.prototype.setFurnitureHeight = function(value) {
  jspb.Message.setProto3FloatField(this, 24, value);
};


/**
 * optional int32 furniture_is_interactive = 25;
 * @return {number}
 */
proto.d5.db2.product_detail_virtual.prototype.getFurnitureIsInteractive = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/** @param {number} value */
proto.d5.db2.product_detail_virtual.prototype.setFurnitureIsInteractive = function(value) {
  jspb.Message.setProto3IntField(this, 25, value);
};


/**
 * optional int32 furniture_intelligent_type = 26;
 * @return {number}
 */
proto.d5.db2.product_detail_virtual.prototype.getFurnitureIntelligentType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/** @param {number} value */
proto.d5.db2.product_detail_virtual.prototype.setFurnitureIntelligentType = function(value) {
  jspb.Message.setProto3IntField(this, 26, value);
};


/**
 * optional int32 furniture_furniture_style_id = 27;
 * @return {number}
 */
proto.d5.db2.product_detail_virtual.prototype.getFurnitureFurnitureStyleId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/** @param {number} value */
proto.d5.db2.product_detail_virtual.prototype.setFurnitureFurnitureStyleId = function(value) {
  jspb.Message.setProto3IntField(this, 27, value);
};


/**
 * optional int32 furniture_furniture_main_material_id = 28;
 * @return {number}
 */
proto.d5.db2.product_detail_virtual.prototype.getFurnitureFurnitureMainMaterialId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/** @param {number} value */
proto.d5.db2.product_detail_virtual.prototype.setFurnitureFurnitureMainMaterialId = function(value) {
  jspb.Message.setProto3IntField(this, 28, value);
};


/**
 * optional string furniture_detail_info = 29;
 * @return {string}
 */
proto.d5.db2.product_detail_virtual.prototype.getFurnitureDetailInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};


/** @param {string} value */
proto.d5.db2.product_detail_virtual.prototype.setFurnitureDetailInfo = function(value) {
  jspb.Message.setProto3StringField(this, 29, value);
};


/**
 * optional string building_material_product_id = 30;
 * @return {string}
 */
proto.d5.db2.product_detail_virtual.prototype.getBuildingMaterialProductId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/** @param {string} value */
proto.d5.db2.product_detail_virtual.prototype.setBuildingMaterialProductId = function(value) {
  jspb.Message.setProto3StringField(this, 30, value);
};


/**
 * optional int32 building_material_is_for_floor = 31;
 * @return {number}
 */
proto.d5.db2.product_detail_virtual.prototype.getBuildingMaterialIsForFloor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 31, 0));
};


/** @param {number} value */
proto.d5.db2.product_detail_virtual.prototype.setBuildingMaterialIsForFloor = function(value) {
  jspb.Message.setProto3IntField(this, 31, value);
};


/**
 * optional int32 building_material_is_for_wall = 32;
 * @return {number}
 */
proto.d5.db2.product_detail_virtual.prototype.getBuildingMaterialIsForWall = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/** @param {number} value */
proto.d5.db2.product_detail_virtual.prototype.setBuildingMaterialIsForWall = function(value) {
  jspb.Message.setProto3IntField(this, 32, value);
};


/**
 * optional int32 building_material_is_for_ceiling = 33;
 * @return {number}
 */
proto.d5.db2.product_detail_virtual.prototype.getBuildingMaterialIsForCeiling = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 33, 0));
};


/** @param {number} value */
proto.d5.db2.product_detail_virtual.prototype.setBuildingMaterialIsForCeiling = function(value) {
  jspb.Message.setProto3IntField(this, 33, value);
};


/**
 * optional string building_material_material_id = 34;
 * @return {string}
 */
proto.d5.db2.product_detail_virtual.prototype.getBuildingMaterialMaterialId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 34, ""));
};


/** @param {string} value */
proto.d5.db2.product_detail_virtual.prototype.setBuildingMaterialMaterialId = function(value) {
  jspb.Message.setProto3StringField(this, 34, value);
};


/**
 * optional string building_material_detail_info = 35;
 * @return {string}
 */
proto.d5.db2.product_detail_virtual.prototype.getBuildingMaterialDetailInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 35, ""));
};


/** @param {string} value */
proto.d5.db2.product_detail_virtual.prototype.setBuildingMaterialDetailInfo = function(value) {
  jspb.Message.setProto3StringField(this, 35, value);
};


/**
 * optional int32 building_material_length = 36;
 * @return {number}
 */
proto.d5.db2.product_detail_virtual.prototype.getBuildingMaterialLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 36, 0));
};


/** @param {number} value */
proto.d5.db2.product_detail_virtual.prototype.setBuildingMaterialLength = function(value) {
  jspb.Message.setProto3IntField(this, 36, value);
};


/**
 * optional int32 building_material_width = 37;
 * @return {number}
 */
proto.d5.db2.product_detail_virtual.prototype.getBuildingMaterialWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 37, 0));
};


/** @param {number} value */
proto.d5.db2.product_detail_virtual.prototype.setBuildingMaterialWidth = function(value) {
  jspb.Message.setProto3IntField(this, 37, value);
};


/**
 * optional string dependent_file_list = 38;
 * @return {string}
 */
proto.d5.db2.product_detail_virtual.prototype.getDependentFileList = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 38, ""));
};


/** @param {string} value */
proto.d5.db2.product_detail_virtual.prototype.setDependentFileList = function(value) {
  jspb.Message.setProto3StringField(this, 38, value);
};


/**
 * optional string product_code = 39;
 * @return {string}
 */
proto.d5.db2.product_detail_virtual.prototype.getProductCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 39, ""));
};


/** @param {string} value */
proto.d5.db2.product_detail_virtual.prototype.setProductCode = function(value) {
  jspb.Message.setProto3StringField(this, 39, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.product_brand_temp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.product_brand_temp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.product_brand_temp.displayName = 'proto.d5.db2.product_brand_temp';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.product_brand_temp.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.product_brand_temp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.product_brand_temp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.product_brand_temp.toObject = function(includeInstance, msg) {
  var f, obj = {
    productId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    brand: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.product_brand_temp}
 */
proto.d5.db2.product_brand_temp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.product_brand_temp;
  return proto.d5.db2.product_brand_temp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.product_brand_temp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.product_brand_temp}
 */
proto.d5.db2.product_brand_temp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrand(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.product_brand_temp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.product_brand_temp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.product_brand_temp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.product_brand_temp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBrand();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string product_id = 1;
 * @return {string}
 */
proto.d5.db2.product_brand_temp.prototype.getProductId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.d5.db2.product_brand_temp.prototype.setProductId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string brand = 2;
 * @return {string}
 */
proto.d5.db2.product_brand_temp.prototype.getBrand = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.product_brand_temp.prototype.setBrand = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.product_category_map = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.product_category_map, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.product_category_map.displayName = 'proto.d5.db2.product_category_map';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.product_category_map.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.product_category_map.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.product_category_map} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.product_category_map.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    categoryId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    productId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.product_category_map}
 */
proto.d5.db2.product_category_map.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.product_category_map;
  return proto.d5.db2.product_category_map.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.product_category_map} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.product_category_map}
 */
proto.d5.db2.product_category_map.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCategoryId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.product_category_map.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.product_category_map.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.product_category_map} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.product_category_map.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCategoryId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getProductId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.d5.db2.product_category_map.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db2.product_category_map.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 category_id = 2;
 * @return {number}
 */
proto.d5.db2.product_category_map.prototype.getCategoryId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.d5.db2.product_category_map.prototype.setCategoryId = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string product_id = 3;
 * @return {string}
 */
proto.d5.db2.product_category_map.prototype.getProductId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.d5.db2.product_category_map.prototype.setProductId = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.product_image = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.product_image, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.product_image.displayName = 'proto.d5.db2.product_image';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.product_image.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.product_image.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.product_image} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.product_image.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    displayIndex: jspb.Message.getFieldWithDefault(msg, 2, 0),
    fileUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    productId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.product_image}
 */
proto.d5.db2.product_image.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.product_image;
  return proto.d5.db2.product_image.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.product_image} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.product_image}
 */
proto.d5.db2.product_image.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDisplayIndex(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileUrl(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.product_image.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.product_image.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.product_image} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.product_image.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDisplayIndex();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getFileUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProductId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.d5.db2.product_image.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.d5.db2.product_image.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 display_index = 2;
 * @return {number}
 */
proto.d5.db2.product_image.prototype.getDisplayIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.d5.db2.product_image.prototype.setDisplayIndex = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string file_url = 3;
 * @return {string}
 */
proto.d5.db2.product_image.prototype.getFileUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.d5.db2.product_image.prototype.setFileUrl = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string product_id = 4;
 * @return {string}
 */
proto.d5.db2.product_image.prototype.getProductId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.d5.db2.product_image.prototype.setProductId = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.setting_remember = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.setting_remember, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.setting_remember.displayName = 'proto.d5.db2.setting_remember';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.setting_remember.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.setting_remember.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.setting_remember} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.setting_remember.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    layoutPageTip: jspb.Message.getFieldWithDefault(msg, 2, 0),
    layoutDoNotShowAgain: jspb.Message.getFieldWithDefault(msg, 3, 0),
    vrCaptureDoNotShowAgain: jspb.Message.getFieldWithDefault(msg, 4, 0),
    syncDataTimestamp: jspb.Message.getFieldWithDefault(msg, 5, 0),
    scalability: jspb.Message.getFieldWithDefault(msg, 6, ""),
    magicConfirmDoNotShowAgain: jspb.Message.getFieldWithDefault(msg, 7, 0),
    decorationPageTip: jspb.Message.getFieldWithDefault(msg, 8, 0),
    materialReplaceTip: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.setting_remember}
 */
proto.d5.db2.setting_remember.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.setting_remember;
  return proto.d5.db2.setting_remember.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.setting_remember} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.setting_remember}
 */
proto.d5.db2.setting_remember.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLayoutPageTip(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLayoutDoNotShowAgain(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVrCaptureDoNotShowAgain(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSyncDataTimestamp(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setScalability(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMagicConfirmDoNotShowAgain(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDecorationPageTip(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaterialReplaceTip(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.setting_remember.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.setting_remember.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.setting_remember} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.setting_remember.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getLayoutPageTip();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getLayoutDoNotShowAgain();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getVrCaptureDoNotShowAgain();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getSyncDataTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getScalability();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getMagicConfirmDoNotShowAgain();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getDecorationPageTip();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getMaterialReplaceTip();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
};


/**
 * optional int32 user_id = 1;
 * @return {number}
 */
proto.d5.db2.setting_remember.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.d5.db2.setting_remember.prototype.setUserId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 layout_page_tip = 2;
 * @return {number}
 */
proto.d5.db2.setting_remember.prototype.getLayoutPageTip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.d5.db2.setting_remember.prototype.setLayoutPageTip = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 layout_do_not_show_again = 3;
 * @return {number}
 */
proto.d5.db2.setting_remember.prototype.getLayoutDoNotShowAgain = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.d5.db2.setting_remember.prototype.setLayoutDoNotShowAgain = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 vr_capture_do_not_show_again = 4;
 * @return {number}
 */
proto.d5.db2.setting_remember.prototype.getVrCaptureDoNotShowAgain = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.d5.db2.setting_remember.prototype.setVrCaptureDoNotShowAgain = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 sync_data_timestamp = 5;
 * @return {number}
 */
proto.d5.db2.setting_remember.prototype.getSyncDataTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.d5.db2.setting_remember.prototype.setSyncDataTimestamp = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string scalability = 6;
 * @return {string}
 */
proto.d5.db2.setting_remember.prototype.getScalability = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.d5.db2.setting_remember.prototype.setScalability = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 magic_confirm_do_not_show_again = 7;
 * @return {number}
 */
proto.d5.db2.setting_remember.prototype.getMagicConfirmDoNotShowAgain = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.d5.db2.setting_remember.prototype.setMagicConfirmDoNotShowAgain = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 decoration_page_tip = 8;
 * @return {number}
 */
proto.d5.db2.setting_remember.prototype.getDecorationPageTip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.d5.db2.setting_remember.prototype.setDecorationPageTip = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 material_replace_tip = 9;
 * @return {number}
 */
proto.d5.db2.setting_remember.prototype.getMaterialReplaceTip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.d5.db2.setting_remember.prototype.setMaterialReplaceTip = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.user_login = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.user_login, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.user_login.displayName = 'proto.d5.db2.user_login';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.user_login.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.user_login.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.user_login} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.user_login.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, ""),
    laststatus: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.user_login}
 */
proto.d5.db2.user_login.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.user_login;
  return proto.d5.db2.user_login.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.user_login} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.user_login}
 */
proto.d5.db2.user_login.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLaststatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.user_login.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.user_login.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.user_login} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.user_login.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLaststatus();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.d5.db2.user_login.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.d5.db2.user_login.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.d5.db2.user_login.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.user_login.prototype.setPassword = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 lastStatus = 3;
 * @return {number}
 */
proto.d5.db2.user_login.prototype.getLaststatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.d5.db2.user_login.prototype.setLaststatus = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.files_map = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.files_map, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.files_map.displayName = 'proto.d5.db2.files_map';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.files_map.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.files_map.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.files_map} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.files_map.toObject = function(includeInstance, msg) {
  var f, obj = {
    file: jspb.Message.getFieldWithDefault(msg, 1, ""),
    md5: jspb.Message.getFieldWithDefault(msg, 2, ""),
    updateTime: jspb.Message.getFieldWithDefault(msg, 3, 0),
    length: jspb.Message.getFieldWithDefault(msg, 4, 0),
    type: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.files_map}
 */
proto.d5.db2.files_map.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.files_map;
  return proto.d5.db2.files_map.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.files_map} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.files_map}
 */
proto.d5.db2.files_map.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFile(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMd5(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdateTime(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLength(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.files_map.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.files_map.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.files_map} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.files_map.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFile();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMd5();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUpdateTime();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getLength();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string file = 1;
 * @return {string}
 */
proto.d5.db2.files_map.prototype.getFile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.d5.db2.files_map.prototype.setFile = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string md5 = 2;
 * @return {string}
 */
proto.d5.db2.files_map.prototype.getMd5 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.d5.db2.files_map.prototype.setMd5 = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 update_time = 3;
 * @return {number}
 */
proto.d5.db2.files_map.prototype.getUpdateTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.d5.db2.files_map.prototype.setUpdateTime = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 length = 4;
 * @return {number}
 */
proto.d5.db2.files_map.prototype.getLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.d5.db2.files_map.prototype.setLength = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string type = 5;
 * @return {string}
 */
proto.d5.db2.files_map.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.d5.db2.files_map.prototype.setType = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.header = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.d5.db2.header, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.header.displayName = 'proto.d5.db2.header';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.header.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.header.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.header} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.header.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createTime: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.header}
 */
proto.d5.db2.header.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.header;
  return proto.d5.db2.header.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.header} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.header}
 */
proto.d5.db2.header.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.header.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.header.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.header} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.header.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreateTime();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.d5.db2.header.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.d5.db2.header.prototype.setKey = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 create_time = 2;
 * @return {number}
 */
proto.d5.db2.header.prototype.getCreateTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.d5.db2.header.prototype.setCreateTime = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.asset_building_material_db = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.d5.db2.asset_building_material_db.repeatedFields_, null);
};
goog.inherits(proto.d5.db2.asset_building_material_db, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.asset_building_material_db.displayName = 'proto.d5.db2.asset_building_material_db';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.d5.db2.asset_building_material_db.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.asset_building_material_db.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.asset_building_material_db.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.asset_building_material_db} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.asset_building_material_db.toObject = function(includeInstance, msg) {
  var f, obj = {
    head: (f = msg.getHead()) && proto.d5.db2.header.toObject(includeInstance, f),
    contentList: jspb.Message.toObjectList(msg.getContentList(),
    proto.d5.db2.asset_building_material.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.asset_building_material_db}
 */
proto.d5.db2.asset_building_material_db.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.asset_building_material_db;
  return proto.d5.db2.asset_building_material_db.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.asset_building_material_db} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.asset_building_material_db}
 */
proto.d5.db2.asset_building_material_db.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.d5.db2.header;
      reader.readMessage(value,proto.d5.db2.header.deserializeBinaryFromReader);
      msg.setHead(value);
      break;
    case 2:
      var value = new proto.d5.db2.asset_building_material;
      reader.readMessage(value,proto.d5.db2.asset_building_material.deserializeBinaryFromReader);
      msg.addContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.asset_building_material_db.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.asset_building_material_db.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.asset_building_material_db} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.asset_building_material_db.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHead();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.d5.db2.header.serializeBinaryToWriter
    );
  }
  f = message.getContentList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.d5.db2.asset_building_material.serializeBinaryToWriter
    );
  }
};


/**
 * optional header head = 1;
 * @return {?proto.d5.db2.header}
 */
proto.d5.db2.asset_building_material_db.prototype.getHead = function() {
  return /** @type{?proto.d5.db2.header} */ (
    jspb.Message.getWrapperField(this, proto.d5.db2.header, 1));
};


/** @param {?proto.d5.db2.header|undefined} value */
proto.d5.db2.asset_building_material_db.prototype.setHead = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.d5.db2.asset_building_material_db.prototype.clearHead = function() {
  this.setHead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.db2.asset_building_material_db.prototype.hasHead = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated asset_building_material content = 2;
 * @return {!Array<!proto.d5.db2.asset_building_material>}
 */
proto.d5.db2.asset_building_material_db.prototype.getContentList = function() {
  return /** @type{!Array<!proto.d5.db2.asset_building_material>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.d5.db2.asset_building_material, 2));
};


/** @param {!Array<!proto.d5.db2.asset_building_material>} value */
proto.d5.db2.asset_building_material_db.prototype.setContentList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.d5.db2.asset_building_material=} opt_value
 * @param {number=} opt_index
 * @return {!proto.d5.db2.asset_building_material}
 */
proto.d5.db2.asset_building_material_db.prototype.addContent = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.d5.db2.asset_building_material, opt_index);
};


proto.d5.db2.asset_building_material_db.prototype.clearContentList = function() {
  this.setContentList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.asset_furniture_db = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.d5.db2.asset_furniture_db.repeatedFields_, null);
};
goog.inherits(proto.d5.db2.asset_furniture_db, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.asset_furniture_db.displayName = 'proto.d5.db2.asset_furniture_db';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.d5.db2.asset_furniture_db.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.asset_furniture_db.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.asset_furniture_db.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.asset_furniture_db} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.asset_furniture_db.toObject = function(includeInstance, msg) {
  var f, obj = {
    head: (f = msg.getHead()) && proto.d5.db2.header.toObject(includeInstance, f),
    contentList: jspb.Message.toObjectList(msg.getContentList(),
    proto.d5.db2.asset_furniture.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.asset_furniture_db}
 */
proto.d5.db2.asset_furniture_db.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.asset_furniture_db;
  return proto.d5.db2.asset_furniture_db.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.asset_furniture_db} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.asset_furniture_db}
 */
proto.d5.db2.asset_furniture_db.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.d5.db2.header;
      reader.readMessage(value,proto.d5.db2.header.deserializeBinaryFromReader);
      msg.setHead(value);
      break;
    case 2:
      var value = new proto.d5.db2.asset_furniture;
      reader.readMessage(value,proto.d5.db2.asset_furniture.deserializeBinaryFromReader);
      msg.addContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.asset_furniture_db.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.asset_furniture_db.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.asset_furniture_db} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.asset_furniture_db.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHead();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.d5.db2.header.serializeBinaryToWriter
    );
  }
  f = message.getContentList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.d5.db2.asset_furniture.serializeBinaryToWriter
    );
  }
};


/**
 * optional header head = 1;
 * @return {?proto.d5.db2.header}
 */
proto.d5.db2.asset_furniture_db.prototype.getHead = function() {
  return /** @type{?proto.d5.db2.header} */ (
    jspb.Message.getWrapperField(this, proto.d5.db2.header, 1));
};


/** @param {?proto.d5.db2.header|undefined} value */
proto.d5.db2.asset_furniture_db.prototype.setHead = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.d5.db2.asset_furniture_db.prototype.clearHead = function() {
  this.setHead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.db2.asset_furniture_db.prototype.hasHead = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated asset_furniture content = 2;
 * @return {!Array<!proto.d5.db2.asset_furniture>}
 */
proto.d5.db2.asset_furniture_db.prototype.getContentList = function() {
  return /** @type{!Array<!proto.d5.db2.asset_furniture>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.d5.db2.asset_furniture, 2));
};


/** @param {!Array<!proto.d5.db2.asset_furniture>} value */
proto.d5.db2.asset_furniture_db.prototype.setContentList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.d5.db2.asset_furniture=} opt_value
 * @param {number=} opt_index
 * @return {!proto.d5.db2.asset_furniture}
 */
proto.d5.db2.asset_furniture_db.prototype.addContent = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.d5.db2.asset_furniture, opt_index);
};


proto.d5.db2.asset_furniture_db.prototype.clearContentList = function() {
  this.setContentList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.asset_furniture_style_db = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.d5.db2.asset_furniture_style_db.repeatedFields_, null);
};
goog.inherits(proto.d5.db2.asset_furniture_style_db, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.asset_furniture_style_db.displayName = 'proto.d5.db2.asset_furniture_style_db';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.d5.db2.asset_furniture_style_db.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.asset_furniture_style_db.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.asset_furniture_style_db.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.asset_furniture_style_db} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.asset_furniture_style_db.toObject = function(includeInstance, msg) {
  var f, obj = {
    head: (f = msg.getHead()) && proto.d5.db2.header.toObject(includeInstance, f),
    contentList: jspb.Message.toObjectList(msg.getContentList(),
    proto.d5.db2.asset_furniture_style.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.asset_furniture_style_db}
 */
proto.d5.db2.asset_furniture_style_db.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.asset_furniture_style_db;
  return proto.d5.db2.asset_furniture_style_db.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.asset_furniture_style_db} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.asset_furniture_style_db}
 */
proto.d5.db2.asset_furniture_style_db.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.d5.db2.header;
      reader.readMessage(value,proto.d5.db2.header.deserializeBinaryFromReader);
      msg.setHead(value);
      break;
    case 2:
      var value = new proto.d5.db2.asset_furniture_style;
      reader.readMessage(value,proto.d5.db2.asset_furniture_style.deserializeBinaryFromReader);
      msg.addContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.asset_furniture_style_db.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.asset_furniture_style_db.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.asset_furniture_style_db} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.asset_furniture_style_db.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHead();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.d5.db2.header.serializeBinaryToWriter
    );
  }
  f = message.getContentList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.d5.db2.asset_furniture_style.serializeBinaryToWriter
    );
  }
};


/**
 * optional header head = 1;
 * @return {?proto.d5.db2.header}
 */
proto.d5.db2.asset_furniture_style_db.prototype.getHead = function() {
  return /** @type{?proto.d5.db2.header} */ (
    jspb.Message.getWrapperField(this, proto.d5.db2.header, 1));
};


/** @param {?proto.d5.db2.header|undefined} value */
proto.d5.db2.asset_furniture_style_db.prototype.setHead = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.d5.db2.asset_furniture_style_db.prototype.clearHead = function() {
  this.setHead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.db2.asset_furniture_style_db.prototype.hasHead = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated asset_furniture_style content = 2;
 * @return {!Array<!proto.d5.db2.asset_furniture_style>}
 */
proto.d5.db2.asset_furniture_style_db.prototype.getContentList = function() {
  return /** @type{!Array<!proto.d5.db2.asset_furniture_style>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.d5.db2.asset_furniture_style, 2));
};


/** @param {!Array<!proto.d5.db2.asset_furniture_style>} value */
proto.d5.db2.asset_furniture_style_db.prototype.setContentList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.d5.db2.asset_furniture_style=} opt_value
 * @param {number=} opt_index
 * @return {!proto.d5.db2.asset_furniture_style}
 */
proto.d5.db2.asset_furniture_style_db.prototype.addContent = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.d5.db2.asset_furniture_style, opt_index);
};


proto.d5.db2.asset_furniture_style_db.prototype.clearContentList = function() {
  this.setContentList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.asset_furniture_style_material_map_db = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.d5.db2.asset_furniture_style_material_map_db.repeatedFields_, null);
};
goog.inherits(proto.d5.db2.asset_furniture_style_material_map_db, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.asset_furniture_style_material_map_db.displayName = 'proto.d5.db2.asset_furniture_style_material_map_db';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.d5.db2.asset_furniture_style_material_map_db.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.asset_furniture_style_material_map_db.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.asset_furniture_style_material_map_db.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.asset_furniture_style_material_map_db} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.asset_furniture_style_material_map_db.toObject = function(includeInstance, msg) {
  var f, obj = {
    head: (f = msg.getHead()) && proto.d5.db2.header.toObject(includeInstance, f),
    contentList: jspb.Message.toObjectList(msg.getContentList(),
    proto.d5.db2.asset_furniture_style_material_map.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.asset_furniture_style_material_map_db}
 */
proto.d5.db2.asset_furniture_style_material_map_db.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.asset_furniture_style_material_map_db;
  return proto.d5.db2.asset_furniture_style_material_map_db.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.asset_furniture_style_material_map_db} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.asset_furniture_style_material_map_db}
 */
proto.d5.db2.asset_furniture_style_material_map_db.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.d5.db2.header;
      reader.readMessage(value,proto.d5.db2.header.deserializeBinaryFromReader);
      msg.setHead(value);
      break;
    case 2:
      var value = new proto.d5.db2.asset_furniture_style_material_map;
      reader.readMessage(value,proto.d5.db2.asset_furniture_style_material_map.deserializeBinaryFromReader);
      msg.addContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.asset_furniture_style_material_map_db.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.asset_furniture_style_material_map_db.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.asset_furniture_style_material_map_db} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.asset_furniture_style_material_map_db.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHead();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.d5.db2.header.serializeBinaryToWriter
    );
  }
  f = message.getContentList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.d5.db2.asset_furniture_style_material_map.serializeBinaryToWriter
    );
  }
};


/**
 * optional header head = 1;
 * @return {?proto.d5.db2.header}
 */
proto.d5.db2.asset_furniture_style_material_map_db.prototype.getHead = function() {
  return /** @type{?proto.d5.db2.header} */ (
    jspb.Message.getWrapperField(this, proto.d5.db2.header, 1));
};


/** @param {?proto.d5.db2.header|undefined} value */
proto.d5.db2.asset_furniture_style_material_map_db.prototype.setHead = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.d5.db2.asset_furniture_style_material_map_db.prototype.clearHead = function() {
  this.setHead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.db2.asset_furniture_style_material_map_db.prototype.hasHead = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated asset_furniture_style_material_map content = 2;
 * @return {!Array<!proto.d5.db2.asset_furniture_style_material_map>}
 */
proto.d5.db2.asset_furniture_style_material_map_db.prototype.getContentList = function() {
  return /** @type{!Array<!proto.d5.db2.asset_furniture_style_material_map>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.d5.db2.asset_furniture_style_material_map, 2));
};


/** @param {!Array<!proto.d5.db2.asset_furniture_style_material_map>} value */
proto.d5.db2.asset_furniture_style_material_map_db.prototype.setContentList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.d5.db2.asset_furniture_style_material_map=} opt_value
 * @param {number=} opt_index
 * @return {!proto.d5.db2.asset_furniture_style_material_map}
 */
proto.d5.db2.asset_furniture_style_material_map_db.prototype.addContent = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.d5.db2.asset_furniture_style_material_map, opt_index);
};


proto.d5.db2.asset_furniture_style_material_map_db.prototype.clearContentList = function() {
  this.setContentList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.asset_material_db = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.d5.db2.asset_material_db.repeatedFields_, null);
};
goog.inherits(proto.d5.db2.asset_material_db, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.asset_material_db.displayName = 'proto.d5.db2.asset_material_db';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.d5.db2.asset_material_db.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.asset_material_db.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.asset_material_db.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.asset_material_db} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.asset_material_db.toObject = function(includeInstance, msg) {
  var f, obj = {
    head: (f = msg.getHead()) && proto.d5.db2.header.toObject(includeInstance, f),
    contentList: jspb.Message.toObjectList(msg.getContentList(),
    proto.d5.db2.asset_material.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.asset_material_db}
 */
proto.d5.db2.asset_material_db.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.asset_material_db;
  return proto.d5.db2.asset_material_db.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.asset_material_db} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.asset_material_db}
 */
proto.d5.db2.asset_material_db.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.d5.db2.header;
      reader.readMessage(value,proto.d5.db2.header.deserializeBinaryFromReader);
      msg.setHead(value);
      break;
    case 2:
      var value = new proto.d5.db2.asset_material;
      reader.readMessage(value,proto.d5.db2.asset_material.deserializeBinaryFromReader);
      msg.addContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.asset_material_db.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.asset_material_db.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.asset_material_db} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.asset_material_db.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHead();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.d5.db2.header.serializeBinaryToWriter
    );
  }
  f = message.getContentList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.d5.db2.asset_material.serializeBinaryToWriter
    );
  }
};


/**
 * optional header head = 1;
 * @return {?proto.d5.db2.header}
 */
proto.d5.db2.asset_material_db.prototype.getHead = function() {
  return /** @type{?proto.d5.db2.header} */ (
    jspb.Message.getWrapperField(this, proto.d5.db2.header, 1));
};


/** @param {?proto.d5.db2.header|undefined} value */
proto.d5.db2.asset_material_db.prototype.setHead = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.d5.db2.asset_material_db.prototype.clearHead = function() {
  this.setHead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.db2.asset_material_db.prototype.hasHead = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated asset_material content = 2;
 * @return {!Array<!proto.d5.db2.asset_material>}
 */
proto.d5.db2.asset_material_db.prototype.getContentList = function() {
  return /** @type{!Array<!proto.d5.db2.asset_material>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.d5.db2.asset_material, 2));
};


/** @param {!Array<!proto.d5.db2.asset_material>} value */
proto.d5.db2.asset_material_db.prototype.setContentList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.d5.db2.asset_material=} opt_value
 * @param {number=} opt_index
 * @return {!proto.d5.db2.asset_material}
 */
proto.d5.db2.asset_material_db.prototype.addContent = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.d5.db2.asset_material, opt_index);
};


proto.d5.db2.asset_material_db.prototype.clearContentList = function() {
  this.setContentList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.asset_material_category_db = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.d5.db2.asset_material_category_db.repeatedFields_, null);
};
goog.inherits(proto.d5.db2.asset_material_category_db, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.asset_material_category_db.displayName = 'proto.d5.db2.asset_material_category_db';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.d5.db2.asset_material_category_db.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.asset_material_category_db.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.asset_material_category_db.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.asset_material_category_db} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.asset_material_category_db.toObject = function(includeInstance, msg) {
  var f, obj = {
    head: (f = msg.getHead()) && proto.d5.db2.header.toObject(includeInstance, f),
    contentList: jspb.Message.toObjectList(msg.getContentList(),
    proto.d5.db2.asset_material_category.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.asset_material_category_db}
 */
proto.d5.db2.asset_material_category_db.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.asset_material_category_db;
  return proto.d5.db2.asset_material_category_db.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.asset_material_category_db} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.asset_material_category_db}
 */
proto.d5.db2.asset_material_category_db.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.d5.db2.header;
      reader.readMessage(value,proto.d5.db2.header.deserializeBinaryFromReader);
      msg.setHead(value);
      break;
    case 2:
      var value = new proto.d5.db2.asset_material_category;
      reader.readMessage(value,proto.d5.db2.asset_material_category.deserializeBinaryFromReader);
      msg.addContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.asset_material_category_db.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.asset_material_category_db.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.asset_material_category_db} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.asset_material_category_db.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHead();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.d5.db2.header.serializeBinaryToWriter
    );
  }
  f = message.getContentList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.d5.db2.asset_material_category.serializeBinaryToWriter
    );
  }
};


/**
 * optional header head = 1;
 * @return {?proto.d5.db2.header}
 */
proto.d5.db2.asset_material_category_db.prototype.getHead = function() {
  return /** @type{?proto.d5.db2.header} */ (
    jspb.Message.getWrapperField(this, proto.d5.db2.header, 1));
};


/** @param {?proto.d5.db2.header|undefined} value */
proto.d5.db2.asset_material_category_db.prototype.setHead = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.d5.db2.asset_material_category_db.prototype.clearHead = function() {
  this.setHead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.db2.asset_material_category_db.prototype.hasHead = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated asset_material_category content = 2;
 * @return {!Array<!proto.d5.db2.asset_material_category>}
 */
proto.d5.db2.asset_material_category_db.prototype.getContentList = function() {
  return /** @type{!Array<!proto.d5.db2.asset_material_category>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.d5.db2.asset_material_category, 2));
};


/** @param {!Array<!proto.d5.db2.asset_material_category>} value */
proto.d5.db2.asset_material_category_db.prototype.setContentList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.d5.db2.asset_material_category=} opt_value
 * @param {number=} opt_index
 * @return {!proto.d5.db2.asset_material_category}
 */
proto.d5.db2.asset_material_category_db.prototype.addContent = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.d5.db2.asset_material_category, opt_index);
};


proto.d5.db2.asset_material_category_db.prototype.clearContentList = function() {
  this.setContentList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.furniture_color_map_db = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.d5.db2.furniture_color_map_db.repeatedFields_, null);
};
goog.inherits(proto.d5.db2.furniture_color_map_db, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.furniture_color_map_db.displayName = 'proto.d5.db2.furniture_color_map_db';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.d5.db2.furniture_color_map_db.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.furniture_color_map_db.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.furniture_color_map_db.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.furniture_color_map_db} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.furniture_color_map_db.toObject = function(includeInstance, msg) {
  var f, obj = {
    head: (f = msg.getHead()) && proto.d5.db2.header.toObject(includeInstance, f),
    contentList: jspb.Message.toObjectList(msg.getContentList(),
    proto.d5.db2.furniture_color_map.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.furniture_color_map_db}
 */
proto.d5.db2.furniture_color_map_db.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.furniture_color_map_db;
  return proto.d5.db2.furniture_color_map_db.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.furniture_color_map_db} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.furniture_color_map_db}
 */
proto.d5.db2.furniture_color_map_db.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.d5.db2.header;
      reader.readMessage(value,proto.d5.db2.header.deserializeBinaryFromReader);
      msg.setHead(value);
      break;
    case 2:
      var value = new proto.d5.db2.furniture_color_map;
      reader.readMessage(value,proto.d5.db2.furniture_color_map.deserializeBinaryFromReader);
      msg.addContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.furniture_color_map_db.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.furniture_color_map_db.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.furniture_color_map_db} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.furniture_color_map_db.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHead();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.d5.db2.header.serializeBinaryToWriter
    );
  }
  f = message.getContentList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.d5.db2.furniture_color_map.serializeBinaryToWriter
    );
  }
};


/**
 * optional header head = 1;
 * @return {?proto.d5.db2.header}
 */
proto.d5.db2.furniture_color_map_db.prototype.getHead = function() {
  return /** @type{?proto.d5.db2.header} */ (
    jspb.Message.getWrapperField(this, proto.d5.db2.header, 1));
};


/** @param {?proto.d5.db2.header|undefined} value */
proto.d5.db2.furniture_color_map_db.prototype.setHead = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.d5.db2.furniture_color_map_db.prototype.clearHead = function() {
  this.setHead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.db2.furniture_color_map_db.prototype.hasHead = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated furniture_color_map content = 2;
 * @return {!Array<!proto.d5.db2.furniture_color_map>}
 */
proto.d5.db2.furniture_color_map_db.prototype.getContentList = function() {
  return /** @type{!Array<!proto.d5.db2.furniture_color_map>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.d5.db2.furniture_color_map, 2));
};


/** @param {!Array<!proto.d5.db2.furniture_color_map>} value */
proto.d5.db2.furniture_color_map_db.prototype.setContentList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.d5.db2.furniture_color_map=} opt_value
 * @param {number=} opt_index
 * @return {!proto.d5.db2.furniture_color_map}
 */
proto.d5.db2.furniture_color_map_db.prototype.addContent = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.d5.db2.furniture_color_map, opt_index);
};


proto.d5.db2.furniture_color_map_db.prototype.clearContentList = function() {
  this.setContentList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.GA_db = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.d5.db2.GA_db.repeatedFields_, null);
};
goog.inherits(proto.d5.db2.GA_db, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.GA_db.displayName = 'proto.d5.db2.GA_db';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.d5.db2.GA_db.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.GA_db.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.GA_db.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.GA_db} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.GA_db.toObject = function(includeInstance, msg) {
  var f, obj = {
    head: (f = msg.getHead()) && proto.d5.db2.header.toObject(includeInstance, f),
    contentList: jspb.Message.toObjectList(msg.getContentList(),
    proto.d5.db2.GA.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.GA_db}
 */
proto.d5.db2.GA_db.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.GA_db;
  return proto.d5.db2.GA_db.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.GA_db} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.GA_db}
 */
proto.d5.db2.GA_db.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.d5.db2.header;
      reader.readMessage(value,proto.d5.db2.header.deserializeBinaryFromReader);
      msg.setHead(value);
      break;
    case 2:
      var value = new proto.d5.db2.GA;
      reader.readMessage(value,proto.d5.db2.GA.deserializeBinaryFromReader);
      msg.addContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.GA_db.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.GA_db.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.GA_db} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.GA_db.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHead();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.d5.db2.header.serializeBinaryToWriter
    );
  }
  f = message.getContentList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.d5.db2.GA.serializeBinaryToWriter
    );
  }
};


/**
 * optional header head = 1;
 * @return {?proto.d5.db2.header}
 */
proto.d5.db2.GA_db.prototype.getHead = function() {
  return /** @type{?proto.d5.db2.header} */ (
    jspb.Message.getWrapperField(this, proto.d5.db2.header, 1));
};


/** @param {?proto.d5.db2.header|undefined} value */
proto.d5.db2.GA_db.prototype.setHead = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.d5.db2.GA_db.prototype.clearHead = function() {
  this.setHead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.db2.GA_db.prototype.hasHead = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated GA content = 2;
 * @return {!Array<!proto.d5.db2.GA>}
 */
proto.d5.db2.GA_db.prototype.getContentList = function() {
  return /** @type{!Array<!proto.d5.db2.GA>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.d5.db2.GA, 2));
};


/** @param {!Array<!proto.d5.db2.GA>} value */
proto.d5.db2.GA_db.prototype.setContentList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.d5.db2.GA=} opt_value
 * @param {number=} opt_index
 * @return {!proto.d5.db2.GA}
 */
proto.d5.db2.GA_db.prototype.addContent = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.d5.db2.GA, opt_index);
};


proto.d5.db2.GA_db.prototype.clearContentList = function() {
  this.setContentList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.plan_desgin_template_statu_db = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.d5.db2.plan_desgin_template_statu_db.repeatedFields_, null);
};
goog.inherits(proto.d5.db2.plan_desgin_template_statu_db, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.plan_desgin_template_statu_db.displayName = 'proto.d5.db2.plan_desgin_template_statu_db';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.d5.db2.plan_desgin_template_statu_db.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.plan_desgin_template_statu_db.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.plan_desgin_template_statu_db.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.plan_desgin_template_statu_db} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.plan_desgin_template_statu_db.toObject = function(includeInstance, msg) {
  var f, obj = {
    head: (f = msg.getHead()) && proto.d5.db2.header.toObject(includeInstance, f),
    contentList: jspb.Message.toObjectList(msg.getContentList(),
    proto.d5.db2.plan_desgin_template_statu.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.plan_desgin_template_statu_db}
 */
proto.d5.db2.plan_desgin_template_statu_db.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.plan_desgin_template_statu_db;
  return proto.d5.db2.plan_desgin_template_statu_db.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.plan_desgin_template_statu_db} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.plan_desgin_template_statu_db}
 */
proto.d5.db2.plan_desgin_template_statu_db.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.d5.db2.header;
      reader.readMessage(value,proto.d5.db2.header.deserializeBinaryFromReader);
      msg.setHead(value);
      break;
    case 2:
      var value = new proto.d5.db2.plan_desgin_template_statu;
      reader.readMessage(value,proto.d5.db2.plan_desgin_template_statu.deserializeBinaryFromReader);
      msg.addContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.plan_desgin_template_statu_db.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.plan_desgin_template_statu_db.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.plan_desgin_template_statu_db} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.plan_desgin_template_statu_db.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHead();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.d5.db2.header.serializeBinaryToWriter
    );
  }
  f = message.getContentList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.d5.db2.plan_desgin_template_statu.serializeBinaryToWriter
    );
  }
};


/**
 * optional header head = 1;
 * @return {?proto.d5.db2.header}
 */
proto.d5.db2.plan_desgin_template_statu_db.prototype.getHead = function() {
  return /** @type{?proto.d5.db2.header} */ (
    jspb.Message.getWrapperField(this, proto.d5.db2.header, 1));
};


/** @param {?proto.d5.db2.header|undefined} value */
proto.d5.db2.plan_desgin_template_statu_db.prototype.setHead = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.d5.db2.plan_desgin_template_statu_db.prototype.clearHead = function() {
  this.setHead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.db2.plan_desgin_template_statu_db.prototype.hasHead = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated plan_desgin_template_statu content = 2;
 * @return {!Array<!proto.d5.db2.plan_desgin_template_statu>}
 */
proto.d5.db2.plan_desgin_template_statu_db.prototype.getContentList = function() {
  return /** @type{!Array<!proto.d5.db2.plan_desgin_template_statu>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.d5.db2.plan_desgin_template_statu, 2));
};


/** @param {!Array<!proto.d5.db2.plan_desgin_template_statu>} value */
proto.d5.db2.plan_desgin_template_statu_db.prototype.setContentList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.d5.db2.plan_desgin_template_statu=} opt_value
 * @param {number=} opt_index
 * @return {!proto.d5.db2.plan_desgin_template_statu}
 */
proto.d5.db2.plan_desgin_template_statu_db.prototype.addContent = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.d5.db2.plan_desgin_template_statu, opt_index);
};


proto.d5.db2.plan_desgin_template_statu_db.prototype.clearContentList = function() {
  this.setContentList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.plan_design_db = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.d5.db2.plan_design_db.repeatedFields_, null);
};
goog.inherits(proto.d5.db2.plan_design_db, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.plan_design_db.displayName = 'proto.d5.db2.plan_design_db';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.d5.db2.plan_design_db.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.plan_design_db.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.plan_design_db.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.plan_design_db} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.plan_design_db.toObject = function(includeInstance, msg) {
  var f, obj = {
    head: (f = msg.getHead()) && proto.d5.db2.header.toObject(includeInstance, f),
    contentList: jspb.Message.toObjectList(msg.getContentList(),
    proto.d5.db2.plan_design.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.plan_design_db}
 */
proto.d5.db2.plan_design_db.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.plan_design_db;
  return proto.d5.db2.plan_design_db.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.plan_design_db} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.plan_design_db}
 */
proto.d5.db2.plan_design_db.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.d5.db2.header;
      reader.readMessage(value,proto.d5.db2.header.deserializeBinaryFromReader);
      msg.setHead(value);
      break;
    case 2:
      var value = new proto.d5.db2.plan_design;
      reader.readMessage(value,proto.d5.db2.plan_design.deserializeBinaryFromReader);
      msg.addContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.plan_design_db.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.plan_design_db.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.plan_design_db} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.plan_design_db.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHead();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.d5.db2.header.serializeBinaryToWriter
    );
  }
  f = message.getContentList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.d5.db2.plan_design.serializeBinaryToWriter
    );
  }
};


/**
 * optional header head = 1;
 * @return {?proto.d5.db2.header}
 */
proto.d5.db2.plan_design_db.prototype.getHead = function() {
  return /** @type{?proto.d5.db2.header} */ (
    jspb.Message.getWrapperField(this, proto.d5.db2.header, 1));
};


/** @param {?proto.d5.db2.header|undefined} value */
proto.d5.db2.plan_design_db.prototype.setHead = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.d5.db2.plan_design_db.prototype.clearHead = function() {
  this.setHead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.db2.plan_design_db.prototype.hasHead = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated plan_design content = 2;
 * @return {!Array<!proto.d5.db2.plan_design>}
 */
proto.d5.db2.plan_design_db.prototype.getContentList = function() {
  return /** @type{!Array<!proto.d5.db2.plan_design>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.d5.db2.plan_design, 2));
};


/** @param {!Array<!proto.d5.db2.plan_design>} value */
proto.d5.db2.plan_design_db.prototype.setContentList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.d5.db2.plan_design=} opt_value
 * @param {number=} opt_index
 * @return {!proto.d5.db2.plan_design}
 */
proto.d5.db2.plan_design_db.prototype.addContent = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.d5.db2.plan_design, opt_index);
};


proto.d5.db2.plan_design_db.prototype.clearContentList = function() {
  this.setContentList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.product_db = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.d5.db2.product_db.repeatedFields_, null);
};
goog.inherits(proto.d5.db2.product_db, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.product_db.displayName = 'proto.d5.db2.product_db';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.d5.db2.product_db.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.product_db.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.product_db.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.product_db} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.product_db.toObject = function(includeInstance, msg) {
  var f, obj = {
    head: (f = msg.getHead()) && proto.d5.db2.header.toObject(includeInstance, f),
    contentList: jspb.Message.toObjectList(msg.getContentList(),
    proto.d5.db2.product.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.product_db}
 */
proto.d5.db2.product_db.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.product_db;
  return proto.d5.db2.product_db.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.product_db} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.product_db}
 */
proto.d5.db2.product_db.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.d5.db2.header;
      reader.readMessage(value,proto.d5.db2.header.deserializeBinaryFromReader);
      msg.setHead(value);
      break;
    case 2:
      var value = new proto.d5.db2.product;
      reader.readMessage(value,proto.d5.db2.product.deserializeBinaryFromReader);
      msg.addContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.product_db.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.product_db.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.product_db} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.product_db.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHead();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.d5.db2.header.serializeBinaryToWriter
    );
  }
  f = message.getContentList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.d5.db2.product.serializeBinaryToWriter
    );
  }
};


/**
 * optional header head = 1;
 * @return {?proto.d5.db2.header}
 */
proto.d5.db2.product_db.prototype.getHead = function() {
  return /** @type{?proto.d5.db2.header} */ (
    jspb.Message.getWrapperField(this, proto.d5.db2.header, 1));
};


/** @param {?proto.d5.db2.header|undefined} value */
proto.d5.db2.product_db.prototype.setHead = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.d5.db2.product_db.prototype.clearHead = function() {
  this.setHead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.db2.product_db.prototype.hasHead = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated product content = 2;
 * @return {!Array<!proto.d5.db2.product>}
 */
proto.d5.db2.product_db.prototype.getContentList = function() {
  return /** @type{!Array<!proto.d5.db2.product>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.d5.db2.product, 2));
};


/** @param {!Array<!proto.d5.db2.product>} value */
proto.d5.db2.product_db.prototype.setContentList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.d5.db2.product=} opt_value
 * @param {number=} opt_index
 * @return {!proto.d5.db2.product}
 */
proto.d5.db2.product_db.prototype.addContent = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.d5.db2.product, opt_index);
};


proto.d5.db2.product_db.prototype.clearContentList = function() {
  this.setContentList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.product_brand_temp_db = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.d5.db2.product_brand_temp_db.repeatedFields_, null);
};
goog.inherits(proto.d5.db2.product_brand_temp_db, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.product_brand_temp_db.displayName = 'proto.d5.db2.product_brand_temp_db';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.d5.db2.product_brand_temp_db.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.product_brand_temp_db.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.product_brand_temp_db.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.product_brand_temp_db} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.product_brand_temp_db.toObject = function(includeInstance, msg) {
  var f, obj = {
    head: (f = msg.getHead()) && proto.d5.db2.header.toObject(includeInstance, f),
    contentList: jspb.Message.toObjectList(msg.getContentList(),
    proto.d5.db2.product_brand_temp.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.product_brand_temp_db}
 */
proto.d5.db2.product_brand_temp_db.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.product_brand_temp_db;
  return proto.d5.db2.product_brand_temp_db.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.product_brand_temp_db} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.product_brand_temp_db}
 */
proto.d5.db2.product_brand_temp_db.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.d5.db2.header;
      reader.readMessage(value,proto.d5.db2.header.deserializeBinaryFromReader);
      msg.setHead(value);
      break;
    case 2:
      var value = new proto.d5.db2.product_brand_temp;
      reader.readMessage(value,proto.d5.db2.product_brand_temp.deserializeBinaryFromReader);
      msg.addContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.product_brand_temp_db.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.product_brand_temp_db.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.product_brand_temp_db} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.product_brand_temp_db.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHead();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.d5.db2.header.serializeBinaryToWriter
    );
  }
  f = message.getContentList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.d5.db2.product_brand_temp.serializeBinaryToWriter
    );
  }
};


/**
 * optional header head = 1;
 * @return {?proto.d5.db2.header}
 */
proto.d5.db2.product_brand_temp_db.prototype.getHead = function() {
  return /** @type{?proto.d5.db2.header} */ (
    jspb.Message.getWrapperField(this, proto.d5.db2.header, 1));
};


/** @param {?proto.d5.db2.header|undefined} value */
proto.d5.db2.product_brand_temp_db.prototype.setHead = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.d5.db2.product_brand_temp_db.prototype.clearHead = function() {
  this.setHead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.db2.product_brand_temp_db.prototype.hasHead = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated product_brand_temp content = 2;
 * @return {!Array<!proto.d5.db2.product_brand_temp>}
 */
proto.d5.db2.product_brand_temp_db.prototype.getContentList = function() {
  return /** @type{!Array<!proto.d5.db2.product_brand_temp>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.d5.db2.product_brand_temp, 2));
};


/** @param {!Array<!proto.d5.db2.product_brand_temp>} value */
proto.d5.db2.product_brand_temp_db.prototype.setContentList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.d5.db2.product_brand_temp=} opt_value
 * @param {number=} opt_index
 * @return {!proto.d5.db2.product_brand_temp}
 */
proto.d5.db2.product_brand_temp_db.prototype.addContent = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.d5.db2.product_brand_temp, opt_index);
};


proto.d5.db2.product_brand_temp_db.prototype.clearContentList = function() {
  this.setContentList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.product_category_map_db = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.d5.db2.product_category_map_db.repeatedFields_, null);
};
goog.inherits(proto.d5.db2.product_category_map_db, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.product_category_map_db.displayName = 'proto.d5.db2.product_category_map_db';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.d5.db2.product_category_map_db.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.product_category_map_db.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.product_category_map_db.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.product_category_map_db} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.product_category_map_db.toObject = function(includeInstance, msg) {
  var f, obj = {
    head: (f = msg.getHead()) && proto.d5.db2.header.toObject(includeInstance, f),
    contentList: jspb.Message.toObjectList(msg.getContentList(),
    proto.d5.db2.product_category_map.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.product_category_map_db}
 */
proto.d5.db2.product_category_map_db.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.product_category_map_db;
  return proto.d5.db2.product_category_map_db.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.product_category_map_db} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.product_category_map_db}
 */
proto.d5.db2.product_category_map_db.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.d5.db2.header;
      reader.readMessage(value,proto.d5.db2.header.deserializeBinaryFromReader);
      msg.setHead(value);
      break;
    case 2:
      var value = new proto.d5.db2.product_category_map;
      reader.readMessage(value,proto.d5.db2.product_category_map.deserializeBinaryFromReader);
      msg.addContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.product_category_map_db.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.product_category_map_db.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.product_category_map_db} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.product_category_map_db.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHead();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.d5.db2.header.serializeBinaryToWriter
    );
  }
  f = message.getContentList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.d5.db2.product_category_map.serializeBinaryToWriter
    );
  }
};


/**
 * optional header head = 1;
 * @return {?proto.d5.db2.header}
 */
proto.d5.db2.product_category_map_db.prototype.getHead = function() {
  return /** @type{?proto.d5.db2.header} */ (
    jspb.Message.getWrapperField(this, proto.d5.db2.header, 1));
};


/** @param {?proto.d5.db2.header|undefined} value */
proto.d5.db2.product_category_map_db.prototype.setHead = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.d5.db2.product_category_map_db.prototype.clearHead = function() {
  this.setHead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.db2.product_category_map_db.prototype.hasHead = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated product_category_map content = 2;
 * @return {!Array<!proto.d5.db2.product_category_map>}
 */
proto.d5.db2.product_category_map_db.prototype.getContentList = function() {
  return /** @type{!Array<!proto.d5.db2.product_category_map>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.d5.db2.product_category_map, 2));
};


/** @param {!Array<!proto.d5.db2.product_category_map>} value */
proto.d5.db2.product_category_map_db.prototype.setContentList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.d5.db2.product_category_map=} opt_value
 * @param {number=} opt_index
 * @return {!proto.d5.db2.product_category_map}
 */
proto.d5.db2.product_category_map_db.prototype.addContent = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.d5.db2.product_category_map, opt_index);
};


proto.d5.db2.product_category_map_db.prototype.clearContentList = function() {
  this.setContentList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.product_image_db = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.d5.db2.product_image_db.repeatedFields_, null);
};
goog.inherits(proto.d5.db2.product_image_db, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.product_image_db.displayName = 'proto.d5.db2.product_image_db';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.d5.db2.product_image_db.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.product_image_db.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.product_image_db.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.product_image_db} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.product_image_db.toObject = function(includeInstance, msg) {
  var f, obj = {
    head: (f = msg.getHead()) && proto.d5.db2.header.toObject(includeInstance, f),
    contentList: jspb.Message.toObjectList(msg.getContentList(),
    proto.d5.db2.product_image.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.product_image_db}
 */
proto.d5.db2.product_image_db.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.product_image_db;
  return proto.d5.db2.product_image_db.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.product_image_db} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.product_image_db}
 */
proto.d5.db2.product_image_db.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.d5.db2.header;
      reader.readMessage(value,proto.d5.db2.header.deserializeBinaryFromReader);
      msg.setHead(value);
      break;
    case 2:
      var value = new proto.d5.db2.product_image;
      reader.readMessage(value,proto.d5.db2.product_image.deserializeBinaryFromReader);
      msg.addContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.product_image_db.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.product_image_db.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.product_image_db} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.product_image_db.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHead();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.d5.db2.header.serializeBinaryToWriter
    );
  }
  f = message.getContentList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.d5.db2.product_image.serializeBinaryToWriter
    );
  }
};


/**
 * optional header head = 1;
 * @return {?proto.d5.db2.header}
 */
proto.d5.db2.product_image_db.prototype.getHead = function() {
  return /** @type{?proto.d5.db2.header} */ (
    jspb.Message.getWrapperField(this, proto.d5.db2.header, 1));
};


/** @param {?proto.d5.db2.header|undefined} value */
proto.d5.db2.product_image_db.prototype.setHead = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.d5.db2.product_image_db.prototype.clearHead = function() {
  this.setHead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.db2.product_image_db.prototype.hasHead = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated product_image content = 2;
 * @return {!Array<!proto.d5.db2.product_image>}
 */
proto.d5.db2.product_image_db.prototype.getContentList = function() {
  return /** @type{!Array<!proto.d5.db2.product_image>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.d5.db2.product_image, 2));
};


/** @param {!Array<!proto.d5.db2.product_image>} value */
proto.d5.db2.product_image_db.prototype.setContentList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.d5.db2.product_image=} opt_value
 * @param {number=} opt_index
 * @return {!proto.d5.db2.product_image}
 */
proto.d5.db2.product_image_db.prototype.addContent = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.d5.db2.product_image, opt_index);
};


proto.d5.db2.product_image_db.prototype.clearContentList = function() {
  this.setContentList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.setting_remember_db = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.d5.db2.setting_remember_db.repeatedFields_, null);
};
goog.inherits(proto.d5.db2.setting_remember_db, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.setting_remember_db.displayName = 'proto.d5.db2.setting_remember_db';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.d5.db2.setting_remember_db.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.setting_remember_db.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.setting_remember_db.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.setting_remember_db} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.setting_remember_db.toObject = function(includeInstance, msg) {
  var f, obj = {
    head: (f = msg.getHead()) && proto.d5.db2.header.toObject(includeInstance, f),
    contentList: jspb.Message.toObjectList(msg.getContentList(),
    proto.d5.db2.setting_remember.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.setting_remember_db}
 */
proto.d5.db2.setting_remember_db.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.setting_remember_db;
  return proto.d5.db2.setting_remember_db.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.setting_remember_db} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.setting_remember_db}
 */
proto.d5.db2.setting_remember_db.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.d5.db2.header;
      reader.readMessage(value,proto.d5.db2.header.deserializeBinaryFromReader);
      msg.setHead(value);
      break;
    case 2:
      var value = new proto.d5.db2.setting_remember;
      reader.readMessage(value,proto.d5.db2.setting_remember.deserializeBinaryFromReader);
      msg.addContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.setting_remember_db.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.setting_remember_db.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.setting_remember_db} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.setting_remember_db.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHead();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.d5.db2.header.serializeBinaryToWriter
    );
  }
  f = message.getContentList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.d5.db2.setting_remember.serializeBinaryToWriter
    );
  }
};


/**
 * optional header head = 1;
 * @return {?proto.d5.db2.header}
 */
proto.d5.db2.setting_remember_db.prototype.getHead = function() {
  return /** @type{?proto.d5.db2.header} */ (
    jspb.Message.getWrapperField(this, proto.d5.db2.header, 1));
};


/** @param {?proto.d5.db2.header|undefined} value */
proto.d5.db2.setting_remember_db.prototype.setHead = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.d5.db2.setting_remember_db.prototype.clearHead = function() {
  this.setHead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.db2.setting_remember_db.prototype.hasHead = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated setting_remember content = 2;
 * @return {!Array<!proto.d5.db2.setting_remember>}
 */
proto.d5.db2.setting_remember_db.prototype.getContentList = function() {
  return /** @type{!Array<!proto.d5.db2.setting_remember>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.d5.db2.setting_remember, 2));
};


/** @param {!Array<!proto.d5.db2.setting_remember>} value */
proto.d5.db2.setting_remember_db.prototype.setContentList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.d5.db2.setting_remember=} opt_value
 * @param {number=} opt_index
 * @return {!proto.d5.db2.setting_remember}
 */
proto.d5.db2.setting_remember_db.prototype.addContent = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.d5.db2.setting_remember, opt_index);
};


proto.d5.db2.setting_remember_db.prototype.clearContentList = function() {
  this.setContentList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.d5.db2.user_login_db = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.d5.db2.user_login_db.repeatedFields_, null);
};
goog.inherits(proto.d5.db2.user_login_db, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.d5.db2.user_login_db.displayName = 'proto.d5.db2.user_login_db';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.d5.db2.user_login_db.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.d5.db2.user_login_db.prototype.toObject = function(opt_includeInstance) {
  return proto.d5.db2.user_login_db.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.d5.db2.user_login_db} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.user_login_db.toObject = function(includeInstance, msg) {
  var f, obj = {
    head: (f = msg.getHead()) && proto.d5.db2.header.toObject(includeInstance, f),
    contentList: jspb.Message.toObjectList(msg.getContentList(),
    proto.d5.db2.user_login.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.d5.db2.user_login_db}
 */
proto.d5.db2.user_login_db.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.d5.db2.user_login_db;
  return proto.d5.db2.user_login_db.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.d5.db2.user_login_db} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.d5.db2.user_login_db}
 */
proto.d5.db2.user_login_db.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.d5.db2.header;
      reader.readMessage(value,proto.d5.db2.header.deserializeBinaryFromReader);
      msg.setHead(value);
      break;
    case 2:
      var value = new proto.d5.db2.user_login;
      reader.readMessage(value,proto.d5.db2.user_login.deserializeBinaryFromReader);
      msg.addContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.d5.db2.user_login_db.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.d5.db2.user_login_db.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.d5.db2.user_login_db} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.d5.db2.user_login_db.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHead();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.d5.db2.header.serializeBinaryToWriter
    );
  }
  f = message.getContentList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.d5.db2.user_login.serializeBinaryToWriter
    );
  }
};


/**
 * optional header head = 1;
 * @return {?proto.d5.db2.header}
 */
proto.d5.db2.user_login_db.prototype.getHead = function() {
  return /** @type{?proto.d5.db2.header} */ (
    jspb.Message.getWrapperField(this, proto.d5.db2.header, 1));
};


/** @param {?proto.d5.db2.header|undefined} value */
proto.d5.db2.user_login_db.prototype.setHead = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.d5.db2.user_login_db.prototype.clearHead = function() {
  this.setHead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.d5.db2.user_login_db.prototype.hasHead = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated user_login content = 2;
 * @return {!Array<!proto.d5.db2.user_login>}
 */
proto.d5.db2.user_login_db.prototype.getContentList = function() {
  return /** @type{!Array<!proto.d5.db2.user_login>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.d5.db2.user_login, 2));
};


/** @param {!Array<!proto.d5.db2.user_login>} value */
proto.d5.db2.user_login_db.prototype.setContentList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.d5.db2.user_login=} opt_value
 * @param {number=} opt_index
 * @return {!proto.d5.db2.user_login}
 */
proto.d5.db2.user_login_db.prototype.addContent = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.d5.db2.user_login, opt_index);
};


proto.d5.db2.user_login_db.prototype.clearContentList = function() {
  this.setContentList([]);
};


goog.object.extend(exports, proto.d5.db2);
