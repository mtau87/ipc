// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_terminate.proto

#include "message_terminate.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace d5 {
class CMessageTerminateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageTerminateRequest>
      _instance;
} _CMessageTerminateRequest_default_instance_;
class CMessageTerminateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageTerminateResponse>
      _instance;
} _CMessageTerminateResponse_default_instance_;
class CMessageFusionReadyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageFusionReady>
      _instance;
} _CMessageFusionReady_default_instance_;
class CMessageFusionCloseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageFusionClose>
      _instance;
} _CMessageFusionClose_default_instance_;
class CMessageFusionMaximizeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageFusionMaximize>
      _instance;
} _CMessageFusionMaximize_default_instance_;
}  // namespace d5
namespace protobuf_message_5fterminate_2eproto {
void InitDefaultsCMessageTerminateRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::_CMessageTerminateRequest_default_instance_;
    new (ptr) ::d5::CMessageTerminateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageTerminateRequest::InitAsDefaultInstance();
}

void InitDefaultsCMessageTerminateRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageTerminateRequestImpl);
}

void InitDefaultsCMessageTerminateResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::_CMessageTerminateResponse_default_instance_;
    new (ptr) ::d5::CMessageTerminateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageTerminateResponse::InitAsDefaultInstance();
}

void InitDefaultsCMessageTerminateResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageTerminateResponseImpl);
}

void InitDefaultsCMessageFusionReadyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::_CMessageFusionReady_default_instance_;
    new (ptr) ::d5::CMessageFusionReady();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageFusionReady::InitAsDefaultInstance();
}

void InitDefaultsCMessageFusionReady() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageFusionReadyImpl);
}

void InitDefaultsCMessageFusionCloseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::_CMessageFusionClose_default_instance_;
    new (ptr) ::d5::CMessageFusionClose();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageFusionClose::InitAsDefaultInstance();
}

void InitDefaultsCMessageFusionClose() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageFusionCloseImpl);
}

void InitDefaultsCMessageFusionMaximizeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::_CMessageFusionMaximize_default_instance_;
    new (ptr) ::d5::CMessageFusionMaximize();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageFusionMaximize::InitAsDefaultInstance();
}

void InitDefaultsCMessageFusionMaximize() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageFusionMaximizeImpl);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageTerminateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageTerminateRequest, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageTerminateRequest, uuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageTerminateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageTerminateResponse, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageTerminateResponse, uuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageFusionReady, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageFusionReady, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageFusionReady, uuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageFusionClose, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageFusionClose, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageFusionClose, uuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageFusionMaximize, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageFusionMaximize, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageFusionMaximize, uuid_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::d5::CMessageTerminateRequest)},
  { 7, -1, sizeof(::d5::CMessageTerminateResponse)},
  { 14, -1, sizeof(::d5::CMessageFusionReady)},
  { 21, -1, sizeof(::d5::CMessageFusionClose)},
  { 28, -1, sizeof(::d5::CMessageFusionMaximize)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageTerminateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageTerminateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageFusionReady_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageFusionClose_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageFusionMaximize_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "message_terminate.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027message_terminate.proto\022\002d5\"6\n\030CMessag"
      "eTerminateRequest\022\014\n\004type\030\001 \001(\005\022\014\n\004uuid\030"
      "\002 \001(\t\"7\n\031CMessageTerminateResponse\022\014\n\004ty"
      "pe\030\001 \001(\005\022\014\n\004uuid\030\002 \001(\t\"1\n\023CMessageFusion"
      "Ready\022\014\n\004type\030\001 \001(\005\022\014\n\004uuid\030\002 \001(\t\"1\n\023CMe"
      "ssageFusionClose\022\014\n\004type\030\001 \001(\005\022\014\n\004uuid\030\002"
      " \001(\t\"4\n\026CMessageFusionMaximize\022\014\n\004type\030\001"
      " \001(\005\022\014\n\004uuid\030\002 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 306);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message_terminate.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_message_5fterminate_2eproto
namespace d5 {

// ===================================================================

void CMessageTerminateRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageTerminateRequest::kTypeFieldNumber;
const int CMessageTerminateRequest::kUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageTerminateRequest::CMessageTerminateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fterminate_2eproto::InitDefaultsCMessageTerminateRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageTerminateRequest)
}
CMessageTerminateRequest::CMessageTerminateRequest(const CMessageTerminateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:d5.CMessageTerminateRequest)
}

void CMessageTerminateRequest::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

CMessageTerminateRequest::~CMessageTerminateRequest() {
  // @@protoc_insertion_point(destructor:d5.CMessageTerminateRequest)
  SharedDtor();
}

void CMessageTerminateRequest::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMessageTerminateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageTerminateRequest::descriptor() {
  ::protobuf_message_5fterminate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fterminate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageTerminateRequest& CMessageTerminateRequest::default_instance() {
  ::protobuf_message_5fterminate_2eproto::InitDefaultsCMessageTerminateRequest();
  return *internal_default_instance();
}


void CMessageTerminateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageTerminateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool CMessageTerminateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageTerminateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageTerminateRequest.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageTerminateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageTerminateRequest)
  return false;
#undef DO_
}

void CMessageTerminateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageTerminateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageTerminateRequest.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uuid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageTerminateRequest)
}

::google::protobuf::uint8* CMessageTerminateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageTerminateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageTerminateRequest.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uuid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageTerminateRequest)
  return target;
}

size_t CMessageTerminateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageTerminateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uuid = 2;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageTerminateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageTerminateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageTerminateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageTerminateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageTerminateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageTerminateRequest)
    MergeFrom(*source);
  }
}

void CMessageTerminateRequest::MergeFrom(const CMessageTerminateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageTerminateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void CMessageTerminateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageTerminateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageTerminateRequest::CopyFrom(const CMessageTerminateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageTerminateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageTerminateRequest::IsInitialized() const {
  return true;
}

void CMessageTerminateRequest::Swap(CMessageTerminateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageTerminateRequest::InternalSwap(CMessageTerminateRequest* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageTerminateRequest::GetMetadata() const {
  protobuf_message_5fterminate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fterminate_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMessageTerminateResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageTerminateResponse::kTypeFieldNumber;
const int CMessageTerminateResponse::kUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageTerminateResponse::CMessageTerminateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fterminate_2eproto::InitDefaultsCMessageTerminateResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageTerminateResponse)
}
CMessageTerminateResponse::CMessageTerminateResponse(const CMessageTerminateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:d5.CMessageTerminateResponse)
}

void CMessageTerminateResponse::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

CMessageTerminateResponse::~CMessageTerminateResponse() {
  // @@protoc_insertion_point(destructor:d5.CMessageTerminateResponse)
  SharedDtor();
}

void CMessageTerminateResponse::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMessageTerminateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageTerminateResponse::descriptor() {
  ::protobuf_message_5fterminate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fterminate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageTerminateResponse& CMessageTerminateResponse::default_instance() {
  ::protobuf_message_5fterminate_2eproto::InitDefaultsCMessageTerminateResponse();
  return *internal_default_instance();
}


void CMessageTerminateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageTerminateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool CMessageTerminateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageTerminateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageTerminateResponse.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageTerminateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageTerminateResponse)
  return false;
#undef DO_
}

void CMessageTerminateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageTerminateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageTerminateResponse.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uuid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageTerminateResponse)
}

::google::protobuf::uint8* CMessageTerminateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageTerminateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageTerminateResponse.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uuid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageTerminateResponse)
  return target;
}

size_t CMessageTerminateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageTerminateResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uuid = 2;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageTerminateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageTerminateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageTerminateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageTerminateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageTerminateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageTerminateResponse)
    MergeFrom(*source);
  }
}

void CMessageTerminateResponse::MergeFrom(const CMessageTerminateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageTerminateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void CMessageTerminateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageTerminateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageTerminateResponse::CopyFrom(const CMessageTerminateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageTerminateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageTerminateResponse::IsInitialized() const {
  return true;
}

void CMessageTerminateResponse::Swap(CMessageTerminateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageTerminateResponse::InternalSwap(CMessageTerminateResponse* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageTerminateResponse::GetMetadata() const {
  protobuf_message_5fterminate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fterminate_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMessageFusionReady::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageFusionReady::kTypeFieldNumber;
const int CMessageFusionReady::kUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageFusionReady::CMessageFusionReady()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fterminate_2eproto::InitDefaultsCMessageFusionReady();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageFusionReady)
}
CMessageFusionReady::CMessageFusionReady(const CMessageFusionReady& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:d5.CMessageFusionReady)
}

void CMessageFusionReady::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

CMessageFusionReady::~CMessageFusionReady() {
  // @@protoc_insertion_point(destructor:d5.CMessageFusionReady)
  SharedDtor();
}

void CMessageFusionReady::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMessageFusionReady::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageFusionReady::descriptor() {
  ::protobuf_message_5fterminate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fterminate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageFusionReady& CMessageFusionReady::default_instance() {
  ::protobuf_message_5fterminate_2eproto::InitDefaultsCMessageFusionReady();
  return *internal_default_instance();
}


void CMessageFusionReady::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageFusionReady)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool CMessageFusionReady::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageFusionReady)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageFusionReady.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageFusionReady)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageFusionReady)
  return false;
#undef DO_
}

void CMessageFusionReady::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageFusionReady)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageFusionReady.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uuid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageFusionReady)
}

::google::protobuf::uint8* CMessageFusionReady::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageFusionReady)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageFusionReady.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uuid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageFusionReady)
  return target;
}

size_t CMessageFusionReady::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageFusionReady)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uuid = 2;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageFusionReady::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageFusionReady)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageFusionReady* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageFusionReady>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageFusionReady)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageFusionReady)
    MergeFrom(*source);
  }
}

void CMessageFusionReady::MergeFrom(const CMessageFusionReady& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageFusionReady)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void CMessageFusionReady::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageFusionReady)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageFusionReady::CopyFrom(const CMessageFusionReady& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageFusionReady)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageFusionReady::IsInitialized() const {
  return true;
}

void CMessageFusionReady::Swap(CMessageFusionReady* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageFusionReady::InternalSwap(CMessageFusionReady* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageFusionReady::GetMetadata() const {
  protobuf_message_5fterminate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fterminate_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMessageFusionClose::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageFusionClose::kTypeFieldNumber;
const int CMessageFusionClose::kUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageFusionClose::CMessageFusionClose()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fterminate_2eproto::InitDefaultsCMessageFusionClose();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageFusionClose)
}
CMessageFusionClose::CMessageFusionClose(const CMessageFusionClose& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:d5.CMessageFusionClose)
}

void CMessageFusionClose::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

CMessageFusionClose::~CMessageFusionClose() {
  // @@protoc_insertion_point(destructor:d5.CMessageFusionClose)
  SharedDtor();
}

void CMessageFusionClose::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMessageFusionClose::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageFusionClose::descriptor() {
  ::protobuf_message_5fterminate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fterminate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageFusionClose& CMessageFusionClose::default_instance() {
  ::protobuf_message_5fterminate_2eproto::InitDefaultsCMessageFusionClose();
  return *internal_default_instance();
}


void CMessageFusionClose::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageFusionClose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool CMessageFusionClose::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageFusionClose)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageFusionClose.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageFusionClose)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageFusionClose)
  return false;
#undef DO_
}

void CMessageFusionClose::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageFusionClose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageFusionClose.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uuid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageFusionClose)
}

::google::protobuf::uint8* CMessageFusionClose::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageFusionClose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageFusionClose.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uuid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageFusionClose)
  return target;
}

size_t CMessageFusionClose::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageFusionClose)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uuid = 2;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageFusionClose::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageFusionClose)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageFusionClose* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageFusionClose>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageFusionClose)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageFusionClose)
    MergeFrom(*source);
  }
}

void CMessageFusionClose::MergeFrom(const CMessageFusionClose& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageFusionClose)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void CMessageFusionClose::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageFusionClose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageFusionClose::CopyFrom(const CMessageFusionClose& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageFusionClose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageFusionClose::IsInitialized() const {
  return true;
}

void CMessageFusionClose::Swap(CMessageFusionClose* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageFusionClose::InternalSwap(CMessageFusionClose* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageFusionClose::GetMetadata() const {
  protobuf_message_5fterminate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fterminate_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMessageFusionMaximize::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageFusionMaximize::kTypeFieldNumber;
const int CMessageFusionMaximize::kUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageFusionMaximize::CMessageFusionMaximize()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fterminate_2eproto::InitDefaultsCMessageFusionMaximize();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageFusionMaximize)
}
CMessageFusionMaximize::CMessageFusionMaximize(const CMessageFusionMaximize& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:d5.CMessageFusionMaximize)
}

void CMessageFusionMaximize::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

CMessageFusionMaximize::~CMessageFusionMaximize() {
  // @@protoc_insertion_point(destructor:d5.CMessageFusionMaximize)
  SharedDtor();
}

void CMessageFusionMaximize::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMessageFusionMaximize::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageFusionMaximize::descriptor() {
  ::protobuf_message_5fterminate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fterminate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageFusionMaximize& CMessageFusionMaximize::default_instance() {
  ::protobuf_message_5fterminate_2eproto::InitDefaultsCMessageFusionMaximize();
  return *internal_default_instance();
}


void CMessageFusionMaximize::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageFusionMaximize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool CMessageFusionMaximize::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageFusionMaximize)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageFusionMaximize.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageFusionMaximize)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageFusionMaximize)
  return false;
#undef DO_
}

void CMessageFusionMaximize::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageFusionMaximize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageFusionMaximize.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uuid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageFusionMaximize)
}

::google::protobuf::uint8* CMessageFusionMaximize::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageFusionMaximize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageFusionMaximize.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uuid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageFusionMaximize)
  return target;
}

size_t CMessageFusionMaximize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageFusionMaximize)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uuid = 2;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageFusionMaximize::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageFusionMaximize)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageFusionMaximize* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageFusionMaximize>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageFusionMaximize)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageFusionMaximize)
    MergeFrom(*source);
  }
}

void CMessageFusionMaximize::MergeFrom(const CMessageFusionMaximize& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageFusionMaximize)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void CMessageFusionMaximize::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageFusionMaximize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageFusionMaximize::CopyFrom(const CMessageFusionMaximize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageFusionMaximize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageFusionMaximize::IsInitialized() const {
  return true;
}

void CMessageFusionMaximize::Swap(CMessageFusionMaximize* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageFusionMaximize::InternalSwap(CMessageFusionMaximize* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageFusionMaximize::GetMetadata() const {
  protobuf_message_5fterminate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fterminate_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace d5
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageTerminateRequest* Arena::Create< ::d5::CMessageTerminateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageTerminateRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageTerminateResponse* Arena::Create< ::d5::CMessageTerminateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageTerminateResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageFusionReady* Arena::Create< ::d5::CMessageFusionReady >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageFusionReady >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageFusionClose* Arena::Create< ::d5::CMessageFusionClose >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageFusionClose >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageFusionMaximize* Arena::Create< ::d5::CMessageFusionMaximize >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageFusionMaximize >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
