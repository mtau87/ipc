// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_login.proto

#ifndef PROTOBUF_message_5flogin_2eproto_INCLUDED
#define PROTOBUF_message_5flogin_2eproto_INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "message_http_login.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_message_5flogin_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsCMessageLoginRequestImpl();
void InitDefaultsCMessageLoginRequest();
void InitDefaultsCMessageLoginResponseImpl();
void InitDefaultsCMessageLoginResponse();
void InitDefaultsCMessageLoginInfoImpl();
void InitDefaultsCMessageLoginInfo();
void InitDefaultsCMessageLogoutImpl();
void InitDefaultsCMessageLogout();
inline void InitDefaults() {
  InitDefaultsCMessageLoginRequest();
  InitDefaultsCMessageLoginResponse();
  InitDefaultsCMessageLoginInfo();
  InitDefaultsCMessageLogout();
}
}  // namespace protobuf_message_5flogin_2eproto
namespace d5 {
class CMessageLoginInfo;
class CMessageLoginInfoDefaultTypeInternal;
extern CMessageLoginInfoDefaultTypeInternal _CMessageLoginInfo_default_instance_;
class CMessageLoginRequest;
class CMessageLoginRequestDefaultTypeInternal;
extern CMessageLoginRequestDefaultTypeInternal _CMessageLoginRequest_default_instance_;
class CMessageLoginResponse;
class CMessageLoginResponseDefaultTypeInternal;
extern CMessageLoginResponseDefaultTypeInternal _CMessageLoginResponse_default_instance_;
class CMessageLogout;
class CMessageLogoutDefaultTypeInternal;
extern CMessageLogoutDefaultTypeInternal _CMessageLogout_default_instance_;
}  // namespace d5
namespace google {
namespace protobuf {
template<> ::d5::CMessageLoginInfo* Arena::Create< ::d5::CMessageLoginInfo>(Arena*);
template<> ::d5::CMessageLoginRequest* Arena::Create< ::d5::CMessageLoginRequest>(Arena*);
template<> ::d5::CMessageLoginResponse* Arena::Create< ::d5::CMessageLoginResponse>(Arena*);
template<> ::d5::CMessageLogout* Arena::Create< ::d5::CMessageLogout>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace d5 {

// ===================================================================

class CMessageLoginRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageLoginRequest) */ {
 public:
  CMessageLoginRequest();
  virtual ~CMessageLoginRequest();

  CMessageLoginRequest(const CMessageLoginRequest& from);

  inline CMessageLoginRequest& operator=(const CMessageLoginRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageLoginRequest(CMessageLoginRequest&& from) noexcept
    : CMessageLoginRequest() {
    *this = ::std::move(from);
  }

  inline CMessageLoginRequest& operator=(CMessageLoginRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLoginRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageLoginRequest* internal_default_instance() {
    return reinterpret_cast<const CMessageLoginRequest*>(
               &_CMessageLoginRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CMessageLoginRequest* other);
  friend void swap(CMessageLoginRequest& a, CMessageLoginRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageLoginRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageLoginRequest>(NULL);
  }

  CMessageLoginRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageLoginRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageLoginRequest& from);
  void MergeFrom(const CMessageLoginRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageLoginRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // string user = 3;
  void clear_user();
  static const int kUserFieldNumber = 3;
  const ::std::string& user() const;
  void set_user(const ::std::string& value);
  #if LANG_CXX11
  void set_user(::std::string&& value);
  #endif
  void set_user(const char* value);
  void set_user(const char* value, size_t size);
  ::std::string* mutable_user();
  ::std::string* release_user();
  void set_allocated_user(::std::string* user);

  // string password = 4;
  void clear_password();
  static const int kPasswordFieldNumber = 4;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 remember = 5;
  void clear_remember();
  static const int kRememberFieldNumber = 5;
  ::google::protobuf::int32 remember() const;
  void set_remember(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageLoginRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::internal::ArenaStringPtr user_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 remember_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5flogin_2eproto::TableStruct;
  friend void ::protobuf_message_5flogin_2eproto::InitDefaultsCMessageLoginRequestImpl();
};
// -------------------------------------------------------------------

class CMessageLoginResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageLoginResponse) */ {
 public:
  CMessageLoginResponse();
  virtual ~CMessageLoginResponse();

  CMessageLoginResponse(const CMessageLoginResponse& from);

  inline CMessageLoginResponse& operator=(const CMessageLoginResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageLoginResponse(CMessageLoginResponse&& from) noexcept
    : CMessageLoginResponse() {
    *this = ::std::move(from);
  }

  inline CMessageLoginResponse& operator=(CMessageLoginResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLoginResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageLoginResponse* internal_default_instance() {
    return reinterpret_cast<const CMessageLoginResponse*>(
               &_CMessageLoginResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CMessageLoginResponse* other);
  friend void swap(CMessageLoginResponse& a, CMessageLoginResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageLoginResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageLoginResponse>(NULL);
  }

  CMessageLoginResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageLoginResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageLoginResponse& from);
  void MergeFrom(const CMessageLoginResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageLoginResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // .d5.CMessageLoginMsg list = 4;
  bool has_list() const;
  void clear_list();
  static const int kListFieldNumber = 4;
  const ::d5::CMessageLoginMsg& list() const;
  ::d5::CMessageLoginMsg* release_list();
  ::d5::CMessageLoginMsg* mutable_list();
  void set_allocated_list(::d5::CMessageLoginMsg* list);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 state = 3;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageLoginResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::d5::CMessageLoginMsg* list_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 state_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5flogin_2eproto::TableStruct;
  friend void ::protobuf_message_5flogin_2eproto::InitDefaultsCMessageLoginResponseImpl();
};
// -------------------------------------------------------------------

class CMessageLoginInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageLoginInfo) */ {
 public:
  CMessageLoginInfo();
  virtual ~CMessageLoginInfo();

  CMessageLoginInfo(const CMessageLoginInfo& from);

  inline CMessageLoginInfo& operator=(const CMessageLoginInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageLoginInfo(CMessageLoginInfo&& from) noexcept
    : CMessageLoginInfo() {
    *this = ::std::move(from);
  }

  inline CMessageLoginInfo& operator=(CMessageLoginInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLoginInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageLoginInfo* internal_default_instance() {
    return reinterpret_cast<const CMessageLoginInfo*>(
               &_CMessageLoginInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CMessageLoginInfo* other);
  friend void swap(CMessageLoginInfo& a, CMessageLoginInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageLoginInfo* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageLoginInfo>(NULL);
  }

  CMessageLoginInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageLoginInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageLoginInfo& from);
  void MergeFrom(const CMessageLoginInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageLoginInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // string token = 4;
  void clear_token();
  static const int kTokenFieldNumber = 4;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string companyLogoUrl = 8;
  void clear_companylogourl();
  static const int kCompanyLogoUrlFieldNumber = 8;
  const ::std::string& companylogourl() const;
  void set_companylogourl(const ::std::string& value);
  #if LANG_CXX11
  void set_companylogourl(::std::string&& value);
  #endif
  void set_companylogourl(const char* value);
  void set_companylogourl(const char* value, size_t size);
  ::std::string* mutable_companylogourl();
  ::std::string* release_companylogourl();
  void set_allocated_companylogourl(::std::string* companylogourl);

  // string userName = 9;
  void clear_username();
  static const int kUserNameFieldNumber = 9;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 state = 3;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // int32 companyId = 5;
  void clear_companyid();
  static const int kCompanyIdFieldNumber = 5;
  ::google::protobuf::int32 companyid() const;
  void set_companyid(::google::protobuf::int32 value);

  // int32 roleId = 6;
  void clear_roleid();
  static const int kRoleIdFieldNumber = 6;
  ::google::protobuf::int32 roleid() const;
  void set_roleid(::google::protobuf::int32 value);

  // int32 userId = 7;
  void clear_userid();
  static const int kUserIdFieldNumber = 7;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageLoginInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr companylogourl_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 companyid_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 userid_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5flogin_2eproto::TableStruct;
  friend void ::protobuf_message_5flogin_2eproto::InitDefaultsCMessageLoginInfoImpl();
};
// -------------------------------------------------------------------

class CMessageLogout : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageLogout) */ {
 public:
  CMessageLogout();
  virtual ~CMessageLogout();

  CMessageLogout(const CMessageLogout& from);

  inline CMessageLogout& operator=(const CMessageLogout& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageLogout(CMessageLogout&& from) noexcept
    : CMessageLogout() {
    *this = ::std::move(from);
  }

  inline CMessageLogout& operator=(CMessageLogout&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLogout& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageLogout* internal_default_instance() {
    return reinterpret_cast<const CMessageLogout*>(
               &_CMessageLogout_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CMessageLogout* other);
  friend void swap(CMessageLogout& a, CMessageLogout& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageLogout* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageLogout>(NULL);
  }

  CMessageLogout* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageLogout>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageLogout& from);
  void MergeFrom(const CMessageLogout& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageLogout* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageLogout)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5flogin_2eproto::TableStruct;
  friend void ::protobuf_message_5flogin_2eproto::InitDefaultsCMessageLogoutImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMessageLoginRequest

// int32 type = 1;
inline void CMessageLoginRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageLoginRequest::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageLoginRequest.type)
  return type_;
}
inline void CMessageLoginRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageLoginRequest.type)
}

// string uuid = 2;
inline void CMessageLoginRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageLoginRequest::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageLoginRequest.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageLoginRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageLoginRequest.uuid)
}
#if LANG_CXX11
inline void CMessageLoginRequest::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageLoginRequest.uuid)
}
#endif
inline void CMessageLoginRequest::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageLoginRequest.uuid)
}
inline void CMessageLoginRequest::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageLoginRequest.uuid)
}
inline ::std::string* CMessageLoginRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageLoginRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageLoginRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageLoginRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageLoginRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageLoginRequest.uuid)
}

// string user = 3;
inline void CMessageLoginRequest::clear_user() {
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageLoginRequest::user() const {
  // @@protoc_insertion_point(field_get:d5.CMessageLoginRequest.user)
  return user_.GetNoArena();
}
inline void CMessageLoginRequest::set_user(const ::std::string& value) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageLoginRequest.user)
}
#if LANG_CXX11
inline void CMessageLoginRequest::set_user(::std::string&& value) {
  
  user_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageLoginRequest.user)
}
#endif
inline void CMessageLoginRequest::set_user(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageLoginRequest.user)
}
inline void CMessageLoginRequest::set_user(const char* value, size_t size) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageLoginRequest.user)
}
inline ::std::string* CMessageLoginRequest::mutable_user() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageLoginRequest.user)
  return user_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageLoginRequest::release_user() {
  // @@protoc_insertion_point(field_release:d5.CMessageLoginRequest.user)
  
  return user_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageLoginRequest::set_allocated_user(::std::string* user) {
  if (user != NULL) {
    
  } else {
    
  }
  user_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageLoginRequest.user)
}

// string password = 4;
inline void CMessageLoginRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageLoginRequest::password() const {
  // @@protoc_insertion_point(field_get:d5.CMessageLoginRequest.password)
  return password_.GetNoArena();
}
inline void CMessageLoginRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageLoginRequest.password)
}
#if LANG_CXX11
inline void CMessageLoginRequest::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageLoginRequest.password)
}
#endif
inline void CMessageLoginRequest::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageLoginRequest.password)
}
inline void CMessageLoginRequest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageLoginRequest.password)
}
inline ::std::string* CMessageLoginRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageLoginRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageLoginRequest::release_password() {
  // @@protoc_insertion_point(field_release:d5.CMessageLoginRequest.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageLoginRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageLoginRequest.password)
}

// int32 remember = 5;
inline void CMessageLoginRequest::clear_remember() {
  remember_ = 0;
}
inline ::google::protobuf::int32 CMessageLoginRequest::remember() const {
  // @@protoc_insertion_point(field_get:d5.CMessageLoginRequest.remember)
  return remember_;
}
inline void CMessageLoginRequest::set_remember(::google::protobuf::int32 value) {
  
  remember_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageLoginRequest.remember)
}

// -------------------------------------------------------------------

// CMessageLoginResponse

// int32 type = 1;
inline void CMessageLoginResponse::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageLoginResponse::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageLoginResponse.type)
  return type_;
}
inline void CMessageLoginResponse::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageLoginResponse.type)
}

// string uuid = 2;
inline void CMessageLoginResponse::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageLoginResponse::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageLoginResponse.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageLoginResponse::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageLoginResponse.uuid)
}
#if LANG_CXX11
inline void CMessageLoginResponse::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageLoginResponse.uuid)
}
#endif
inline void CMessageLoginResponse::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageLoginResponse.uuid)
}
inline void CMessageLoginResponse::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageLoginResponse.uuid)
}
inline ::std::string* CMessageLoginResponse::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageLoginResponse.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageLoginResponse::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageLoginResponse.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageLoginResponse::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageLoginResponse.uuid)
}

// int32 state = 3;
inline void CMessageLoginResponse::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 CMessageLoginResponse::state() const {
  // @@protoc_insertion_point(field_get:d5.CMessageLoginResponse.state)
  return state_;
}
inline void CMessageLoginResponse::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageLoginResponse.state)
}

// .d5.CMessageLoginMsg list = 4;
inline bool CMessageLoginResponse::has_list() const {
  return this != internal_default_instance() && list_ != NULL;
}
inline const ::d5::CMessageLoginMsg& CMessageLoginResponse::list() const {
  const ::d5::CMessageLoginMsg* p = list_;
  // @@protoc_insertion_point(field_get:d5.CMessageLoginResponse.list)
  return p != NULL ? *p : *reinterpret_cast<const ::d5::CMessageLoginMsg*>(
      &::d5::_CMessageLoginMsg_default_instance_);
}
inline ::d5::CMessageLoginMsg* CMessageLoginResponse::release_list() {
  // @@protoc_insertion_point(field_release:d5.CMessageLoginResponse.list)
  
  ::d5::CMessageLoginMsg* temp = list_;
  list_ = NULL;
  return temp;
}
inline ::d5::CMessageLoginMsg* CMessageLoginResponse::mutable_list() {
  
  if (list_ == NULL) {
    list_ = ::google::protobuf::Arena::Create< ::d5::CMessageLoginMsg >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:d5.CMessageLoginResponse.list)
  return list_;
}
inline void CMessageLoginResponse::set_allocated_list(::d5::CMessageLoginMsg* list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(list_);
  }
  if (list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, list, submessage_arena);
    }
    
  } else {
    
  }
  list_ = list;
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageLoginResponse.list)
}

// -------------------------------------------------------------------

// CMessageLoginInfo

// int32 type = 1;
inline void CMessageLoginInfo::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageLoginInfo::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageLoginInfo.type)
  return type_;
}
inline void CMessageLoginInfo::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageLoginInfo.type)
}

// string uuid = 2;
inline void CMessageLoginInfo::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageLoginInfo::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageLoginInfo.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageLoginInfo::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageLoginInfo.uuid)
}
#if LANG_CXX11
inline void CMessageLoginInfo::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageLoginInfo.uuid)
}
#endif
inline void CMessageLoginInfo::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageLoginInfo.uuid)
}
inline void CMessageLoginInfo::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageLoginInfo.uuid)
}
inline ::std::string* CMessageLoginInfo::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageLoginInfo.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageLoginInfo::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageLoginInfo.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageLoginInfo::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageLoginInfo.uuid)
}

// int32 state = 3;
inline void CMessageLoginInfo::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 CMessageLoginInfo::state() const {
  // @@protoc_insertion_point(field_get:d5.CMessageLoginInfo.state)
  return state_;
}
inline void CMessageLoginInfo::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageLoginInfo.state)
}

// string token = 4;
inline void CMessageLoginInfo::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageLoginInfo::token() const {
  // @@protoc_insertion_point(field_get:d5.CMessageLoginInfo.token)
  return token_.GetNoArena();
}
inline void CMessageLoginInfo::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageLoginInfo.token)
}
#if LANG_CXX11
inline void CMessageLoginInfo::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageLoginInfo.token)
}
#endif
inline void CMessageLoginInfo::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageLoginInfo.token)
}
inline void CMessageLoginInfo::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageLoginInfo.token)
}
inline ::std::string* CMessageLoginInfo::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageLoginInfo.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageLoginInfo::release_token() {
  // @@protoc_insertion_point(field_release:d5.CMessageLoginInfo.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageLoginInfo::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageLoginInfo.token)
}

// int32 companyId = 5;
inline void CMessageLoginInfo::clear_companyid() {
  companyid_ = 0;
}
inline ::google::protobuf::int32 CMessageLoginInfo::companyid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageLoginInfo.companyId)
  return companyid_;
}
inline void CMessageLoginInfo::set_companyid(::google::protobuf::int32 value) {
  
  companyid_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageLoginInfo.companyId)
}

// int32 roleId = 6;
inline void CMessageLoginInfo::clear_roleid() {
  roleid_ = 0;
}
inline ::google::protobuf::int32 CMessageLoginInfo::roleid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageLoginInfo.roleId)
  return roleid_;
}
inline void CMessageLoginInfo::set_roleid(::google::protobuf::int32 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageLoginInfo.roleId)
}

// int32 userId = 7;
inline void CMessageLoginInfo::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 CMessageLoginInfo::userid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageLoginInfo.userId)
  return userid_;
}
inline void CMessageLoginInfo::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageLoginInfo.userId)
}

// string companyLogoUrl = 8;
inline void CMessageLoginInfo::clear_companylogourl() {
  companylogourl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageLoginInfo::companylogourl() const {
  // @@protoc_insertion_point(field_get:d5.CMessageLoginInfo.companyLogoUrl)
  return companylogourl_.GetNoArena();
}
inline void CMessageLoginInfo::set_companylogourl(const ::std::string& value) {
  
  companylogourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageLoginInfo.companyLogoUrl)
}
#if LANG_CXX11
inline void CMessageLoginInfo::set_companylogourl(::std::string&& value) {
  
  companylogourl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageLoginInfo.companyLogoUrl)
}
#endif
inline void CMessageLoginInfo::set_companylogourl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  companylogourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageLoginInfo.companyLogoUrl)
}
inline void CMessageLoginInfo::set_companylogourl(const char* value, size_t size) {
  
  companylogourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageLoginInfo.companyLogoUrl)
}
inline ::std::string* CMessageLoginInfo::mutable_companylogourl() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageLoginInfo.companyLogoUrl)
  return companylogourl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageLoginInfo::release_companylogourl() {
  // @@protoc_insertion_point(field_release:d5.CMessageLoginInfo.companyLogoUrl)
  
  return companylogourl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageLoginInfo::set_allocated_companylogourl(::std::string* companylogourl) {
  if (companylogourl != NULL) {
    
  } else {
    
  }
  companylogourl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), companylogourl);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageLoginInfo.companyLogoUrl)
}

// string userName = 9;
inline void CMessageLoginInfo::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageLoginInfo::username() const {
  // @@protoc_insertion_point(field_get:d5.CMessageLoginInfo.userName)
  return username_.GetNoArena();
}
inline void CMessageLoginInfo::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageLoginInfo.userName)
}
#if LANG_CXX11
inline void CMessageLoginInfo::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageLoginInfo.userName)
}
#endif
inline void CMessageLoginInfo::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageLoginInfo.userName)
}
inline void CMessageLoginInfo::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageLoginInfo.userName)
}
inline ::std::string* CMessageLoginInfo::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageLoginInfo.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageLoginInfo::release_username() {
  // @@protoc_insertion_point(field_release:d5.CMessageLoginInfo.userName)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageLoginInfo::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageLoginInfo.userName)
}

// -------------------------------------------------------------------

// CMessageLogout

// int32 type = 1;
inline void CMessageLogout::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageLogout::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageLogout.type)
  return type_;
}
inline void CMessageLogout::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageLogout.type)
}

// string uuid = 2;
inline void CMessageLogout::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageLogout::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageLogout.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageLogout::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageLogout.uuid)
}
#if LANG_CXX11
inline void CMessageLogout::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageLogout.uuid)
}
#endif
inline void CMessageLogout::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageLogout.uuid)
}
inline void CMessageLogout::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageLogout.uuid)
}
inline ::std::string* CMessageLogout::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageLogout.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageLogout::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageLogout.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageLogout::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageLogout.uuid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace d5

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_5flogin_2eproto_INCLUDED
