// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_furniture_color_map.proto

#include "message_furniture_color_map.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace d5 {
namespace db2 {
class CMessageFurnitureColorMapRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageFurnitureColorMapRequest>
      _instance;
} _CMessageFurnitureColorMapRequest_default_instance_;
class CMessageFurnitureColorMapResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageFurnitureColorMapResponse>
      _instance;
} _CMessageFurnitureColorMapResponse_default_instance_;
class CMessageAddFurnitureColorMapRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageAddFurnitureColorMapRequest>
      _instance;
} _CMessageAddFurnitureColorMapRequest_default_instance_;
class CMessageAddFurnitureColorMapResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageAddFurnitureColorMapResponse>
      _instance;
} _CMessageAddFurnitureColorMapResponse_default_instance_;
}  // namespace db2
}  // namespace d5
namespace protobuf_message_5ffurniture_5fcolor_5fmap_2eproto {
void InitDefaultsCMessageFurnitureColorMapRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::db2::_CMessageFurnitureColorMapRequest_default_instance_;
    new (ptr) ::d5::db2::CMessageFurnitureColorMapRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::CMessageFurnitureColorMapRequest::InitAsDefaultInstance();
}

void InitDefaultsCMessageFurnitureColorMapRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageFurnitureColorMapRequestImpl);
}

void InitDefaultsCMessageFurnitureColorMapResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_db2_2eproto::InitDefaultsfurniture_color_map();
  {
    void* ptr = &::d5::db2::_CMessageFurnitureColorMapResponse_default_instance_;
    new (ptr) ::d5::db2::CMessageFurnitureColorMapResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::CMessageFurnitureColorMapResponse::InitAsDefaultInstance();
}

void InitDefaultsCMessageFurnitureColorMapResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageFurnitureColorMapResponseImpl);
}

void InitDefaultsCMessageAddFurnitureColorMapRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_db2_2eproto::InitDefaultsfurniture_color_map();
  {
    void* ptr = &::d5::db2::_CMessageAddFurnitureColorMapRequest_default_instance_;
    new (ptr) ::d5::db2::CMessageAddFurnitureColorMapRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::CMessageAddFurnitureColorMapRequest::InitAsDefaultInstance();
}

void InitDefaultsCMessageAddFurnitureColorMapRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageAddFurnitureColorMapRequestImpl);
}

void InitDefaultsCMessageAddFurnitureColorMapResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::db2::_CMessageAddFurnitureColorMapResponse_default_instance_;
    new (ptr) ::d5::db2::CMessageAddFurnitureColorMapResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::CMessageAddFurnitureColorMapResponse::InitAsDefaultInstance();
}

void InitDefaultsCMessageAddFurnitureColorMapResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageAddFurnitureColorMapResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageFurnitureColorMapRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageFurnitureColorMapRequest, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageFurnitureColorMapRequest, uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageFurnitureColorMapRequest, productid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageFurnitureColorMapResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageFurnitureColorMapResponse, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageFurnitureColorMapResponse, uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageFurnitureColorMapResponse, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageFurnitureColorMapResponse, list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageAddFurnitureColorMapRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageAddFurnitureColorMapRequest, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageAddFurnitureColorMapRequest, uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageAddFurnitureColorMapRequest, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageAddFurnitureColorMapResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageAddFurnitureColorMapResponse, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageAddFurnitureColorMapResponse, uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::CMessageAddFurnitureColorMapResponse, state_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::d5::db2::CMessageFurnitureColorMapRequest)},
  { 8, -1, sizeof(::d5::db2::CMessageFurnitureColorMapResponse)},
  { 17, -1, sizeof(::d5::db2::CMessageAddFurnitureColorMapRequest)},
  { 25, -1, sizeof(::d5::db2::CMessageAddFurnitureColorMapResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_CMessageFurnitureColorMapRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_CMessageFurnitureColorMapResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_CMessageAddFurnitureColorMapRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_CMessageAddFurnitureColorMapResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "message_furniture_color_map.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n!message_furniture_color_map.proto\022\006d5."
      "db2\032\tdb2.proto\"Q\n CMessageFurnitureColor"
      "MapRequest\022\014\n\004type\030\001 \001(\005\022\014\n\004uuid\030\002 \001(\t\022\021"
      "\n\tproductId\030\003 \001(\t\"y\n!CMessageFurnitureCo"
      "lorMapResponse\022\014\n\004type\030\001 \001(\005\022\014\n\004uuid\030\002 \001"
      "(\t\022\r\n\005state\030\003 \001(\005\022)\n\004list\030\004 \003(\0132\033.d5.db2"
      ".furniture_color_map\"l\n#CMessageAddFurni"
      "tureColorMapRequest\022\014\n\004type\030\001 \001(\005\022\014\n\004uui"
      "d\030\002 \001(\t\022)\n\004data\030\003 \001(\0132\033.d5.db2.furniture"
      "_color_map\"Q\n$CMessageAddFurnitureColorM"
      "apResponse\022\014\n\004type\030\001 \001(\005\022\014\n\004uuid\030\002 \001(\t\022\r"
      "\n\005state\030\003 \001(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 461);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message_furniture_color_map.proto", &protobuf_RegisterTypes);
  ::protobuf_db2_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_message_5ffurniture_5fcolor_5fmap_2eproto
namespace d5 {
namespace db2 {

// ===================================================================

void CMessageFurnitureColorMapRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageFurnitureColorMapRequest::kTypeFieldNumber;
const int CMessageFurnitureColorMapRequest::kUuidFieldNumber;
const int CMessageFurnitureColorMapRequest::kProductIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageFurnitureColorMapRequest::CMessageFurnitureColorMapRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5ffurniture_5fcolor_5fmap_2eproto::InitDefaultsCMessageFurnitureColorMapRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.CMessageFurnitureColorMapRequest)
}
CMessageFurnitureColorMapRequest::CMessageFurnitureColorMapRequest(const CMessageFurnitureColorMapRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  productid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.productid().size() > 0) {
    productid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productid_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:d5.db2.CMessageFurnitureColorMapRequest)
}

void CMessageFurnitureColorMapRequest::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

CMessageFurnitureColorMapRequest::~CMessageFurnitureColorMapRequest() {
  // @@protoc_insertion_point(destructor:d5.db2.CMessageFurnitureColorMapRequest)
  SharedDtor();
}

void CMessageFurnitureColorMapRequest::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMessageFurnitureColorMapRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageFurnitureColorMapRequest::descriptor() {
  ::protobuf_message_5ffurniture_5fcolor_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5ffurniture_5fcolor_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageFurnitureColorMapRequest& CMessageFurnitureColorMapRequest::default_instance() {
  ::protobuf_message_5ffurniture_5fcolor_5fmap_2eproto::InitDefaultsCMessageFurnitureColorMapRequest();
  return *internal_default_instance();
}


void CMessageFurnitureColorMapRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.CMessageFurnitureColorMapRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool CMessageFurnitureColorMapRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.CMessageFurnitureColorMapRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.CMessageFurnitureColorMapRequest.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string productId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->productid().data(), static_cast<int>(this->productid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.CMessageFurnitureColorMapRequest.productId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.CMessageFurnitureColorMapRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.CMessageFurnitureColorMapRequest)
  return false;
#undef DO_
}

void CMessageFurnitureColorMapRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.CMessageFurnitureColorMapRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.CMessageFurnitureColorMapRequest.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uuid(), output);
  }

  // string productId = 3;
  if (this->productid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productid().data(), static_cast<int>(this->productid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.CMessageFurnitureColorMapRequest.productId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->productid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.CMessageFurnitureColorMapRequest)
}

::google::protobuf::uint8* CMessageFurnitureColorMapRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.CMessageFurnitureColorMapRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.CMessageFurnitureColorMapRequest.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uuid(), target);
  }

  // string productId = 3;
  if (this->productid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productid().data(), static_cast<int>(this->productid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.CMessageFurnitureColorMapRequest.productId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->productid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.CMessageFurnitureColorMapRequest)
  return target;
}

size_t CMessageFurnitureColorMapRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.CMessageFurnitureColorMapRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uuid = 2;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  // string productId = 3;
  if (this->productid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->productid());
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageFurnitureColorMapRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.CMessageFurnitureColorMapRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageFurnitureColorMapRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageFurnitureColorMapRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.CMessageFurnitureColorMapRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.CMessageFurnitureColorMapRequest)
    MergeFrom(*source);
  }
}

void CMessageFurnitureColorMapRequest::MergeFrom(const CMessageFurnitureColorMapRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.CMessageFurnitureColorMapRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.productid().size() > 0) {

    productid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productid_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void CMessageFurnitureColorMapRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.CMessageFurnitureColorMapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageFurnitureColorMapRequest::CopyFrom(const CMessageFurnitureColorMapRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.CMessageFurnitureColorMapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageFurnitureColorMapRequest::IsInitialized() const {
  return true;
}

void CMessageFurnitureColorMapRequest::Swap(CMessageFurnitureColorMapRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageFurnitureColorMapRequest::InternalSwap(CMessageFurnitureColorMapRequest* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_);
  productid_.Swap(&other->productid_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageFurnitureColorMapRequest::GetMetadata() const {
  protobuf_message_5ffurniture_5fcolor_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5ffurniture_5fcolor_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMessageFurnitureColorMapResponse::InitAsDefaultInstance() {
}
void CMessageFurnitureColorMapResponse::clear_list() {
  list_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageFurnitureColorMapResponse::kTypeFieldNumber;
const int CMessageFurnitureColorMapResponse::kUuidFieldNumber;
const int CMessageFurnitureColorMapResponse::kStateFieldNumber;
const int CMessageFurnitureColorMapResponse::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageFurnitureColorMapResponse::CMessageFurnitureColorMapResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5ffurniture_5fcolor_5fmap_2eproto::InitDefaultsCMessageFurnitureColorMapResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.CMessageFurnitureColorMapResponse)
}
CMessageFurnitureColorMapResponse::CMessageFurnitureColorMapResponse(const CMessageFurnitureColorMapResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      list_(from.list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&type_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:d5.db2.CMessageFurnitureColorMapResponse)
}

void CMessageFurnitureColorMapResponse::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&type_)) + sizeof(state_));
  _cached_size_ = 0;
}

CMessageFurnitureColorMapResponse::~CMessageFurnitureColorMapResponse() {
  // @@protoc_insertion_point(destructor:d5.db2.CMessageFurnitureColorMapResponse)
  SharedDtor();
}

void CMessageFurnitureColorMapResponse::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMessageFurnitureColorMapResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageFurnitureColorMapResponse::descriptor() {
  ::protobuf_message_5ffurniture_5fcolor_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5ffurniture_5fcolor_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageFurnitureColorMapResponse& CMessageFurnitureColorMapResponse::default_instance() {
  ::protobuf_message_5ffurniture_5fcolor_5fmap_2eproto::InitDefaultsCMessageFurnitureColorMapResponse();
  return *internal_default_instance();
}


void CMessageFurnitureColorMapResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.CMessageFurnitureColorMapResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&type_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool CMessageFurnitureColorMapResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.CMessageFurnitureColorMapResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.CMessageFurnitureColorMapResponse.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .d5.db2.furniture_color_map list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.CMessageFurnitureColorMapResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.CMessageFurnitureColorMapResponse)
  return false;
#undef DO_
}

void CMessageFurnitureColorMapResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.CMessageFurnitureColorMapResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.CMessageFurnitureColorMapResponse.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uuid(), output);
  }

  // int32 state = 3;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->state(), output);
  }

  // repeated .d5.db2.furniture_color_map list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->list(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.CMessageFurnitureColorMapResponse)
}

::google::protobuf::uint8* CMessageFurnitureColorMapResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.CMessageFurnitureColorMapResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.CMessageFurnitureColorMapResponse.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uuid(), target);
  }

  // int32 state = 3;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->state(), target);
  }

  // repeated .d5.db2.furniture_color_map list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.CMessageFurnitureColorMapResponse)
  return target;
}

size_t CMessageFurnitureColorMapResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.CMessageFurnitureColorMapResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .d5.db2.furniture_color_map list = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 state = 3;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageFurnitureColorMapResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.CMessageFurnitureColorMapResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageFurnitureColorMapResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageFurnitureColorMapResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.CMessageFurnitureColorMapResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.CMessageFurnitureColorMapResponse)
    MergeFrom(*source);
  }
}

void CMessageFurnitureColorMapResponse::MergeFrom(const CMessageFurnitureColorMapResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.CMessageFurnitureColorMapResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void CMessageFurnitureColorMapResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.CMessageFurnitureColorMapResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageFurnitureColorMapResponse::CopyFrom(const CMessageFurnitureColorMapResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.CMessageFurnitureColorMapResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageFurnitureColorMapResponse::IsInitialized() const {
  return true;
}

void CMessageFurnitureColorMapResponse::Swap(CMessageFurnitureColorMapResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageFurnitureColorMapResponse::InternalSwap(CMessageFurnitureColorMapResponse* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  uuid_.Swap(&other->uuid_);
  swap(type_, other->type_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageFurnitureColorMapResponse::GetMetadata() const {
  protobuf_message_5ffurniture_5fcolor_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5ffurniture_5fcolor_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMessageAddFurnitureColorMapRequest::InitAsDefaultInstance() {
  ::d5::db2::_CMessageAddFurnitureColorMapRequest_default_instance_._instance.get_mutable()->data_ = const_cast< ::d5::db2::furniture_color_map*>(
      ::d5::db2::furniture_color_map::internal_default_instance());
}
void CMessageAddFurnitureColorMapRequest::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageAddFurnitureColorMapRequest::kTypeFieldNumber;
const int CMessageAddFurnitureColorMapRequest::kUuidFieldNumber;
const int CMessageAddFurnitureColorMapRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageAddFurnitureColorMapRequest::CMessageAddFurnitureColorMapRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5ffurniture_5fcolor_5fmap_2eproto::InitDefaultsCMessageAddFurnitureColorMapRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.CMessageAddFurnitureColorMapRequest)
}
CMessageAddFurnitureColorMapRequest::CMessageAddFurnitureColorMapRequest(const CMessageAddFurnitureColorMapRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.has_data()) {
    data_ = new ::d5::db2::furniture_color_map(*from.data_);
  } else {
    data_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:d5.db2.CMessageAddFurnitureColorMapRequest)
}

void CMessageAddFurnitureColorMapRequest::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&data_)) + sizeof(type_));
  _cached_size_ = 0;
}

CMessageAddFurnitureColorMapRequest::~CMessageAddFurnitureColorMapRequest() {
  // @@protoc_insertion_point(destructor:d5.db2.CMessageAddFurnitureColorMapRequest)
  SharedDtor();
}

void CMessageAddFurnitureColorMapRequest::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void CMessageAddFurnitureColorMapRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageAddFurnitureColorMapRequest::descriptor() {
  ::protobuf_message_5ffurniture_5fcolor_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5ffurniture_5fcolor_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageAddFurnitureColorMapRequest& CMessageAddFurnitureColorMapRequest::default_instance() {
  ::protobuf_message_5ffurniture_5fcolor_5fmap_2eproto::InitDefaultsCMessageAddFurnitureColorMapRequest();
  return *internal_default_instance();
}


void CMessageAddFurnitureColorMapRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.CMessageAddFurnitureColorMapRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool CMessageAddFurnitureColorMapRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.CMessageAddFurnitureColorMapRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.CMessageAddFurnitureColorMapRequest.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .d5.db2.furniture_color_map data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.CMessageAddFurnitureColorMapRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.CMessageAddFurnitureColorMapRequest)
  return false;
#undef DO_
}

void CMessageAddFurnitureColorMapRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.CMessageAddFurnitureColorMapRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.CMessageAddFurnitureColorMapRequest.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uuid(), output);
  }

  // .d5.db2.furniture_color_map data = 3;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.CMessageAddFurnitureColorMapRequest)
}

::google::protobuf::uint8* CMessageAddFurnitureColorMapRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.CMessageAddFurnitureColorMapRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.CMessageAddFurnitureColorMapRequest.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uuid(), target);
  }

  // .d5.db2.furniture_color_map data = 3;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.CMessageAddFurnitureColorMapRequest)
  return target;
}

size_t CMessageAddFurnitureColorMapRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.CMessageAddFurnitureColorMapRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uuid = 2;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  // .d5.db2.furniture_color_map data = 3;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageAddFurnitureColorMapRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.CMessageAddFurnitureColorMapRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageAddFurnitureColorMapRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageAddFurnitureColorMapRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.CMessageAddFurnitureColorMapRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.CMessageAddFurnitureColorMapRequest)
    MergeFrom(*source);
  }
}

void CMessageAddFurnitureColorMapRequest::MergeFrom(const CMessageAddFurnitureColorMapRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.CMessageAddFurnitureColorMapRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.has_data()) {
    mutable_data()->::d5::db2::furniture_color_map::MergeFrom(from.data());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void CMessageAddFurnitureColorMapRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.CMessageAddFurnitureColorMapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageAddFurnitureColorMapRequest::CopyFrom(const CMessageAddFurnitureColorMapRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.CMessageAddFurnitureColorMapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageAddFurnitureColorMapRequest::IsInitialized() const {
  return true;
}

void CMessageAddFurnitureColorMapRequest::Swap(CMessageAddFurnitureColorMapRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageAddFurnitureColorMapRequest::InternalSwap(CMessageAddFurnitureColorMapRequest* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_);
  swap(data_, other->data_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageAddFurnitureColorMapRequest::GetMetadata() const {
  protobuf_message_5ffurniture_5fcolor_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5ffurniture_5fcolor_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMessageAddFurnitureColorMapResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageAddFurnitureColorMapResponse::kTypeFieldNumber;
const int CMessageAddFurnitureColorMapResponse::kUuidFieldNumber;
const int CMessageAddFurnitureColorMapResponse::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageAddFurnitureColorMapResponse::CMessageAddFurnitureColorMapResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5ffurniture_5fcolor_5fmap_2eproto::InitDefaultsCMessageAddFurnitureColorMapResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.CMessageAddFurnitureColorMapResponse)
}
CMessageAddFurnitureColorMapResponse::CMessageAddFurnitureColorMapResponse(const CMessageAddFurnitureColorMapResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&type_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:d5.db2.CMessageAddFurnitureColorMapResponse)
}

void CMessageAddFurnitureColorMapResponse::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&type_)) + sizeof(state_));
  _cached_size_ = 0;
}

CMessageAddFurnitureColorMapResponse::~CMessageAddFurnitureColorMapResponse() {
  // @@protoc_insertion_point(destructor:d5.db2.CMessageAddFurnitureColorMapResponse)
  SharedDtor();
}

void CMessageAddFurnitureColorMapResponse::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMessageAddFurnitureColorMapResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageAddFurnitureColorMapResponse::descriptor() {
  ::protobuf_message_5ffurniture_5fcolor_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5ffurniture_5fcolor_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageAddFurnitureColorMapResponse& CMessageAddFurnitureColorMapResponse::default_instance() {
  ::protobuf_message_5ffurniture_5fcolor_5fmap_2eproto::InitDefaultsCMessageAddFurnitureColorMapResponse();
  return *internal_default_instance();
}


void CMessageAddFurnitureColorMapResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.CMessageAddFurnitureColorMapResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&type_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool CMessageAddFurnitureColorMapResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.CMessageAddFurnitureColorMapResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.CMessageAddFurnitureColorMapResponse.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.CMessageAddFurnitureColorMapResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.CMessageAddFurnitureColorMapResponse)
  return false;
#undef DO_
}

void CMessageAddFurnitureColorMapResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.CMessageAddFurnitureColorMapResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.CMessageAddFurnitureColorMapResponse.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uuid(), output);
  }

  // int32 state = 3;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.CMessageAddFurnitureColorMapResponse)
}

::google::protobuf::uint8* CMessageAddFurnitureColorMapResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.CMessageAddFurnitureColorMapResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.CMessageAddFurnitureColorMapResponse.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uuid(), target);
  }

  // int32 state = 3;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.CMessageAddFurnitureColorMapResponse)
  return target;
}

size_t CMessageAddFurnitureColorMapResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.CMessageAddFurnitureColorMapResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uuid = 2;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 state = 3;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageAddFurnitureColorMapResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.CMessageAddFurnitureColorMapResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageAddFurnitureColorMapResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageAddFurnitureColorMapResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.CMessageAddFurnitureColorMapResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.CMessageAddFurnitureColorMapResponse)
    MergeFrom(*source);
  }
}

void CMessageAddFurnitureColorMapResponse::MergeFrom(const CMessageAddFurnitureColorMapResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.CMessageAddFurnitureColorMapResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void CMessageAddFurnitureColorMapResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.CMessageAddFurnitureColorMapResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageAddFurnitureColorMapResponse::CopyFrom(const CMessageAddFurnitureColorMapResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.CMessageAddFurnitureColorMapResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageAddFurnitureColorMapResponse::IsInitialized() const {
  return true;
}

void CMessageAddFurnitureColorMapResponse::Swap(CMessageAddFurnitureColorMapResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageAddFurnitureColorMapResponse::InternalSwap(CMessageAddFurnitureColorMapResponse* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_);
  swap(type_, other->type_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageAddFurnitureColorMapResponse::GetMetadata() const {
  protobuf_message_5ffurniture_5fcolor_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5ffurniture_5fcolor_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace db2
}  // namespace d5
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::CMessageFurnitureColorMapRequest* Arena::Create< ::d5::db2::CMessageFurnitureColorMapRequest >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::CMessageFurnitureColorMapRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::CMessageFurnitureColorMapResponse* Arena::Create< ::d5::db2::CMessageFurnitureColorMapResponse >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::CMessageFurnitureColorMapResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::CMessageAddFurnitureColorMapRequest* Arena::Create< ::d5::db2::CMessageAddFurnitureColorMapRequest >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::CMessageAddFurnitureColorMapRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::CMessageAddFurnitureColorMapResponse* Arena::Create< ::d5::db2::CMessageAddFurnitureColorMapResponse >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::CMessageAddFurnitureColorMapResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
