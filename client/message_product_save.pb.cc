// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_product_save.proto

#include "message_product_save.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace d5 {
class CMessageHttpProductUnit_CMessageHttpFurnitureUnitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageHttpProductUnit_CMessageHttpFurnitureUnit>
      _instance;
} _CMessageHttpProductUnit_CMessageHttpFurnitureUnit_default_instance_;
class CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit>
      _instance;
} _CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit_default_instance_;
class CMessageHttpProductUnit_CMessageHttpProductImageUnitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageHttpProductUnit_CMessageHttpProductImageUnit>
      _instance;
} _CMessageHttpProductUnit_CMessageHttpProductImageUnit_default_instance_;
class CMessageHttpProductUnitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageHttpProductUnit>
      _instance;
} _CMessageHttpProductUnit_default_instance_;
}  // namespace d5
namespace protobuf_message_5fproduct_5fsave_2eproto {
void InitDefaultsCMessageHttpProductUnit_CMessageHttpFurnitureUnitImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::_CMessageHttpProductUnit_CMessageHttpFurnitureUnit_default_instance_;
    new (ptr) ::d5::CMessageHttpProductUnit_CMessageHttpFurnitureUnit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageHttpProductUnit_CMessageHttpFurnitureUnit::InitAsDefaultInstance();
}

void InitDefaultsCMessageHttpProductUnit_CMessageHttpFurnitureUnit() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageHttpProductUnit_CMessageHttpFurnitureUnitImpl);
}

void InitDefaultsCMessageHttpProductUnit_CMessageHttpBuildingMaterialUnitImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::_CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit_default_instance_;
    new (ptr) ::d5::CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::InitAsDefaultInstance();
}

void InitDefaultsCMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageHttpProductUnit_CMessageHttpBuildingMaterialUnitImpl);
}

void InitDefaultsCMessageHttpProductUnit_CMessageHttpProductImageUnitImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::_CMessageHttpProductUnit_CMessageHttpProductImageUnit_default_instance_;
    new (ptr) ::d5::CMessageHttpProductUnit_CMessageHttpProductImageUnit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageHttpProductUnit_CMessageHttpProductImageUnit::InitAsDefaultInstance();
}

void InitDefaultsCMessageHttpProductUnit_CMessageHttpProductImageUnit() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageHttpProductUnit_CMessageHttpProductImageUnitImpl);
}

void InitDefaultsCMessageHttpProductUnitImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_5fproduct_5fsave_2eproto::InitDefaultsCMessageHttpProductUnit_CMessageHttpFurnitureUnit();
  protobuf_message_5fproduct_5fsave_2eproto::InitDefaultsCMessageHttpProductUnit_CMessageHttpProductImageUnit();
  protobuf_message_5fproduct_5fsave_2eproto::InitDefaultsCMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit();
  {
    void* ptr = &::d5::_CMessageHttpProductUnit_default_instance_;
    new (ptr) ::d5::CMessageHttpProductUnit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageHttpProductUnit::InitAsDefaultInstance();
}

void InitDefaultsCMessageHttpProductUnit() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageHttpProductUnitImpl);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit_CMessageHttpFurnitureUnit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit_CMessageHttpFurnitureUnit, productid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit_CMessageHttpFurnitureUnit, uepath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit_CMessageHttpFurnitureUnit, pakurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit_CMessageHttpFurnitureUnit, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit_CMessageHttpFurnitureUnit, depth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit_CMessageHttpFurnitureUnit, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit_CMessageHttpFurnitureUnit, isinteractive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit_CMessageHttpFurnitureUnit, intelligenttype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit_CMessageHttpFurnitureUnit, furniturecoloridlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit_CMessageHttpFurnitureUnit, furniturestyleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit_CMessageHttpFurnitureUnit, furnituremainmaterialid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit_CMessageHttpFurnitureUnit, detailinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit, productid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit, isforfloor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit, isforwall_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit, isforceiling_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit, materialid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit, detailinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit, width_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit_CMessageHttpProductImageUnit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit_CMessageHttpProductImageUnit, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit_CMessageHttpProductImageUnit, displayindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit_CMessageHttpProductImageUnit, fileurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit_CMessageHttpProductImageUnit, productid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit, createtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit, updatetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit, brandid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit, producttype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit, categoryid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit, buyurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit, brand_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit, furniture_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit, productimagelist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit, dependentfilelist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit, buildingmaterial_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpProductUnit, productcode_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::d5::CMessageHttpProductUnit_CMessageHttpFurnitureUnit)},
  { 17, -1, sizeof(::d5::CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit)},
  { 30, -1, sizeof(::d5::CMessageHttpProductUnit_CMessageHttpProductImageUnit)},
  { 39, -1, sizeof(::d5::CMessageHttpProductUnit)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageHttpProductUnit_CMessageHttpFurnitureUnit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageHttpProductUnit_CMessageHttpProductImageUnit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageHttpProductUnit_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "message_product_save.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032message_product_save.proto\022\002d5\"\276\010\n\027CMe"
      "ssageHttpProductUnit\022\n\n\002id\030\001 \001(\t\022\r\n\005titl"
      "e\030\002 \001(\t\022\023\n\013description\030\003 \001(\t\022\r\n\005price\030\004 "
      "\001(\002\022\022\n\ncreateTime\030\005 \001(\003\022\022\n\nupdateTime\030\006 "
      "\001(\003\022\017\n\007brandId\030\007 \001(\005\022\023\n\013productType\030\010 \001("
      "\005\022\022\n\ncategoryId\030\t \001(\005\022\016\n\006buyUrl\030\n \001(\t\022\r\n"
      "\005brand\030\013 \001(\t\022H\n\tfurniture\030\014 \001(\01325.d5.CMe"
      "ssageHttpProductUnit.CMessageHttpFurnitu"
      "reUnit\022R\n\020productImageList\030\r \003(\01328.d5.CM"
      "essageHttpProductUnit.CMessageHttpProduc"
      "tImageUnit\022\031\n\021dependentFileList\030\016 \001(\t\022V\n"
      "\020buildingMaterial\030\017 \001(\0132<.d5.CMessageHtt"
      "pProductUnit.CMessageHttpBuildingMateria"
      "lUnit\022\023\n\013productCode\030\020 \001(\t\032\232\002\n\031CMessageH"
      "ttpFurnitureUnit\022\021\n\tproductId\030\001 \001(\t\022\016\n\006u"
      "ePath\030\002 \001(\t\022\016\n\006pakUrl\030\003 \001(\t\022\016\n\006length\030\004 "
      "\001(\002\022\r\n\005depth\030\005 \001(\002\022\016\n\006height\030\006 \001(\002\022\025\n\ris"
      "Interactive\030\007 \001(\005\022\027\n\017intelligentType\030\010 \001"
      "(\005\022\034\n\024furnitureColorIdList\030\t \003(\005\022\030\n\020furn"
      "itureStyleId\030\n \001(\005\022\037\n\027furnitureMainMater"
      "ialId\030\013 \001(\005\022\022\n\ndetailInfo\030\014 \001(\t\032\271\001\n CMes"
      "sageHttpBuildingMaterialUnit\022\021\n\tproductI"
      "d\030\001 \001(\t\022\022\n\nisForFloor\030\002 \001(\005\022\021\n\tisForWall"
      "\030\003 \001(\005\022\024\n\014isForCeiling\030\004 \001(\005\022\022\n\nmaterial"
      "Id\030\005 \001(\t\022\022\n\ndetailInfo\030\006 \001(\t\022\016\n\006length\030\007"
      " \001(\005\022\r\n\005width\030\010 \001(\005\032d\n\034CMessageHttpProdu"
      "ctImageUnit\022\n\n\002id\030\001 \001(\t\022\024\n\014displayIndex\030"
      "\002 \001(\005\022\017\n\007fileUrl\030\003 \001(\t\022\021\n\tproductId\030\004 \001("
      "\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1129);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message_product_save.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_message_5fproduct_5fsave_2eproto
namespace d5 {

// ===================================================================

void CMessageHttpProductUnit_CMessageHttpFurnitureUnit::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageHttpProductUnit_CMessageHttpFurnitureUnit::kProductIdFieldNumber;
const int CMessageHttpProductUnit_CMessageHttpFurnitureUnit::kUePathFieldNumber;
const int CMessageHttpProductUnit_CMessageHttpFurnitureUnit::kPakUrlFieldNumber;
const int CMessageHttpProductUnit_CMessageHttpFurnitureUnit::kLengthFieldNumber;
const int CMessageHttpProductUnit_CMessageHttpFurnitureUnit::kDepthFieldNumber;
const int CMessageHttpProductUnit_CMessageHttpFurnitureUnit::kHeightFieldNumber;
const int CMessageHttpProductUnit_CMessageHttpFurnitureUnit::kIsInteractiveFieldNumber;
const int CMessageHttpProductUnit_CMessageHttpFurnitureUnit::kIntelligentTypeFieldNumber;
const int CMessageHttpProductUnit_CMessageHttpFurnitureUnit::kFurnitureColorIdListFieldNumber;
const int CMessageHttpProductUnit_CMessageHttpFurnitureUnit::kFurnitureStyleIdFieldNumber;
const int CMessageHttpProductUnit_CMessageHttpFurnitureUnit::kFurnitureMainMaterialIdFieldNumber;
const int CMessageHttpProductUnit_CMessageHttpFurnitureUnit::kDetailInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageHttpProductUnit_CMessageHttpFurnitureUnit::CMessageHttpProductUnit_CMessageHttpFurnitureUnit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fproduct_5fsave_2eproto::InitDefaultsCMessageHttpProductUnit_CMessageHttpFurnitureUnit();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit)
}
CMessageHttpProductUnit_CMessageHttpFurnitureUnit::CMessageHttpProductUnit_CMessageHttpFurnitureUnit(const CMessageHttpProductUnit_CMessageHttpFurnitureUnit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      furniturecoloridlist_(from.furniturecoloridlist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  productid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.productid().size() > 0) {
    productid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productid_);
  }
  uepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uepath().size() > 0) {
    uepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uepath_);
  }
  pakurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pakurl().size() > 0) {
    pakurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pakurl_);
  }
  detailinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.detailinfo().size() > 0) {
    detailinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detailinfo_);
  }
  ::memcpy(&length_, &from.length_,
    static_cast<size_t>(reinterpret_cast<char*>(&furnituremainmaterialid_) -
    reinterpret_cast<char*>(&length_)) + sizeof(furnituremainmaterialid_));
  // @@protoc_insertion_point(copy_constructor:d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit)
}

void CMessageHttpProductUnit_CMessageHttpFurnitureUnit::SharedCtor() {
  productid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pakurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detailinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&furnituremainmaterialid_) -
      reinterpret_cast<char*>(&length_)) + sizeof(furnituremainmaterialid_));
  _cached_size_ = 0;
}

CMessageHttpProductUnit_CMessageHttpFurnitureUnit::~CMessageHttpProductUnit_CMessageHttpFurnitureUnit() {
  // @@protoc_insertion_point(destructor:d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit)
  SharedDtor();
}

void CMessageHttpProductUnit_CMessageHttpFurnitureUnit::SharedDtor() {
  productid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uepath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pakurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detailinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMessageHttpProductUnit_CMessageHttpFurnitureUnit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageHttpProductUnit_CMessageHttpFurnitureUnit::descriptor() {
  ::protobuf_message_5fproduct_5fsave_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fproduct_5fsave_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageHttpProductUnit_CMessageHttpFurnitureUnit& CMessageHttpProductUnit_CMessageHttpFurnitureUnit::default_instance() {
  ::protobuf_message_5fproduct_5fsave_2eproto::InitDefaultsCMessageHttpProductUnit_CMessageHttpFurnitureUnit();
  return *internal_default_instance();
}


void CMessageHttpProductUnit_CMessageHttpFurnitureUnit::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  furniturecoloridlist_.Clear();
  productid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pakurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detailinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&furnituremainmaterialid_) -
      reinterpret_cast<char*>(&length_)) + sizeof(furnituremainmaterialid_));
  _internal_metadata_.Clear();
}

bool CMessageHttpProductUnit_CMessageHttpFurnitureUnit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string productId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->productid().data(), static_cast<int>(this->productid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit.productId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uePath = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uepath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uepath().data(), static_cast<int>(this->uepath().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit.uePath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pakUrl = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pakurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pakurl().data(), static_cast<int>(this->pakurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit.pakUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float length = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float depth = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &depth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float height = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 isInteractive = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isinteractive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 intelligentType = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &intelligenttype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 furnitureColorIdList = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_furniturecoloridlist())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 74u, input, this->mutable_furniturecoloridlist())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 furnitureStyleId = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &furniturestyleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 furnitureMainMaterialId = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &furnituremainmaterialid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string detailInfo = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_detailinfo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->detailinfo().data(), static_cast<int>(this->detailinfo().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit.detailInfo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit)
  return false;
#undef DO_
}

void CMessageHttpProductUnit_CMessageHttpFurnitureUnit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string productId = 1;
  if (this->productid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productid().data(), static_cast<int>(this->productid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit.productId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->productid(), output);
  }

  // string uePath = 2;
  if (this->uepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uepath().data(), static_cast<int>(this->uepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit.uePath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uepath(), output);
  }

  // string pakUrl = 3;
  if (this->pakurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pakurl().data(), static_cast<int>(this->pakurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit.pakUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->pakurl(), output);
  }

  // float length = 4;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->length(), output);
  }

  // float depth = 5;
  if (this->depth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->depth(), output);
  }

  // float height = 6;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->height(), output);
  }

  // int32 isInteractive = 7;
  if (this->isinteractive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->isinteractive(), output);
  }

  // int32 intelligentType = 8;
  if (this->intelligenttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->intelligenttype(), output);
  }

  // repeated int32 furnitureColorIdList = 9;
  if (this->furniturecoloridlist_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _furniturecoloridlist_cached_byte_size_));
  }
  for (int i = 0, n = this->furniturecoloridlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->furniturecoloridlist(i), output);
  }

  // int32 furnitureStyleId = 10;
  if (this->furniturestyleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->furniturestyleid(), output);
  }

  // int32 furnitureMainMaterialId = 11;
  if (this->furnituremainmaterialid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->furnituremainmaterialid(), output);
  }

  // string detailInfo = 12;
  if (this->detailinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detailinfo().data(), static_cast<int>(this->detailinfo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit.detailInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->detailinfo(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit)
}

::google::protobuf::uint8* CMessageHttpProductUnit_CMessageHttpFurnitureUnit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string productId = 1;
  if (this->productid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productid().data(), static_cast<int>(this->productid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit.productId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->productid(), target);
  }

  // string uePath = 2;
  if (this->uepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uepath().data(), static_cast<int>(this->uepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit.uePath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uepath(), target);
  }

  // string pakUrl = 3;
  if (this->pakurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pakurl().data(), static_cast<int>(this->pakurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit.pakUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->pakurl(), target);
  }

  // float length = 4;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->length(), target);
  }

  // float depth = 5;
  if (this->depth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->depth(), target);
  }

  // float height = 6;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->height(), target);
  }

  // int32 isInteractive = 7;
  if (this->isinteractive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->isinteractive(), target);
  }

  // int32 intelligentType = 8;
  if (this->intelligenttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->intelligenttype(), target);
  }

  // repeated int32 furnitureColorIdList = 9;
  if (this->furniturecoloridlist_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _furniturecoloridlist_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->furniturecoloridlist_, target);
  }

  // int32 furnitureStyleId = 10;
  if (this->furniturestyleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->furniturestyleid(), target);
  }

  // int32 furnitureMainMaterialId = 11;
  if (this->furnituremainmaterialid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->furnituremainmaterialid(), target);
  }

  // string detailInfo = 12;
  if (this->detailinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detailinfo().data(), static_cast<int>(this->detailinfo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit.detailInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->detailinfo(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit)
  return target;
}

size_t CMessageHttpProductUnit_CMessageHttpFurnitureUnit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 furnitureColorIdList = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->furniturecoloridlist_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _furniturecoloridlist_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string productId = 1;
  if (this->productid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->productid());
  }

  // string uePath = 2;
  if (this->uepath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uepath());
  }

  // string pakUrl = 3;
  if (this->pakurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pakurl());
  }

  // string detailInfo = 12;
  if (this->detailinfo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->detailinfo());
  }

  // float length = 4;
  if (this->length() != 0) {
    total_size += 1 + 4;
  }

  // float depth = 5;
  if (this->depth() != 0) {
    total_size += 1 + 4;
  }

  // float height = 6;
  if (this->height() != 0) {
    total_size += 1 + 4;
  }

  // int32 isInteractive = 7;
  if (this->isinteractive() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->isinteractive());
  }

  // int32 intelligentType = 8;
  if (this->intelligenttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->intelligenttype());
  }

  // int32 furnitureStyleId = 10;
  if (this->furniturestyleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->furniturestyleid());
  }

  // int32 furnitureMainMaterialId = 11;
  if (this->furnituremainmaterialid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->furnituremainmaterialid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageHttpProductUnit_CMessageHttpFurnitureUnit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageHttpProductUnit_CMessageHttpFurnitureUnit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageHttpProductUnit_CMessageHttpFurnitureUnit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit)
    MergeFrom(*source);
  }
}

void CMessageHttpProductUnit_CMessageHttpFurnitureUnit::MergeFrom(const CMessageHttpProductUnit_CMessageHttpFurnitureUnit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  furniturecoloridlist_.MergeFrom(from.furniturecoloridlist_);
  if (from.productid().size() > 0) {

    productid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productid_);
  }
  if (from.uepath().size() > 0) {

    uepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uepath_);
  }
  if (from.pakurl().size() > 0) {

    pakurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pakurl_);
  }
  if (from.detailinfo().size() > 0) {

    detailinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detailinfo_);
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
  if (from.depth() != 0) {
    set_depth(from.depth());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.isinteractive() != 0) {
    set_isinteractive(from.isinteractive());
  }
  if (from.intelligenttype() != 0) {
    set_intelligenttype(from.intelligenttype());
  }
  if (from.furniturestyleid() != 0) {
    set_furniturestyleid(from.furniturestyleid());
  }
  if (from.furnituremainmaterialid() != 0) {
    set_furnituremainmaterialid(from.furnituremainmaterialid());
  }
}

void CMessageHttpProductUnit_CMessageHttpFurnitureUnit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageHttpProductUnit_CMessageHttpFurnitureUnit::CopyFrom(const CMessageHttpProductUnit_CMessageHttpFurnitureUnit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageHttpProductUnit_CMessageHttpFurnitureUnit::IsInitialized() const {
  return true;
}

void CMessageHttpProductUnit_CMessageHttpFurnitureUnit::Swap(CMessageHttpProductUnit_CMessageHttpFurnitureUnit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageHttpProductUnit_CMessageHttpFurnitureUnit::InternalSwap(CMessageHttpProductUnit_CMessageHttpFurnitureUnit* other) {
  using std::swap;
  furniturecoloridlist_.InternalSwap(&other->furniturecoloridlist_);
  productid_.Swap(&other->productid_);
  uepath_.Swap(&other->uepath_);
  pakurl_.Swap(&other->pakurl_);
  detailinfo_.Swap(&other->detailinfo_);
  swap(length_, other->length_);
  swap(depth_, other->depth_);
  swap(height_, other->height_);
  swap(isinteractive_, other->isinteractive_);
  swap(intelligenttype_, other->intelligenttype_);
  swap(furniturestyleid_, other->furniturestyleid_);
  swap(furnituremainmaterialid_, other->furnituremainmaterialid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageHttpProductUnit_CMessageHttpFurnitureUnit::GetMetadata() const {
  protobuf_message_5fproduct_5fsave_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fproduct_5fsave_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::kProductIdFieldNumber;
const int CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::kIsForFloorFieldNumber;
const int CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::kIsForWallFieldNumber;
const int CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::kIsForCeilingFieldNumber;
const int CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::kMaterialIdFieldNumber;
const int CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::kDetailInfoFieldNumber;
const int CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::kLengthFieldNumber;
const int CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::kWidthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fproduct_5fsave_2eproto::InitDefaultsCMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageHttpProductUnit.CMessageHttpBuildingMaterialUnit)
}
CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit(const CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  productid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.productid().size() > 0) {
    productid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productid_);
  }
  materialid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.materialid().size() > 0) {
    materialid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.materialid_);
  }
  detailinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.detailinfo().size() > 0) {
    detailinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detailinfo_);
  }
  ::memcpy(&isforfloor_, &from.isforfloor_,
    static_cast<size_t>(reinterpret_cast<char*>(&width_) -
    reinterpret_cast<char*>(&isforfloor_)) + sizeof(width_));
  // @@protoc_insertion_point(copy_constructor:d5.CMessageHttpProductUnit.CMessageHttpBuildingMaterialUnit)
}

void CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::SharedCtor() {
  productid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  materialid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detailinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&isforfloor_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&width_) -
      reinterpret_cast<char*>(&isforfloor_)) + sizeof(width_));
  _cached_size_ = 0;
}

CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::~CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit() {
  // @@protoc_insertion_point(destructor:d5.CMessageHttpProductUnit.CMessageHttpBuildingMaterialUnit)
  SharedDtor();
}

void CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::SharedDtor() {
  productid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  materialid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detailinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::descriptor() {
  ::protobuf_message_5fproduct_5fsave_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fproduct_5fsave_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit& CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::default_instance() {
  ::protobuf_message_5fproduct_5fsave_2eproto::InitDefaultsCMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit();
  return *internal_default_instance();
}


void CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageHttpProductUnit.CMessageHttpBuildingMaterialUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  productid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  materialid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detailinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&isforfloor_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&width_) -
      reinterpret_cast<char*>(&isforfloor_)) + sizeof(width_));
  _internal_metadata_.Clear();
}

bool CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageHttpProductUnit.CMessageHttpBuildingMaterialUnit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string productId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->productid().data(), static_cast<int>(this->productid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpProductUnit.CMessageHttpBuildingMaterialUnit.productId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 isForFloor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isforfloor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 isForWall = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isforwall_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 isForCeiling = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isforceiling_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string materialId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_materialid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->materialid().data(), static_cast<int>(this->materialid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpProductUnit.CMessageHttpBuildingMaterialUnit.materialId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string detailInfo = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_detailinfo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->detailinfo().data(), static_cast<int>(this->detailinfo().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpProductUnit.CMessageHttpBuildingMaterialUnit.detailInfo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 length = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 width = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageHttpProductUnit.CMessageHttpBuildingMaterialUnit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageHttpProductUnit.CMessageHttpBuildingMaterialUnit)
  return false;
#undef DO_
}

void CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageHttpProductUnit.CMessageHttpBuildingMaterialUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string productId = 1;
  if (this->productid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productid().data(), static_cast<int>(this->productid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.CMessageHttpBuildingMaterialUnit.productId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->productid(), output);
  }

  // int32 isForFloor = 2;
  if (this->isforfloor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->isforfloor(), output);
  }

  // int32 isForWall = 3;
  if (this->isforwall() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->isforwall(), output);
  }

  // int32 isForCeiling = 4;
  if (this->isforceiling() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->isforceiling(), output);
  }

  // string materialId = 5;
  if (this->materialid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->materialid().data(), static_cast<int>(this->materialid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.CMessageHttpBuildingMaterialUnit.materialId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->materialid(), output);
  }

  // string detailInfo = 6;
  if (this->detailinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detailinfo().data(), static_cast<int>(this->detailinfo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.CMessageHttpBuildingMaterialUnit.detailInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->detailinfo(), output);
  }

  // int32 length = 7;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->length(), output);
  }

  // int32 width = 8;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->width(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageHttpProductUnit.CMessageHttpBuildingMaterialUnit)
}

::google::protobuf::uint8* CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageHttpProductUnit.CMessageHttpBuildingMaterialUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string productId = 1;
  if (this->productid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productid().data(), static_cast<int>(this->productid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.CMessageHttpBuildingMaterialUnit.productId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->productid(), target);
  }

  // int32 isForFloor = 2;
  if (this->isforfloor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->isforfloor(), target);
  }

  // int32 isForWall = 3;
  if (this->isforwall() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->isforwall(), target);
  }

  // int32 isForCeiling = 4;
  if (this->isforceiling() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->isforceiling(), target);
  }

  // string materialId = 5;
  if (this->materialid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->materialid().data(), static_cast<int>(this->materialid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.CMessageHttpBuildingMaterialUnit.materialId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->materialid(), target);
  }

  // string detailInfo = 6;
  if (this->detailinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detailinfo().data(), static_cast<int>(this->detailinfo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.CMessageHttpBuildingMaterialUnit.detailInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->detailinfo(), target);
  }

  // int32 length = 7;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->length(), target);
  }

  // int32 width = 8;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->width(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageHttpProductUnit.CMessageHttpBuildingMaterialUnit)
  return target;
}

size_t CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageHttpProductUnit.CMessageHttpBuildingMaterialUnit)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string productId = 1;
  if (this->productid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->productid());
  }

  // string materialId = 5;
  if (this->materialid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->materialid());
  }

  // string detailInfo = 6;
  if (this->detailinfo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->detailinfo());
  }

  // int32 isForFloor = 2;
  if (this->isforfloor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->isforfloor());
  }

  // int32 isForWall = 3;
  if (this->isforwall() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->isforwall());
  }

  // int32 isForCeiling = 4;
  if (this->isforceiling() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->isforceiling());
  }

  // int32 length = 7;
  if (this->length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->length());
  }

  // int32 width = 8;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageHttpProductUnit.CMessageHttpBuildingMaterialUnit)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageHttpProductUnit.CMessageHttpBuildingMaterialUnit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageHttpProductUnit.CMessageHttpBuildingMaterialUnit)
    MergeFrom(*source);
  }
}

void CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::MergeFrom(const CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageHttpProductUnit.CMessageHttpBuildingMaterialUnit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.productid().size() > 0) {

    productid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productid_);
  }
  if (from.materialid().size() > 0) {

    materialid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.materialid_);
  }
  if (from.detailinfo().size() > 0) {

    detailinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detailinfo_);
  }
  if (from.isforfloor() != 0) {
    set_isforfloor(from.isforfloor());
  }
  if (from.isforwall() != 0) {
    set_isforwall(from.isforwall());
  }
  if (from.isforceiling() != 0) {
    set_isforceiling(from.isforceiling());
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
}

void CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageHttpProductUnit.CMessageHttpBuildingMaterialUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::CopyFrom(const CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageHttpProductUnit.CMessageHttpBuildingMaterialUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::IsInitialized() const {
  return true;
}

void CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::Swap(CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::InternalSwap(CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit* other) {
  using std::swap;
  productid_.Swap(&other->productid_);
  materialid_.Swap(&other->materialid_);
  detailinfo_.Swap(&other->detailinfo_);
  swap(isforfloor_, other->isforfloor_);
  swap(isforwall_, other->isforwall_);
  swap(isforceiling_, other->isforceiling_);
  swap(length_, other->length_);
  swap(width_, other->width_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::GetMetadata() const {
  protobuf_message_5fproduct_5fsave_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fproduct_5fsave_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMessageHttpProductUnit_CMessageHttpProductImageUnit::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageHttpProductUnit_CMessageHttpProductImageUnit::kIdFieldNumber;
const int CMessageHttpProductUnit_CMessageHttpProductImageUnit::kDisplayIndexFieldNumber;
const int CMessageHttpProductUnit_CMessageHttpProductImageUnit::kFileUrlFieldNumber;
const int CMessageHttpProductUnit_CMessageHttpProductImageUnit::kProductIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageHttpProductUnit_CMessageHttpProductImageUnit::CMessageHttpProductUnit_CMessageHttpProductImageUnit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fproduct_5fsave_2eproto::InitDefaultsCMessageHttpProductUnit_CMessageHttpProductImageUnit();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageHttpProductUnit.CMessageHttpProductImageUnit)
}
CMessageHttpProductUnit_CMessageHttpProductImageUnit::CMessageHttpProductUnit_CMessageHttpProductImageUnit(const CMessageHttpProductUnit_CMessageHttpProductImageUnit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  fileurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fileurl().size() > 0) {
    fileurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fileurl_);
  }
  productid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.productid().size() > 0) {
    productid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productid_);
  }
  displayindex_ = from.displayindex_;
  // @@protoc_insertion_point(copy_constructor:d5.CMessageHttpProductUnit.CMessageHttpProductImageUnit)
}

void CMessageHttpProductUnit_CMessageHttpProductImageUnit::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fileurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  displayindex_ = 0;
  _cached_size_ = 0;
}

CMessageHttpProductUnit_CMessageHttpProductImageUnit::~CMessageHttpProductUnit_CMessageHttpProductImageUnit() {
  // @@protoc_insertion_point(destructor:d5.CMessageHttpProductUnit.CMessageHttpProductImageUnit)
  SharedDtor();
}

void CMessageHttpProductUnit_CMessageHttpProductImageUnit::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fileurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMessageHttpProductUnit_CMessageHttpProductImageUnit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageHttpProductUnit_CMessageHttpProductImageUnit::descriptor() {
  ::protobuf_message_5fproduct_5fsave_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fproduct_5fsave_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageHttpProductUnit_CMessageHttpProductImageUnit& CMessageHttpProductUnit_CMessageHttpProductImageUnit::default_instance() {
  ::protobuf_message_5fproduct_5fsave_2eproto::InitDefaultsCMessageHttpProductUnit_CMessageHttpProductImageUnit();
  return *internal_default_instance();
}


void CMessageHttpProductUnit_CMessageHttpProductImageUnit::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageHttpProductUnit.CMessageHttpProductImageUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fileurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  displayindex_ = 0;
  _internal_metadata_.Clear();
}

bool CMessageHttpProductUnit_CMessageHttpProductImageUnit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageHttpProductUnit.CMessageHttpProductImageUnit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpProductUnit.CMessageHttpProductImageUnit.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 displayIndex = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &displayindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fileUrl = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fileurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fileurl().data(), static_cast<int>(this->fileurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpProductUnit.CMessageHttpProductImageUnit.fileUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string productId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->productid().data(), static_cast<int>(this->productid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpProductUnit.CMessageHttpProductImageUnit.productId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageHttpProductUnit.CMessageHttpProductImageUnit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageHttpProductUnit.CMessageHttpProductImageUnit)
  return false;
#undef DO_
}

void CMessageHttpProductUnit_CMessageHttpProductImageUnit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageHttpProductUnit.CMessageHttpProductImageUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.CMessageHttpProductImageUnit.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // int32 displayIndex = 2;
  if (this->displayindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->displayindex(), output);
  }

  // string fileUrl = 3;
  if (this->fileurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fileurl().data(), static_cast<int>(this->fileurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.CMessageHttpProductImageUnit.fileUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->fileurl(), output);
  }

  // string productId = 4;
  if (this->productid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productid().data(), static_cast<int>(this->productid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.CMessageHttpProductImageUnit.productId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->productid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageHttpProductUnit.CMessageHttpProductImageUnit)
}

::google::protobuf::uint8* CMessageHttpProductUnit_CMessageHttpProductImageUnit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageHttpProductUnit.CMessageHttpProductImageUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.CMessageHttpProductImageUnit.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // int32 displayIndex = 2;
  if (this->displayindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->displayindex(), target);
  }

  // string fileUrl = 3;
  if (this->fileurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fileurl().data(), static_cast<int>(this->fileurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.CMessageHttpProductImageUnit.fileUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->fileurl(), target);
  }

  // string productId = 4;
  if (this->productid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productid().data(), static_cast<int>(this->productid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.CMessageHttpProductImageUnit.productId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->productid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageHttpProductUnit.CMessageHttpProductImageUnit)
  return target;
}

size_t CMessageHttpProductUnit_CMessageHttpProductImageUnit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageHttpProductUnit.CMessageHttpProductImageUnit)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string fileUrl = 3;
  if (this->fileurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fileurl());
  }

  // string productId = 4;
  if (this->productid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->productid());
  }

  // int32 displayIndex = 2;
  if (this->displayindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->displayindex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageHttpProductUnit_CMessageHttpProductImageUnit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageHttpProductUnit.CMessageHttpProductImageUnit)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageHttpProductUnit_CMessageHttpProductImageUnit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageHttpProductUnit_CMessageHttpProductImageUnit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageHttpProductUnit.CMessageHttpProductImageUnit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageHttpProductUnit.CMessageHttpProductImageUnit)
    MergeFrom(*source);
  }
}

void CMessageHttpProductUnit_CMessageHttpProductImageUnit::MergeFrom(const CMessageHttpProductUnit_CMessageHttpProductImageUnit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageHttpProductUnit.CMessageHttpProductImageUnit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.fileurl().size() > 0) {

    fileurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fileurl_);
  }
  if (from.productid().size() > 0) {

    productid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productid_);
  }
  if (from.displayindex() != 0) {
    set_displayindex(from.displayindex());
  }
}

void CMessageHttpProductUnit_CMessageHttpProductImageUnit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageHttpProductUnit.CMessageHttpProductImageUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageHttpProductUnit_CMessageHttpProductImageUnit::CopyFrom(const CMessageHttpProductUnit_CMessageHttpProductImageUnit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageHttpProductUnit.CMessageHttpProductImageUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageHttpProductUnit_CMessageHttpProductImageUnit::IsInitialized() const {
  return true;
}

void CMessageHttpProductUnit_CMessageHttpProductImageUnit::Swap(CMessageHttpProductUnit_CMessageHttpProductImageUnit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageHttpProductUnit_CMessageHttpProductImageUnit::InternalSwap(CMessageHttpProductUnit_CMessageHttpProductImageUnit* other) {
  using std::swap;
  id_.Swap(&other->id_);
  fileurl_.Swap(&other->fileurl_);
  productid_.Swap(&other->productid_);
  swap(displayindex_, other->displayindex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageHttpProductUnit_CMessageHttpProductImageUnit::GetMetadata() const {
  protobuf_message_5fproduct_5fsave_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fproduct_5fsave_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMessageHttpProductUnit::InitAsDefaultInstance() {
  ::d5::_CMessageHttpProductUnit_default_instance_._instance.get_mutable()->furniture_ = const_cast< ::d5::CMessageHttpProductUnit_CMessageHttpFurnitureUnit*>(
      ::d5::CMessageHttpProductUnit_CMessageHttpFurnitureUnit::internal_default_instance());
  ::d5::_CMessageHttpProductUnit_default_instance_._instance.get_mutable()->buildingmaterial_ = const_cast< ::d5::CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit*>(
      ::d5::CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageHttpProductUnit::kIdFieldNumber;
const int CMessageHttpProductUnit::kTitleFieldNumber;
const int CMessageHttpProductUnit::kDescriptionFieldNumber;
const int CMessageHttpProductUnit::kPriceFieldNumber;
const int CMessageHttpProductUnit::kCreateTimeFieldNumber;
const int CMessageHttpProductUnit::kUpdateTimeFieldNumber;
const int CMessageHttpProductUnit::kBrandIdFieldNumber;
const int CMessageHttpProductUnit::kProductTypeFieldNumber;
const int CMessageHttpProductUnit::kCategoryIdFieldNumber;
const int CMessageHttpProductUnit::kBuyUrlFieldNumber;
const int CMessageHttpProductUnit::kBrandFieldNumber;
const int CMessageHttpProductUnit::kFurnitureFieldNumber;
const int CMessageHttpProductUnit::kProductImageListFieldNumber;
const int CMessageHttpProductUnit::kDependentFileListFieldNumber;
const int CMessageHttpProductUnit::kBuildingMaterialFieldNumber;
const int CMessageHttpProductUnit::kProductCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageHttpProductUnit::CMessageHttpProductUnit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fproduct_5fsave_2eproto::InitDefaultsCMessageHttpProductUnit();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageHttpProductUnit)
}
CMessageHttpProductUnit::CMessageHttpProductUnit(const CMessageHttpProductUnit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      productimagelist_(from.productimagelist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  buyurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.buyurl().size() > 0) {
    buyurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buyurl_);
  }
  brand_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.brand().size() > 0) {
    brand_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brand_);
  }
  dependentfilelist_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dependentfilelist().size() > 0) {
    dependentfilelist_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dependentfilelist_);
  }
  productcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.productcode().size() > 0) {
    productcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productcode_);
  }
  if (from.has_furniture()) {
    furniture_ = new ::d5::CMessageHttpProductUnit_CMessageHttpFurnitureUnit(*from.furniture_);
  } else {
    furniture_ = NULL;
  }
  if (from.has_buildingmaterial()) {
    buildingmaterial_ = new ::d5::CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit(*from.buildingmaterial_);
  } else {
    buildingmaterial_ = NULL;
  }
  ::memcpy(&createtime_, &from.createtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&categoryid_) -
    reinterpret_cast<char*>(&createtime_)) + sizeof(categoryid_));
  // @@protoc_insertion_point(copy_constructor:d5.CMessageHttpProductUnit)
}

void CMessageHttpProductUnit::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buyurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brand_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dependentfilelist_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&furniture_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&categoryid_) -
      reinterpret_cast<char*>(&furniture_)) + sizeof(categoryid_));
  _cached_size_ = 0;
}

CMessageHttpProductUnit::~CMessageHttpProductUnit() {
  // @@protoc_insertion_point(destructor:d5.CMessageHttpProductUnit)
  SharedDtor();
}

void CMessageHttpProductUnit::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buyurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brand_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dependentfilelist_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete furniture_;
  if (this != internal_default_instance()) delete buildingmaterial_;
}

void CMessageHttpProductUnit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageHttpProductUnit::descriptor() {
  ::protobuf_message_5fproduct_5fsave_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fproduct_5fsave_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageHttpProductUnit& CMessageHttpProductUnit::default_instance() {
  ::protobuf_message_5fproduct_5fsave_2eproto::InitDefaultsCMessageHttpProductUnit();
  return *internal_default_instance();
}


void CMessageHttpProductUnit::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageHttpProductUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  productimagelist_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buyurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brand_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dependentfilelist_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && furniture_ != NULL) {
    delete furniture_;
  }
  furniture_ = NULL;
  if (GetArenaNoVirtual() == NULL && buildingmaterial_ != NULL) {
    delete buildingmaterial_;
  }
  buildingmaterial_ = NULL;
  ::memset(&createtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&categoryid_) -
      reinterpret_cast<char*>(&createtime_)) + sizeof(categoryid_));
  _internal_metadata_.Clear();
}

bool CMessageHttpProductUnit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageHttpProductUnit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpProductUnit.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpProductUnit.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpProductUnit.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float price = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 createTime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &createtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 updateTime = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &updatetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 brandId = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &brandid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 productType = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &producttype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 categoryId = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &categoryid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string buyUrl = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buyurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->buyurl().data(), static_cast<int>(this->buyurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpProductUnit.buyUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string brand = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_brand()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->brand().data(), static_cast<int>(this->brand().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpProductUnit.brand"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit furniture = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_furniture()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .d5.CMessageHttpProductUnit.CMessageHttpProductImageUnit productImageList = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_productimagelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dependentFileList = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dependentfilelist()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dependentfilelist().data(), static_cast<int>(this->dependentfilelist().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpProductUnit.dependentFileList"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .d5.CMessageHttpProductUnit.CMessageHttpBuildingMaterialUnit buildingMaterial = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_buildingmaterial()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string productCode = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->productcode().data(), static_cast<int>(this->productcode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpProductUnit.productCode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageHttpProductUnit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageHttpProductUnit)
  return false;
#undef DO_
}

void CMessageHttpProductUnit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageHttpProductUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // float price = 4;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->price(), output);
  }

  // int64 createTime = 5;
  if (this->createtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->createtime(), output);
  }

  // int64 updateTime = 6;
  if (this->updatetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->updatetime(), output);
  }

  // int32 brandId = 7;
  if (this->brandid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->brandid(), output);
  }

  // int32 productType = 8;
  if (this->producttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->producttype(), output);
  }

  // int32 categoryId = 9;
  if (this->categoryid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->categoryid(), output);
  }

  // string buyUrl = 10;
  if (this->buyurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buyurl().data(), static_cast<int>(this->buyurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.buyUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->buyurl(), output);
  }

  // string brand = 11;
  if (this->brand().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brand().data(), static_cast<int>(this->brand().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.brand");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->brand(), output);
  }

  // .d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit furniture = 12;
  if (this->has_furniture()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *furniture_, output);
  }

  // repeated .d5.CMessageHttpProductUnit.CMessageHttpProductImageUnit productImageList = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->productimagelist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13,
      this->productimagelist(static_cast<int>(i)),
      output);
  }

  // string dependentFileList = 14;
  if (this->dependentfilelist().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dependentfilelist().data(), static_cast<int>(this->dependentfilelist().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.dependentFileList");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->dependentfilelist(), output);
  }

  // .d5.CMessageHttpProductUnit.CMessageHttpBuildingMaterialUnit buildingMaterial = 15;
  if (this->has_buildingmaterial()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *buildingmaterial_, output);
  }

  // string productCode = 16;
  if (this->productcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productcode().data(), static_cast<int>(this->productcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.productCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->productcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageHttpProductUnit)
}

::google::protobuf::uint8* CMessageHttpProductUnit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageHttpProductUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // float price = 4;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->price(), target);
  }

  // int64 createTime = 5;
  if (this->createtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->createtime(), target);
  }

  // int64 updateTime = 6;
  if (this->updatetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->updatetime(), target);
  }

  // int32 brandId = 7;
  if (this->brandid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->brandid(), target);
  }

  // int32 productType = 8;
  if (this->producttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->producttype(), target);
  }

  // int32 categoryId = 9;
  if (this->categoryid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->categoryid(), target);
  }

  // string buyUrl = 10;
  if (this->buyurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buyurl().data(), static_cast<int>(this->buyurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.buyUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->buyurl(), target);
  }

  // string brand = 11;
  if (this->brand().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brand().data(), static_cast<int>(this->brand().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.brand");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->brand(), target);
  }

  // .d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit furniture = 12;
  if (this->has_furniture()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, *furniture_, deterministic, target);
  }

  // repeated .d5.CMessageHttpProductUnit.CMessageHttpProductImageUnit productImageList = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->productimagelist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->productimagelist(static_cast<int>(i)), deterministic, target);
  }

  // string dependentFileList = 14;
  if (this->dependentfilelist().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dependentfilelist().data(), static_cast<int>(this->dependentfilelist().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.dependentFileList");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->dependentfilelist(), target);
  }

  // .d5.CMessageHttpProductUnit.CMessageHttpBuildingMaterialUnit buildingMaterial = 15;
  if (this->has_buildingmaterial()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, *buildingmaterial_, deterministic, target);
  }

  // string productCode = 16;
  if (this->productcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productcode().data(), static_cast<int>(this->productcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpProductUnit.productCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->productcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageHttpProductUnit)
  return target;
}

size_t CMessageHttpProductUnit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageHttpProductUnit)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .d5.CMessageHttpProductUnit.CMessageHttpProductImageUnit productImageList = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->productimagelist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->productimagelist(static_cast<int>(i)));
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string buyUrl = 10;
  if (this->buyurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->buyurl());
  }

  // string brand = 11;
  if (this->brand().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->brand());
  }

  // string dependentFileList = 14;
  if (this->dependentfilelist().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dependentfilelist());
  }

  // string productCode = 16;
  if (this->productcode().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->productcode());
  }

  // .d5.CMessageHttpProductUnit.CMessageHttpFurnitureUnit furniture = 12;
  if (this->has_furniture()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *furniture_);
  }

  // .d5.CMessageHttpProductUnit.CMessageHttpBuildingMaterialUnit buildingMaterial = 15;
  if (this->has_buildingmaterial()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *buildingmaterial_);
  }

  // int64 createTime = 5;
  if (this->createtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->createtime());
  }

  // float price = 4;
  if (this->price() != 0) {
    total_size += 1 + 4;
  }

  // int32 brandId = 7;
  if (this->brandid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->brandid());
  }

  // int64 updateTime = 6;
  if (this->updatetime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->updatetime());
  }

  // int32 productType = 8;
  if (this->producttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->producttype());
  }

  // int32 categoryId = 9;
  if (this->categoryid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->categoryid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageHttpProductUnit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageHttpProductUnit)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageHttpProductUnit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageHttpProductUnit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageHttpProductUnit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageHttpProductUnit)
    MergeFrom(*source);
  }
}

void CMessageHttpProductUnit::MergeFrom(const CMessageHttpProductUnit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageHttpProductUnit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  productimagelist_.MergeFrom(from.productimagelist_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.buyurl().size() > 0) {

    buyurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buyurl_);
  }
  if (from.brand().size() > 0) {

    brand_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brand_);
  }
  if (from.dependentfilelist().size() > 0) {

    dependentfilelist_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dependentfilelist_);
  }
  if (from.productcode().size() > 0) {

    productcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productcode_);
  }
  if (from.has_furniture()) {
    mutable_furniture()->::d5::CMessageHttpProductUnit_CMessageHttpFurnitureUnit::MergeFrom(from.furniture());
  }
  if (from.has_buildingmaterial()) {
    mutable_buildingmaterial()->::d5::CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit::MergeFrom(from.buildingmaterial());
  }
  if (from.createtime() != 0) {
    set_createtime(from.createtime());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.brandid() != 0) {
    set_brandid(from.brandid());
  }
  if (from.updatetime() != 0) {
    set_updatetime(from.updatetime());
  }
  if (from.producttype() != 0) {
    set_producttype(from.producttype());
  }
  if (from.categoryid() != 0) {
    set_categoryid(from.categoryid());
  }
}

void CMessageHttpProductUnit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageHttpProductUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageHttpProductUnit::CopyFrom(const CMessageHttpProductUnit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageHttpProductUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageHttpProductUnit::IsInitialized() const {
  return true;
}

void CMessageHttpProductUnit::Swap(CMessageHttpProductUnit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageHttpProductUnit::InternalSwap(CMessageHttpProductUnit* other) {
  using std::swap;
  CastToBase(&productimagelist_)->InternalSwap(CastToBase(&other->productimagelist_));
  id_.Swap(&other->id_);
  title_.Swap(&other->title_);
  description_.Swap(&other->description_);
  buyurl_.Swap(&other->buyurl_);
  brand_.Swap(&other->brand_);
  dependentfilelist_.Swap(&other->dependentfilelist_);
  productcode_.Swap(&other->productcode_);
  swap(furniture_, other->furniture_);
  swap(buildingmaterial_, other->buildingmaterial_);
  swap(createtime_, other->createtime_);
  swap(price_, other->price_);
  swap(brandid_, other->brandid_);
  swap(updatetime_, other->updatetime_);
  swap(producttype_, other->producttype_);
  swap(categoryid_, other->categoryid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageHttpProductUnit::GetMetadata() const {
  protobuf_message_5fproduct_5fsave_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fproduct_5fsave_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace d5
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageHttpProductUnit_CMessageHttpFurnitureUnit* Arena::Create< ::d5::CMessageHttpProductUnit_CMessageHttpFurnitureUnit >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageHttpProductUnit_CMessageHttpFurnitureUnit >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit* Arena::Create< ::d5::CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageHttpProductUnit_CMessageHttpBuildingMaterialUnit >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageHttpProductUnit_CMessageHttpProductImageUnit* Arena::Create< ::d5::CMessageHttpProductUnit_CMessageHttpProductImageUnit >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageHttpProductUnit_CMessageHttpProductImageUnit >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageHttpProductUnit* Arena::Create< ::d5::CMessageHttpProductUnit >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageHttpProductUnit >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
