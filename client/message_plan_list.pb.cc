// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_plan_list.proto

#include "message_plan_list.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace d5 {
class CMessagePlanListRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessagePlanListRequest>
      _instance;
} _CMessagePlanListRequest_default_instance_;
class CMessageHttpPlanUnitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageHttpPlanUnit>
      _instance;
} _CMessageHttpPlanUnit_default_instance_;
class CMessageHttpPlanListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageHttpPlanList>
      _instance;
} _CMessageHttpPlanList_default_instance_;
class CMessagePlanListResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessagePlanListResponse>
      _instance;
} _CMessagePlanListResponse_default_instance_;
}  // namespace d5
namespace protobuf_message_5fplan_5flist_2eproto {
void InitDefaultsCMessagePlanListRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::_CMessagePlanListRequest_default_instance_;
    new (ptr) ::d5::CMessagePlanListRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessagePlanListRequest::InitAsDefaultInstance();
}

void InitDefaultsCMessagePlanListRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessagePlanListRequestImpl);
}

void InitDefaultsCMessageHttpPlanUnitImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::_CMessageHttpPlanUnit_default_instance_;
    new (ptr) ::d5::CMessageHttpPlanUnit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageHttpPlanUnit::InitAsDefaultInstance();
}

void InitDefaultsCMessageHttpPlanUnit() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageHttpPlanUnitImpl);
}

void InitDefaultsCMessageHttpPlanListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_5fplan_5flist_2eproto::InitDefaultsCMessageHttpPlanUnit();
  {
    void* ptr = &::d5::_CMessageHttpPlanList_default_instance_;
    new (ptr) ::d5::CMessageHttpPlanList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageHttpPlanList::InitAsDefaultInstance();
}

void InitDefaultsCMessageHttpPlanList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageHttpPlanListImpl);
}

void InitDefaultsCMessagePlanListResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_5fplan_5flist_2eproto::InitDefaultsCMessageHttpPlanList();
  {
    void* ptr = &::d5::_CMessagePlanListResponse_default_instance_;
    new (ptr) ::d5::CMessagePlanListResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessagePlanListResponse::InitAsDefaultInstance();
}

void InitDefaultsCMessagePlanListResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessagePlanListResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessagePlanListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessagePlanListRequest, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessagePlanListRequest, uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessagePlanListRequest, companyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessagePlanListRequest, updatetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessagePlanListRequest, pagesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessagePlanListRequest, pagenum_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpPlanUnit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpPlanUnit, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpPlanUnit, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpPlanUnit, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpPlanUnit, pakurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpPlanUnit, thumbnailurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpPlanUnit, flooreditfileurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpPlanUnit, detailinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpPlanUnit, designfileurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpPlanUnit, districtid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpPlanUnit, propertytypeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpPlanUnit, roomtypeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpPlanUnit, templatetypeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpPlanUnit, isdel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpPlanUnit, createtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpPlanUnit, updatetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpPlanUnit, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpPlanUnit, companyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpPlanUnit, floorrefurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpPlanUnit, floorrefwidth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpPlanUnit, floorrefheight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpPlanUnit, groupid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpPlanUnit, condoid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpPlanUnit, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpPlanUnit, dependentfilelist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpPlanUnit, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpPlanUnit, quotationinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpPlanUnit, isprivate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpPlanList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpPlanList, rows_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpPlanList, total_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessagePlanListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessagePlanListResponse, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessagePlanListResponse, uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessagePlanListResponse, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessagePlanListResponse, list_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::d5::CMessagePlanListRequest)},
  { 11, -1, sizeof(::d5::CMessageHttpPlanUnit)},
  { 43, -1, sizeof(::d5::CMessageHttpPlanList)},
  { 50, -1, sizeof(::d5::CMessagePlanListResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessagePlanListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageHttpPlanUnit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageHttpPlanList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessagePlanListResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "message_plan_list.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027message_plan_list.proto\022\002d5\"\177\n\027CMessag"
      "ePlanListRequest\022\014\n\004type\030\001 \001(\005\022\014\n\004uuid\030\002"
      " \001(\t\022\021\n\tcompanyid\030\003 \001(\005\022\022\n\nupdatetime\030\004 "
      "\001(\004\022\020\n\010pageSize\030\005 \001(\005\022\017\n\007pageNum\030\006 \001(\005\"\251"
      "\004\n\024CMessageHttpPlanUnit\022\n\n\002id\030\001 \001(\t\022\r\n\005t"
      "itle\030\002 \001(\t\022\014\n\004size\030\003 \001(\002\022\016\n\006pakUrl\030\005 \001(\t"
      "\022\024\n\014thumbnailUrl\030\006 \001(\t\022\030\n\020floorEditFileU"
      "rl\030\007 \001(\t\022\022\n\ndetailInfo\030\010 \001(\t\022\025\n\rdesignFi"
      "leUrl\030\t \001(\t\022\022\n\ndistrictId\030\n \001(\005\022\026\n\016prope"
      "rtyTypeId\030\013 \001(\005\022\022\n\nroomTypeId\030\014 \001(\005\022\026\n\016t"
      "emplateTypeId\030\r \001(\005\022\r\n\005isDel\030\016 \001(\005\022\022\n\ncr"
      "eateTime\030\017 \001(\003\022\022\n\nupdateTime\030\020 \001(\003\022\016\n\006us"
      "erId\030\021 \001(\005\022\021\n\tcompanyId\030\022 \001(\005\022\023\n\013floorRe"
      "fUrl\030\024 \001(\t\022\025\n\rfloorRefWidth\030\025 \001(\002\022\026\n\016flo"
      "orRefHeight\030\026 \001(\002\022\017\n\007groupId\030\031 \001(\005\022\017\n\007co"
      "ndoId\030\032 \001(\005\022\020\n\010userName\030\033 \001(\t\022\031\n\021depende"
      "ntFileList\030\034 \001(\t\022\016\n\006source\030\035 \001(\005\022\025\n\rquot"
      "ationInfo\030\036 \001(\t\022\021\n\tisPrivate\030\037 \001(\005\"M\n\024CM"
      "essageHttpPlanList\022&\n\004rows\030\001 \003(\0132\030.d5.CM"
      "essageHttpPlanUnit\022\r\n\005total\030\002 \001(\005\"m\n\030CMe"
      "ssagePlanListResponse\022\014\n\004type\030\001 \001(\005\022\014\n\004u"
      "uid\030\002 \001(\t\022\r\n\005state\030\003 \001(\005\022&\n\004list\030\004 \001(\0132\030"
      ".d5.CMessageHttpPlanListb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 912);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message_plan_list.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_message_5fplan_5flist_2eproto
namespace d5 {

// ===================================================================

void CMessagePlanListRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessagePlanListRequest::kTypeFieldNumber;
const int CMessagePlanListRequest::kUuidFieldNumber;
const int CMessagePlanListRequest::kCompanyidFieldNumber;
const int CMessagePlanListRequest::kUpdatetimeFieldNumber;
const int CMessagePlanListRequest::kPageSizeFieldNumber;
const int CMessagePlanListRequest::kPageNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessagePlanListRequest::CMessagePlanListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fplan_5flist_2eproto::InitDefaultsCMessagePlanListRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessagePlanListRequest)
}
CMessagePlanListRequest::CMessagePlanListRequest(const CMessagePlanListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&pagenum_) -
    reinterpret_cast<char*>(&type_)) + sizeof(pagenum_));
  // @@protoc_insertion_point(copy_constructor:d5.CMessagePlanListRequest)
}

void CMessagePlanListRequest::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pagenum_) -
      reinterpret_cast<char*>(&type_)) + sizeof(pagenum_));
  _cached_size_ = 0;
}

CMessagePlanListRequest::~CMessagePlanListRequest() {
  // @@protoc_insertion_point(destructor:d5.CMessagePlanListRequest)
  SharedDtor();
}

void CMessagePlanListRequest::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMessagePlanListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessagePlanListRequest::descriptor() {
  ::protobuf_message_5fplan_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fplan_5flist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessagePlanListRequest& CMessagePlanListRequest::default_instance() {
  ::protobuf_message_5fplan_5flist_2eproto::InitDefaultsCMessagePlanListRequest();
  return *internal_default_instance();
}


void CMessagePlanListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessagePlanListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pagenum_) -
      reinterpret_cast<char*>(&type_)) + sizeof(pagenum_));
  _internal_metadata_.Clear();
}

bool CMessagePlanListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessagePlanListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessagePlanListRequest.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 companyid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &companyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 updatetime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &updatetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 pageSize = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pagesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 pageNum = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pagenum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessagePlanListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessagePlanListRequest)
  return false;
#undef DO_
}

void CMessagePlanListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessagePlanListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessagePlanListRequest.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uuid(), output);
  }

  // int32 companyid = 3;
  if (this->companyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->companyid(), output);
  }

  // uint64 updatetime = 4;
  if (this->updatetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->updatetime(), output);
  }

  // int32 pageSize = 5;
  if (this->pagesize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->pagesize(), output);
  }

  // int32 pageNum = 6;
  if (this->pagenum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->pagenum(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessagePlanListRequest)
}

::google::protobuf::uint8* CMessagePlanListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessagePlanListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessagePlanListRequest.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uuid(), target);
  }

  // int32 companyid = 3;
  if (this->companyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->companyid(), target);
  }

  // uint64 updatetime = 4;
  if (this->updatetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->updatetime(), target);
  }

  // int32 pageSize = 5;
  if (this->pagesize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->pagesize(), target);
  }

  // int32 pageNum = 6;
  if (this->pagenum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->pagenum(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessagePlanListRequest)
  return target;
}

size_t CMessagePlanListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessagePlanListRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uuid = 2;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 companyid = 3;
  if (this->companyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->companyid());
  }

  // uint64 updatetime = 4;
  if (this->updatetime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->updatetime());
  }

  // int32 pageSize = 5;
  if (this->pagesize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pagesize());
  }

  // int32 pageNum = 6;
  if (this->pagenum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pagenum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessagePlanListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessagePlanListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessagePlanListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessagePlanListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessagePlanListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessagePlanListRequest)
    MergeFrom(*source);
  }
}

void CMessagePlanListRequest::MergeFrom(const CMessagePlanListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessagePlanListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.companyid() != 0) {
    set_companyid(from.companyid());
  }
  if (from.updatetime() != 0) {
    set_updatetime(from.updatetime());
  }
  if (from.pagesize() != 0) {
    set_pagesize(from.pagesize());
  }
  if (from.pagenum() != 0) {
    set_pagenum(from.pagenum());
  }
}

void CMessagePlanListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessagePlanListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessagePlanListRequest::CopyFrom(const CMessagePlanListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessagePlanListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessagePlanListRequest::IsInitialized() const {
  return true;
}

void CMessagePlanListRequest::Swap(CMessagePlanListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessagePlanListRequest::InternalSwap(CMessagePlanListRequest* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_);
  swap(type_, other->type_);
  swap(companyid_, other->companyid_);
  swap(updatetime_, other->updatetime_);
  swap(pagesize_, other->pagesize_);
  swap(pagenum_, other->pagenum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessagePlanListRequest::GetMetadata() const {
  protobuf_message_5fplan_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fplan_5flist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMessageHttpPlanUnit::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageHttpPlanUnit::kIdFieldNumber;
const int CMessageHttpPlanUnit::kTitleFieldNumber;
const int CMessageHttpPlanUnit::kSizeFieldNumber;
const int CMessageHttpPlanUnit::kPakUrlFieldNumber;
const int CMessageHttpPlanUnit::kThumbnailUrlFieldNumber;
const int CMessageHttpPlanUnit::kFloorEditFileUrlFieldNumber;
const int CMessageHttpPlanUnit::kDetailInfoFieldNumber;
const int CMessageHttpPlanUnit::kDesignFileUrlFieldNumber;
const int CMessageHttpPlanUnit::kDistrictIdFieldNumber;
const int CMessageHttpPlanUnit::kPropertyTypeIdFieldNumber;
const int CMessageHttpPlanUnit::kRoomTypeIdFieldNumber;
const int CMessageHttpPlanUnit::kTemplateTypeIdFieldNumber;
const int CMessageHttpPlanUnit::kIsDelFieldNumber;
const int CMessageHttpPlanUnit::kCreateTimeFieldNumber;
const int CMessageHttpPlanUnit::kUpdateTimeFieldNumber;
const int CMessageHttpPlanUnit::kUserIdFieldNumber;
const int CMessageHttpPlanUnit::kCompanyIdFieldNumber;
const int CMessageHttpPlanUnit::kFloorRefUrlFieldNumber;
const int CMessageHttpPlanUnit::kFloorRefWidthFieldNumber;
const int CMessageHttpPlanUnit::kFloorRefHeightFieldNumber;
const int CMessageHttpPlanUnit::kGroupIdFieldNumber;
const int CMessageHttpPlanUnit::kCondoIdFieldNumber;
const int CMessageHttpPlanUnit::kUserNameFieldNumber;
const int CMessageHttpPlanUnit::kDependentFileListFieldNumber;
const int CMessageHttpPlanUnit::kSourceFieldNumber;
const int CMessageHttpPlanUnit::kQuotationInfoFieldNumber;
const int CMessageHttpPlanUnit::kIsPrivateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageHttpPlanUnit::CMessageHttpPlanUnit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fplan_5flist_2eproto::InitDefaultsCMessageHttpPlanUnit();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageHttpPlanUnit)
}
CMessageHttpPlanUnit::CMessageHttpPlanUnit(const CMessageHttpPlanUnit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  pakurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pakurl().size() > 0) {
    pakurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pakurl_);
  }
  thumbnailurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.thumbnailurl().size() > 0) {
    thumbnailurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnailurl_);
  }
  flooreditfileurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.flooreditfileurl().size() > 0) {
    flooreditfileurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.flooreditfileurl_);
  }
  detailinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.detailinfo().size() > 0) {
    detailinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detailinfo_);
  }
  designfileurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.designfileurl().size() > 0) {
    designfileurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.designfileurl_);
  }
  floorrefurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.floorrefurl().size() > 0) {
    floorrefurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.floorrefurl_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  dependentfilelist_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dependentfilelist().size() > 0) {
    dependentfilelist_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dependentfilelist_);
  }
  quotationinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.quotationinfo().size() > 0) {
    quotationinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.quotationinfo_);
  }
  ::memcpy(&size_, &from.size_,
    static_cast<size_t>(reinterpret_cast<char*>(&isprivate_) -
    reinterpret_cast<char*>(&size_)) + sizeof(isprivate_));
  // @@protoc_insertion_point(copy_constructor:d5.CMessageHttpPlanUnit)
}

void CMessageHttpPlanUnit::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pakurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnailurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  flooreditfileurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detailinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  designfileurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  floorrefurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dependentfilelist_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quotationinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isprivate_) -
      reinterpret_cast<char*>(&size_)) + sizeof(isprivate_));
  _cached_size_ = 0;
}

CMessageHttpPlanUnit::~CMessageHttpPlanUnit() {
  // @@protoc_insertion_point(destructor:d5.CMessageHttpPlanUnit)
  SharedDtor();
}

void CMessageHttpPlanUnit::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pakurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnailurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  flooreditfileurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detailinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  designfileurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  floorrefurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dependentfilelist_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quotationinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMessageHttpPlanUnit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageHttpPlanUnit::descriptor() {
  ::protobuf_message_5fplan_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fplan_5flist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageHttpPlanUnit& CMessageHttpPlanUnit::default_instance() {
  ::protobuf_message_5fplan_5flist_2eproto::InitDefaultsCMessageHttpPlanUnit();
  return *internal_default_instance();
}


void CMessageHttpPlanUnit::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageHttpPlanUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pakurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnailurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  flooreditfileurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detailinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  designfileurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  floorrefurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dependentfilelist_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quotationinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isprivate_) -
      reinterpret_cast<char*>(&size_)) + sizeof(isprivate_));
  _internal_metadata_.Clear();
}

bool CMessageHttpPlanUnit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageHttpPlanUnit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpPlanUnit.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpPlanUnit.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pakUrl = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pakurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pakurl().data(), static_cast<int>(this->pakurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpPlanUnit.pakUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string thumbnailUrl = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_thumbnailurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->thumbnailurl().data(), static_cast<int>(this->thumbnailurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpPlanUnit.thumbnailUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string floorEditFileUrl = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_flooreditfileurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->flooreditfileurl().data(), static_cast<int>(this->flooreditfileurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpPlanUnit.floorEditFileUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string detailInfo = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_detailinfo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->detailinfo().data(), static_cast<int>(this->detailinfo().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpPlanUnit.detailInfo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string designFileUrl = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_designfileurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->designfileurl().data(), static_cast<int>(this->designfileurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpPlanUnit.designFileUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 districtId = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &districtid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 propertyTypeId = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &propertytypeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 roomTypeId = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomtypeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 templateTypeId = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &templatetypeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 isDel = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isdel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 createTime = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &createtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 updateTime = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &updatetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 userId = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 companyId = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &companyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string floorRefUrl = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_floorrefurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->floorrefurl().data(), static_cast<int>(this->floorrefurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpPlanUnit.floorRefUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float floorRefWidth = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(173u /* 173 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &floorrefwidth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float floorRefHeight = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(181u /* 181 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &floorrefheight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 groupId = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 condoId = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &condoid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string userName = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpPlanUnit.userName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dependentFileList = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dependentfilelist()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dependentfilelist().data(), static_cast<int>(this->dependentfilelist().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpPlanUnit.dependentFileList"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 source = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 232 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &source_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string quotationInfo = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_quotationinfo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->quotationinfo().data(), static_cast<int>(this->quotationinfo().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpPlanUnit.quotationInfo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 isPrivate = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isprivate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageHttpPlanUnit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageHttpPlanUnit)
  return false;
#undef DO_
}

void CMessageHttpPlanUnit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageHttpPlanUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpPlanUnit.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpPlanUnit.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // float size = 3;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->size(), output);
  }

  // string pakUrl = 5;
  if (this->pakurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pakurl().data(), static_cast<int>(this->pakurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpPlanUnit.pakUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->pakurl(), output);
  }

  // string thumbnailUrl = 6;
  if (this->thumbnailurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thumbnailurl().data(), static_cast<int>(this->thumbnailurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpPlanUnit.thumbnailUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->thumbnailurl(), output);
  }

  // string floorEditFileUrl = 7;
  if (this->flooreditfileurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->flooreditfileurl().data(), static_cast<int>(this->flooreditfileurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpPlanUnit.floorEditFileUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->flooreditfileurl(), output);
  }

  // string detailInfo = 8;
  if (this->detailinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detailinfo().data(), static_cast<int>(this->detailinfo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpPlanUnit.detailInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->detailinfo(), output);
  }

  // string designFileUrl = 9;
  if (this->designfileurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->designfileurl().data(), static_cast<int>(this->designfileurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpPlanUnit.designFileUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->designfileurl(), output);
  }

  // int32 districtId = 10;
  if (this->districtid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->districtid(), output);
  }

  // int32 propertyTypeId = 11;
  if (this->propertytypeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->propertytypeid(), output);
  }

  // int32 roomTypeId = 12;
  if (this->roomtypeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->roomtypeid(), output);
  }

  // int32 templateTypeId = 13;
  if (this->templatetypeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->templatetypeid(), output);
  }

  // int32 isDel = 14;
  if (this->isdel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->isdel(), output);
  }

  // int64 createTime = 15;
  if (this->createtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->createtime(), output);
  }

  // int64 updateTime = 16;
  if (this->updatetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(16, this->updatetime(), output);
  }

  // int32 userId = 17;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->userid(), output);
  }

  // int32 companyId = 18;
  if (this->companyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->companyid(), output);
  }

  // string floorRefUrl = 20;
  if (this->floorrefurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->floorrefurl().data(), static_cast<int>(this->floorrefurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpPlanUnit.floorRefUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->floorrefurl(), output);
  }

  // float floorRefWidth = 21;
  if (this->floorrefwidth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(21, this->floorrefwidth(), output);
  }

  // float floorRefHeight = 22;
  if (this->floorrefheight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(22, this->floorrefheight(), output);
  }

  // int32 groupId = 25;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->groupid(), output);
  }

  // int32 condoId = 26;
  if (this->condoid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->condoid(), output);
  }

  // string userName = 27;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpPlanUnit.userName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      27, this->username(), output);
  }

  // string dependentFileList = 28;
  if (this->dependentfilelist().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dependentfilelist().data(), static_cast<int>(this->dependentfilelist().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpPlanUnit.dependentFileList");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      28, this->dependentfilelist(), output);
  }

  // int32 source = 29;
  if (this->source() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(29, this->source(), output);
  }

  // string quotationInfo = 30;
  if (this->quotationinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->quotationinfo().data(), static_cast<int>(this->quotationinfo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpPlanUnit.quotationInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      30, this->quotationinfo(), output);
  }

  // int32 isPrivate = 31;
  if (this->isprivate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(31, this->isprivate(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageHttpPlanUnit)
}

::google::protobuf::uint8* CMessageHttpPlanUnit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageHttpPlanUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpPlanUnit.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpPlanUnit.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // float size = 3;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->size(), target);
  }

  // string pakUrl = 5;
  if (this->pakurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pakurl().data(), static_cast<int>(this->pakurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpPlanUnit.pakUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->pakurl(), target);
  }

  // string thumbnailUrl = 6;
  if (this->thumbnailurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thumbnailurl().data(), static_cast<int>(this->thumbnailurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpPlanUnit.thumbnailUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->thumbnailurl(), target);
  }

  // string floorEditFileUrl = 7;
  if (this->flooreditfileurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->flooreditfileurl().data(), static_cast<int>(this->flooreditfileurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpPlanUnit.floorEditFileUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->flooreditfileurl(), target);
  }

  // string detailInfo = 8;
  if (this->detailinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detailinfo().data(), static_cast<int>(this->detailinfo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpPlanUnit.detailInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->detailinfo(), target);
  }

  // string designFileUrl = 9;
  if (this->designfileurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->designfileurl().data(), static_cast<int>(this->designfileurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpPlanUnit.designFileUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->designfileurl(), target);
  }

  // int32 districtId = 10;
  if (this->districtid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->districtid(), target);
  }

  // int32 propertyTypeId = 11;
  if (this->propertytypeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->propertytypeid(), target);
  }

  // int32 roomTypeId = 12;
  if (this->roomtypeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->roomtypeid(), target);
  }

  // int32 templateTypeId = 13;
  if (this->templatetypeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->templatetypeid(), target);
  }

  // int32 isDel = 14;
  if (this->isdel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->isdel(), target);
  }

  // int64 createTime = 15;
  if (this->createtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->createtime(), target);
  }

  // int64 updateTime = 16;
  if (this->updatetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(16, this->updatetime(), target);
  }

  // int32 userId = 17;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->userid(), target);
  }

  // int32 companyId = 18;
  if (this->companyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->companyid(), target);
  }

  // string floorRefUrl = 20;
  if (this->floorrefurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->floorrefurl().data(), static_cast<int>(this->floorrefurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpPlanUnit.floorRefUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->floorrefurl(), target);
  }

  // float floorRefWidth = 21;
  if (this->floorrefwidth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(21, this->floorrefwidth(), target);
  }

  // float floorRefHeight = 22;
  if (this->floorrefheight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(22, this->floorrefheight(), target);
  }

  // int32 groupId = 25;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->groupid(), target);
  }

  // int32 condoId = 26;
  if (this->condoid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->condoid(), target);
  }

  // string userName = 27;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpPlanUnit.userName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        27, this->username(), target);
  }

  // string dependentFileList = 28;
  if (this->dependentfilelist().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dependentfilelist().data(), static_cast<int>(this->dependentfilelist().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpPlanUnit.dependentFileList");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        28, this->dependentfilelist(), target);
  }

  // int32 source = 29;
  if (this->source() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(29, this->source(), target);
  }

  // string quotationInfo = 30;
  if (this->quotationinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->quotationinfo().data(), static_cast<int>(this->quotationinfo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpPlanUnit.quotationInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        30, this->quotationinfo(), target);
  }

  // int32 isPrivate = 31;
  if (this->isprivate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(31, this->isprivate(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageHttpPlanUnit)
  return target;
}

size_t CMessageHttpPlanUnit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageHttpPlanUnit)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string pakUrl = 5;
  if (this->pakurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pakurl());
  }

  // string thumbnailUrl = 6;
  if (this->thumbnailurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->thumbnailurl());
  }

  // string floorEditFileUrl = 7;
  if (this->flooreditfileurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->flooreditfileurl());
  }

  // string detailInfo = 8;
  if (this->detailinfo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->detailinfo());
  }

  // string designFileUrl = 9;
  if (this->designfileurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->designfileurl());
  }

  // string floorRefUrl = 20;
  if (this->floorrefurl().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->floorrefurl());
  }

  // string userName = 27;
  if (this->username().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string dependentFileList = 28;
  if (this->dependentfilelist().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dependentfilelist());
  }

  // string quotationInfo = 30;
  if (this->quotationinfo().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->quotationinfo());
  }

  // float size = 3;
  if (this->size() != 0) {
    total_size += 1 + 4;
  }

  // int32 districtId = 10;
  if (this->districtid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->districtid());
  }

  // int32 propertyTypeId = 11;
  if (this->propertytypeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->propertytypeid());
  }

  // int32 roomTypeId = 12;
  if (this->roomtypeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roomtypeid());
  }

  // int32 templateTypeId = 13;
  if (this->templatetypeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->templatetypeid());
  }

  // int32 isDel = 14;
  if (this->isdel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->isdel());
  }

  // int64 createTime = 15;
  if (this->createtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->createtime());
  }

  // int64 updateTime = 16;
  if (this->updatetime() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->updatetime());
  }

  // int32 userId = 17;
  if (this->userid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  // int32 companyId = 18;
  if (this->companyid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->companyid());
  }

  // float floorRefWidth = 21;
  if (this->floorrefwidth() != 0) {
    total_size += 2 + 4;
  }

  // float floorRefHeight = 22;
  if (this->floorrefheight() != 0) {
    total_size += 2 + 4;
  }

  // int32 groupId = 25;
  if (this->groupid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->groupid());
  }

  // int32 condoId = 26;
  if (this->condoid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->condoid());
  }

  // int32 source = 29;
  if (this->source() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->source());
  }

  // int32 isPrivate = 31;
  if (this->isprivate() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->isprivate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageHttpPlanUnit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageHttpPlanUnit)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageHttpPlanUnit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageHttpPlanUnit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageHttpPlanUnit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageHttpPlanUnit)
    MergeFrom(*source);
  }
}

void CMessageHttpPlanUnit::MergeFrom(const CMessageHttpPlanUnit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageHttpPlanUnit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.pakurl().size() > 0) {

    pakurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pakurl_);
  }
  if (from.thumbnailurl().size() > 0) {

    thumbnailurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnailurl_);
  }
  if (from.flooreditfileurl().size() > 0) {

    flooreditfileurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.flooreditfileurl_);
  }
  if (from.detailinfo().size() > 0) {

    detailinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detailinfo_);
  }
  if (from.designfileurl().size() > 0) {

    designfileurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.designfileurl_);
  }
  if (from.floorrefurl().size() > 0) {

    floorrefurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.floorrefurl_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.dependentfilelist().size() > 0) {

    dependentfilelist_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dependentfilelist_);
  }
  if (from.quotationinfo().size() > 0) {

    quotationinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.quotationinfo_);
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.districtid() != 0) {
    set_districtid(from.districtid());
  }
  if (from.propertytypeid() != 0) {
    set_propertytypeid(from.propertytypeid());
  }
  if (from.roomtypeid() != 0) {
    set_roomtypeid(from.roomtypeid());
  }
  if (from.templatetypeid() != 0) {
    set_templatetypeid(from.templatetypeid());
  }
  if (from.isdel() != 0) {
    set_isdel(from.isdel());
  }
  if (from.createtime() != 0) {
    set_createtime(from.createtime());
  }
  if (from.updatetime() != 0) {
    set_updatetime(from.updatetime());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.companyid() != 0) {
    set_companyid(from.companyid());
  }
  if (from.floorrefwidth() != 0) {
    set_floorrefwidth(from.floorrefwidth());
  }
  if (from.floorrefheight() != 0) {
    set_floorrefheight(from.floorrefheight());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.condoid() != 0) {
    set_condoid(from.condoid());
  }
  if (from.source() != 0) {
    set_source(from.source());
  }
  if (from.isprivate() != 0) {
    set_isprivate(from.isprivate());
  }
}

void CMessageHttpPlanUnit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageHttpPlanUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageHttpPlanUnit::CopyFrom(const CMessageHttpPlanUnit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageHttpPlanUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageHttpPlanUnit::IsInitialized() const {
  return true;
}

void CMessageHttpPlanUnit::Swap(CMessageHttpPlanUnit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageHttpPlanUnit::InternalSwap(CMessageHttpPlanUnit* other) {
  using std::swap;
  id_.Swap(&other->id_);
  title_.Swap(&other->title_);
  pakurl_.Swap(&other->pakurl_);
  thumbnailurl_.Swap(&other->thumbnailurl_);
  flooreditfileurl_.Swap(&other->flooreditfileurl_);
  detailinfo_.Swap(&other->detailinfo_);
  designfileurl_.Swap(&other->designfileurl_);
  floorrefurl_.Swap(&other->floorrefurl_);
  username_.Swap(&other->username_);
  dependentfilelist_.Swap(&other->dependentfilelist_);
  quotationinfo_.Swap(&other->quotationinfo_);
  swap(size_, other->size_);
  swap(districtid_, other->districtid_);
  swap(propertytypeid_, other->propertytypeid_);
  swap(roomtypeid_, other->roomtypeid_);
  swap(templatetypeid_, other->templatetypeid_);
  swap(isdel_, other->isdel_);
  swap(createtime_, other->createtime_);
  swap(updatetime_, other->updatetime_);
  swap(userid_, other->userid_);
  swap(companyid_, other->companyid_);
  swap(floorrefwidth_, other->floorrefwidth_);
  swap(floorrefheight_, other->floorrefheight_);
  swap(groupid_, other->groupid_);
  swap(condoid_, other->condoid_);
  swap(source_, other->source_);
  swap(isprivate_, other->isprivate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageHttpPlanUnit::GetMetadata() const {
  protobuf_message_5fplan_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fplan_5flist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMessageHttpPlanList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageHttpPlanList::kRowsFieldNumber;
const int CMessageHttpPlanList::kTotalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageHttpPlanList::CMessageHttpPlanList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fplan_5flist_2eproto::InitDefaultsCMessageHttpPlanList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageHttpPlanList)
}
CMessageHttpPlanList::CMessageHttpPlanList(const CMessageHttpPlanList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rows_(from.rows_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  total_ = from.total_;
  // @@protoc_insertion_point(copy_constructor:d5.CMessageHttpPlanList)
}

void CMessageHttpPlanList::SharedCtor() {
  total_ = 0;
  _cached_size_ = 0;
}

CMessageHttpPlanList::~CMessageHttpPlanList() {
  // @@protoc_insertion_point(destructor:d5.CMessageHttpPlanList)
  SharedDtor();
}

void CMessageHttpPlanList::SharedDtor() {
}

void CMessageHttpPlanList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageHttpPlanList::descriptor() {
  ::protobuf_message_5fplan_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fplan_5flist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageHttpPlanList& CMessageHttpPlanList::default_instance() {
  ::protobuf_message_5fplan_5flist_2eproto::InitDefaultsCMessageHttpPlanList();
  return *internal_default_instance();
}


void CMessageHttpPlanList::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageHttpPlanList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rows_.Clear();
  total_ = 0;
  _internal_metadata_.Clear();
}

bool CMessageHttpPlanList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageHttpPlanList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .d5.CMessageHttpPlanUnit rows = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 total = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageHttpPlanList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageHttpPlanList)
  return false;
#undef DO_
}

void CMessageHttpPlanList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageHttpPlanList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .d5.CMessageHttpPlanUnit rows = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rows_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->rows(static_cast<int>(i)),
      output);
  }

  // int32 total = 2;
  if (this->total() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageHttpPlanList)
}

::google::protobuf::uint8* CMessageHttpPlanList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageHttpPlanList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .d5.CMessageHttpPlanUnit rows = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rows_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->rows(static_cast<int>(i)), deterministic, target);
  }

  // int32 total = 2;
  if (this->total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageHttpPlanList)
  return target;
}

size_t CMessageHttpPlanList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageHttpPlanList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .d5.CMessageHttpPlanUnit rows = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->rows_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rows(static_cast<int>(i)));
    }
  }

  // int32 total = 2;
  if (this->total() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageHttpPlanList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageHttpPlanList)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageHttpPlanList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageHttpPlanList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageHttpPlanList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageHttpPlanList)
    MergeFrom(*source);
  }
}

void CMessageHttpPlanList::MergeFrom(const CMessageHttpPlanList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageHttpPlanList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rows_.MergeFrom(from.rows_);
  if (from.total() != 0) {
    set_total(from.total());
  }
}

void CMessageHttpPlanList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageHttpPlanList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageHttpPlanList::CopyFrom(const CMessageHttpPlanList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageHttpPlanList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageHttpPlanList::IsInitialized() const {
  return true;
}

void CMessageHttpPlanList::Swap(CMessageHttpPlanList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageHttpPlanList::InternalSwap(CMessageHttpPlanList* other) {
  using std::swap;
  CastToBase(&rows_)->InternalSwap(CastToBase(&other->rows_));
  swap(total_, other->total_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageHttpPlanList::GetMetadata() const {
  protobuf_message_5fplan_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fplan_5flist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMessagePlanListResponse::InitAsDefaultInstance() {
  ::d5::_CMessagePlanListResponse_default_instance_._instance.get_mutable()->list_ = const_cast< ::d5::CMessageHttpPlanList*>(
      ::d5::CMessageHttpPlanList::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessagePlanListResponse::kTypeFieldNumber;
const int CMessagePlanListResponse::kUuidFieldNumber;
const int CMessagePlanListResponse::kStateFieldNumber;
const int CMessagePlanListResponse::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessagePlanListResponse::CMessagePlanListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fplan_5flist_2eproto::InitDefaultsCMessagePlanListResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessagePlanListResponse)
}
CMessagePlanListResponse::CMessagePlanListResponse(const CMessagePlanListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.has_list()) {
    list_ = new ::d5::CMessageHttpPlanList(*from.list_);
  } else {
    list_ = NULL;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&type_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:d5.CMessagePlanListResponse)
}

void CMessagePlanListResponse::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&list_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&list_)) + sizeof(state_));
  _cached_size_ = 0;
}

CMessagePlanListResponse::~CMessagePlanListResponse() {
  // @@protoc_insertion_point(destructor:d5.CMessagePlanListResponse)
  SharedDtor();
}

void CMessagePlanListResponse::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete list_;
}

void CMessagePlanListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessagePlanListResponse::descriptor() {
  ::protobuf_message_5fplan_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fplan_5flist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessagePlanListResponse& CMessagePlanListResponse::default_instance() {
  ::protobuf_message_5fplan_5flist_2eproto::InitDefaultsCMessagePlanListResponse();
  return *internal_default_instance();
}


void CMessagePlanListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessagePlanListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && list_ != NULL) {
    delete list_;
  }
  list_ = NULL;
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&type_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool CMessagePlanListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessagePlanListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessagePlanListResponse.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .d5.CMessageHttpPlanList list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessagePlanListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessagePlanListResponse)
  return false;
#undef DO_
}

void CMessagePlanListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessagePlanListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessagePlanListResponse.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uuid(), output);
  }

  // int32 state = 3;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->state(), output);
  }

  // .d5.CMessageHttpPlanList list = 4;
  if (this->has_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *list_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessagePlanListResponse)
}

::google::protobuf::uint8* CMessagePlanListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessagePlanListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessagePlanListResponse.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uuid(), target);
  }

  // int32 state = 3;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->state(), target);
  }

  // .d5.CMessageHttpPlanList list = 4;
  if (this->has_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *list_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessagePlanListResponse)
  return target;
}

size_t CMessagePlanListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessagePlanListResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uuid = 2;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  // .d5.CMessageHttpPlanList list = 4;
  if (this->has_list()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *list_);
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 state = 3;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessagePlanListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessagePlanListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessagePlanListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessagePlanListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessagePlanListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessagePlanListResponse)
    MergeFrom(*source);
  }
}

void CMessagePlanListResponse::MergeFrom(const CMessagePlanListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessagePlanListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.has_list()) {
    mutable_list()->::d5::CMessageHttpPlanList::MergeFrom(from.list());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void CMessagePlanListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessagePlanListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessagePlanListResponse::CopyFrom(const CMessagePlanListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessagePlanListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessagePlanListResponse::IsInitialized() const {
  return true;
}

void CMessagePlanListResponse::Swap(CMessagePlanListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessagePlanListResponse::InternalSwap(CMessagePlanListResponse* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_);
  swap(list_, other->list_);
  swap(type_, other->type_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessagePlanListResponse::GetMetadata() const {
  protobuf_message_5fplan_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fplan_5flist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace d5
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessagePlanListRequest* Arena::Create< ::d5::CMessagePlanListRequest >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessagePlanListRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageHttpPlanUnit* Arena::Create< ::d5::CMessageHttpPlanUnit >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageHttpPlanUnit >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageHttpPlanList* Arena::Create< ::d5::CMessageHttpPlanList >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageHttpPlanList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessagePlanListResponse* Arena::Create< ::d5::CMessagePlanListResponse >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessagePlanListResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
