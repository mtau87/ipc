// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_http_cook_status.proto

#include "message_http_cook_status.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace d5 {
class CMessageHttpCookStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageHttpCookStatus>
      _instance;
} _CMessageHttpCookStatus_default_instance_;
class CMessageDesignHttpCookStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageDesignHttpCookStatus>
      _instance;
} _CMessageDesignHttpCookStatus_default_instance_;
}  // namespace d5
namespace protobuf_message_5fhttp_5fcook_5fstatus_2eproto {
void InitDefaultsCMessageHttpCookStatusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::_CMessageHttpCookStatus_default_instance_;
    new (ptr) ::d5::CMessageHttpCookStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageHttpCookStatus::InitAsDefaultInstance();
}

void InitDefaultsCMessageHttpCookStatus() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageHttpCookStatusImpl);
}

void InitDefaultsCMessageDesignHttpCookStatusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::_CMessageDesignHttpCookStatus_default_instance_;
    new (ptr) ::d5::CMessageDesignHttpCookStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageDesignHttpCookStatus::InitAsDefaultInstance();
}

void InitDefaultsCMessageDesignHttpCookStatus() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageDesignHttpCookStatusImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpCookStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpCookStatus, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpCookStatus, designid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpCookStatus, layoutid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpCookStatus, inputurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpCookStatus, outputurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpCookStatus, cookstage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpCookStatus, submittime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpCookStatus, starttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpCookStatus, finishtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpCookStatus, trycount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpCookStatus, errorinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpCookStatus, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpCookStatus, hostname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpCookStatus, paksize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpCookStatus, expectedfinishtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpCookStatus, currenttime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageDesignHttpCookStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageDesignHttpCookStatus, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageDesignHttpCookStatus, designid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageDesignHttpCookStatus, layoutid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageDesignHttpCookStatus, inputurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageDesignHttpCookStatus, outputurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageDesignHttpCookStatus, cookstage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageDesignHttpCookStatus, submittime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageDesignHttpCookStatus, starttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageDesignHttpCookStatus, finishtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageDesignHttpCookStatus, trycount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageDesignHttpCookStatus, errorinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageDesignHttpCookStatus, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageDesignHttpCookStatus, hostname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageDesignHttpCookStatus, paksize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageDesignHttpCookStatus, designfileurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageDesignHttpCookStatus, expectedfinishtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageDesignHttpCookStatus, currenttime_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::d5::CMessageHttpCookStatus)},
  { 21, -1, sizeof(::d5::CMessageDesignHttpCookStatus)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageHttpCookStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageDesignHttpCookStatus_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "message_http_cook_status.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\036message_http_cook_status.proto\022\002d5\"\304\002\n"
      "\026CMessageHttpCookStatus\022\n\n\002id\030\001 \001(\t\022\020\n\010d"
      "esignId\030\002 \001(\t\022\020\n\010layoutId\030\003 \001(\t\022\020\n\010input"
      "Url\030\004 \001(\t\022\021\n\toutputUrl\030\005 \001(\t\022\021\n\tcookStag"
      "e\030\006 \001(\005\022\022\n\nsubmitTime\030\007 \001(\003\022\021\n\tstartTime"
      "\030\010 \001(\003\022\022\n\nfinishTime\030\t \001(\003\022\020\n\010tryCount\030\n"
      " \001(\005\022\021\n\terrorInfo\030\013 \001(\t\022\016\n\006userId\030\014 \001(\005\022"
      "\020\n\010hostName\030\r \001(\t\022\017\n\007pakSize\030\016 \001(\005\022\032\n\022ex"
      "pectedFinishTime\030\017 \001(\003\022\023\n\013currentTime\030\020 "
      "\001(\003\"\341\002\n\034CMessageDesignHttpCookStatus\022\n\n\002"
      "id\030\001 \001(\t\022\020\n\010designId\030\002 \001(\t\022\020\n\010layoutId\030\003"
      " \001(\t\022\020\n\010inputUrl\030\004 \001(\t\022\021\n\toutputUrl\030\005 \001("
      "\t\022\021\n\tcookStage\030\006 \001(\005\022\022\n\nsubmitTime\030\007 \001(\003"
      "\022\021\n\tstartTime\030\010 \001(\003\022\022\n\nfinishTime\030\t \001(\003\022"
      "\020\n\010tryCount\030\n \001(\005\022\021\n\terrorInfo\030\013 \001(\t\022\016\n\006"
      "userId\030\014 \001(\005\022\020\n\010hostName\030\r \001(\t\022\017\n\007pakSiz"
      "e\030\016 \001(\005\022\025\n\rdesignFileUrl\030\017 \001(\t\022\032\n\022expect"
      "edFinishTime\030\020 \001(\003\022\023\n\013currentTime\030\021 \001(\003b"
      "\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 727);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message_http_cook_status.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_message_5fhttp_5fcook_5fstatus_2eproto
namespace d5 {

// ===================================================================

void CMessageHttpCookStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageHttpCookStatus::kIdFieldNumber;
const int CMessageHttpCookStatus::kDesignIdFieldNumber;
const int CMessageHttpCookStatus::kLayoutIdFieldNumber;
const int CMessageHttpCookStatus::kInputUrlFieldNumber;
const int CMessageHttpCookStatus::kOutputUrlFieldNumber;
const int CMessageHttpCookStatus::kCookStageFieldNumber;
const int CMessageHttpCookStatus::kSubmitTimeFieldNumber;
const int CMessageHttpCookStatus::kStartTimeFieldNumber;
const int CMessageHttpCookStatus::kFinishTimeFieldNumber;
const int CMessageHttpCookStatus::kTryCountFieldNumber;
const int CMessageHttpCookStatus::kErrorInfoFieldNumber;
const int CMessageHttpCookStatus::kUserIdFieldNumber;
const int CMessageHttpCookStatus::kHostNameFieldNumber;
const int CMessageHttpCookStatus::kPakSizeFieldNumber;
const int CMessageHttpCookStatus::kExpectedFinishTimeFieldNumber;
const int CMessageHttpCookStatus::kCurrentTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageHttpCookStatus::CMessageHttpCookStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fhttp_5fcook_5fstatus_2eproto::InitDefaultsCMessageHttpCookStatus();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageHttpCookStatus)
}
CMessageHttpCookStatus::CMessageHttpCookStatus(const CMessageHttpCookStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  designid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.designid().size() > 0) {
    designid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.designid_);
  }
  layoutid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.layoutid().size() > 0) {
    layoutid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.layoutid_);
  }
  inputurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.inputurl().size() > 0) {
    inputurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inputurl_);
  }
  outputurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.outputurl().size() > 0) {
    outputurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.outputurl_);
  }
  errorinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errorinfo().size() > 0) {
    errorinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errorinfo_);
  }
  hostname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hostname().size() > 0) {
    hostname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hostname_);
  }
  ::memcpy(&submittime_, &from.submittime_,
    static_cast<size_t>(reinterpret_cast<char*>(&currenttime_) -
    reinterpret_cast<char*>(&submittime_)) + sizeof(currenttime_));
  // @@protoc_insertion_point(copy_constructor:d5.CMessageHttpCookStatus)
}

void CMessageHttpCookStatus::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  designid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  layoutid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inputurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  outputurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hostname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&submittime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&currenttime_) -
      reinterpret_cast<char*>(&submittime_)) + sizeof(currenttime_));
  _cached_size_ = 0;
}

CMessageHttpCookStatus::~CMessageHttpCookStatus() {
  // @@protoc_insertion_point(destructor:d5.CMessageHttpCookStatus)
  SharedDtor();
}

void CMessageHttpCookStatus::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  designid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  layoutid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inputurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  outputurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hostname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMessageHttpCookStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageHttpCookStatus::descriptor() {
  ::protobuf_message_5fhttp_5fcook_5fstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fhttp_5fcook_5fstatus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageHttpCookStatus& CMessageHttpCookStatus::default_instance() {
  ::protobuf_message_5fhttp_5fcook_5fstatus_2eproto::InitDefaultsCMessageHttpCookStatus();
  return *internal_default_instance();
}


void CMessageHttpCookStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageHttpCookStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  designid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  layoutid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inputurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  outputurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&submittime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&currenttime_) -
      reinterpret_cast<char*>(&submittime_)) + sizeof(currenttime_));
  _internal_metadata_.Clear();
}

bool CMessageHttpCookStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageHttpCookStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpCookStatus.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string designId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_designid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->designid().data(), static_cast<int>(this->designid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpCookStatus.designId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string layoutId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_layoutid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->layoutid().data(), static_cast<int>(this->layoutid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpCookStatus.layoutId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string inputUrl = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_inputurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->inputurl().data(), static_cast<int>(this->inputurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpCookStatus.inputUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string outputUrl = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_outputurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->outputurl().data(), static_cast<int>(this->outputurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpCookStatus.outputUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cookStage = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cookstage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 submitTime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &submittime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 startTime = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &starttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 finishTime = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &finishtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 tryCount = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &trycount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errorInfo = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errorinfo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errorinfo().data(), static_cast<int>(this->errorinfo().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpCookStatus.errorInfo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 userId = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hostName = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hostname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hostname().data(), static_cast<int>(this->hostname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpCookStatus.hostName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 pakSize = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &paksize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 expectedFinishTime = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &expectedfinishtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 currentTime = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &currenttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageHttpCookStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageHttpCookStatus)
  return false;
#undef DO_
}

void CMessageHttpCookStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageHttpCookStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpCookStatus.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string designId = 2;
  if (this->designid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->designid().data(), static_cast<int>(this->designid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpCookStatus.designId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->designid(), output);
  }

  // string layoutId = 3;
  if (this->layoutid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->layoutid().data(), static_cast<int>(this->layoutid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpCookStatus.layoutId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->layoutid(), output);
  }

  // string inputUrl = 4;
  if (this->inputurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->inputurl().data(), static_cast<int>(this->inputurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpCookStatus.inputUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->inputurl(), output);
  }

  // string outputUrl = 5;
  if (this->outputurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->outputurl().data(), static_cast<int>(this->outputurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpCookStatus.outputUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->outputurl(), output);
  }

  // int32 cookStage = 6;
  if (this->cookstage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->cookstage(), output);
  }

  // int64 submitTime = 7;
  if (this->submittime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->submittime(), output);
  }

  // int64 startTime = 8;
  if (this->starttime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->starttime(), output);
  }

  // int64 finishTime = 9;
  if (this->finishtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->finishtime(), output);
  }

  // int32 tryCount = 10;
  if (this->trycount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->trycount(), output);
  }

  // string errorInfo = 11;
  if (this->errorinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errorinfo().data(), static_cast<int>(this->errorinfo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpCookStatus.errorInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->errorinfo(), output);
  }

  // int32 userId = 12;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->userid(), output);
  }

  // string hostName = 13;
  if (this->hostname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hostname().data(), static_cast<int>(this->hostname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpCookStatus.hostName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->hostname(), output);
  }

  // int32 pakSize = 14;
  if (this->paksize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->paksize(), output);
  }

  // int64 expectedFinishTime = 15;
  if (this->expectedfinishtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->expectedfinishtime(), output);
  }

  // int64 currentTime = 16;
  if (this->currenttime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(16, this->currenttime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageHttpCookStatus)
}

::google::protobuf::uint8* CMessageHttpCookStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageHttpCookStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpCookStatus.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string designId = 2;
  if (this->designid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->designid().data(), static_cast<int>(this->designid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpCookStatus.designId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->designid(), target);
  }

  // string layoutId = 3;
  if (this->layoutid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->layoutid().data(), static_cast<int>(this->layoutid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpCookStatus.layoutId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->layoutid(), target);
  }

  // string inputUrl = 4;
  if (this->inputurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->inputurl().data(), static_cast<int>(this->inputurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpCookStatus.inputUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->inputurl(), target);
  }

  // string outputUrl = 5;
  if (this->outputurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->outputurl().data(), static_cast<int>(this->outputurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpCookStatus.outputUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->outputurl(), target);
  }

  // int32 cookStage = 6;
  if (this->cookstage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->cookstage(), target);
  }

  // int64 submitTime = 7;
  if (this->submittime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->submittime(), target);
  }

  // int64 startTime = 8;
  if (this->starttime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->starttime(), target);
  }

  // int64 finishTime = 9;
  if (this->finishtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->finishtime(), target);
  }

  // int32 tryCount = 10;
  if (this->trycount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->trycount(), target);
  }

  // string errorInfo = 11;
  if (this->errorinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errorinfo().data(), static_cast<int>(this->errorinfo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpCookStatus.errorInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->errorinfo(), target);
  }

  // int32 userId = 12;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->userid(), target);
  }

  // string hostName = 13;
  if (this->hostname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hostname().data(), static_cast<int>(this->hostname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpCookStatus.hostName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->hostname(), target);
  }

  // int32 pakSize = 14;
  if (this->paksize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->paksize(), target);
  }

  // int64 expectedFinishTime = 15;
  if (this->expectedfinishtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->expectedfinishtime(), target);
  }

  // int64 currentTime = 16;
  if (this->currenttime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(16, this->currenttime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageHttpCookStatus)
  return target;
}

size_t CMessageHttpCookStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageHttpCookStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string designId = 2;
  if (this->designid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->designid());
  }

  // string layoutId = 3;
  if (this->layoutid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->layoutid());
  }

  // string inputUrl = 4;
  if (this->inputurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->inputurl());
  }

  // string outputUrl = 5;
  if (this->outputurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->outputurl());
  }

  // string errorInfo = 11;
  if (this->errorinfo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errorinfo());
  }

  // string hostName = 13;
  if (this->hostname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hostname());
  }

  // int64 submitTime = 7;
  if (this->submittime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->submittime());
  }

  // int64 startTime = 8;
  if (this->starttime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->starttime());
  }

  // int32 cookStage = 6;
  if (this->cookstage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cookstage());
  }

  // int32 tryCount = 10;
  if (this->trycount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->trycount());
  }

  // int64 finishTime = 9;
  if (this->finishtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->finishtime());
  }

  // int32 userId = 12;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  // int32 pakSize = 14;
  if (this->paksize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->paksize());
  }

  // int64 expectedFinishTime = 15;
  if (this->expectedfinishtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->expectedfinishtime());
  }

  // int64 currentTime = 16;
  if (this->currenttime() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->currenttime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageHttpCookStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageHttpCookStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageHttpCookStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageHttpCookStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageHttpCookStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageHttpCookStatus)
    MergeFrom(*source);
  }
}

void CMessageHttpCookStatus::MergeFrom(const CMessageHttpCookStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageHttpCookStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.designid().size() > 0) {

    designid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.designid_);
  }
  if (from.layoutid().size() > 0) {

    layoutid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.layoutid_);
  }
  if (from.inputurl().size() > 0) {

    inputurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inputurl_);
  }
  if (from.outputurl().size() > 0) {

    outputurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.outputurl_);
  }
  if (from.errorinfo().size() > 0) {

    errorinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errorinfo_);
  }
  if (from.hostname().size() > 0) {

    hostname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hostname_);
  }
  if (from.submittime() != 0) {
    set_submittime(from.submittime());
  }
  if (from.starttime() != 0) {
    set_starttime(from.starttime());
  }
  if (from.cookstage() != 0) {
    set_cookstage(from.cookstage());
  }
  if (from.trycount() != 0) {
    set_trycount(from.trycount());
  }
  if (from.finishtime() != 0) {
    set_finishtime(from.finishtime());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.paksize() != 0) {
    set_paksize(from.paksize());
  }
  if (from.expectedfinishtime() != 0) {
    set_expectedfinishtime(from.expectedfinishtime());
  }
  if (from.currenttime() != 0) {
    set_currenttime(from.currenttime());
  }
}

void CMessageHttpCookStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageHttpCookStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageHttpCookStatus::CopyFrom(const CMessageHttpCookStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageHttpCookStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageHttpCookStatus::IsInitialized() const {
  return true;
}

void CMessageHttpCookStatus::Swap(CMessageHttpCookStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageHttpCookStatus::InternalSwap(CMessageHttpCookStatus* other) {
  using std::swap;
  id_.Swap(&other->id_);
  designid_.Swap(&other->designid_);
  layoutid_.Swap(&other->layoutid_);
  inputurl_.Swap(&other->inputurl_);
  outputurl_.Swap(&other->outputurl_);
  errorinfo_.Swap(&other->errorinfo_);
  hostname_.Swap(&other->hostname_);
  swap(submittime_, other->submittime_);
  swap(starttime_, other->starttime_);
  swap(cookstage_, other->cookstage_);
  swap(trycount_, other->trycount_);
  swap(finishtime_, other->finishtime_);
  swap(userid_, other->userid_);
  swap(paksize_, other->paksize_);
  swap(expectedfinishtime_, other->expectedfinishtime_);
  swap(currenttime_, other->currenttime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageHttpCookStatus::GetMetadata() const {
  protobuf_message_5fhttp_5fcook_5fstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fhttp_5fcook_5fstatus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMessageDesignHttpCookStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageDesignHttpCookStatus::kIdFieldNumber;
const int CMessageDesignHttpCookStatus::kDesignIdFieldNumber;
const int CMessageDesignHttpCookStatus::kLayoutIdFieldNumber;
const int CMessageDesignHttpCookStatus::kInputUrlFieldNumber;
const int CMessageDesignHttpCookStatus::kOutputUrlFieldNumber;
const int CMessageDesignHttpCookStatus::kCookStageFieldNumber;
const int CMessageDesignHttpCookStatus::kSubmitTimeFieldNumber;
const int CMessageDesignHttpCookStatus::kStartTimeFieldNumber;
const int CMessageDesignHttpCookStatus::kFinishTimeFieldNumber;
const int CMessageDesignHttpCookStatus::kTryCountFieldNumber;
const int CMessageDesignHttpCookStatus::kErrorInfoFieldNumber;
const int CMessageDesignHttpCookStatus::kUserIdFieldNumber;
const int CMessageDesignHttpCookStatus::kHostNameFieldNumber;
const int CMessageDesignHttpCookStatus::kPakSizeFieldNumber;
const int CMessageDesignHttpCookStatus::kDesignFileUrlFieldNumber;
const int CMessageDesignHttpCookStatus::kExpectedFinishTimeFieldNumber;
const int CMessageDesignHttpCookStatus::kCurrentTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageDesignHttpCookStatus::CMessageDesignHttpCookStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fhttp_5fcook_5fstatus_2eproto::InitDefaultsCMessageDesignHttpCookStatus();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageDesignHttpCookStatus)
}
CMessageDesignHttpCookStatus::CMessageDesignHttpCookStatus(const CMessageDesignHttpCookStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  designid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.designid().size() > 0) {
    designid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.designid_);
  }
  layoutid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.layoutid().size() > 0) {
    layoutid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.layoutid_);
  }
  inputurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.inputurl().size() > 0) {
    inputurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inputurl_);
  }
  outputurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.outputurl().size() > 0) {
    outputurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.outputurl_);
  }
  errorinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errorinfo().size() > 0) {
    errorinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errorinfo_);
  }
  hostname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hostname().size() > 0) {
    hostname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hostname_);
  }
  designfileurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.designfileurl().size() > 0) {
    designfileurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.designfileurl_);
  }
  ::memcpy(&submittime_, &from.submittime_,
    static_cast<size_t>(reinterpret_cast<char*>(&currenttime_) -
    reinterpret_cast<char*>(&submittime_)) + sizeof(currenttime_));
  // @@protoc_insertion_point(copy_constructor:d5.CMessageDesignHttpCookStatus)
}

void CMessageDesignHttpCookStatus::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  designid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  layoutid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inputurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  outputurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hostname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  designfileurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&submittime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&currenttime_) -
      reinterpret_cast<char*>(&submittime_)) + sizeof(currenttime_));
  _cached_size_ = 0;
}

CMessageDesignHttpCookStatus::~CMessageDesignHttpCookStatus() {
  // @@protoc_insertion_point(destructor:d5.CMessageDesignHttpCookStatus)
  SharedDtor();
}

void CMessageDesignHttpCookStatus::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  designid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  layoutid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inputurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  outputurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hostname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  designfileurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMessageDesignHttpCookStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageDesignHttpCookStatus::descriptor() {
  ::protobuf_message_5fhttp_5fcook_5fstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fhttp_5fcook_5fstatus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageDesignHttpCookStatus& CMessageDesignHttpCookStatus::default_instance() {
  ::protobuf_message_5fhttp_5fcook_5fstatus_2eproto::InitDefaultsCMessageDesignHttpCookStatus();
  return *internal_default_instance();
}


void CMessageDesignHttpCookStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageDesignHttpCookStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  designid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  layoutid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inputurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  outputurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  designfileurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&submittime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&currenttime_) -
      reinterpret_cast<char*>(&submittime_)) + sizeof(currenttime_));
  _internal_metadata_.Clear();
}

bool CMessageDesignHttpCookStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageDesignHttpCookStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageDesignHttpCookStatus.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string designId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_designid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->designid().data(), static_cast<int>(this->designid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageDesignHttpCookStatus.designId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string layoutId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_layoutid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->layoutid().data(), static_cast<int>(this->layoutid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageDesignHttpCookStatus.layoutId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string inputUrl = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_inputurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->inputurl().data(), static_cast<int>(this->inputurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageDesignHttpCookStatus.inputUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string outputUrl = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_outputurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->outputurl().data(), static_cast<int>(this->outputurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageDesignHttpCookStatus.outputUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cookStage = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cookstage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 submitTime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &submittime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 startTime = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &starttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 finishTime = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &finishtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 tryCount = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &trycount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errorInfo = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errorinfo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errorinfo().data(), static_cast<int>(this->errorinfo().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageDesignHttpCookStatus.errorInfo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 userId = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hostName = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hostname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hostname().data(), static_cast<int>(this->hostname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageDesignHttpCookStatus.hostName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 pakSize = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &paksize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string designFileUrl = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_designfileurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->designfileurl().data(), static_cast<int>(this->designfileurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageDesignHttpCookStatus.designFileUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 expectedFinishTime = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &expectedfinishtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 currentTime = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &currenttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageDesignHttpCookStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageDesignHttpCookStatus)
  return false;
#undef DO_
}

void CMessageDesignHttpCookStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageDesignHttpCookStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageDesignHttpCookStatus.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string designId = 2;
  if (this->designid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->designid().data(), static_cast<int>(this->designid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageDesignHttpCookStatus.designId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->designid(), output);
  }

  // string layoutId = 3;
  if (this->layoutid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->layoutid().data(), static_cast<int>(this->layoutid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageDesignHttpCookStatus.layoutId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->layoutid(), output);
  }

  // string inputUrl = 4;
  if (this->inputurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->inputurl().data(), static_cast<int>(this->inputurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageDesignHttpCookStatus.inputUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->inputurl(), output);
  }

  // string outputUrl = 5;
  if (this->outputurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->outputurl().data(), static_cast<int>(this->outputurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageDesignHttpCookStatus.outputUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->outputurl(), output);
  }

  // int32 cookStage = 6;
  if (this->cookstage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->cookstage(), output);
  }

  // int64 submitTime = 7;
  if (this->submittime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->submittime(), output);
  }

  // int64 startTime = 8;
  if (this->starttime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->starttime(), output);
  }

  // int64 finishTime = 9;
  if (this->finishtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->finishtime(), output);
  }

  // int32 tryCount = 10;
  if (this->trycount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->trycount(), output);
  }

  // string errorInfo = 11;
  if (this->errorinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errorinfo().data(), static_cast<int>(this->errorinfo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageDesignHttpCookStatus.errorInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->errorinfo(), output);
  }

  // int32 userId = 12;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->userid(), output);
  }

  // string hostName = 13;
  if (this->hostname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hostname().data(), static_cast<int>(this->hostname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageDesignHttpCookStatus.hostName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->hostname(), output);
  }

  // int32 pakSize = 14;
  if (this->paksize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->paksize(), output);
  }

  // string designFileUrl = 15;
  if (this->designfileurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->designfileurl().data(), static_cast<int>(this->designfileurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageDesignHttpCookStatus.designFileUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->designfileurl(), output);
  }

  // int64 expectedFinishTime = 16;
  if (this->expectedfinishtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(16, this->expectedfinishtime(), output);
  }

  // int64 currentTime = 17;
  if (this->currenttime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(17, this->currenttime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageDesignHttpCookStatus)
}

::google::protobuf::uint8* CMessageDesignHttpCookStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageDesignHttpCookStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageDesignHttpCookStatus.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string designId = 2;
  if (this->designid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->designid().data(), static_cast<int>(this->designid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageDesignHttpCookStatus.designId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->designid(), target);
  }

  // string layoutId = 3;
  if (this->layoutid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->layoutid().data(), static_cast<int>(this->layoutid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageDesignHttpCookStatus.layoutId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->layoutid(), target);
  }

  // string inputUrl = 4;
  if (this->inputurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->inputurl().data(), static_cast<int>(this->inputurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageDesignHttpCookStatus.inputUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->inputurl(), target);
  }

  // string outputUrl = 5;
  if (this->outputurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->outputurl().data(), static_cast<int>(this->outputurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageDesignHttpCookStatus.outputUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->outputurl(), target);
  }

  // int32 cookStage = 6;
  if (this->cookstage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->cookstage(), target);
  }

  // int64 submitTime = 7;
  if (this->submittime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->submittime(), target);
  }

  // int64 startTime = 8;
  if (this->starttime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->starttime(), target);
  }

  // int64 finishTime = 9;
  if (this->finishtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->finishtime(), target);
  }

  // int32 tryCount = 10;
  if (this->trycount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->trycount(), target);
  }

  // string errorInfo = 11;
  if (this->errorinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errorinfo().data(), static_cast<int>(this->errorinfo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageDesignHttpCookStatus.errorInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->errorinfo(), target);
  }

  // int32 userId = 12;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->userid(), target);
  }

  // string hostName = 13;
  if (this->hostname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hostname().data(), static_cast<int>(this->hostname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageDesignHttpCookStatus.hostName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->hostname(), target);
  }

  // int32 pakSize = 14;
  if (this->paksize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->paksize(), target);
  }

  // string designFileUrl = 15;
  if (this->designfileurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->designfileurl().data(), static_cast<int>(this->designfileurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageDesignHttpCookStatus.designFileUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->designfileurl(), target);
  }

  // int64 expectedFinishTime = 16;
  if (this->expectedfinishtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(16, this->expectedfinishtime(), target);
  }

  // int64 currentTime = 17;
  if (this->currenttime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(17, this->currenttime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageDesignHttpCookStatus)
  return target;
}

size_t CMessageDesignHttpCookStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageDesignHttpCookStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string designId = 2;
  if (this->designid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->designid());
  }

  // string layoutId = 3;
  if (this->layoutid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->layoutid());
  }

  // string inputUrl = 4;
  if (this->inputurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->inputurl());
  }

  // string outputUrl = 5;
  if (this->outputurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->outputurl());
  }

  // string errorInfo = 11;
  if (this->errorinfo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errorinfo());
  }

  // string hostName = 13;
  if (this->hostname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hostname());
  }

  // string designFileUrl = 15;
  if (this->designfileurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->designfileurl());
  }

  // int64 submitTime = 7;
  if (this->submittime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->submittime());
  }

  // int64 startTime = 8;
  if (this->starttime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->starttime());
  }

  // int32 cookStage = 6;
  if (this->cookstage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cookstage());
  }

  // int32 tryCount = 10;
  if (this->trycount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->trycount());
  }

  // int64 finishTime = 9;
  if (this->finishtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->finishtime());
  }

  // int32 userId = 12;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  // int32 pakSize = 14;
  if (this->paksize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->paksize());
  }

  // int64 expectedFinishTime = 16;
  if (this->expectedfinishtime() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->expectedfinishtime());
  }

  // int64 currentTime = 17;
  if (this->currenttime() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->currenttime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageDesignHttpCookStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageDesignHttpCookStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageDesignHttpCookStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageDesignHttpCookStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageDesignHttpCookStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageDesignHttpCookStatus)
    MergeFrom(*source);
  }
}

void CMessageDesignHttpCookStatus::MergeFrom(const CMessageDesignHttpCookStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageDesignHttpCookStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.designid().size() > 0) {

    designid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.designid_);
  }
  if (from.layoutid().size() > 0) {

    layoutid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.layoutid_);
  }
  if (from.inputurl().size() > 0) {

    inputurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inputurl_);
  }
  if (from.outputurl().size() > 0) {

    outputurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.outputurl_);
  }
  if (from.errorinfo().size() > 0) {

    errorinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errorinfo_);
  }
  if (from.hostname().size() > 0) {

    hostname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hostname_);
  }
  if (from.designfileurl().size() > 0) {

    designfileurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.designfileurl_);
  }
  if (from.submittime() != 0) {
    set_submittime(from.submittime());
  }
  if (from.starttime() != 0) {
    set_starttime(from.starttime());
  }
  if (from.cookstage() != 0) {
    set_cookstage(from.cookstage());
  }
  if (from.trycount() != 0) {
    set_trycount(from.trycount());
  }
  if (from.finishtime() != 0) {
    set_finishtime(from.finishtime());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.paksize() != 0) {
    set_paksize(from.paksize());
  }
  if (from.expectedfinishtime() != 0) {
    set_expectedfinishtime(from.expectedfinishtime());
  }
  if (from.currenttime() != 0) {
    set_currenttime(from.currenttime());
  }
}

void CMessageDesignHttpCookStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageDesignHttpCookStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageDesignHttpCookStatus::CopyFrom(const CMessageDesignHttpCookStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageDesignHttpCookStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageDesignHttpCookStatus::IsInitialized() const {
  return true;
}

void CMessageDesignHttpCookStatus::Swap(CMessageDesignHttpCookStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageDesignHttpCookStatus::InternalSwap(CMessageDesignHttpCookStatus* other) {
  using std::swap;
  id_.Swap(&other->id_);
  designid_.Swap(&other->designid_);
  layoutid_.Swap(&other->layoutid_);
  inputurl_.Swap(&other->inputurl_);
  outputurl_.Swap(&other->outputurl_);
  errorinfo_.Swap(&other->errorinfo_);
  hostname_.Swap(&other->hostname_);
  designfileurl_.Swap(&other->designfileurl_);
  swap(submittime_, other->submittime_);
  swap(starttime_, other->starttime_);
  swap(cookstage_, other->cookstage_);
  swap(trycount_, other->trycount_);
  swap(finishtime_, other->finishtime_);
  swap(userid_, other->userid_);
  swap(paksize_, other->paksize_);
  swap(expectedfinishtime_, other->expectedfinishtime_);
  swap(currenttime_, other->currenttime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageDesignHttpCookStatus::GetMetadata() const {
  protobuf_message_5fhttp_5fcook_5fstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fhttp_5fcook_5fstatus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace d5
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageHttpCookStatus* Arena::Create< ::d5::CMessageHttpCookStatus >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageHttpCookStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageDesignHttpCookStatus* Arena::Create< ::d5::CMessageDesignHttpCookStatus >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageDesignHttpCookStatus >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
