// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_http_login.proto

#ifndef PROTOBUF_message_5fhttp_5flogin_2eproto_INCLUDED
#define PROTOBUF_message_5fhttp_5flogin_2eproto_INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_message_5fhttp_5flogin_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsCMessageLoginMsgImpl();
void InitDefaultsCMessageLoginMsg();
inline void InitDefaults() {
  InitDefaultsCMessageLoginMsg();
}
}  // namespace protobuf_message_5fhttp_5flogin_2eproto
namespace d5 {
class CMessageLoginMsg;
class CMessageLoginMsgDefaultTypeInternal;
extern CMessageLoginMsgDefaultTypeInternal _CMessageLoginMsg_default_instance_;
}  // namespace d5
namespace google {
namespace protobuf {
template<> ::d5::CMessageLoginMsg* Arena::Create< ::d5::CMessageLoginMsg>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace d5 {

// ===================================================================

class CMessageLoginMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageLoginMsg) */ {
 public:
  CMessageLoginMsg();
  virtual ~CMessageLoginMsg();

  CMessageLoginMsg(const CMessageLoginMsg& from);

  inline CMessageLoginMsg& operator=(const CMessageLoginMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageLoginMsg(CMessageLoginMsg&& from) noexcept
    : CMessageLoginMsg() {
    *this = ::std::move(from);
  }

  inline CMessageLoginMsg& operator=(CMessageLoginMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLoginMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageLoginMsg* internal_default_instance() {
    return reinterpret_cast<const CMessageLoginMsg*>(
               &_CMessageLoginMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CMessageLoginMsg* other);
  friend void swap(CMessageLoginMsg& a, CMessageLoginMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageLoginMsg* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageLoginMsg>(NULL);
  }

  CMessageLoginMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageLoginMsg>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageLoginMsg& from);
  void MergeFrom(const CMessageLoginMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageLoginMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string companyName = 5;
  void clear_companyname();
  static const int kCompanyNameFieldNumber = 5;
  const ::std::string& companyname() const;
  void set_companyname(const ::std::string& value);
  #if LANG_CXX11
  void set_companyname(::std::string&& value);
  #endif
  void set_companyname(const char* value);
  void set_companyname(const char* value, size_t size);
  ::std::string* mutable_companyname();
  ::std::string* release_companyname();
  void set_allocated_companyname(::std::string* companyname);

  // string companyLogoUrl = 7;
  void clear_companylogourl();
  static const int kCompanyLogoUrlFieldNumber = 7;
  const ::std::string& companylogourl() const;
  void set_companylogourl(const ::std::string& value);
  #if LANG_CXX11
  void set_companylogourl(::std::string&& value);
  #endif
  void set_companylogourl(const char* value);
  void set_companylogourl(const char* value, size_t size);
  ::std::string* mutable_companylogourl();
  ::std::string* release_companylogourl();
  void set_allocated_companylogourl(::std::string* companylogourl);

  // int32 companyId = 2;
  void clear_companyid();
  static const int kCompanyIdFieldNumber = 2;
  ::google::protobuf::int32 companyid() const;
  void set_companyid(::google::protobuf::int32 value);

  // int32 roleId = 3;
  void clear_roleid();
  static const int kRoleIdFieldNumber = 3;
  ::google::protobuf::int32 roleid() const;
  void set_roleid(::google::protobuf::int32 value);

  // int32 userId = 4;
  void clear_userid();
  static const int kUserIdFieldNumber = 4;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // int32 companyRole = 6;
  void clear_companyrole();
  static const int kCompanyRoleFieldNumber = 6;
  ::google::protobuf::int32 companyrole() const;
  void set_companyrole(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageLoginMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr companyname_;
  ::google::protobuf::internal::ArenaStringPtr companylogourl_;
  ::google::protobuf::int32 companyid_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 companyrole_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fhttp_5flogin_2eproto::TableStruct;
  friend void ::protobuf_message_5fhttp_5flogin_2eproto::InitDefaultsCMessageLoginMsgImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMessageLoginMsg

// string token = 1;
inline void CMessageLoginMsg::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageLoginMsg::token() const {
  // @@protoc_insertion_point(field_get:d5.CMessageLoginMsg.token)
  return token_.GetNoArena();
}
inline void CMessageLoginMsg::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageLoginMsg.token)
}
#if LANG_CXX11
inline void CMessageLoginMsg::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageLoginMsg.token)
}
#endif
inline void CMessageLoginMsg::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageLoginMsg.token)
}
inline void CMessageLoginMsg::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageLoginMsg.token)
}
inline ::std::string* CMessageLoginMsg::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageLoginMsg.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageLoginMsg::release_token() {
  // @@protoc_insertion_point(field_release:d5.CMessageLoginMsg.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageLoginMsg::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageLoginMsg.token)
}

// int32 companyId = 2;
inline void CMessageLoginMsg::clear_companyid() {
  companyid_ = 0;
}
inline ::google::protobuf::int32 CMessageLoginMsg::companyid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageLoginMsg.companyId)
  return companyid_;
}
inline void CMessageLoginMsg::set_companyid(::google::protobuf::int32 value) {
  
  companyid_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageLoginMsg.companyId)
}

// int32 roleId = 3;
inline void CMessageLoginMsg::clear_roleid() {
  roleid_ = 0;
}
inline ::google::protobuf::int32 CMessageLoginMsg::roleid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageLoginMsg.roleId)
  return roleid_;
}
inline void CMessageLoginMsg::set_roleid(::google::protobuf::int32 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageLoginMsg.roleId)
}

// int32 userId = 4;
inline void CMessageLoginMsg::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 CMessageLoginMsg::userid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageLoginMsg.userId)
  return userid_;
}
inline void CMessageLoginMsg::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageLoginMsg.userId)
}

// string companyName = 5;
inline void CMessageLoginMsg::clear_companyname() {
  companyname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageLoginMsg::companyname() const {
  // @@protoc_insertion_point(field_get:d5.CMessageLoginMsg.companyName)
  return companyname_.GetNoArena();
}
inline void CMessageLoginMsg::set_companyname(const ::std::string& value) {
  
  companyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageLoginMsg.companyName)
}
#if LANG_CXX11
inline void CMessageLoginMsg::set_companyname(::std::string&& value) {
  
  companyname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageLoginMsg.companyName)
}
#endif
inline void CMessageLoginMsg::set_companyname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  companyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageLoginMsg.companyName)
}
inline void CMessageLoginMsg::set_companyname(const char* value, size_t size) {
  
  companyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageLoginMsg.companyName)
}
inline ::std::string* CMessageLoginMsg::mutable_companyname() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageLoginMsg.companyName)
  return companyname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageLoginMsg::release_companyname() {
  // @@protoc_insertion_point(field_release:d5.CMessageLoginMsg.companyName)
  
  return companyname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageLoginMsg::set_allocated_companyname(::std::string* companyname) {
  if (companyname != NULL) {
    
  } else {
    
  }
  companyname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), companyname);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageLoginMsg.companyName)
}

// int32 companyRole = 6;
inline void CMessageLoginMsg::clear_companyrole() {
  companyrole_ = 0;
}
inline ::google::protobuf::int32 CMessageLoginMsg::companyrole() const {
  // @@protoc_insertion_point(field_get:d5.CMessageLoginMsg.companyRole)
  return companyrole_;
}
inline void CMessageLoginMsg::set_companyrole(::google::protobuf::int32 value) {
  
  companyrole_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageLoginMsg.companyRole)
}

// string companyLogoUrl = 7;
inline void CMessageLoginMsg::clear_companylogourl() {
  companylogourl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageLoginMsg::companylogourl() const {
  // @@protoc_insertion_point(field_get:d5.CMessageLoginMsg.companyLogoUrl)
  return companylogourl_.GetNoArena();
}
inline void CMessageLoginMsg::set_companylogourl(const ::std::string& value) {
  
  companylogourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageLoginMsg.companyLogoUrl)
}
#if LANG_CXX11
inline void CMessageLoginMsg::set_companylogourl(::std::string&& value) {
  
  companylogourl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageLoginMsg.companyLogoUrl)
}
#endif
inline void CMessageLoginMsg::set_companylogourl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  companylogourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageLoginMsg.companyLogoUrl)
}
inline void CMessageLoginMsg::set_companylogourl(const char* value, size_t size) {
  
  companylogourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageLoginMsg.companyLogoUrl)
}
inline ::std::string* CMessageLoginMsg::mutable_companylogourl() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageLoginMsg.companyLogoUrl)
  return companylogourl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageLoginMsg::release_companylogourl() {
  // @@protoc_insertion_point(field_release:d5.CMessageLoginMsg.companyLogoUrl)
  
  return companylogourl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageLoginMsg::set_allocated_companylogourl(::std::string* companylogourl) {
  if (companylogourl != NULL) {
    
  } else {
    
  }
  companylogourl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), companylogourl);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageLoginMsg.companyLogoUrl)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace d5

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_5fhttp_5flogin_2eproto_INCLUDED
