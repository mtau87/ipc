// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_material_save.proto

#ifndef PROTOBUF_message_5fmaterial_5fsave_2eproto_INCLUDED
#define PROTOBUF_message_5fmaterial_5fsave_2eproto_INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_message_5fmaterial_5fsave_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsCMessageHttpMaterialSaveImpl();
void InitDefaultsCMessageHttpMaterialSave();
void InitDefaultsCMessageMaterialSaveRequestImpl();
void InitDefaultsCMessageMaterialSaveRequest();
void InitDefaultsCMessageMaterialSaveResponseImpl();
void InitDefaultsCMessageMaterialSaveResponse();
void InitDefaultsCMessageMaterialSaveProcessResponseImpl();
void InitDefaultsCMessageMaterialSaveProcessResponse();
inline void InitDefaults() {
  InitDefaultsCMessageHttpMaterialSave();
  InitDefaultsCMessageMaterialSaveRequest();
  InitDefaultsCMessageMaterialSaveResponse();
  InitDefaultsCMessageMaterialSaveProcessResponse();
}
}  // namespace protobuf_message_5fmaterial_5fsave_2eproto
namespace d5 {
class CMessageHttpMaterialSave;
class CMessageHttpMaterialSaveDefaultTypeInternal;
extern CMessageHttpMaterialSaveDefaultTypeInternal _CMessageHttpMaterialSave_default_instance_;
class CMessageMaterialSaveProcessResponse;
class CMessageMaterialSaveProcessResponseDefaultTypeInternal;
extern CMessageMaterialSaveProcessResponseDefaultTypeInternal _CMessageMaterialSaveProcessResponse_default_instance_;
class CMessageMaterialSaveRequest;
class CMessageMaterialSaveRequestDefaultTypeInternal;
extern CMessageMaterialSaveRequestDefaultTypeInternal _CMessageMaterialSaveRequest_default_instance_;
class CMessageMaterialSaveResponse;
class CMessageMaterialSaveResponseDefaultTypeInternal;
extern CMessageMaterialSaveResponseDefaultTypeInternal _CMessageMaterialSaveResponse_default_instance_;
}  // namespace d5
namespace google {
namespace protobuf {
template<> ::d5::CMessageHttpMaterialSave* Arena::Create< ::d5::CMessageHttpMaterialSave>(Arena*);
template<> ::d5::CMessageMaterialSaveProcessResponse* Arena::Create< ::d5::CMessageMaterialSaveProcessResponse>(Arena*);
template<> ::d5::CMessageMaterialSaveRequest* Arena::Create< ::d5::CMessageMaterialSaveRequest>(Arena*);
template<> ::d5::CMessageMaterialSaveResponse* Arena::Create< ::d5::CMessageMaterialSaveResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace d5 {

// ===================================================================

class CMessageHttpMaterialSave : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageHttpMaterialSave) */ {
 public:
  CMessageHttpMaterialSave();
  virtual ~CMessageHttpMaterialSave();

  CMessageHttpMaterialSave(const CMessageHttpMaterialSave& from);

  inline CMessageHttpMaterialSave& operator=(const CMessageHttpMaterialSave& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageHttpMaterialSave(CMessageHttpMaterialSave&& from) noexcept
    : CMessageHttpMaterialSave() {
    *this = ::std::move(from);
  }

  inline CMessageHttpMaterialSave& operator=(CMessageHttpMaterialSave&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageHttpMaterialSave& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageHttpMaterialSave* internal_default_instance() {
    return reinterpret_cast<const CMessageHttpMaterialSave*>(
               &_CMessageHttpMaterialSave_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CMessageHttpMaterialSave* other);
  friend void swap(CMessageHttpMaterialSave& a, CMessageHttpMaterialSave& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageHttpMaterialSave* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageHttpMaterialSave>(NULL);
  }

  CMessageHttpMaterialSave* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageHttpMaterialSave>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageHttpMaterialSave& from);
  void MergeFrom(const CMessageHttpMaterialSave& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageHttpMaterialSave* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string title = 2;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // string uePath = 4;
  void clear_uepath();
  static const int kUePathFieldNumber = 4;
  const ::std::string& uepath() const;
  void set_uepath(const ::std::string& value);
  #if LANG_CXX11
  void set_uepath(::std::string&& value);
  #endif
  void set_uepath(const char* value);
  void set_uepath(const char* value, size_t size);
  ::std::string* mutable_uepath();
  ::std::string* release_uepath();
  void set_allocated_uepath(::std::string* uepath);

  // string matInfo = 5;
  void clear_matinfo();
  static const int kMatInfoFieldNumber = 5;
  const ::std::string& matinfo() const;
  void set_matinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_matinfo(::std::string&& value);
  #endif
  void set_matinfo(const char* value);
  void set_matinfo(const char* value, size_t size);
  ::std::string* mutable_matinfo();
  ::std::string* release_matinfo();
  void set_allocated_matinfo(::std::string* matinfo);

  // string thumbnailUrl = 6;
  void clear_thumbnailurl();
  static const int kThumbnailUrlFieldNumber = 6;
  const ::std::string& thumbnailurl() const;
  void set_thumbnailurl(const ::std::string& value);
  #if LANG_CXX11
  void set_thumbnailurl(::std::string&& value);
  #endif
  void set_thumbnailurl(const char* value);
  void set_thumbnailurl(const char* value, size_t size);
  ::std::string* mutable_thumbnailurl();
  ::std::string* release_thumbnailurl();
  void set_allocated_thumbnailurl(::std::string* thumbnailurl);

  // string pakUrl = 9;
  void clear_pakurl();
  static const int kPakUrlFieldNumber = 9;
  const ::std::string& pakurl() const;
  void set_pakurl(const ::std::string& value);
  #if LANG_CXX11
  void set_pakurl(::std::string&& value);
  #endif
  void set_pakurl(const char* value);
  void set_pakurl(const char* value, size_t size);
  ::std::string* mutable_pakurl();
  ::std::string* release_pakurl();
  void set_allocated_pakurl(::std::string* pakurl);

  // string dependentFileList = 10;
  void clear_dependentfilelist();
  static const int kDependentFileListFieldNumber = 10;
  const ::std::string& dependentfilelist() const;
  void set_dependentfilelist(const ::std::string& value);
  #if LANG_CXX11
  void set_dependentfilelist(::std::string&& value);
  #endif
  void set_dependentfilelist(const char* value);
  void set_dependentfilelist(const char* value, size_t size);
  ::std::string* mutable_dependentfilelist();
  ::std::string* release_dependentfilelist();
  void set_allocated_dependentfilelist(::std::string* dependentfilelist);

  // int64 createTime = 7;
  void clear_createtime();
  static const int kCreateTimeFieldNumber = 7;
  ::google::protobuf::int64 createtime() const;
  void set_createtime(::google::protobuf::int64 value);

  // int64 updateTime = 8;
  void clear_updatetime();
  static const int kUpdateTimeFieldNumber = 8;
  ::google::protobuf::int64 updatetime() const;
  void set_updatetime(::google::protobuf::int64 value);

  // int32 categoryId = 3;
  void clear_categoryid();
  static const int kCategoryIdFieldNumber = 3;
  ::google::protobuf::int32 categoryid() const;
  void set_categoryid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageHttpMaterialSave)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr uepath_;
  ::google::protobuf::internal::ArenaStringPtr matinfo_;
  ::google::protobuf::internal::ArenaStringPtr thumbnailurl_;
  ::google::protobuf::internal::ArenaStringPtr pakurl_;
  ::google::protobuf::internal::ArenaStringPtr dependentfilelist_;
  ::google::protobuf::int64 createtime_;
  ::google::protobuf::int64 updatetime_;
  ::google::protobuf::int32 categoryid_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fmaterial_5fsave_2eproto::TableStruct;
  friend void ::protobuf_message_5fmaterial_5fsave_2eproto::InitDefaultsCMessageHttpMaterialSaveImpl();
};
// -------------------------------------------------------------------

class CMessageMaterialSaveRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageMaterialSaveRequest) */ {
 public:
  CMessageMaterialSaveRequest();
  virtual ~CMessageMaterialSaveRequest();

  CMessageMaterialSaveRequest(const CMessageMaterialSaveRequest& from);

  inline CMessageMaterialSaveRequest& operator=(const CMessageMaterialSaveRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageMaterialSaveRequest(CMessageMaterialSaveRequest&& from) noexcept
    : CMessageMaterialSaveRequest() {
    *this = ::std::move(from);
  }

  inline CMessageMaterialSaveRequest& operator=(CMessageMaterialSaveRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageMaterialSaveRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageMaterialSaveRequest* internal_default_instance() {
    return reinterpret_cast<const CMessageMaterialSaveRequest*>(
               &_CMessageMaterialSaveRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CMessageMaterialSaveRequest* other);
  friend void swap(CMessageMaterialSaveRequest& a, CMessageMaterialSaveRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageMaterialSaveRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageMaterialSaveRequest>(NULL);
  }

  CMessageMaterialSaveRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageMaterialSaveRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageMaterialSaveRequest& from);
  void MergeFrom(const CMessageMaterialSaveRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageMaterialSaveRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // string id = 3;
  void clear_id();
  static const int kIdFieldNumber = 3;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageMaterialSaveRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fmaterial_5fsave_2eproto::TableStruct;
  friend void ::protobuf_message_5fmaterial_5fsave_2eproto::InitDefaultsCMessageMaterialSaveRequestImpl();
};
// -------------------------------------------------------------------

class CMessageMaterialSaveResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageMaterialSaveResponse) */ {
 public:
  CMessageMaterialSaveResponse();
  virtual ~CMessageMaterialSaveResponse();

  CMessageMaterialSaveResponse(const CMessageMaterialSaveResponse& from);

  inline CMessageMaterialSaveResponse& operator=(const CMessageMaterialSaveResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageMaterialSaveResponse(CMessageMaterialSaveResponse&& from) noexcept
    : CMessageMaterialSaveResponse() {
    *this = ::std::move(from);
  }

  inline CMessageMaterialSaveResponse& operator=(CMessageMaterialSaveResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageMaterialSaveResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageMaterialSaveResponse* internal_default_instance() {
    return reinterpret_cast<const CMessageMaterialSaveResponse*>(
               &_CMessageMaterialSaveResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CMessageMaterialSaveResponse* other);
  friend void swap(CMessageMaterialSaveResponse& a, CMessageMaterialSaveResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageMaterialSaveResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageMaterialSaveResponse>(NULL);
  }

  CMessageMaterialSaveResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageMaterialSaveResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageMaterialSaveResponse& from);
  void MergeFrom(const CMessageMaterialSaveResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageMaterialSaveResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 state = 3;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageMaterialSaveResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 state_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fmaterial_5fsave_2eproto::TableStruct;
  friend void ::protobuf_message_5fmaterial_5fsave_2eproto::InitDefaultsCMessageMaterialSaveResponseImpl();
};
// -------------------------------------------------------------------

class CMessageMaterialSaveProcessResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageMaterialSaveProcessResponse) */ {
 public:
  CMessageMaterialSaveProcessResponse();
  virtual ~CMessageMaterialSaveProcessResponse();

  CMessageMaterialSaveProcessResponse(const CMessageMaterialSaveProcessResponse& from);

  inline CMessageMaterialSaveProcessResponse& operator=(const CMessageMaterialSaveProcessResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageMaterialSaveProcessResponse(CMessageMaterialSaveProcessResponse&& from) noexcept
    : CMessageMaterialSaveProcessResponse() {
    *this = ::std::move(from);
  }

  inline CMessageMaterialSaveProcessResponse& operator=(CMessageMaterialSaveProcessResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageMaterialSaveProcessResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageMaterialSaveProcessResponse* internal_default_instance() {
    return reinterpret_cast<const CMessageMaterialSaveProcessResponse*>(
               &_CMessageMaterialSaveProcessResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CMessageMaterialSaveProcessResponse* other);
  friend void swap(CMessageMaterialSaveProcessResponse& a, CMessageMaterialSaveProcessResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageMaterialSaveProcessResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageMaterialSaveProcessResponse>(NULL);
  }

  CMessageMaterialSaveProcessResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageMaterialSaveProcessResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageMaterialSaveProcessResponse& from);
  void MergeFrom(const CMessageMaterialSaveProcessResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageMaterialSaveProcessResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 percent = 3;
  void clear_percent();
  static const int kPercentFieldNumber = 3;
  ::google::protobuf::int32 percent() const;
  void set_percent(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageMaterialSaveProcessResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 percent_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fmaterial_5fsave_2eproto::TableStruct;
  friend void ::protobuf_message_5fmaterial_5fsave_2eproto::InitDefaultsCMessageMaterialSaveProcessResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMessageHttpMaterialSave

// string id = 1;
inline void CMessageHttpMaterialSave::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpMaterialSave::id() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpMaterialSave.id)
  return id_.GetNoArena();
}
inline void CMessageHttpMaterialSave::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpMaterialSave.id)
}
#if LANG_CXX11
inline void CMessageHttpMaterialSave::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpMaterialSave.id)
}
#endif
inline void CMessageHttpMaterialSave::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpMaterialSave.id)
}
inline void CMessageHttpMaterialSave::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpMaterialSave.id)
}
inline ::std::string* CMessageHttpMaterialSave::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpMaterialSave.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpMaterialSave::release_id() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpMaterialSave.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpMaterialSave::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpMaterialSave.id)
}

// string title = 2;
inline void CMessageHttpMaterialSave::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpMaterialSave::title() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpMaterialSave.title)
  return title_.GetNoArena();
}
inline void CMessageHttpMaterialSave::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpMaterialSave.title)
}
#if LANG_CXX11
inline void CMessageHttpMaterialSave::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpMaterialSave.title)
}
#endif
inline void CMessageHttpMaterialSave::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpMaterialSave.title)
}
inline void CMessageHttpMaterialSave::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpMaterialSave.title)
}
inline ::std::string* CMessageHttpMaterialSave::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpMaterialSave.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpMaterialSave::release_title() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpMaterialSave.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpMaterialSave::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpMaterialSave.title)
}

// int32 categoryId = 3;
inline void CMessageHttpMaterialSave::clear_categoryid() {
  categoryid_ = 0;
}
inline ::google::protobuf::int32 CMessageHttpMaterialSave::categoryid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpMaterialSave.categoryId)
  return categoryid_;
}
inline void CMessageHttpMaterialSave::set_categoryid(::google::protobuf::int32 value) {
  
  categoryid_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpMaterialSave.categoryId)
}

// string uePath = 4;
inline void CMessageHttpMaterialSave::clear_uepath() {
  uepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpMaterialSave::uepath() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpMaterialSave.uePath)
  return uepath_.GetNoArena();
}
inline void CMessageHttpMaterialSave::set_uepath(const ::std::string& value) {
  
  uepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpMaterialSave.uePath)
}
#if LANG_CXX11
inline void CMessageHttpMaterialSave::set_uepath(::std::string&& value) {
  
  uepath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpMaterialSave.uePath)
}
#endif
inline void CMessageHttpMaterialSave::set_uepath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpMaterialSave.uePath)
}
inline void CMessageHttpMaterialSave::set_uepath(const char* value, size_t size) {
  
  uepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpMaterialSave.uePath)
}
inline ::std::string* CMessageHttpMaterialSave::mutable_uepath() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpMaterialSave.uePath)
  return uepath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpMaterialSave::release_uepath() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpMaterialSave.uePath)
  
  return uepath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpMaterialSave::set_allocated_uepath(::std::string* uepath) {
  if (uepath != NULL) {
    
  } else {
    
  }
  uepath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uepath);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpMaterialSave.uePath)
}

// string matInfo = 5;
inline void CMessageHttpMaterialSave::clear_matinfo() {
  matinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpMaterialSave::matinfo() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpMaterialSave.matInfo)
  return matinfo_.GetNoArena();
}
inline void CMessageHttpMaterialSave::set_matinfo(const ::std::string& value) {
  
  matinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpMaterialSave.matInfo)
}
#if LANG_CXX11
inline void CMessageHttpMaterialSave::set_matinfo(::std::string&& value) {
  
  matinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpMaterialSave.matInfo)
}
#endif
inline void CMessageHttpMaterialSave::set_matinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  matinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpMaterialSave.matInfo)
}
inline void CMessageHttpMaterialSave::set_matinfo(const char* value, size_t size) {
  
  matinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpMaterialSave.matInfo)
}
inline ::std::string* CMessageHttpMaterialSave::mutable_matinfo() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpMaterialSave.matInfo)
  return matinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpMaterialSave::release_matinfo() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpMaterialSave.matInfo)
  
  return matinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpMaterialSave::set_allocated_matinfo(::std::string* matinfo) {
  if (matinfo != NULL) {
    
  } else {
    
  }
  matinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), matinfo);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpMaterialSave.matInfo)
}

// string thumbnailUrl = 6;
inline void CMessageHttpMaterialSave::clear_thumbnailurl() {
  thumbnailurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpMaterialSave::thumbnailurl() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpMaterialSave.thumbnailUrl)
  return thumbnailurl_.GetNoArena();
}
inline void CMessageHttpMaterialSave::set_thumbnailurl(const ::std::string& value) {
  
  thumbnailurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpMaterialSave.thumbnailUrl)
}
#if LANG_CXX11
inline void CMessageHttpMaterialSave::set_thumbnailurl(::std::string&& value) {
  
  thumbnailurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpMaterialSave.thumbnailUrl)
}
#endif
inline void CMessageHttpMaterialSave::set_thumbnailurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  thumbnailurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpMaterialSave.thumbnailUrl)
}
inline void CMessageHttpMaterialSave::set_thumbnailurl(const char* value, size_t size) {
  
  thumbnailurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpMaterialSave.thumbnailUrl)
}
inline ::std::string* CMessageHttpMaterialSave::mutable_thumbnailurl() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpMaterialSave.thumbnailUrl)
  return thumbnailurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpMaterialSave::release_thumbnailurl() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpMaterialSave.thumbnailUrl)
  
  return thumbnailurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpMaterialSave::set_allocated_thumbnailurl(::std::string* thumbnailurl) {
  if (thumbnailurl != NULL) {
    
  } else {
    
  }
  thumbnailurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), thumbnailurl);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpMaterialSave.thumbnailUrl)
}

// int64 createTime = 7;
inline void CMessageHttpMaterialSave::clear_createtime() {
  createtime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CMessageHttpMaterialSave::createtime() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpMaterialSave.createTime)
  return createtime_;
}
inline void CMessageHttpMaterialSave::set_createtime(::google::protobuf::int64 value) {
  
  createtime_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpMaterialSave.createTime)
}

// int64 updateTime = 8;
inline void CMessageHttpMaterialSave::clear_updatetime() {
  updatetime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CMessageHttpMaterialSave::updatetime() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpMaterialSave.updateTime)
  return updatetime_;
}
inline void CMessageHttpMaterialSave::set_updatetime(::google::protobuf::int64 value) {
  
  updatetime_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpMaterialSave.updateTime)
}

// string pakUrl = 9;
inline void CMessageHttpMaterialSave::clear_pakurl() {
  pakurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpMaterialSave::pakurl() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpMaterialSave.pakUrl)
  return pakurl_.GetNoArena();
}
inline void CMessageHttpMaterialSave::set_pakurl(const ::std::string& value) {
  
  pakurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpMaterialSave.pakUrl)
}
#if LANG_CXX11
inline void CMessageHttpMaterialSave::set_pakurl(::std::string&& value) {
  
  pakurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpMaterialSave.pakUrl)
}
#endif
inline void CMessageHttpMaterialSave::set_pakurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pakurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpMaterialSave.pakUrl)
}
inline void CMessageHttpMaterialSave::set_pakurl(const char* value, size_t size) {
  
  pakurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpMaterialSave.pakUrl)
}
inline ::std::string* CMessageHttpMaterialSave::mutable_pakurl() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpMaterialSave.pakUrl)
  return pakurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpMaterialSave::release_pakurl() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpMaterialSave.pakUrl)
  
  return pakurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpMaterialSave::set_allocated_pakurl(::std::string* pakurl) {
  if (pakurl != NULL) {
    
  } else {
    
  }
  pakurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pakurl);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpMaterialSave.pakUrl)
}

// string dependentFileList = 10;
inline void CMessageHttpMaterialSave::clear_dependentfilelist() {
  dependentfilelist_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpMaterialSave::dependentfilelist() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpMaterialSave.dependentFileList)
  return dependentfilelist_.GetNoArena();
}
inline void CMessageHttpMaterialSave::set_dependentfilelist(const ::std::string& value) {
  
  dependentfilelist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpMaterialSave.dependentFileList)
}
#if LANG_CXX11
inline void CMessageHttpMaterialSave::set_dependentfilelist(::std::string&& value) {
  
  dependentfilelist_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpMaterialSave.dependentFileList)
}
#endif
inline void CMessageHttpMaterialSave::set_dependentfilelist(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dependentfilelist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpMaterialSave.dependentFileList)
}
inline void CMessageHttpMaterialSave::set_dependentfilelist(const char* value, size_t size) {
  
  dependentfilelist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpMaterialSave.dependentFileList)
}
inline ::std::string* CMessageHttpMaterialSave::mutable_dependentfilelist() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpMaterialSave.dependentFileList)
  return dependentfilelist_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpMaterialSave::release_dependentfilelist() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpMaterialSave.dependentFileList)
  
  return dependentfilelist_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpMaterialSave::set_allocated_dependentfilelist(::std::string* dependentfilelist) {
  if (dependentfilelist != NULL) {
    
  } else {
    
  }
  dependentfilelist_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dependentfilelist);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpMaterialSave.dependentFileList)
}

// -------------------------------------------------------------------

// CMessageMaterialSaveRequest

// int32 type = 1;
inline void CMessageMaterialSaveRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageMaterialSaveRequest::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageMaterialSaveRequest.type)
  return type_;
}
inline void CMessageMaterialSaveRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageMaterialSaveRequest.type)
}

// string uuid = 2;
inline void CMessageMaterialSaveRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageMaterialSaveRequest::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageMaterialSaveRequest.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageMaterialSaveRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageMaterialSaveRequest.uuid)
}
#if LANG_CXX11
inline void CMessageMaterialSaveRequest::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageMaterialSaveRequest.uuid)
}
#endif
inline void CMessageMaterialSaveRequest::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageMaterialSaveRequest.uuid)
}
inline void CMessageMaterialSaveRequest::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageMaterialSaveRequest.uuid)
}
inline ::std::string* CMessageMaterialSaveRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageMaterialSaveRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageMaterialSaveRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageMaterialSaveRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageMaterialSaveRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageMaterialSaveRequest.uuid)
}

// string id = 3;
inline void CMessageMaterialSaveRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageMaterialSaveRequest::id() const {
  // @@protoc_insertion_point(field_get:d5.CMessageMaterialSaveRequest.id)
  return id_.GetNoArena();
}
inline void CMessageMaterialSaveRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageMaterialSaveRequest.id)
}
#if LANG_CXX11
inline void CMessageMaterialSaveRequest::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageMaterialSaveRequest.id)
}
#endif
inline void CMessageMaterialSaveRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageMaterialSaveRequest.id)
}
inline void CMessageMaterialSaveRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageMaterialSaveRequest.id)
}
inline ::std::string* CMessageMaterialSaveRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageMaterialSaveRequest.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageMaterialSaveRequest::release_id() {
  // @@protoc_insertion_point(field_release:d5.CMessageMaterialSaveRequest.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageMaterialSaveRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageMaterialSaveRequest.id)
}

// -------------------------------------------------------------------

// CMessageMaterialSaveResponse

// int32 type = 1;
inline void CMessageMaterialSaveResponse::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageMaterialSaveResponse::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageMaterialSaveResponse.type)
  return type_;
}
inline void CMessageMaterialSaveResponse::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageMaterialSaveResponse.type)
}

// string uuid = 2;
inline void CMessageMaterialSaveResponse::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageMaterialSaveResponse::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageMaterialSaveResponse.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageMaterialSaveResponse::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageMaterialSaveResponse.uuid)
}
#if LANG_CXX11
inline void CMessageMaterialSaveResponse::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageMaterialSaveResponse.uuid)
}
#endif
inline void CMessageMaterialSaveResponse::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageMaterialSaveResponse.uuid)
}
inline void CMessageMaterialSaveResponse::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageMaterialSaveResponse.uuid)
}
inline ::std::string* CMessageMaterialSaveResponse::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageMaterialSaveResponse.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageMaterialSaveResponse::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageMaterialSaveResponse.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageMaterialSaveResponse::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageMaterialSaveResponse.uuid)
}

// int32 state = 3;
inline void CMessageMaterialSaveResponse::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 CMessageMaterialSaveResponse::state() const {
  // @@protoc_insertion_point(field_get:d5.CMessageMaterialSaveResponse.state)
  return state_;
}
inline void CMessageMaterialSaveResponse::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageMaterialSaveResponse.state)
}

// -------------------------------------------------------------------

// CMessageMaterialSaveProcessResponse

// int32 type = 1;
inline void CMessageMaterialSaveProcessResponse::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageMaterialSaveProcessResponse::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageMaterialSaveProcessResponse.type)
  return type_;
}
inline void CMessageMaterialSaveProcessResponse::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageMaterialSaveProcessResponse.type)
}

// string uuid = 2;
inline void CMessageMaterialSaveProcessResponse::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageMaterialSaveProcessResponse::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageMaterialSaveProcessResponse.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageMaterialSaveProcessResponse::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageMaterialSaveProcessResponse.uuid)
}
#if LANG_CXX11
inline void CMessageMaterialSaveProcessResponse::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageMaterialSaveProcessResponse.uuid)
}
#endif
inline void CMessageMaterialSaveProcessResponse::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageMaterialSaveProcessResponse.uuid)
}
inline void CMessageMaterialSaveProcessResponse::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageMaterialSaveProcessResponse.uuid)
}
inline ::std::string* CMessageMaterialSaveProcessResponse::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageMaterialSaveProcessResponse.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageMaterialSaveProcessResponse::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageMaterialSaveProcessResponse.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageMaterialSaveProcessResponse::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageMaterialSaveProcessResponse.uuid)
}

// int32 percent = 3;
inline void CMessageMaterialSaveProcessResponse::clear_percent() {
  percent_ = 0;
}
inline ::google::protobuf::int32 CMessageMaterialSaveProcessResponse::percent() const {
  // @@protoc_insertion_point(field_get:d5.CMessageMaterialSaveProcessResponse.percent)
  return percent_;
}
inline void CMessageMaterialSaveProcessResponse::set_percent(::google::protobuf::int32 value) {
  
  percent_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageMaterialSaveProcessResponse.percent)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace d5

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_5fmaterial_5fsave_2eproto_INCLUDED
