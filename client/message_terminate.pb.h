// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_terminate.proto

#ifndef PROTOBUF_message_5fterminate_2eproto_INCLUDED
#define PROTOBUF_message_5fterminate_2eproto_INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_message_5fterminate_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsCMessageTerminateRequestImpl();
void InitDefaultsCMessageTerminateRequest();
void InitDefaultsCMessageTerminateResponseImpl();
void InitDefaultsCMessageTerminateResponse();
void InitDefaultsCMessageFusionReadyImpl();
void InitDefaultsCMessageFusionReady();
void InitDefaultsCMessageFusionCloseImpl();
void InitDefaultsCMessageFusionClose();
void InitDefaultsCMessageFusionMaximizeImpl();
void InitDefaultsCMessageFusionMaximize();
inline void InitDefaults() {
  InitDefaultsCMessageTerminateRequest();
  InitDefaultsCMessageTerminateResponse();
  InitDefaultsCMessageFusionReady();
  InitDefaultsCMessageFusionClose();
  InitDefaultsCMessageFusionMaximize();
}
}  // namespace protobuf_message_5fterminate_2eproto
namespace d5 {
class CMessageFusionClose;
class CMessageFusionCloseDefaultTypeInternal;
extern CMessageFusionCloseDefaultTypeInternal _CMessageFusionClose_default_instance_;
class CMessageFusionMaximize;
class CMessageFusionMaximizeDefaultTypeInternal;
extern CMessageFusionMaximizeDefaultTypeInternal _CMessageFusionMaximize_default_instance_;
class CMessageFusionReady;
class CMessageFusionReadyDefaultTypeInternal;
extern CMessageFusionReadyDefaultTypeInternal _CMessageFusionReady_default_instance_;
class CMessageTerminateRequest;
class CMessageTerminateRequestDefaultTypeInternal;
extern CMessageTerminateRequestDefaultTypeInternal _CMessageTerminateRequest_default_instance_;
class CMessageTerminateResponse;
class CMessageTerminateResponseDefaultTypeInternal;
extern CMessageTerminateResponseDefaultTypeInternal _CMessageTerminateResponse_default_instance_;
}  // namespace d5
namespace google {
namespace protobuf {
template<> ::d5::CMessageFusionClose* Arena::Create< ::d5::CMessageFusionClose>(Arena*);
template<> ::d5::CMessageFusionMaximize* Arena::Create< ::d5::CMessageFusionMaximize>(Arena*);
template<> ::d5::CMessageFusionReady* Arena::Create< ::d5::CMessageFusionReady>(Arena*);
template<> ::d5::CMessageTerminateRequest* Arena::Create< ::d5::CMessageTerminateRequest>(Arena*);
template<> ::d5::CMessageTerminateResponse* Arena::Create< ::d5::CMessageTerminateResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace d5 {

// ===================================================================

class CMessageTerminateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageTerminateRequest) */ {
 public:
  CMessageTerminateRequest();
  virtual ~CMessageTerminateRequest();

  CMessageTerminateRequest(const CMessageTerminateRequest& from);

  inline CMessageTerminateRequest& operator=(const CMessageTerminateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageTerminateRequest(CMessageTerminateRequest&& from) noexcept
    : CMessageTerminateRequest() {
    *this = ::std::move(from);
  }

  inline CMessageTerminateRequest& operator=(CMessageTerminateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTerminateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageTerminateRequest* internal_default_instance() {
    return reinterpret_cast<const CMessageTerminateRequest*>(
               &_CMessageTerminateRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CMessageTerminateRequest* other);
  friend void swap(CMessageTerminateRequest& a, CMessageTerminateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageTerminateRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageTerminateRequest>(NULL);
  }

  CMessageTerminateRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageTerminateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageTerminateRequest& from);
  void MergeFrom(const CMessageTerminateRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageTerminateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageTerminateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fterminate_2eproto::TableStruct;
  friend void ::protobuf_message_5fterminate_2eproto::InitDefaultsCMessageTerminateRequestImpl();
};
// -------------------------------------------------------------------

class CMessageTerminateResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageTerminateResponse) */ {
 public:
  CMessageTerminateResponse();
  virtual ~CMessageTerminateResponse();

  CMessageTerminateResponse(const CMessageTerminateResponse& from);

  inline CMessageTerminateResponse& operator=(const CMessageTerminateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageTerminateResponse(CMessageTerminateResponse&& from) noexcept
    : CMessageTerminateResponse() {
    *this = ::std::move(from);
  }

  inline CMessageTerminateResponse& operator=(CMessageTerminateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTerminateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageTerminateResponse* internal_default_instance() {
    return reinterpret_cast<const CMessageTerminateResponse*>(
               &_CMessageTerminateResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CMessageTerminateResponse* other);
  friend void swap(CMessageTerminateResponse& a, CMessageTerminateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageTerminateResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageTerminateResponse>(NULL);
  }

  CMessageTerminateResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageTerminateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageTerminateResponse& from);
  void MergeFrom(const CMessageTerminateResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageTerminateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageTerminateResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fterminate_2eproto::TableStruct;
  friend void ::protobuf_message_5fterminate_2eproto::InitDefaultsCMessageTerminateResponseImpl();
};
// -------------------------------------------------------------------

class CMessageFusionReady : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageFusionReady) */ {
 public:
  CMessageFusionReady();
  virtual ~CMessageFusionReady();

  CMessageFusionReady(const CMessageFusionReady& from);

  inline CMessageFusionReady& operator=(const CMessageFusionReady& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageFusionReady(CMessageFusionReady&& from) noexcept
    : CMessageFusionReady() {
    *this = ::std::move(from);
  }

  inline CMessageFusionReady& operator=(CMessageFusionReady&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFusionReady& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageFusionReady* internal_default_instance() {
    return reinterpret_cast<const CMessageFusionReady*>(
               &_CMessageFusionReady_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CMessageFusionReady* other);
  friend void swap(CMessageFusionReady& a, CMessageFusionReady& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageFusionReady* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageFusionReady>(NULL);
  }

  CMessageFusionReady* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageFusionReady>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageFusionReady& from);
  void MergeFrom(const CMessageFusionReady& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageFusionReady* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageFusionReady)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fterminate_2eproto::TableStruct;
  friend void ::protobuf_message_5fterminate_2eproto::InitDefaultsCMessageFusionReadyImpl();
};
// -------------------------------------------------------------------

class CMessageFusionClose : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageFusionClose) */ {
 public:
  CMessageFusionClose();
  virtual ~CMessageFusionClose();

  CMessageFusionClose(const CMessageFusionClose& from);

  inline CMessageFusionClose& operator=(const CMessageFusionClose& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageFusionClose(CMessageFusionClose&& from) noexcept
    : CMessageFusionClose() {
    *this = ::std::move(from);
  }

  inline CMessageFusionClose& operator=(CMessageFusionClose&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFusionClose& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageFusionClose* internal_default_instance() {
    return reinterpret_cast<const CMessageFusionClose*>(
               &_CMessageFusionClose_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CMessageFusionClose* other);
  friend void swap(CMessageFusionClose& a, CMessageFusionClose& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageFusionClose* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageFusionClose>(NULL);
  }

  CMessageFusionClose* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageFusionClose>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageFusionClose& from);
  void MergeFrom(const CMessageFusionClose& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageFusionClose* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageFusionClose)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fterminate_2eproto::TableStruct;
  friend void ::protobuf_message_5fterminate_2eproto::InitDefaultsCMessageFusionCloseImpl();
};
// -------------------------------------------------------------------

class CMessageFusionMaximize : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageFusionMaximize) */ {
 public:
  CMessageFusionMaximize();
  virtual ~CMessageFusionMaximize();

  CMessageFusionMaximize(const CMessageFusionMaximize& from);

  inline CMessageFusionMaximize& operator=(const CMessageFusionMaximize& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageFusionMaximize(CMessageFusionMaximize&& from) noexcept
    : CMessageFusionMaximize() {
    *this = ::std::move(from);
  }

  inline CMessageFusionMaximize& operator=(CMessageFusionMaximize&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFusionMaximize& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageFusionMaximize* internal_default_instance() {
    return reinterpret_cast<const CMessageFusionMaximize*>(
               &_CMessageFusionMaximize_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(CMessageFusionMaximize* other);
  friend void swap(CMessageFusionMaximize& a, CMessageFusionMaximize& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageFusionMaximize* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageFusionMaximize>(NULL);
  }

  CMessageFusionMaximize* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageFusionMaximize>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageFusionMaximize& from);
  void MergeFrom(const CMessageFusionMaximize& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageFusionMaximize* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageFusionMaximize)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fterminate_2eproto::TableStruct;
  friend void ::protobuf_message_5fterminate_2eproto::InitDefaultsCMessageFusionMaximizeImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMessageTerminateRequest

// int32 type = 1;
inline void CMessageTerminateRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageTerminateRequest::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageTerminateRequest.type)
  return type_;
}
inline void CMessageTerminateRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageTerminateRequest.type)
}

// string uuid = 2;
inline void CMessageTerminateRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageTerminateRequest::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageTerminateRequest.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageTerminateRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageTerminateRequest.uuid)
}
#if LANG_CXX11
inline void CMessageTerminateRequest::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageTerminateRequest.uuid)
}
#endif
inline void CMessageTerminateRequest::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageTerminateRequest.uuid)
}
inline void CMessageTerminateRequest::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageTerminateRequest.uuid)
}
inline ::std::string* CMessageTerminateRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageTerminateRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageTerminateRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageTerminateRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageTerminateRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageTerminateRequest.uuid)
}

// -------------------------------------------------------------------

// CMessageTerminateResponse

// int32 type = 1;
inline void CMessageTerminateResponse::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageTerminateResponse::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageTerminateResponse.type)
  return type_;
}
inline void CMessageTerminateResponse::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageTerminateResponse.type)
}

// string uuid = 2;
inline void CMessageTerminateResponse::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageTerminateResponse::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageTerminateResponse.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageTerminateResponse::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageTerminateResponse.uuid)
}
#if LANG_CXX11
inline void CMessageTerminateResponse::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageTerminateResponse.uuid)
}
#endif
inline void CMessageTerminateResponse::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageTerminateResponse.uuid)
}
inline void CMessageTerminateResponse::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageTerminateResponse.uuid)
}
inline ::std::string* CMessageTerminateResponse::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageTerminateResponse.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageTerminateResponse::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageTerminateResponse.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageTerminateResponse::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageTerminateResponse.uuid)
}

// -------------------------------------------------------------------

// CMessageFusionReady

// int32 type = 1;
inline void CMessageFusionReady::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageFusionReady::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageFusionReady.type)
  return type_;
}
inline void CMessageFusionReady::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageFusionReady.type)
}

// string uuid = 2;
inline void CMessageFusionReady::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageFusionReady::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageFusionReady.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageFusionReady::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageFusionReady.uuid)
}
#if LANG_CXX11
inline void CMessageFusionReady::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageFusionReady.uuid)
}
#endif
inline void CMessageFusionReady::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageFusionReady.uuid)
}
inline void CMessageFusionReady::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageFusionReady.uuid)
}
inline ::std::string* CMessageFusionReady::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageFusionReady.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageFusionReady::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageFusionReady.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageFusionReady::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageFusionReady.uuid)
}

// -------------------------------------------------------------------

// CMessageFusionClose

// int32 type = 1;
inline void CMessageFusionClose::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageFusionClose::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageFusionClose.type)
  return type_;
}
inline void CMessageFusionClose::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageFusionClose.type)
}

// string uuid = 2;
inline void CMessageFusionClose::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageFusionClose::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageFusionClose.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageFusionClose::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageFusionClose.uuid)
}
#if LANG_CXX11
inline void CMessageFusionClose::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageFusionClose.uuid)
}
#endif
inline void CMessageFusionClose::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageFusionClose.uuid)
}
inline void CMessageFusionClose::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageFusionClose.uuid)
}
inline ::std::string* CMessageFusionClose::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageFusionClose.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageFusionClose::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageFusionClose.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageFusionClose::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageFusionClose.uuid)
}

// -------------------------------------------------------------------

// CMessageFusionMaximize

// int32 type = 1;
inline void CMessageFusionMaximize::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageFusionMaximize::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageFusionMaximize.type)
  return type_;
}
inline void CMessageFusionMaximize::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageFusionMaximize.type)
}

// string uuid = 2;
inline void CMessageFusionMaximize::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageFusionMaximize::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageFusionMaximize.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageFusionMaximize::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageFusionMaximize.uuid)
}
#if LANG_CXX11
inline void CMessageFusionMaximize::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageFusionMaximize.uuid)
}
#endif
inline void CMessageFusionMaximize::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageFusionMaximize.uuid)
}
inline void CMessageFusionMaximize::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageFusionMaximize.uuid)
}
inline ::std::string* CMessageFusionMaximize::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageFusionMaximize.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageFusionMaximize::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageFusionMaximize.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageFusionMaximize::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageFusionMaximize.uuid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace d5

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_5fterminate_2eproto_INCLUDED
