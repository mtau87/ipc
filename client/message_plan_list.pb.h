// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_plan_list.proto

#ifndef PROTOBUF_message_5fplan_5flist_2eproto_INCLUDED
#define PROTOBUF_message_5fplan_5flist_2eproto_INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_message_5fplan_5flist_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsCMessagePlanListRequestImpl();
void InitDefaultsCMessagePlanListRequest();
void InitDefaultsCMessageHttpPlanUnitImpl();
void InitDefaultsCMessageHttpPlanUnit();
void InitDefaultsCMessageHttpPlanListImpl();
void InitDefaultsCMessageHttpPlanList();
void InitDefaultsCMessagePlanListResponseImpl();
void InitDefaultsCMessagePlanListResponse();
inline void InitDefaults() {
  InitDefaultsCMessagePlanListRequest();
  InitDefaultsCMessageHttpPlanUnit();
  InitDefaultsCMessageHttpPlanList();
  InitDefaultsCMessagePlanListResponse();
}
}  // namespace protobuf_message_5fplan_5flist_2eproto
namespace d5 {
class CMessageHttpPlanList;
class CMessageHttpPlanListDefaultTypeInternal;
extern CMessageHttpPlanListDefaultTypeInternal _CMessageHttpPlanList_default_instance_;
class CMessageHttpPlanUnit;
class CMessageHttpPlanUnitDefaultTypeInternal;
extern CMessageHttpPlanUnitDefaultTypeInternal _CMessageHttpPlanUnit_default_instance_;
class CMessagePlanListRequest;
class CMessagePlanListRequestDefaultTypeInternal;
extern CMessagePlanListRequestDefaultTypeInternal _CMessagePlanListRequest_default_instance_;
class CMessagePlanListResponse;
class CMessagePlanListResponseDefaultTypeInternal;
extern CMessagePlanListResponseDefaultTypeInternal _CMessagePlanListResponse_default_instance_;
}  // namespace d5
namespace google {
namespace protobuf {
template<> ::d5::CMessageHttpPlanList* Arena::Create< ::d5::CMessageHttpPlanList>(Arena*);
template<> ::d5::CMessageHttpPlanUnit* Arena::Create< ::d5::CMessageHttpPlanUnit>(Arena*);
template<> ::d5::CMessagePlanListRequest* Arena::Create< ::d5::CMessagePlanListRequest>(Arena*);
template<> ::d5::CMessagePlanListResponse* Arena::Create< ::d5::CMessagePlanListResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace d5 {

// ===================================================================

class CMessagePlanListRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessagePlanListRequest) */ {
 public:
  CMessagePlanListRequest();
  virtual ~CMessagePlanListRequest();

  CMessagePlanListRequest(const CMessagePlanListRequest& from);

  inline CMessagePlanListRequest& operator=(const CMessagePlanListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessagePlanListRequest(CMessagePlanListRequest&& from) noexcept
    : CMessagePlanListRequest() {
    *this = ::std::move(from);
  }

  inline CMessagePlanListRequest& operator=(CMessagePlanListRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlanListRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessagePlanListRequest* internal_default_instance() {
    return reinterpret_cast<const CMessagePlanListRequest*>(
               &_CMessagePlanListRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CMessagePlanListRequest* other);
  friend void swap(CMessagePlanListRequest& a, CMessagePlanListRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessagePlanListRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessagePlanListRequest>(NULL);
  }

  CMessagePlanListRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessagePlanListRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessagePlanListRequest& from);
  void MergeFrom(const CMessagePlanListRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessagePlanListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 companyid = 3;
  void clear_companyid();
  static const int kCompanyidFieldNumber = 3;
  ::google::protobuf::int32 companyid() const;
  void set_companyid(::google::protobuf::int32 value);

  // uint64 updatetime = 4;
  void clear_updatetime();
  static const int kUpdatetimeFieldNumber = 4;
  ::google::protobuf::uint64 updatetime() const;
  void set_updatetime(::google::protobuf::uint64 value);

  // int32 pageSize = 5;
  void clear_pagesize();
  static const int kPageSizeFieldNumber = 5;
  ::google::protobuf::int32 pagesize() const;
  void set_pagesize(::google::protobuf::int32 value);

  // int32 pageNum = 6;
  void clear_pagenum();
  static const int kPageNumFieldNumber = 6;
  ::google::protobuf::int32 pagenum() const;
  void set_pagenum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessagePlanListRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 companyid_;
  ::google::protobuf::uint64 updatetime_;
  ::google::protobuf::int32 pagesize_;
  ::google::protobuf::int32 pagenum_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fplan_5flist_2eproto::TableStruct;
  friend void ::protobuf_message_5fplan_5flist_2eproto::InitDefaultsCMessagePlanListRequestImpl();
};
// -------------------------------------------------------------------

class CMessageHttpPlanUnit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageHttpPlanUnit) */ {
 public:
  CMessageHttpPlanUnit();
  virtual ~CMessageHttpPlanUnit();

  CMessageHttpPlanUnit(const CMessageHttpPlanUnit& from);

  inline CMessageHttpPlanUnit& operator=(const CMessageHttpPlanUnit& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageHttpPlanUnit(CMessageHttpPlanUnit&& from) noexcept
    : CMessageHttpPlanUnit() {
    *this = ::std::move(from);
  }

  inline CMessageHttpPlanUnit& operator=(CMessageHttpPlanUnit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageHttpPlanUnit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageHttpPlanUnit* internal_default_instance() {
    return reinterpret_cast<const CMessageHttpPlanUnit*>(
               &_CMessageHttpPlanUnit_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CMessageHttpPlanUnit* other);
  friend void swap(CMessageHttpPlanUnit& a, CMessageHttpPlanUnit& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageHttpPlanUnit* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageHttpPlanUnit>(NULL);
  }

  CMessageHttpPlanUnit* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageHttpPlanUnit>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageHttpPlanUnit& from);
  void MergeFrom(const CMessageHttpPlanUnit& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageHttpPlanUnit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string title = 2;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // string pakUrl = 5;
  void clear_pakurl();
  static const int kPakUrlFieldNumber = 5;
  const ::std::string& pakurl() const;
  void set_pakurl(const ::std::string& value);
  #if LANG_CXX11
  void set_pakurl(::std::string&& value);
  #endif
  void set_pakurl(const char* value);
  void set_pakurl(const char* value, size_t size);
  ::std::string* mutable_pakurl();
  ::std::string* release_pakurl();
  void set_allocated_pakurl(::std::string* pakurl);

  // string thumbnailUrl = 6;
  void clear_thumbnailurl();
  static const int kThumbnailUrlFieldNumber = 6;
  const ::std::string& thumbnailurl() const;
  void set_thumbnailurl(const ::std::string& value);
  #if LANG_CXX11
  void set_thumbnailurl(::std::string&& value);
  #endif
  void set_thumbnailurl(const char* value);
  void set_thumbnailurl(const char* value, size_t size);
  ::std::string* mutable_thumbnailurl();
  ::std::string* release_thumbnailurl();
  void set_allocated_thumbnailurl(::std::string* thumbnailurl);

  // string floorEditFileUrl = 7;
  void clear_flooreditfileurl();
  static const int kFloorEditFileUrlFieldNumber = 7;
  const ::std::string& flooreditfileurl() const;
  void set_flooreditfileurl(const ::std::string& value);
  #if LANG_CXX11
  void set_flooreditfileurl(::std::string&& value);
  #endif
  void set_flooreditfileurl(const char* value);
  void set_flooreditfileurl(const char* value, size_t size);
  ::std::string* mutable_flooreditfileurl();
  ::std::string* release_flooreditfileurl();
  void set_allocated_flooreditfileurl(::std::string* flooreditfileurl);

  // string detailInfo = 8;
  void clear_detailinfo();
  static const int kDetailInfoFieldNumber = 8;
  const ::std::string& detailinfo() const;
  void set_detailinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_detailinfo(::std::string&& value);
  #endif
  void set_detailinfo(const char* value);
  void set_detailinfo(const char* value, size_t size);
  ::std::string* mutable_detailinfo();
  ::std::string* release_detailinfo();
  void set_allocated_detailinfo(::std::string* detailinfo);

  // string designFileUrl = 9;
  void clear_designfileurl();
  static const int kDesignFileUrlFieldNumber = 9;
  const ::std::string& designfileurl() const;
  void set_designfileurl(const ::std::string& value);
  #if LANG_CXX11
  void set_designfileurl(::std::string&& value);
  #endif
  void set_designfileurl(const char* value);
  void set_designfileurl(const char* value, size_t size);
  ::std::string* mutable_designfileurl();
  ::std::string* release_designfileurl();
  void set_allocated_designfileurl(::std::string* designfileurl);

  // string floorRefUrl = 20;
  void clear_floorrefurl();
  static const int kFloorRefUrlFieldNumber = 20;
  const ::std::string& floorrefurl() const;
  void set_floorrefurl(const ::std::string& value);
  #if LANG_CXX11
  void set_floorrefurl(::std::string&& value);
  #endif
  void set_floorrefurl(const char* value);
  void set_floorrefurl(const char* value, size_t size);
  ::std::string* mutable_floorrefurl();
  ::std::string* release_floorrefurl();
  void set_allocated_floorrefurl(::std::string* floorrefurl);

  // string userName = 27;
  void clear_username();
  static const int kUserNameFieldNumber = 27;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // string dependentFileList = 28;
  void clear_dependentfilelist();
  static const int kDependentFileListFieldNumber = 28;
  const ::std::string& dependentfilelist() const;
  void set_dependentfilelist(const ::std::string& value);
  #if LANG_CXX11
  void set_dependentfilelist(::std::string&& value);
  #endif
  void set_dependentfilelist(const char* value);
  void set_dependentfilelist(const char* value, size_t size);
  ::std::string* mutable_dependentfilelist();
  ::std::string* release_dependentfilelist();
  void set_allocated_dependentfilelist(::std::string* dependentfilelist);

  // string quotationInfo = 30;
  void clear_quotationinfo();
  static const int kQuotationInfoFieldNumber = 30;
  const ::std::string& quotationinfo() const;
  void set_quotationinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_quotationinfo(::std::string&& value);
  #endif
  void set_quotationinfo(const char* value);
  void set_quotationinfo(const char* value, size_t size);
  ::std::string* mutable_quotationinfo();
  ::std::string* release_quotationinfo();
  void set_allocated_quotationinfo(::std::string* quotationinfo);

  // float size = 3;
  void clear_size();
  static const int kSizeFieldNumber = 3;
  float size() const;
  void set_size(float value);

  // int32 districtId = 10;
  void clear_districtid();
  static const int kDistrictIdFieldNumber = 10;
  ::google::protobuf::int32 districtid() const;
  void set_districtid(::google::protobuf::int32 value);

  // int32 propertyTypeId = 11;
  void clear_propertytypeid();
  static const int kPropertyTypeIdFieldNumber = 11;
  ::google::protobuf::int32 propertytypeid() const;
  void set_propertytypeid(::google::protobuf::int32 value);

  // int32 roomTypeId = 12;
  void clear_roomtypeid();
  static const int kRoomTypeIdFieldNumber = 12;
  ::google::protobuf::int32 roomtypeid() const;
  void set_roomtypeid(::google::protobuf::int32 value);

  // int32 templateTypeId = 13;
  void clear_templatetypeid();
  static const int kTemplateTypeIdFieldNumber = 13;
  ::google::protobuf::int32 templatetypeid() const;
  void set_templatetypeid(::google::protobuf::int32 value);

  // int32 isDel = 14;
  void clear_isdel();
  static const int kIsDelFieldNumber = 14;
  ::google::protobuf::int32 isdel() const;
  void set_isdel(::google::protobuf::int32 value);

  // int64 createTime = 15;
  void clear_createtime();
  static const int kCreateTimeFieldNumber = 15;
  ::google::protobuf::int64 createtime() const;
  void set_createtime(::google::protobuf::int64 value);

  // int64 updateTime = 16;
  void clear_updatetime();
  static const int kUpdateTimeFieldNumber = 16;
  ::google::protobuf::int64 updatetime() const;
  void set_updatetime(::google::protobuf::int64 value);

  // int32 userId = 17;
  void clear_userid();
  static const int kUserIdFieldNumber = 17;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // int32 companyId = 18;
  void clear_companyid();
  static const int kCompanyIdFieldNumber = 18;
  ::google::protobuf::int32 companyid() const;
  void set_companyid(::google::protobuf::int32 value);

  // float floorRefWidth = 21;
  void clear_floorrefwidth();
  static const int kFloorRefWidthFieldNumber = 21;
  float floorrefwidth() const;
  void set_floorrefwidth(float value);

  // float floorRefHeight = 22;
  void clear_floorrefheight();
  static const int kFloorRefHeightFieldNumber = 22;
  float floorrefheight() const;
  void set_floorrefheight(float value);

  // int32 groupId = 25;
  void clear_groupid();
  static const int kGroupIdFieldNumber = 25;
  ::google::protobuf::int32 groupid() const;
  void set_groupid(::google::protobuf::int32 value);

  // int32 condoId = 26;
  void clear_condoid();
  static const int kCondoIdFieldNumber = 26;
  ::google::protobuf::int32 condoid() const;
  void set_condoid(::google::protobuf::int32 value);

  // int32 source = 29;
  void clear_source();
  static const int kSourceFieldNumber = 29;
  ::google::protobuf::int32 source() const;
  void set_source(::google::protobuf::int32 value);

  // int32 isPrivate = 31;
  void clear_isprivate();
  static const int kIsPrivateFieldNumber = 31;
  ::google::protobuf::int32 isprivate() const;
  void set_isprivate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageHttpPlanUnit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr pakurl_;
  ::google::protobuf::internal::ArenaStringPtr thumbnailurl_;
  ::google::protobuf::internal::ArenaStringPtr flooreditfileurl_;
  ::google::protobuf::internal::ArenaStringPtr detailinfo_;
  ::google::protobuf::internal::ArenaStringPtr designfileurl_;
  ::google::protobuf::internal::ArenaStringPtr floorrefurl_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr dependentfilelist_;
  ::google::protobuf::internal::ArenaStringPtr quotationinfo_;
  float size_;
  ::google::protobuf::int32 districtid_;
  ::google::protobuf::int32 propertytypeid_;
  ::google::protobuf::int32 roomtypeid_;
  ::google::protobuf::int32 templatetypeid_;
  ::google::protobuf::int32 isdel_;
  ::google::protobuf::int64 createtime_;
  ::google::protobuf::int64 updatetime_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 companyid_;
  float floorrefwidth_;
  float floorrefheight_;
  ::google::protobuf::int32 groupid_;
  ::google::protobuf::int32 condoid_;
  ::google::protobuf::int32 source_;
  ::google::protobuf::int32 isprivate_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fplan_5flist_2eproto::TableStruct;
  friend void ::protobuf_message_5fplan_5flist_2eproto::InitDefaultsCMessageHttpPlanUnitImpl();
};
// -------------------------------------------------------------------

class CMessageHttpPlanList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageHttpPlanList) */ {
 public:
  CMessageHttpPlanList();
  virtual ~CMessageHttpPlanList();

  CMessageHttpPlanList(const CMessageHttpPlanList& from);

  inline CMessageHttpPlanList& operator=(const CMessageHttpPlanList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageHttpPlanList(CMessageHttpPlanList&& from) noexcept
    : CMessageHttpPlanList() {
    *this = ::std::move(from);
  }

  inline CMessageHttpPlanList& operator=(CMessageHttpPlanList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageHttpPlanList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageHttpPlanList* internal_default_instance() {
    return reinterpret_cast<const CMessageHttpPlanList*>(
               &_CMessageHttpPlanList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CMessageHttpPlanList* other);
  friend void swap(CMessageHttpPlanList& a, CMessageHttpPlanList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageHttpPlanList* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageHttpPlanList>(NULL);
  }

  CMessageHttpPlanList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageHttpPlanList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageHttpPlanList& from);
  void MergeFrom(const CMessageHttpPlanList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageHttpPlanList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .d5.CMessageHttpPlanUnit rows = 1;
  int rows_size() const;
  void clear_rows();
  static const int kRowsFieldNumber = 1;
  ::d5::CMessageHttpPlanUnit* mutable_rows(int index);
  ::google::protobuf::RepeatedPtrField< ::d5::CMessageHttpPlanUnit >*
      mutable_rows();
  const ::d5::CMessageHttpPlanUnit& rows(int index) const;
  ::d5::CMessageHttpPlanUnit* add_rows();
  const ::google::protobuf::RepeatedPtrField< ::d5::CMessageHttpPlanUnit >&
      rows() const;

  // int32 total = 2;
  void clear_total();
  static const int kTotalFieldNumber = 2;
  ::google::protobuf::int32 total() const;
  void set_total(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageHttpPlanList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::d5::CMessageHttpPlanUnit > rows_;
  ::google::protobuf::int32 total_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fplan_5flist_2eproto::TableStruct;
  friend void ::protobuf_message_5fplan_5flist_2eproto::InitDefaultsCMessageHttpPlanListImpl();
};
// -------------------------------------------------------------------

class CMessagePlanListResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessagePlanListResponse) */ {
 public:
  CMessagePlanListResponse();
  virtual ~CMessagePlanListResponse();

  CMessagePlanListResponse(const CMessagePlanListResponse& from);

  inline CMessagePlanListResponse& operator=(const CMessagePlanListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessagePlanListResponse(CMessagePlanListResponse&& from) noexcept
    : CMessagePlanListResponse() {
    *this = ::std::move(from);
  }

  inline CMessagePlanListResponse& operator=(CMessagePlanListResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlanListResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessagePlanListResponse* internal_default_instance() {
    return reinterpret_cast<const CMessagePlanListResponse*>(
               &_CMessagePlanListResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CMessagePlanListResponse* other);
  friend void swap(CMessagePlanListResponse& a, CMessagePlanListResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessagePlanListResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessagePlanListResponse>(NULL);
  }

  CMessagePlanListResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessagePlanListResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessagePlanListResponse& from);
  void MergeFrom(const CMessagePlanListResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessagePlanListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // .d5.CMessageHttpPlanList list = 4;
  bool has_list() const;
  void clear_list();
  static const int kListFieldNumber = 4;
  const ::d5::CMessageHttpPlanList& list() const;
  ::d5::CMessageHttpPlanList* release_list();
  ::d5::CMessageHttpPlanList* mutable_list();
  void set_allocated_list(::d5::CMessageHttpPlanList* list);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 state = 3;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessagePlanListResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::d5::CMessageHttpPlanList* list_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 state_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fplan_5flist_2eproto::TableStruct;
  friend void ::protobuf_message_5fplan_5flist_2eproto::InitDefaultsCMessagePlanListResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMessagePlanListRequest

// int32 type = 1;
inline void CMessagePlanListRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessagePlanListRequest::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessagePlanListRequest.type)
  return type_;
}
inline void CMessagePlanListRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessagePlanListRequest.type)
}

// string uuid = 2;
inline void CMessagePlanListRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessagePlanListRequest::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessagePlanListRequest.uuid)
  return uuid_.GetNoArena();
}
inline void CMessagePlanListRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessagePlanListRequest.uuid)
}
#if LANG_CXX11
inline void CMessagePlanListRequest::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessagePlanListRequest.uuid)
}
#endif
inline void CMessagePlanListRequest::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessagePlanListRequest.uuid)
}
inline void CMessagePlanListRequest::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessagePlanListRequest.uuid)
}
inline ::std::string* CMessagePlanListRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessagePlanListRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessagePlanListRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessagePlanListRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessagePlanListRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessagePlanListRequest.uuid)
}

// int32 companyid = 3;
inline void CMessagePlanListRequest::clear_companyid() {
  companyid_ = 0;
}
inline ::google::protobuf::int32 CMessagePlanListRequest::companyid() const {
  // @@protoc_insertion_point(field_get:d5.CMessagePlanListRequest.companyid)
  return companyid_;
}
inline void CMessagePlanListRequest::set_companyid(::google::protobuf::int32 value) {
  
  companyid_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessagePlanListRequest.companyid)
}

// uint64 updatetime = 4;
inline void CMessagePlanListRequest::clear_updatetime() {
  updatetime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMessagePlanListRequest::updatetime() const {
  // @@protoc_insertion_point(field_get:d5.CMessagePlanListRequest.updatetime)
  return updatetime_;
}
inline void CMessagePlanListRequest::set_updatetime(::google::protobuf::uint64 value) {
  
  updatetime_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessagePlanListRequest.updatetime)
}

// int32 pageSize = 5;
inline void CMessagePlanListRequest::clear_pagesize() {
  pagesize_ = 0;
}
inline ::google::protobuf::int32 CMessagePlanListRequest::pagesize() const {
  // @@protoc_insertion_point(field_get:d5.CMessagePlanListRequest.pageSize)
  return pagesize_;
}
inline void CMessagePlanListRequest::set_pagesize(::google::protobuf::int32 value) {
  
  pagesize_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessagePlanListRequest.pageSize)
}

// int32 pageNum = 6;
inline void CMessagePlanListRequest::clear_pagenum() {
  pagenum_ = 0;
}
inline ::google::protobuf::int32 CMessagePlanListRequest::pagenum() const {
  // @@protoc_insertion_point(field_get:d5.CMessagePlanListRequest.pageNum)
  return pagenum_;
}
inline void CMessagePlanListRequest::set_pagenum(::google::protobuf::int32 value) {
  
  pagenum_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessagePlanListRequest.pageNum)
}

// -------------------------------------------------------------------

// CMessageHttpPlanUnit

// string id = 1;
inline void CMessageHttpPlanUnit::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpPlanUnit::id() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanUnit.id)
  return id_.GetNoArena();
}
inline void CMessageHttpPlanUnit::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanUnit.id)
}
#if LANG_CXX11
inline void CMessageHttpPlanUnit::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpPlanUnit.id)
}
#endif
inline void CMessageHttpPlanUnit::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpPlanUnit.id)
}
inline void CMessageHttpPlanUnit::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpPlanUnit.id)
}
inline ::std::string* CMessageHttpPlanUnit::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpPlanUnit.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpPlanUnit::release_id() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpPlanUnit.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpPlanUnit::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpPlanUnit.id)
}

// string title = 2;
inline void CMessageHttpPlanUnit::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpPlanUnit::title() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanUnit.title)
  return title_.GetNoArena();
}
inline void CMessageHttpPlanUnit::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanUnit.title)
}
#if LANG_CXX11
inline void CMessageHttpPlanUnit::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpPlanUnit.title)
}
#endif
inline void CMessageHttpPlanUnit::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpPlanUnit.title)
}
inline void CMessageHttpPlanUnit::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpPlanUnit.title)
}
inline ::std::string* CMessageHttpPlanUnit::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpPlanUnit.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpPlanUnit::release_title() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpPlanUnit.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpPlanUnit::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpPlanUnit.title)
}

// float size = 3;
inline void CMessageHttpPlanUnit::clear_size() {
  size_ = 0;
}
inline float CMessageHttpPlanUnit::size() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanUnit.size)
  return size_;
}
inline void CMessageHttpPlanUnit::set_size(float value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanUnit.size)
}

// string pakUrl = 5;
inline void CMessageHttpPlanUnit::clear_pakurl() {
  pakurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpPlanUnit::pakurl() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanUnit.pakUrl)
  return pakurl_.GetNoArena();
}
inline void CMessageHttpPlanUnit::set_pakurl(const ::std::string& value) {
  
  pakurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanUnit.pakUrl)
}
#if LANG_CXX11
inline void CMessageHttpPlanUnit::set_pakurl(::std::string&& value) {
  
  pakurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpPlanUnit.pakUrl)
}
#endif
inline void CMessageHttpPlanUnit::set_pakurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pakurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpPlanUnit.pakUrl)
}
inline void CMessageHttpPlanUnit::set_pakurl(const char* value, size_t size) {
  
  pakurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpPlanUnit.pakUrl)
}
inline ::std::string* CMessageHttpPlanUnit::mutable_pakurl() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpPlanUnit.pakUrl)
  return pakurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpPlanUnit::release_pakurl() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpPlanUnit.pakUrl)
  
  return pakurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpPlanUnit::set_allocated_pakurl(::std::string* pakurl) {
  if (pakurl != NULL) {
    
  } else {
    
  }
  pakurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pakurl);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpPlanUnit.pakUrl)
}

// string thumbnailUrl = 6;
inline void CMessageHttpPlanUnit::clear_thumbnailurl() {
  thumbnailurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpPlanUnit::thumbnailurl() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanUnit.thumbnailUrl)
  return thumbnailurl_.GetNoArena();
}
inline void CMessageHttpPlanUnit::set_thumbnailurl(const ::std::string& value) {
  
  thumbnailurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanUnit.thumbnailUrl)
}
#if LANG_CXX11
inline void CMessageHttpPlanUnit::set_thumbnailurl(::std::string&& value) {
  
  thumbnailurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpPlanUnit.thumbnailUrl)
}
#endif
inline void CMessageHttpPlanUnit::set_thumbnailurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  thumbnailurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpPlanUnit.thumbnailUrl)
}
inline void CMessageHttpPlanUnit::set_thumbnailurl(const char* value, size_t size) {
  
  thumbnailurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpPlanUnit.thumbnailUrl)
}
inline ::std::string* CMessageHttpPlanUnit::mutable_thumbnailurl() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpPlanUnit.thumbnailUrl)
  return thumbnailurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpPlanUnit::release_thumbnailurl() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpPlanUnit.thumbnailUrl)
  
  return thumbnailurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpPlanUnit::set_allocated_thumbnailurl(::std::string* thumbnailurl) {
  if (thumbnailurl != NULL) {
    
  } else {
    
  }
  thumbnailurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), thumbnailurl);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpPlanUnit.thumbnailUrl)
}

// string floorEditFileUrl = 7;
inline void CMessageHttpPlanUnit::clear_flooreditfileurl() {
  flooreditfileurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpPlanUnit::flooreditfileurl() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanUnit.floorEditFileUrl)
  return flooreditfileurl_.GetNoArena();
}
inline void CMessageHttpPlanUnit::set_flooreditfileurl(const ::std::string& value) {
  
  flooreditfileurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanUnit.floorEditFileUrl)
}
#if LANG_CXX11
inline void CMessageHttpPlanUnit::set_flooreditfileurl(::std::string&& value) {
  
  flooreditfileurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpPlanUnit.floorEditFileUrl)
}
#endif
inline void CMessageHttpPlanUnit::set_flooreditfileurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  flooreditfileurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpPlanUnit.floorEditFileUrl)
}
inline void CMessageHttpPlanUnit::set_flooreditfileurl(const char* value, size_t size) {
  
  flooreditfileurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpPlanUnit.floorEditFileUrl)
}
inline ::std::string* CMessageHttpPlanUnit::mutable_flooreditfileurl() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpPlanUnit.floorEditFileUrl)
  return flooreditfileurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpPlanUnit::release_flooreditfileurl() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpPlanUnit.floorEditFileUrl)
  
  return flooreditfileurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpPlanUnit::set_allocated_flooreditfileurl(::std::string* flooreditfileurl) {
  if (flooreditfileurl != NULL) {
    
  } else {
    
  }
  flooreditfileurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), flooreditfileurl);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpPlanUnit.floorEditFileUrl)
}

// string detailInfo = 8;
inline void CMessageHttpPlanUnit::clear_detailinfo() {
  detailinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpPlanUnit::detailinfo() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanUnit.detailInfo)
  return detailinfo_.GetNoArena();
}
inline void CMessageHttpPlanUnit::set_detailinfo(const ::std::string& value) {
  
  detailinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanUnit.detailInfo)
}
#if LANG_CXX11
inline void CMessageHttpPlanUnit::set_detailinfo(::std::string&& value) {
  
  detailinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpPlanUnit.detailInfo)
}
#endif
inline void CMessageHttpPlanUnit::set_detailinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  detailinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpPlanUnit.detailInfo)
}
inline void CMessageHttpPlanUnit::set_detailinfo(const char* value, size_t size) {
  
  detailinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpPlanUnit.detailInfo)
}
inline ::std::string* CMessageHttpPlanUnit::mutable_detailinfo() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpPlanUnit.detailInfo)
  return detailinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpPlanUnit::release_detailinfo() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpPlanUnit.detailInfo)
  
  return detailinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpPlanUnit::set_allocated_detailinfo(::std::string* detailinfo) {
  if (detailinfo != NULL) {
    
  } else {
    
  }
  detailinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), detailinfo);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpPlanUnit.detailInfo)
}

// string designFileUrl = 9;
inline void CMessageHttpPlanUnit::clear_designfileurl() {
  designfileurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpPlanUnit::designfileurl() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanUnit.designFileUrl)
  return designfileurl_.GetNoArena();
}
inline void CMessageHttpPlanUnit::set_designfileurl(const ::std::string& value) {
  
  designfileurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanUnit.designFileUrl)
}
#if LANG_CXX11
inline void CMessageHttpPlanUnit::set_designfileurl(::std::string&& value) {
  
  designfileurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpPlanUnit.designFileUrl)
}
#endif
inline void CMessageHttpPlanUnit::set_designfileurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  designfileurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpPlanUnit.designFileUrl)
}
inline void CMessageHttpPlanUnit::set_designfileurl(const char* value, size_t size) {
  
  designfileurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpPlanUnit.designFileUrl)
}
inline ::std::string* CMessageHttpPlanUnit::mutable_designfileurl() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpPlanUnit.designFileUrl)
  return designfileurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpPlanUnit::release_designfileurl() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpPlanUnit.designFileUrl)
  
  return designfileurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpPlanUnit::set_allocated_designfileurl(::std::string* designfileurl) {
  if (designfileurl != NULL) {
    
  } else {
    
  }
  designfileurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), designfileurl);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpPlanUnit.designFileUrl)
}

// int32 districtId = 10;
inline void CMessageHttpPlanUnit::clear_districtid() {
  districtid_ = 0;
}
inline ::google::protobuf::int32 CMessageHttpPlanUnit::districtid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanUnit.districtId)
  return districtid_;
}
inline void CMessageHttpPlanUnit::set_districtid(::google::protobuf::int32 value) {
  
  districtid_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanUnit.districtId)
}

// int32 propertyTypeId = 11;
inline void CMessageHttpPlanUnit::clear_propertytypeid() {
  propertytypeid_ = 0;
}
inline ::google::protobuf::int32 CMessageHttpPlanUnit::propertytypeid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanUnit.propertyTypeId)
  return propertytypeid_;
}
inline void CMessageHttpPlanUnit::set_propertytypeid(::google::protobuf::int32 value) {
  
  propertytypeid_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanUnit.propertyTypeId)
}

// int32 roomTypeId = 12;
inline void CMessageHttpPlanUnit::clear_roomtypeid() {
  roomtypeid_ = 0;
}
inline ::google::protobuf::int32 CMessageHttpPlanUnit::roomtypeid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanUnit.roomTypeId)
  return roomtypeid_;
}
inline void CMessageHttpPlanUnit::set_roomtypeid(::google::protobuf::int32 value) {
  
  roomtypeid_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanUnit.roomTypeId)
}

// int32 templateTypeId = 13;
inline void CMessageHttpPlanUnit::clear_templatetypeid() {
  templatetypeid_ = 0;
}
inline ::google::protobuf::int32 CMessageHttpPlanUnit::templatetypeid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanUnit.templateTypeId)
  return templatetypeid_;
}
inline void CMessageHttpPlanUnit::set_templatetypeid(::google::protobuf::int32 value) {
  
  templatetypeid_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanUnit.templateTypeId)
}

// int32 isDel = 14;
inline void CMessageHttpPlanUnit::clear_isdel() {
  isdel_ = 0;
}
inline ::google::protobuf::int32 CMessageHttpPlanUnit::isdel() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanUnit.isDel)
  return isdel_;
}
inline void CMessageHttpPlanUnit::set_isdel(::google::protobuf::int32 value) {
  
  isdel_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanUnit.isDel)
}

// int64 createTime = 15;
inline void CMessageHttpPlanUnit::clear_createtime() {
  createtime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CMessageHttpPlanUnit::createtime() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanUnit.createTime)
  return createtime_;
}
inline void CMessageHttpPlanUnit::set_createtime(::google::protobuf::int64 value) {
  
  createtime_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanUnit.createTime)
}

// int64 updateTime = 16;
inline void CMessageHttpPlanUnit::clear_updatetime() {
  updatetime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CMessageHttpPlanUnit::updatetime() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanUnit.updateTime)
  return updatetime_;
}
inline void CMessageHttpPlanUnit::set_updatetime(::google::protobuf::int64 value) {
  
  updatetime_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanUnit.updateTime)
}

// int32 userId = 17;
inline void CMessageHttpPlanUnit::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 CMessageHttpPlanUnit::userid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanUnit.userId)
  return userid_;
}
inline void CMessageHttpPlanUnit::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanUnit.userId)
}

// int32 companyId = 18;
inline void CMessageHttpPlanUnit::clear_companyid() {
  companyid_ = 0;
}
inline ::google::protobuf::int32 CMessageHttpPlanUnit::companyid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanUnit.companyId)
  return companyid_;
}
inline void CMessageHttpPlanUnit::set_companyid(::google::protobuf::int32 value) {
  
  companyid_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanUnit.companyId)
}

// string floorRefUrl = 20;
inline void CMessageHttpPlanUnit::clear_floorrefurl() {
  floorrefurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpPlanUnit::floorrefurl() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanUnit.floorRefUrl)
  return floorrefurl_.GetNoArena();
}
inline void CMessageHttpPlanUnit::set_floorrefurl(const ::std::string& value) {
  
  floorrefurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanUnit.floorRefUrl)
}
#if LANG_CXX11
inline void CMessageHttpPlanUnit::set_floorrefurl(::std::string&& value) {
  
  floorrefurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpPlanUnit.floorRefUrl)
}
#endif
inline void CMessageHttpPlanUnit::set_floorrefurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  floorrefurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpPlanUnit.floorRefUrl)
}
inline void CMessageHttpPlanUnit::set_floorrefurl(const char* value, size_t size) {
  
  floorrefurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpPlanUnit.floorRefUrl)
}
inline ::std::string* CMessageHttpPlanUnit::mutable_floorrefurl() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpPlanUnit.floorRefUrl)
  return floorrefurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpPlanUnit::release_floorrefurl() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpPlanUnit.floorRefUrl)
  
  return floorrefurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpPlanUnit::set_allocated_floorrefurl(::std::string* floorrefurl) {
  if (floorrefurl != NULL) {
    
  } else {
    
  }
  floorrefurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), floorrefurl);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpPlanUnit.floorRefUrl)
}

// float floorRefWidth = 21;
inline void CMessageHttpPlanUnit::clear_floorrefwidth() {
  floorrefwidth_ = 0;
}
inline float CMessageHttpPlanUnit::floorrefwidth() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanUnit.floorRefWidth)
  return floorrefwidth_;
}
inline void CMessageHttpPlanUnit::set_floorrefwidth(float value) {
  
  floorrefwidth_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanUnit.floorRefWidth)
}

// float floorRefHeight = 22;
inline void CMessageHttpPlanUnit::clear_floorrefheight() {
  floorrefheight_ = 0;
}
inline float CMessageHttpPlanUnit::floorrefheight() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanUnit.floorRefHeight)
  return floorrefheight_;
}
inline void CMessageHttpPlanUnit::set_floorrefheight(float value) {
  
  floorrefheight_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanUnit.floorRefHeight)
}

// int32 groupId = 25;
inline void CMessageHttpPlanUnit::clear_groupid() {
  groupid_ = 0;
}
inline ::google::protobuf::int32 CMessageHttpPlanUnit::groupid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanUnit.groupId)
  return groupid_;
}
inline void CMessageHttpPlanUnit::set_groupid(::google::protobuf::int32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanUnit.groupId)
}

// int32 condoId = 26;
inline void CMessageHttpPlanUnit::clear_condoid() {
  condoid_ = 0;
}
inline ::google::protobuf::int32 CMessageHttpPlanUnit::condoid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanUnit.condoId)
  return condoid_;
}
inline void CMessageHttpPlanUnit::set_condoid(::google::protobuf::int32 value) {
  
  condoid_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanUnit.condoId)
}

// string userName = 27;
inline void CMessageHttpPlanUnit::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpPlanUnit::username() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanUnit.userName)
  return username_.GetNoArena();
}
inline void CMessageHttpPlanUnit::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanUnit.userName)
}
#if LANG_CXX11
inline void CMessageHttpPlanUnit::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpPlanUnit.userName)
}
#endif
inline void CMessageHttpPlanUnit::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpPlanUnit.userName)
}
inline void CMessageHttpPlanUnit::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpPlanUnit.userName)
}
inline ::std::string* CMessageHttpPlanUnit::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpPlanUnit.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpPlanUnit::release_username() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpPlanUnit.userName)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpPlanUnit::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpPlanUnit.userName)
}

// string dependentFileList = 28;
inline void CMessageHttpPlanUnit::clear_dependentfilelist() {
  dependentfilelist_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpPlanUnit::dependentfilelist() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanUnit.dependentFileList)
  return dependentfilelist_.GetNoArena();
}
inline void CMessageHttpPlanUnit::set_dependentfilelist(const ::std::string& value) {
  
  dependentfilelist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanUnit.dependentFileList)
}
#if LANG_CXX11
inline void CMessageHttpPlanUnit::set_dependentfilelist(::std::string&& value) {
  
  dependentfilelist_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpPlanUnit.dependentFileList)
}
#endif
inline void CMessageHttpPlanUnit::set_dependentfilelist(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dependentfilelist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpPlanUnit.dependentFileList)
}
inline void CMessageHttpPlanUnit::set_dependentfilelist(const char* value, size_t size) {
  
  dependentfilelist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpPlanUnit.dependentFileList)
}
inline ::std::string* CMessageHttpPlanUnit::mutable_dependentfilelist() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpPlanUnit.dependentFileList)
  return dependentfilelist_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpPlanUnit::release_dependentfilelist() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpPlanUnit.dependentFileList)
  
  return dependentfilelist_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpPlanUnit::set_allocated_dependentfilelist(::std::string* dependentfilelist) {
  if (dependentfilelist != NULL) {
    
  } else {
    
  }
  dependentfilelist_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dependentfilelist);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpPlanUnit.dependentFileList)
}

// int32 source = 29;
inline void CMessageHttpPlanUnit::clear_source() {
  source_ = 0;
}
inline ::google::protobuf::int32 CMessageHttpPlanUnit::source() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanUnit.source)
  return source_;
}
inline void CMessageHttpPlanUnit::set_source(::google::protobuf::int32 value) {
  
  source_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanUnit.source)
}

// string quotationInfo = 30;
inline void CMessageHttpPlanUnit::clear_quotationinfo() {
  quotationinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpPlanUnit::quotationinfo() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanUnit.quotationInfo)
  return quotationinfo_.GetNoArena();
}
inline void CMessageHttpPlanUnit::set_quotationinfo(const ::std::string& value) {
  
  quotationinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanUnit.quotationInfo)
}
#if LANG_CXX11
inline void CMessageHttpPlanUnit::set_quotationinfo(::std::string&& value) {
  
  quotationinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpPlanUnit.quotationInfo)
}
#endif
inline void CMessageHttpPlanUnit::set_quotationinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  quotationinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpPlanUnit.quotationInfo)
}
inline void CMessageHttpPlanUnit::set_quotationinfo(const char* value, size_t size) {
  
  quotationinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpPlanUnit.quotationInfo)
}
inline ::std::string* CMessageHttpPlanUnit::mutable_quotationinfo() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpPlanUnit.quotationInfo)
  return quotationinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpPlanUnit::release_quotationinfo() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpPlanUnit.quotationInfo)
  
  return quotationinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpPlanUnit::set_allocated_quotationinfo(::std::string* quotationinfo) {
  if (quotationinfo != NULL) {
    
  } else {
    
  }
  quotationinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), quotationinfo);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpPlanUnit.quotationInfo)
}

// int32 isPrivate = 31;
inline void CMessageHttpPlanUnit::clear_isprivate() {
  isprivate_ = 0;
}
inline ::google::protobuf::int32 CMessageHttpPlanUnit::isprivate() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanUnit.isPrivate)
  return isprivate_;
}
inline void CMessageHttpPlanUnit::set_isprivate(::google::protobuf::int32 value) {
  
  isprivate_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanUnit.isPrivate)
}

// -------------------------------------------------------------------

// CMessageHttpPlanList

// repeated .d5.CMessageHttpPlanUnit rows = 1;
inline int CMessageHttpPlanList::rows_size() const {
  return rows_.size();
}
inline void CMessageHttpPlanList::clear_rows() {
  rows_.Clear();
}
inline ::d5::CMessageHttpPlanUnit* CMessageHttpPlanList::mutable_rows(int index) {
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpPlanList.rows)
  return rows_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::d5::CMessageHttpPlanUnit >*
CMessageHttpPlanList::mutable_rows() {
  // @@protoc_insertion_point(field_mutable_list:d5.CMessageHttpPlanList.rows)
  return &rows_;
}
inline const ::d5::CMessageHttpPlanUnit& CMessageHttpPlanList::rows(int index) const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanList.rows)
  return rows_.Get(index);
}
inline ::d5::CMessageHttpPlanUnit* CMessageHttpPlanList::add_rows() {
  // @@protoc_insertion_point(field_add:d5.CMessageHttpPlanList.rows)
  return rows_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::d5::CMessageHttpPlanUnit >&
CMessageHttpPlanList::rows() const {
  // @@protoc_insertion_point(field_list:d5.CMessageHttpPlanList.rows)
  return rows_;
}

// int32 total = 2;
inline void CMessageHttpPlanList::clear_total() {
  total_ = 0;
}
inline ::google::protobuf::int32 CMessageHttpPlanList::total() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanList.total)
  return total_;
}
inline void CMessageHttpPlanList::set_total(::google::protobuf::int32 value) {
  
  total_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanList.total)
}

// -------------------------------------------------------------------

// CMessagePlanListResponse

// int32 type = 1;
inline void CMessagePlanListResponse::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessagePlanListResponse::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessagePlanListResponse.type)
  return type_;
}
inline void CMessagePlanListResponse::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessagePlanListResponse.type)
}

// string uuid = 2;
inline void CMessagePlanListResponse::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessagePlanListResponse::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessagePlanListResponse.uuid)
  return uuid_.GetNoArena();
}
inline void CMessagePlanListResponse::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessagePlanListResponse.uuid)
}
#if LANG_CXX11
inline void CMessagePlanListResponse::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessagePlanListResponse.uuid)
}
#endif
inline void CMessagePlanListResponse::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessagePlanListResponse.uuid)
}
inline void CMessagePlanListResponse::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessagePlanListResponse.uuid)
}
inline ::std::string* CMessagePlanListResponse::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessagePlanListResponse.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessagePlanListResponse::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessagePlanListResponse.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessagePlanListResponse::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessagePlanListResponse.uuid)
}

// int32 state = 3;
inline void CMessagePlanListResponse::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 CMessagePlanListResponse::state() const {
  // @@protoc_insertion_point(field_get:d5.CMessagePlanListResponse.state)
  return state_;
}
inline void CMessagePlanListResponse::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessagePlanListResponse.state)
}

// .d5.CMessageHttpPlanList list = 4;
inline bool CMessagePlanListResponse::has_list() const {
  return this != internal_default_instance() && list_ != NULL;
}
inline void CMessagePlanListResponse::clear_list() {
  if (GetArenaNoVirtual() == NULL && list_ != NULL) {
    delete list_;
  }
  list_ = NULL;
}
inline const ::d5::CMessageHttpPlanList& CMessagePlanListResponse::list() const {
  const ::d5::CMessageHttpPlanList* p = list_;
  // @@protoc_insertion_point(field_get:d5.CMessagePlanListResponse.list)
  return p != NULL ? *p : *reinterpret_cast<const ::d5::CMessageHttpPlanList*>(
      &::d5::_CMessageHttpPlanList_default_instance_);
}
inline ::d5::CMessageHttpPlanList* CMessagePlanListResponse::release_list() {
  // @@protoc_insertion_point(field_release:d5.CMessagePlanListResponse.list)
  
  ::d5::CMessageHttpPlanList* temp = list_;
  list_ = NULL;
  return temp;
}
inline ::d5::CMessageHttpPlanList* CMessagePlanListResponse::mutable_list() {
  
  if (list_ == NULL) {
    list_ = ::google::protobuf::Arena::Create< ::d5::CMessageHttpPlanList >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:d5.CMessagePlanListResponse.list)
  return list_;
}
inline void CMessagePlanListResponse::set_allocated_list(::d5::CMessageHttpPlanList* list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete list_;
  }
  if (list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, list, submessage_arena);
    }
    
  } else {
    
  }
  list_ = list;
  // @@protoc_insertion_point(field_set_allocated:d5.CMessagePlanListResponse.list)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace d5

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_5fplan_5flist_2eproto_INCLUDED
