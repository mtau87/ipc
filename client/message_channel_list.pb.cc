// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_channel_list.proto

#include "message_channel_list.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace d5 {
class CMessageChannelListRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageChannelListRequest>
      _instance;
} _CMessageChannelListRequest_default_instance_;
class CMessageChannelListResponse_CMessageHttpChannelUnitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageChannelListResponse_CMessageHttpChannelUnit>
      _instance;
} _CMessageChannelListResponse_CMessageHttpChannelUnit_default_instance_;
class CMessageChannelListResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageChannelListResponse>
      _instance;
} _CMessageChannelListResponse_default_instance_;
}  // namespace d5
namespace protobuf_message_5fchannel_5flist_2eproto {
void InitDefaultsCMessageChannelListRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::_CMessageChannelListRequest_default_instance_;
    new (ptr) ::d5::CMessageChannelListRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageChannelListRequest::InitAsDefaultInstance();
}

void InitDefaultsCMessageChannelListRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageChannelListRequestImpl);
}

void InitDefaultsCMessageChannelListResponse_CMessageHttpChannelUnitImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::_CMessageChannelListResponse_CMessageHttpChannelUnit_default_instance_;
    new (ptr) ::d5::CMessageChannelListResponse_CMessageHttpChannelUnit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageChannelListResponse_CMessageHttpChannelUnit::InitAsDefaultInstance();
}

void InitDefaultsCMessageChannelListResponse_CMessageHttpChannelUnit() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageChannelListResponse_CMessageHttpChannelUnitImpl);
}

void InitDefaultsCMessageChannelListResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_5fchannel_5flist_2eproto::InitDefaultsCMessageChannelListResponse_CMessageHttpChannelUnit();
  {
    void* ptr = &::d5::_CMessageChannelListResponse_default_instance_;
    new (ptr) ::d5::CMessageChannelListResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageChannelListResponse::InitAsDefaultInstance();
}

void InitDefaultsCMessageChannelListResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageChannelListResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageChannelListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageChannelListRequest, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageChannelListRequest, uuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageChannelListResponse_CMessageHttpChannelUnit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageChannelListResponse_CMessageHttpChannelUnit, companyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageChannelListResponse_CMessageHttpChannelUnit, companyname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageChannelListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageChannelListResponse, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageChannelListResponse, uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageChannelListResponse, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageChannelListResponse, list_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::d5::CMessageChannelListRequest)},
  { 7, -1, sizeof(::d5::CMessageChannelListResponse_CMessageHttpChannelUnit)},
  { 14, -1, sizeof(::d5::CMessageChannelListResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageChannelListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageChannelListResponse_CMessageHttpChannelUnit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageChannelListResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "message_channel_list.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032message_channel_list.proto\022\002d5\"8\n\032CMes"
      "sageChannelListRequest\022\014\n\004type\030\001 \001(\005\022\014\n\004"
      "uuid\030\002 \001(\t\"\322\001\n\033CMessageChannelListRespon"
      "se\022\014\n\004type\030\001 \001(\005\022\014\n\004uuid\030\002 \001(\t\022\r\n\005state\030"
      "\003 \001(\005\022E\n\004list\030\004 \003(\01327.d5.CMessageChannel"
      "ListResponse.CMessageHttpChannelUnit\032A\n\027"
      "CMessageHttpChannelUnit\022\021\n\tcompanyId\030\001 \001"
      "(\005\022\023\n\013companyName\030\002 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 311);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message_channel_list.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_message_5fchannel_5flist_2eproto
namespace d5 {

// ===================================================================

void CMessageChannelListRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageChannelListRequest::kTypeFieldNumber;
const int CMessageChannelListRequest::kUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageChannelListRequest::CMessageChannelListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fchannel_5flist_2eproto::InitDefaultsCMessageChannelListRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageChannelListRequest)
}
CMessageChannelListRequest::CMessageChannelListRequest(const CMessageChannelListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:d5.CMessageChannelListRequest)
}

void CMessageChannelListRequest::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

CMessageChannelListRequest::~CMessageChannelListRequest() {
  // @@protoc_insertion_point(destructor:d5.CMessageChannelListRequest)
  SharedDtor();
}

void CMessageChannelListRequest::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMessageChannelListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageChannelListRequest::descriptor() {
  ::protobuf_message_5fchannel_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fchannel_5flist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageChannelListRequest& CMessageChannelListRequest::default_instance() {
  ::protobuf_message_5fchannel_5flist_2eproto::InitDefaultsCMessageChannelListRequest();
  return *internal_default_instance();
}


void CMessageChannelListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageChannelListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool CMessageChannelListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageChannelListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageChannelListRequest.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageChannelListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageChannelListRequest)
  return false;
#undef DO_
}

void CMessageChannelListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageChannelListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageChannelListRequest.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uuid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageChannelListRequest)
}

::google::protobuf::uint8* CMessageChannelListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageChannelListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageChannelListRequest.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uuid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageChannelListRequest)
  return target;
}

size_t CMessageChannelListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageChannelListRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uuid = 2;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageChannelListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageChannelListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageChannelListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageChannelListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageChannelListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageChannelListRequest)
    MergeFrom(*source);
  }
}

void CMessageChannelListRequest::MergeFrom(const CMessageChannelListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageChannelListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void CMessageChannelListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageChannelListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageChannelListRequest::CopyFrom(const CMessageChannelListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageChannelListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageChannelListRequest::IsInitialized() const {
  return true;
}

void CMessageChannelListRequest::Swap(CMessageChannelListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageChannelListRequest::InternalSwap(CMessageChannelListRequest* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageChannelListRequest::GetMetadata() const {
  protobuf_message_5fchannel_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fchannel_5flist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMessageChannelListResponse_CMessageHttpChannelUnit::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageChannelListResponse_CMessageHttpChannelUnit::kCompanyIdFieldNumber;
const int CMessageChannelListResponse_CMessageHttpChannelUnit::kCompanyNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageChannelListResponse_CMessageHttpChannelUnit::CMessageChannelListResponse_CMessageHttpChannelUnit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fchannel_5flist_2eproto::InitDefaultsCMessageChannelListResponse_CMessageHttpChannelUnit();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageChannelListResponse.CMessageHttpChannelUnit)
}
CMessageChannelListResponse_CMessageHttpChannelUnit::CMessageChannelListResponse_CMessageHttpChannelUnit(const CMessageChannelListResponse_CMessageHttpChannelUnit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  companyname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.companyname().size() > 0) {
    companyname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.companyname_);
  }
  companyid_ = from.companyid_;
  // @@protoc_insertion_point(copy_constructor:d5.CMessageChannelListResponse.CMessageHttpChannelUnit)
}

void CMessageChannelListResponse_CMessageHttpChannelUnit::SharedCtor() {
  companyname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  companyid_ = 0;
  _cached_size_ = 0;
}

CMessageChannelListResponse_CMessageHttpChannelUnit::~CMessageChannelListResponse_CMessageHttpChannelUnit() {
  // @@protoc_insertion_point(destructor:d5.CMessageChannelListResponse.CMessageHttpChannelUnit)
  SharedDtor();
}

void CMessageChannelListResponse_CMessageHttpChannelUnit::SharedDtor() {
  companyname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMessageChannelListResponse_CMessageHttpChannelUnit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageChannelListResponse_CMessageHttpChannelUnit::descriptor() {
  ::protobuf_message_5fchannel_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fchannel_5flist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageChannelListResponse_CMessageHttpChannelUnit& CMessageChannelListResponse_CMessageHttpChannelUnit::default_instance() {
  ::protobuf_message_5fchannel_5flist_2eproto::InitDefaultsCMessageChannelListResponse_CMessageHttpChannelUnit();
  return *internal_default_instance();
}


void CMessageChannelListResponse_CMessageHttpChannelUnit::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageChannelListResponse.CMessageHttpChannelUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  companyname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  companyid_ = 0;
  _internal_metadata_.Clear();
}

bool CMessageChannelListResponse_CMessageHttpChannelUnit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageChannelListResponse.CMessageHttpChannelUnit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 companyId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &companyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string companyName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_companyname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->companyname().data(), static_cast<int>(this->companyname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageChannelListResponse.CMessageHttpChannelUnit.companyName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageChannelListResponse.CMessageHttpChannelUnit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageChannelListResponse.CMessageHttpChannelUnit)
  return false;
#undef DO_
}

void CMessageChannelListResponse_CMessageHttpChannelUnit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageChannelListResponse.CMessageHttpChannelUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 companyId = 1;
  if (this->companyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->companyid(), output);
  }

  // string companyName = 2;
  if (this->companyname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->companyname().data(), static_cast<int>(this->companyname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageChannelListResponse.CMessageHttpChannelUnit.companyName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->companyname(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageChannelListResponse.CMessageHttpChannelUnit)
}

::google::protobuf::uint8* CMessageChannelListResponse_CMessageHttpChannelUnit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageChannelListResponse.CMessageHttpChannelUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 companyId = 1;
  if (this->companyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->companyid(), target);
  }

  // string companyName = 2;
  if (this->companyname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->companyname().data(), static_cast<int>(this->companyname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageChannelListResponse.CMessageHttpChannelUnit.companyName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->companyname(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageChannelListResponse.CMessageHttpChannelUnit)
  return target;
}

size_t CMessageChannelListResponse_CMessageHttpChannelUnit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageChannelListResponse.CMessageHttpChannelUnit)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string companyName = 2;
  if (this->companyname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->companyname());
  }

  // int32 companyId = 1;
  if (this->companyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->companyid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageChannelListResponse_CMessageHttpChannelUnit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageChannelListResponse.CMessageHttpChannelUnit)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageChannelListResponse_CMessageHttpChannelUnit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageChannelListResponse_CMessageHttpChannelUnit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageChannelListResponse.CMessageHttpChannelUnit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageChannelListResponse.CMessageHttpChannelUnit)
    MergeFrom(*source);
  }
}

void CMessageChannelListResponse_CMessageHttpChannelUnit::MergeFrom(const CMessageChannelListResponse_CMessageHttpChannelUnit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageChannelListResponse.CMessageHttpChannelUnit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.companyname().size() > 0) {

    companyname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.companyname_);
  }
  if (from.companyid() != 0) {
    set_companyid(from.companyid());
  }
}

void CMessageChannelListResponse_CMessageHttpChannelUnit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageChannelListResponse.CMessageHttpChannelUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageChannelListResponse_CMessageHttpChannelUnit::CopyFrom(const CMessageChannelListResponse_CMessageHttpChannelUnit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageChannelListResponse.CMessageHttpChannelUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageChannelListResponse_CMessageHttpChannelUnit::IsInitialized() const {
  return true;
}

void CMessageChannelListResponse_CMessageHttpChannelUnit::Swap(CMessageChannelListResponse_CMessageHttpChannelUnit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageChannelListResponse_CMessageHttpChannelUnit::InternalSwap(CMessageChannelListResponse_CMessageHttpChannelUnit* other) {
  using std::swap;
  companyname_.Swap(&other->companyname_);
  swap(companyid_, other->companyid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageChannelListResponse_CMessageHttpChannelUnit::GetMetadata() const {
  protobuf_message_5fchannel_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fchannel_5flist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMessageChannelListResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageChannelListResponse::kTypeFieldNumber;
const int CMessageChannelListResponse::kUuidFieldNumber;
const int CMessageChannelListResponse::kStateFieldNumber;
const int CMessageChannelListResponse::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageChannelListResponse::CMessageChannelListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fchannel_5flist_2eproto::InitDefaultsCMessageChannelListResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageChannelListResponse)
}
CMessageChannelListResponse::CMessageChannelListResponse(const CMessageChannelListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      list_(from.list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&type_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:d5.CMessageChannelListResponse)
}

void CMessageChannelListResponse::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&type_)) + sizeof(state_));
  _cached_size_ = 0;
}

CMessageChannelListResponse::~CMessageChannelListResponse() {
  // @@protoc_insertion_point(destructor:d5.CMessageChannelListResponse)
  SharedDtor();
}

void CMessageChannelListResponse::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMessageChannelListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageChannelListResponse::descriptor() {
  ::protobuf_message_5fchannel_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fchannel_5flist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageChannelListResponse& CMessageChannelListResponse::default_instance() {
  ::protobuf_message_5fchannel_5flist_2eproto::InitDefaultsCMessageChannelListResponse();
  return *internal_default_instance();
}


void CMessageChannelListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageChannelListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&type_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool CMessageChannelListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageChannelListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageChannelListResponse.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .d5.CMessageChannelListResponse.CMessageHttpChannelUnit list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageChannelListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageChannelListResponse)
  return false;
#undef DO_
}

void CMessageChannelListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageChannelListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageChannelListResponse.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uuid(), output);
  }

  // int32 state = 3;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->state(), output);
  }

  // repeated .d5.CMessageChannelListResponse.CMessageHttpChannelUnit list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->list(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageChannelListResponse)
}

::google::protobuf::uint8* CMessageChannelListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageChannelListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageChannelListResponse.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uuid(), target);
  }

  // int32 state = 3;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->state(), target);
  }

  // repeated .d5.CMessageChannelListResponse.CMessageHttpChannelUnit list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageChannelListResponse)
  return target;
}

size_t CMessageChannelListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageChannelListResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .d5.CMessageChannelListResponse.CMessageHttpChannelUnit list = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 state = 3;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageChannelListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageChannelListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageChannelListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageChannelListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageChannelListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageChannelListResponse)
    MergeFrom(*source);
  }
}

void CMessageChannelListResponse::MergeFrom(const CMessageChannelListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageChannelListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void CMessageChannelListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageChannelListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageChannelListResponse::CopyFrom(const CMessageChannelListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageChannelListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageChannelListResponse::IsInitialized() const {
  return true;
}

void CMessageChannelListResponse::Swap(CMessageChannelListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageChannelListResponse::InternalSwap(CMessageChannelListResponse* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  uuid_.Swap(&other->uuid_);
  swap(type_, other->type_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageChannelListResponse::GetMetadata() const {
  protobuf_message_5fchannel_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fchannel_5flist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace d5
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageChannelListRequest* Arena::Create< ::d5::CMessageChannelListRequest >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageChannelListRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageChannelListResponse_CMessageHttpChannelUnit* Arena::Create< ::d5::CMessageChannelListResponse_CMessageHttpChannelUnit >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageChannelListResponse_CMessageHttpChannelUnit >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageChannelListResponse* Arena::Create< ::d5::CMessageChannelListResponse >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageChannelListResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
