// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_plan_design_template.proto

#ifndef PROTOBUF_message_5fplan_5fdesign_5ftemplate_2eproto_INCLUDED
#define PROTOBUF_message_5fplan_5fdesign_5ftemplate_2eproto_INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "db2.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_message_5fplan_5fdesign_5ftemplate_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsCMessagePlanDesignTemplateRequestImpl();
void InitDefaultsCMessagePlanDesignTemplateRequest();
void InitDefaultsCMessagePlanDesignTemplateResponseImpl();
void InitDefaultsCMessagePlanDesignTemplateResponse();
void InitDefaultsCMessageAddPlanDesignTemplateRequestImpl();
void InitDefaultsCMessageAddPlanDesignTemplateRequest();
void InitDefaultsCMessageAddPlanDesignTemplateResponseImpl();
void InitDefaultsCMessageAddPlanDesignTemplateResponse();
inline void InitDefaults() {
  InitDefaultsCMessagePlanDesignTemplateRequest();
  InitDefaultsCMessagePlanDesignTemplateResponse();
  InitDefaultsCMessageAddPlanDesignTemplateRequest();
  InitDefaultsCMessageAddPlanDesignTemplateResponse();
}
}  // namespace protobuf_message_5fplan_5fdesign_5ftemplate_2eproto
namespace d5 {
namespace db2 {
class CMessageAddPlanDesignTemplateRequest;
class CMessageAddPlanDesignTemplateRequestDefaultTypeInternal;
extern CMessageAddPlanDesignTemplateRequestDefaultTypeInternal _CMessageAddPlanDesignTemplateRequest_default_instance_;
class CMessageAddPlanDesignTemplateResponse;
class CMessageAddPlanDesignTemplateResponseDefaultTypeInternal;
extern CMessageAddPlanDesignTemplateResponseDefaultTypeInternal _CMessageAddPlanDesignTemplateResponse_default_instance_;
class CMessagePlanDesignTemplateRequest;
class CMessagePlanDesignTemplateRequestDefaultTypeInternal;
extern CMessagePlanDesignTemplateRequestDefaultTypeInternal _CMessagePlanDesignTemplateRequest_default_instance_;
class CMessagePlanDesignTemplateResponse;
class CMessagePlanDesignTemplateResponseDefaultTypeInternal;
extern CMessagePlanDesignTemplateResponseDefaultTypeInternal _CMessagePlanDesignTemplateResponse_default_instance_;
}  // namespace db2
}  // namespace d5
namespace google {
namespace protobuf {
template<> ::d5::db2::CMessageAddPlanDesignTemplateRequest* Arena::Create< ::d5::db2::CMessageAddPlanDesignTemplateRequest>(Arena*);
template<> ::d5::db2::CMessageAddPlanDesignTemplateResponse* Arena::Create< ::d5::db2::CMessageAddPlanDesignTemplateResponse>(Arena*);
template<> ::d5::db2::CMessagePlanDesignTemplateRequest* Arena::Create< ::d5::db2::CMessagePlanDesignTemplateRequest>(Arena*);
template<> ::d5::db2::CMessagePlanDesignTemplateResponse* Arena::Create< ::d5::db2::CMessagePlanDesignTemplateResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace d5 {
namespace db2 {

// ===================================================================

class CMessagePlanDesignTemplateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.db2.CMessagePlanDesignTemplateRequest) */ {
 public:
  CMessagePlanDesignTemplateRequest();
  virtual ~CMessagePlanDesignTemplateRequest();

  CMessagePlanDesignTemplateRequest(const CMessagePlanDesignTemplateRequest& from);

  inline CMessagePlanDesignTemplateRequest& operator=(const CMessagePlanDesignTemplateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessagePlanDesignTemplateRequest(CMessagePlanDesignTemplateRequest&& from) noexcept
    : CMessagePlanDesignTemplateRequest() {
    *this = ::std::move(from);
  }

  inline CMessagePlanDesignTemplateRequest& operator=(CMessagePlanDesignTemplateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlanDesignTemplateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessagePlanDesignTemplateRequest* internal_default_instance() {
    return reinterpret_cast<const CMessagePlanDesignTemplateRequest*>(
               &_CMessagePlanDesignTemplateRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CMessagePlanDesignTemplateRequest* other);
  friend void swap(CMessagePlanDesignTemplateRequest& a, CMessagePlanDesignTemplateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessagePlanDesignTemplateRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessagePlanDesignTemplateRequest>(NULL);
  }

  CMessagePlanDesignTemplateRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessagePlanDesignTemplateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessagePlanDesignTemplateRequest& from);
  void MergeFrom(const CMessagePlanDesignTemplateRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessagePlanDesignTemplateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // string id = 3;
  void clear_id();
  static const int kIdFieldNumber = 3;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.db2.CMessagePlanDesignTemplateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fplan_5fdesign_5ftemplate_2eproto::TableStruct;
  friend void ::protobuf_message_5fplan_5fdesign_5ftemplate_2eproto::InitDefaultsCMessagePlanDesignTemplateRequestImpl();
};
// -------------------------------------------------------------------

class CMessagePlanDesignTemplateResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.db2.CMessagePlanDesignTemplateResponse) */ {
 public:
  CMessagePlanDesignTemplateResponse();
  virtual ~CMessagePlanDesignTemplateResponse();

  CMessagePlanDesignTemplateResponse(const CMessagePlanDesignTemplateResponse& from);

  inline CMessagePlanDesignTemplateResponse& operator=(const CMessagePlanDesignTemplateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessagePlanDesignTemplateResponse(CMessagePlanDesignTemplateResponse&& from) noexcept
    : CMessagePlanDesignTemplateResponse() {
    *this = ::std::move(from);
  }

  inline CMessagePlanDesignTemplateResponse& operator=(CMessagePlanDesignTemplateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlanDesignTemplateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessagePlanDesignTemplateResponse* internal_default_instance() {
    return reinterpret_cast<const CMessagePlanDesignTemplateResponse*>(
               &_CMessagePlanDesignTemplateResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CMessagePlanDesignTemplateResponse* other);
  friend void swap(CMessagePlanDesignTemplateResponse& a, CMessagePlanDesignTemplateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessagePlanDesignTemplateResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessagePlanDesignTemplateResponse>(NULL);
  }

  CMessagePlanDesignTemplateResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessagePlanDesignTemplateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessagePlanDesignTemplateResponse& from);
  void MergeFrom(const CMessagePlanDesignTemplateResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessagePlanDesignTemplateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // .d5.db2.plan_desgin_template_statu data = 4;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 4;
  const ::d5::db2::plan_desgin_template_statu& data() const;
  ::d5::db2::plan_desgin_template_statu* release_data();
  ::d5::db2::plan_desgin_template_statu* mutable_data();
  void set_allocated_data(::d5::db2::plan_desgin_template_statu* data);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 state = 3;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.db2.CMessagePlanDesignTemplateResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::d5::db2::plan_desgin_template_statu* data_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 state_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fplan_5fdesign_5ftemplate_2eproto::TableStruct;
  friend void ::protobuf_message_5fplan_5fdesign_5ftemplate_2eproto::InitDefaultsCMessagePlanDesignTemplateResponseImpl();
};
// -------------------------------------------------------------------

class CMessageAddPlanDesignTemplateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.db2.CMessageAddPlanDesignTemplateRequest) */ {
 public:
  CMessageAddPlanDesignTemplateRequest();
  virtual ~CMessageAddPlanDesignTemplateRequest();

  CMessageAddPlanDesignTemplateRequest(const CMessageAddPlanDesignTemplateRequest& from);

  inline CMessageAddPlanDesignTemplateRequest& operator=(const CMessageAddPlanDesignTemplateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageAddPlanDesignTemplateRequest(CMessageAddPlanDesignTemplateRequest&& from) noexcept
    : CMessageAddPlanDesignTemplateRequest() {
    *this = ::std::move(from);
  }

  inline CMessageAddPlanDesignTemplateRequest& operator=(CMessageAddPlanDesignTemplateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAddPlanDesignTemplateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageAddPlanDesignTemplateRequest* internal_default_instance() {
    return reinterpret_cast<const CMessageAddPlanDesignTemplateRequest*>(
               &_CMessageAddPlanDesignTemplateRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CMessageAddPlanDesignTemplateRequest* other);
  friend void swap(CMessageAddPlanDesignTemplateRequest& a, CMessageAddPlanDesignTemplateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageAddPlanDesignTemplateRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageAddPlanDesignTemplateRequest>(NULL);
  }

  CMessageAddPlanDesignTemplateRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageAddPlanDesignTemplateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageAddPlanDesignTemplateRequest& from);
  void MergeFrom(const CMessageAddPlanDesignTemplateRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageAddPlanDesignTemplateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // .d5.db2.plan_desgin_template_statu data = 3;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::d5::db2::plan_desgin_template_statu& data() const;
  ::d5::db2::plan_desgin_template_statu* release_data();
  ::d5::db2::plan_desgin_template_statu* mutable_data();
  void set_allocated_data(::d5::db2::plan_desgin_template_statu* data);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.db2.CMessageAddPlanDesignTemplateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::d5::db2::plan_desgin_template_statu* data_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fplan_5fdesign_5ftemplate_2eproto::TableStruct;
  friend void ::protobuf_message_5fplan_5fdesign_5ftemplate_2eproto::InitDefaultsCMessageAddPlanDesignTemplateRequestImpl();
};
// -------------------------------------------------------------------

class CMessageAddPlanDesignTemplateResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.db2.CMessageAddPlanDesignTemplateResponse) */ {
 public:
  CMessageAddPlanDesignTemplateResponse();
  virtual ~CMessageAddPlanDesignTemplateResponse();

  CMessageAddPlanDesignTemplateResponse(const CMessageAddPlanDesignTemplateResponse& from);

  inline CMessageAddPlanDesignTemplateResponse& operator=(const CMessageAddPlanDesignTemplateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageAddPlanDesignTemplateResponse(CMessageAddPlanDesignTemplateResponse&& from) noexcept
    : CMessageAddPlanDesignTemplateResponse() {
    *this = ::std::move(from);
  }

  inline CMessageAddPlanDesignTemplateResponse& operator=(CMessageAddPlanDesignTemplateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAddPlanDesignTemplateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageAddPlanDesignTemplateResponse* internal_default_instance() {
    return reinterpret_cast<const CMessageAddPlanDesignTemplateResponse*>(
               &_CMessageAddPlanDesignTemplateResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CMessageAddPlanDesignTemplateResponse* other);
  friend void swap(CMessageAddPlanDesignTemplateResponse& a, CMessageAddPlanDesignTemplateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageAddPlanDesignTemplateResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageAddPlanDesignTemplateResponse>(NULL);
  }

  CMessageAddPlanDesignTemplateResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageAddPlanDesignTemplateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageAddPlanDesignTemplateResponse& from);
  void MergeFrom(const CMessageAddPlanDesignTemplateResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageAddPlanDesignTemplateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 state = 3;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.db2.CMessageAddPlanDesignTemplateResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 state_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fplan_5fdesign_5ftemplate_2eproto::TableStruct;
  friend void ::protobuf_message_5fplan_5fdesign_5ftemplate_2eproto::InitDefaultsCMessageAddPlanDesignTemplateResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMessagePlanDesignTemplateRequest

// int32 type = 1;
inline void CMessagePlanDesignTemplateRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessagePlanDesignTemplateRequest::type() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessagePlanDesignTemplateRequest.type)
  return type_;
}
inline void CMessagePlanDesignTemplateRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessagePlanDesignTemplateRequest.type)
}

// string uuid = 2;
inline void CMessagePlanDesignTemplateRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessagePlanDesignTemplateRequest::uuid() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessagePlanDesignTemplateRequest.uuid)
  return uuid_.GetNoArena();
}
inline void CMessagePlanDesignTemplateRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.db2.CMessagePlanDesignTemplateRequest.uuid)
}
#if LANG_CXX11
inline void CMessagePlanDesignTemplateRequest::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.db2.CMessagePlanDesignTemplateRequest.uuid)
}
#endif
inline void CMessagePlanDesignTemplateRequest::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.db2.CMessagePlanDesignTemplateRequest.uuid)
}
inline void CMessagePlanDesignTemplateRequest::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.db2.CMessagePlanDesignTemplateRequest.uuid)
}
inline ::std::string* CMessagePlanDesignTemplateRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessagePlanDesignTemplateRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessagePlanDesignTemplateRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.db2.CMessagePlanDesignTemplateRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessagePlanDesignTemplateRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.db2.CMessagePlanDesignTemplateRequest.uuid)
}

// string id = 3;
inline void CMessagePlanDesignTemplateRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessagePlanDesignTemplateRequest::id() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessagePlanDesignTemplateRequest.id)
  return id_.GetNoArena();
}
inline void CMessagePlanDesignTemplateRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.db2.CMessagePlanDesignTemplateRequest.id)
}
#if LANG_CXX11
inline void CMessagePlanDesignTemplateRequest::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.db2.CMessagePlanDesignTemplateRequest.id)
}
#endif
inline void CMessagePlanDesignTemplateRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.db2.CMessagePlanDesignTemplateRequest.id)
}
inline void CMessagePlanDesignTemplateRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.db2.CMessagePlanDesignTemplateRequest.id)
}
inline ::std::string* CMessagePlanDesignTemplateRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessagePlanDesignTemplateRequest.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessagePlanDesignTemplateRequest::release_id() {
  // @@protoc_insertion_point(field_release:d5.db2.CMessagePlanDesignTemplateRequest.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessagePlanDesignTemplateRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:d5.db2.CMessagePlanDesignTemplateRequest.id)
}

// -------------------------------------------------------------------

// CMessagePlanDesignTemplateResponse

// int32 type = 1;
inline void CMessagePlanDesignTemplateResponse::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessagePlanDesignTemplateResponse::type() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessagePlanDesignTemplateResponse.type)
  return type_;
}
inline void CMessagePlanDesignTemplateResponse::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessagePlanDesignTemplateResponse.type)
}

// string uuid = 2;
inline void CMessagePlanDesignTemplateResponse::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessagePlanDesignTemplateResponse::uuid() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessagePlanDesignTemplateResponse.uuid)
  return uuid_.GetNoArena();
}
inline void CMessagePlanDesignTemplateResponse::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.db2.CMessagePlanDesignTemplateResponse.uuid)
}
#if LANG_CXX11
inline void CMessagePlanDesignTemplateResponse::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.db2.CMessagePlanDesignTemplateResponse.uuid)
}
#endif
inline void CMessagePlanDesignTemplateResponse::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.db2.CMessagePlanDesignTemplateResponse.uuid)
}
inline void CMessagePlanDesignTemplateResponse::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.db2.CMessagePlanDesignTemplateResponse.uuid)
}
inline ::std::string* CMessagePlanDesignTemplateResponse::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessagePlanDesignTemplateResponse.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessagePlanDesignTemplateResponse::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.db2.CMessagePlanDesignTemplateResponse.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessagePlanDesignTemplateResponse::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.db2.CMessagePlanDesignTemplateResponse.uuid)
}

// int32 state = 3;
inline void CMessagePlanDesignTemplateResponse::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 CMessagePlanDesignTemplateResponse::state() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessagePlanDesignTemplateResponse.state)
  return state_;
}
inline void CMessagePlanDesignTemplateResponse::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessagePlanDesignTemplateResponse.state)
}

// .d5.db2.plan_desgin_template_statu data = 4;
inline bool CMessagePlanDesignTemplateResponse::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline const ::d5::db2::plan_desgin_template_statu& CMessagePlanDesignTemplateResponse::data() const {
  const ::d5::db2::plan_desgin_template_statu* p = data_;
  // @@protoc_insertion_point(field_get:d5.db2.CMessagePlanDesignTemplateResponse.data)
  return p != NULL ? *p : *reinterpret_cast<const ::d5::db2::plan_desgin_template_statu*>(
      &::d5::db2::_plan_desgin_template_statu_default_instance_);
}
inline ::d5::db2::plan_desgin_template_statu* CMessagePlanDesignTemplateResponse::release_data() {
  // @@protoc_insertion_point(field_release:d5.db2.CMessagePlanDesignTemplateResponse.data)
  
  ::d5::db2::plan_desgin_template_statu* temp = data_;
  data_ = NULL;
  return temp;
}
inline ::d5::db2::plan_desgin_template_statu* CMessagePlanDesignTemplateResponse::mutable_data() {
  
  if (data_ == NULL) {
    data_ = ::google::protobuf::Arena::Create< ::d5::db2::plan_desgin_template_statu >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessagePlanDesignTemplateResponse.data)
  return data_;
}
inline void CMessagePlanDesignTemplateResponse::set_allocated_data(::d5::db2::plan_desgin_template_statu* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_);
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:d5.db2.CMessagePlanDesignTemplateResponse.data)
}

// -------------------------------------------------------------------

// CMessageAddPlanDesignTemplateRequest

// int32 type = 1;
inline void CMessageAddPlanDesignTemplateRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageAddPlanDesignTemplateRequest::type() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAddPlanDesignTemplateRequest.type)
  return type_;
}
inline void CMessageAddPlanDesignTemplateRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAddPlanDesignTemplateRequest.type)
}

// string uuid = 2;
inline void CMessageAddPlanDesignTemplateRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageAddPlanDesignTemplateRequest::uuid() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAddPlanDesignTemplateRequest.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageAddPlanDesignTemplateRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAddPlanDesignTemplateRequest.uuid)
}
#if LANG_CXX11
inline void CMessageAddPlanDesignTemplateRequest::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.db2.CMessageAddPlanDesignTemplateRequest.uuid)
}
#endif
inline void CMessageAddPlanDesignTemplateRequest::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.db2.CMessageAddPlanDesignTemplateRequest.uuid)
}
inline void CMessageAddPlanDesignTemplateRequest::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.db2.CMessageAddPlanDesignTemplateRequest.uuid)
}
inline ::std::string* CMessageAddPlanDesignTemplateRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessageAddPlanDesignTemplateRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageAddPlanDesignTemplateRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.db2.CMessageAddPlanDesignTemplateRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageAddPlanDesignTemplateRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.db2.CMessageAddPlanDesignTemplateRequest.uuid)
}

// .d5.db2.plan_desgin_template_statu data = 3;
inline bool CMessageAddPlanDesignTemplateRequest::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline const ::d5::db2::plan_desgin_template_statu& CMessageAddPlanDesignTemplateRequest::data() const {
  const ::d5::db2::plan_desgin_template_statu* p = data_;
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAddPlanDesignTemplateRequest.data)
  return p != NULL ? *p : *reinterpret_cast<const ::d5::db2::plan_desgin_template_statu*>(
      &::d5::db2::_plan_desgin_template_statu_default_instance_);
}
inline ::d5::db2::plan_desgin_template_statu* CMessageAddPlanDesignTemplateRequest::release_data() {
  // @@protoc_insertion_point(field_release:d5.db2.CMessageAddPlanDesignTemplateRequest.data)
  
  ::d5::db2::plan_desgin_template_statu* temp = data_;
  data_ = NULL;
  return temp;
}
inline ::d5::db2::plan_desgin_template_statu* CMessageAddPlanDesignTemplateRequest::mutable_data() {
  
  if (data_ == NULL) {
    data_ = ::google::protobuf::Arena::Create< ::d5::db2::plan_desgin_template_statu >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessageAddPlanDesignTemplateRequest.data)
  return data_;
}
inline void CMessageAddPlanDesignTemplateRequest::set_allocated_data(::d5::db2::plan_desgin_template_statu* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_);
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:d5.db2.CMessageAddPlanDesignTemplateRequest.data)
}

// -------------------------------------------------------------------

// CMessageAddPlanDesignTemplateResponse

// int32 type = 1;
inline void CMessageAddPlanDesignTemplateResponse::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageAddPlanDesignTemplateResponse::type() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAddPlanDesignTemplateResponse.type)
  return type_;
}
inline void CMessageAddPlanDesignTemplateResponse::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAddPlanDesignTemplateResponse.type)
}

// string uuid = 2;
inline void CMessageAddPlanDesignTemplateResponse::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageAddPlanDesignTemplateResponse::uuid() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAddPlanDesignTemplateResponse.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageAddPlanDesignTemplateResponse::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAddPlanDesignTemplateResponse.uuid)
}
#if LANG_CXX11
inline void CMessageAddPlanDesignTemplateResponse::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.db2.CMessageAddPlanDesignTemplateResponse.uuid)
}
#endif
inline void CMessageAddPlanDesignTemplateResponse::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.db2.CMessageAddPlanDesignTemplateResponse.uuid)
}
inline void CMessageAddPlanDesignTemplateResponse::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.db2.CMessageAddPlanDesignTemplateResponse.uuid)
}
inline ::std::string* CMessageAddPlanDesignTemplateResponse::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessageAddPlanDesignTemplateResponse.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageAddPlanDesignTemplateResponse::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.db2.CMessageAddPlanDesignTemplateResponse.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageAddPlanDesignTemplateResponse::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.db2.CMessageAddPlanDesignTemplateResponse.uuid)
}

// int32 state = 3;
inline void CMessageAddPlanDesignTemplateResponse::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 CMessageAddPlanDesignTemplateResponse::state() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAddPlanDesignTemplateResponse.state)
  return state_;
}
inline void CMessageAddPlanDesignTemplateResponse::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAddPlanDesignTemplateResponse.state)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace db2
}  // namespace d5

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_5fplan_5fdesign_5ftemplate_2eproto_INCLUDED
