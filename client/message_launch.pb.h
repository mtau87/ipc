// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_launch.proto

#ifndef PROTOBUF_message_5flaunch_2eproto_INCLUDED
#define PROTOBUF_message_5flaunch_2eproto_INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_message_5flaunch_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsCMessageLaunchRequestImpl();
void InitDefaultsCMessageLaunchRequest();
void InitDefaultsCMessageLaunchResponseImpl();
void InitDefaultsCMessageLaunchResponse();
void InitDefaultsCMessageHideWidgetRequestImpl();
void InitDefaultsCMessageHideWidgetRequest();
void InitDefaultsCMessageHideWidgetResponseImpl();
void InitDefaultsCMessageHideWidgetResponse();
inline void InitDefaults() {
  InitDefaultsCMessageLaunchRequest();
  InitDefaultsCMessageLaunchResponse();
  InitDefaultsCMessageHideWidgetRequest();
  InitDefaultsCMessageHideWidgetResponse();
}
}  // namespace protobuf_message_5flaunch_2eproto
namespace d5 {
class CMessageHideWidgetRequest;
class CMessageHideWidgetRequestDefaultTypeInternal;
extern CMessageHideWidgetRequestDefaultTypeInternal _CMessageHideWidgetRequest_default_instance_;
class CMessageHideWidgetResponse;
class CMessageHideWidgetResponseDefaultTypeInternal;
extern CMessageHideWidgetResponseDefaultTypeInternal _CMessageHideWidgetResponse_default_instance_;
class CMessageLaunchRequest;
class CMessageLaunchRequestDefaultTypeInternal;
extern CMessageLaunchRequestDefaultTypeInternal _CMessageLaunchRequest_default_instance_;
class CMessageLaunchResponse;
class CMessageLaunchResponseDefaultTypeInternal;
extern CMessageLaunchResponseDefaultTypeInternal _CMessageLaunchResponse_default_instance_;
}  // namespace d5
namespace google {
namespace protobuf {
template<> ::d5::CMessageHideWidgetRequest* Arena::Create< ::d5::CMessageHideWidgetRequest>(Arena*);
template<> ::d5::CMessageHideWidgetResponse* Arena::Create< ::d5::CMessageHideWidgetResponse>(Arena*);
template<> ::d5::CMessageLaunchRequest* Arena::Create< ::d5::CMessageLaunchRequest>(Arena*);
template<> ::d5::CMessageLaunchResponse* Arena::Create< ::d5::CMessageLaunchResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace d5 {

// ===================================================================

class CMessageLaunchRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageLaunchRequest) */ {
 public:
  CMessageLaunchRequest();
  virtual ~CMessageLaunchRequest();

  CMessageLaunchRequest(const CMessageLaunchRequest& from);

  inline CMessageLaunchRequest& operator=(const CMessageLaunchRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageLaunchRequest(CMessageLaunchRequest&& from) noexcept
    : CMessageLaunchRequest() {
    *this = ::std::move(from);
  }

  inline CMessageLaunchRequest& operator=(CMessageLaunchRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLaunchRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageLaunchRequest* internal_default_instance() {
    return reinterpret_cast<const CMessageLaunchRequest*>(
               &_CMessageLaunchRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CMessageLaunchRequest* other);
  friend void swap(CMessageLaunchRequest& a, CMessageLaunchRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageLaunchRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageLaunchRequest>(NULL);
  }

  CMessageLaunchRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageLaunchRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageLaunchRequest& from);
  void MergeFrom(const CMessageLaunchRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageLaunchRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageLaunchRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5flaunch_2eproto::TableStruct;
  friend void ::protobuf_message_5flaunch_2eproto::InitDefaultsCMessageLaunchRequestImpl();
};
// -------------------------------------------------------------------

class CMessageLaunchResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageLaunchResponse) */ {
 public:
  CMessageLaunchResponse();
  virtual ~CMessageLaunchResponse();

  CMessageLaunchResponse(const CMessageLaunchResponse& from);

  inline CMessageLaunchResponse& operator=(const CMessageLaunchResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageLaunchResponse(CMessageLaunchResponse&& from) noexcept
    : CMessageLaunchResponse() {
    *this = ::std::move(from);
  }

  inline CMessageLaunchResponse& operator=(CMessageLaunchResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLaunchResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageLaunchResponse* internal_default_instance() {
    return reinterpret_cast<const CMessageLaunchResponse*>(
               &_CMessageLaunchResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CMessageLaunchResponse* other);
  friend void swap(CMessageLaunchResponse& a, CMessageLaunchResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageLaunchResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageLaunchResponse>(NULL);
  }

  CMessageLaunchResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageLaunchResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageLaunchResponse& from);
  void MergeFrom(const CMessageLaunchResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageLaunchResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageLaunchResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5flaunch_2eproto::TableStruct;
  friend void ::protobuf_message_5flaunch_2eproto::InitDefaultsCMessageLaunchResponseImpl();
};
// -------------------------------------------------------------------

class CMessageHideWidgetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageHideWidgetRequest) */ {
 public:
  CMessageHideWidgetRequest();
  virtual ~CMessageHideWidgetRequest();

  CMessageHideWidgetRequest(const CMessageHideWidgetRequest& from);

  inline CMessageHideWidgetRequest& operator=(const CMessageHideWidgetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageHideWidgetRequest(CMessageHideWidgetRequest&& from) noexcept
    : CMessageHideWidgetRequest() {
    *this = ::std::move(from);
  }

  inline CMessageHideWidgetRequest& operator=(CMessageHideWidgetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageHideWidgetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageHideWidgetRequest* internal_default_instance() {
    return reinterpret_cast<const CMessageHideWidgetRequest*>(
               &_CMessageHideWidgetRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CMessageHideWidgetRequest* other);
  friend void swap(CMessageHideWidgetRequest& a, CMessageHideWidgetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageHideWidgetRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageHideWidgetRequest>(NULL);
  }

  CMessageHideWidgetRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageHideWidgetRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageHideWidgetRequest& from);
  void MergeFrom(const CMessageHideWidgetRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageHideWidgetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 state = 3;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageHideWidgetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 state_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5flaunch_2eproto::TableStruct;
  friend void ::protobuf_message_5flaunch_2eproto::InitDefaultsCMessageHideWidgetRequestImpl();
};
// -------------------------------------------------------------------

class CMessageHideWidgetResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageHideWidgetResponse) */ {
 public:
  CMessageHideWidgetResponse();
  virtual ~CMessageHideWidgetResponse();

  CMessageHideWidgetResponse(const CMessageHideWidgetResponse& from);

  inline CMessageHideWidgetResponse& operator=(const CMessageHideWidgetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageHideWidgetResponse(CMessageHideWidgetResponse&& from) noexcept
    : CMessageHideWidgetResponse() {
    *this = ::std::move(from);
  }

  inline CMessageHideWidgetResponse& operator=(CMessageHideWidgetResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageHideWidgetResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageHideWidgetResponse* internal_default_instance() {
    return reinterpret_cast<const CMessageHideWidgetResponse*>(
               &_CMessageHideWidgetResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CMessageHideWidgetResponse* other);
  friend void swap(CMessageHideWidgetResponse& a, CMessageHideWidgetResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageHideWidgetResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageHideWidgetResponse>(NULL);
  }

  CMessageHideWidgetResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageHideWidgetResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageHideWidgetResponse& from);
  void MergeFrom(const CMessageHideWidgetResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageHideWidgetResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageHideWidgetResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5flaunch_2eproto::TableStruct;
  friend void ::protobuf_message_5flaunch_2eproto::InitDefaultsCMessageHideWidgetResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMessageLaunchRequest

// int32 type = 1;
inline void CMessageLaunchRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageLaunchRequest::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageLaunchRequest.type)
  return type_;
}
inline void CMessageLaunchRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageLaunchRequest.type)
}

// string uuid = 2;
inline void CMessageLaunchRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageLaunchRequest::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageLaunchRequest.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageLaunchRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageLaunchRequest.uuid)
}
#if LANG_CXX11
inline void CMessageLaunchRequest::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageLaunchRequest.uuid)
}
#endif
inline void CMessageLaunchRequest::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageLaunchRequest.uuid)
}
inline void CMessageLaunchRequest::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageLaunchRequest.uuid)
}
inline ::std::string* CMessageLaunchRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageLaunchRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageLaunchRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageLaunchRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageLaunchRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageLaunchRequest.uuid)
}

// -------------------------------------------------------------------

// CMessageLaunchResponse

// int32 type = 1;
inline void CMessageLaunchResponse::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageLaunchResponse::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageLaunchResponse.type)
  return type_;
}
inline void CMessageLaunchResponse::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageLaunchResponse.type)
}

// string uuid = 2;
inline void CMessageLaunchResponse::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageLaunchResponse::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageLaunchResponse.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageLaunchResponse::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageLaunchResponse.uuid)
}
#if LANG_CXX11
inline void CMessageLaunchResponse::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageLaunchResponse.uuid)
}
#endif
inline void CMessageLaunchResponse::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageLaunchResponse.uuid)
}
inline void CMessageLaunchResponse::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageLaunchResponse.uuid)
}
inline ::std::string* CMessageLaunchResponse::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageLaunchResponse.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageLaunchResponse::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageLaunchResponse.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageLaunchResponse::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageLaunchResponse.uuid)
}

// -------------------------------------------------------------------

// CMessageHideWidgetRequest

// int32 type = 1;
inline void CMessageHideWidgetRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageHideWidgetRequest::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHideWidgetRequest.type)
  return type_;
}
inline void CMessageHideWidgetRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHideWidgetRequest.type)
}

// string uuid = 2;
inline void CMessageHideWidgetRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHideWidgetRequest::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHideWidgetRequest.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageHideWidgetRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHideWidgetRequest.uuid)
}
#if LANG_CXX11
inline void CMessageHideWidgetRequest::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHideWidgetRequest.uuid)
}
#endif
inline void CMessageHideWidgetRequest::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHideWidgetRequest.uuid)
}
inline void CMessageHideWidgetRequest::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHideWidgetRequest.uuid)
}
inline ::std::string* CMessageHideWidgetRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHideWidgetRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHideWidgetRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageHideWidgetRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHideWidgetRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHideWidgetRequest.uuid)
}

// int32 state = 3;
inline void CMessageHideWidgetRequest::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 CMessageHideWidgetRequest::state() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHideWidgetRequest.state)
  return state_;
}
inline void CMessageHideWidgetRequest::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHideWidgetRequest.state)
}

// -------------------------------------------------------------------

// CMessageHideWidgetResponse

// int32 type = 1;
inline void CMessageHideWidgetResponse::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageHideWidgetResponse::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHideWidgetResponse.type)
  return type_;
}
inline void CMessageHideWidgetResponse::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHideWidgetResponse.type)
}

// string uuid = 2;
inline void CMessageHideWidgetResponse::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHideWidgetResponse::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHideWidgetResponse.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageHideWidgetResponse::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHideWidgetResponse.uuid)
}
#if LANG_CXX11
inline void CMessageHideWidgetResponse::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHideWidgetResponse.uuid)
}
#endif
inline void CMessageHideWidgetResponse::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHideWidgetResponse.uuid)
}
inline void CMessageHideWidgetResponse::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHideWidgetResponse.uuid)
}
inline ::std::string* CMessageHideWidgetResponse::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHideWidgetResponse.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHideWidgetResponse::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageHideWidgetResponse.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHideWidgetResponse::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHideWidgetResponse.uuid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace d5

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_5flaunch_2eproto_INCLUDED
