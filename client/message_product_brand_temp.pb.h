// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_product_brand_temp.proto

#ifndef PROTOBUF_message_5fproduct_5fbrand_5ftemp_2eproto_INCLUDED
#define PROTOBUF_message_5fproduct_5fbrand_5ftemp_2eproto_INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "db2.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_message_5fproduct_5fbrand_5ftemp_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsCMessageProductBrandTempRequestImpl();
void InitDefaultsCMessageProductBrandTempRequest();
void InitDefaultsCMessageProductBrandTempResponseImpl();
void InitDefaultsCMessageProductBrandTempResponse();
void InitDefaultsCMessageAddProductBrandTempRequestImpl();
void InitDefaultsCMessageAddProductBrandTempRequest();
void InitDefaultsCMessageAddProductBrandTempResponseImpl();
void InitDefaultsCMessageAddProductBrandTempResponse();
inline void InitDefaults() {
  InitDefaultsCMessageProductBrandTempRequest();
  InitDefaultsCMessageProductBrandTempResponse();
  InitDefaultsCMessageAddProductBrandTempRequest();
  InitDefaultsCMessageAddProductBrandTempResponse();
}
}  // namespace protobuf_message_5fproduct_5fbrand_5ftemp_2eproto
namespace d5 {
namespace db2 {
class CMessageAddProductBrandTempRequest;
class CMessageAddProductBrandTempRequestDefaultTypeInternal;
extern CMessageAddProductBrandTempRequestDefaultTypeInternal _CMessageAddProductBrandTempRequest_default_instance_;
class CMessageAddProductBrandTempResponse;
class CMessageAddProductBrandTempResponseDefaultTypeInternal;
extern CMessageAddProductBrandTempResponseDefaultTypeInternal _CMessageAddProductBrandTempResponse_default_instance_;
class CMessageProductBrandTempRequest;
class CMessageProductBrandTempRequestDefaultTypeInternal;
extern CMessageProductBrandTempRequestDefaultTypeInternal _CMessageProductBrandTempRequest_default_instance_;
class CMessageProductBrandTempResponse;
class CMessageProductBrandTempResponseDefaultTypeInternal;
extern CMessageProductBrandTempResponseDefaultTypeInternal _CMessageProductBrandTempResponse_default_instance_;
}  // namespace db2
}  // namespace d5
namespace google {
namespace protobuf {
template<> ::d5::db2::CMessageAddProductBrandTempRequest* Arena::Create< ::d5::db2::CMessageAddProductBrandTempRequest>(Arena*);
template<> ::d5::db2::CMessageAddProductBrandTempResponse* Arena::Create< ::d5::db2::CMessageAddProductBrandTempResponse>(Arena*);
template<> ::d5::db2::CMessageProductBrandTempRequest* Arena::Create< ::d5::db2::CMessageProductBrandTempRequest>(Arena*);
template<> ::d5::db2::CMessageProductBrandTempResponse* Arena::Create< ::d5::db2::CMessageProductBrandTempResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace d5 {
namespace db2 {

// ===================================================================

class CMessageProductBrandTempRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.db2.CMessageProductBrandTempRequest) */ {
 public:
  CMessageProductBrandTempRequest();
  virtual ~CMessageProductBrandTempRequest();

  CMessageProductBrandTempRequest(const CMessageProductBrandTempRequest& from);

  inline CMessageProductBrandTempRequest& operator=(const CMessageProductBrandTempRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageProductBrandTempRequest(CMessageProductBrandTempRequest&& from) noexcept
    : CMessageProductBrandTempRequest() {
    *this = ::std::move(from);
  }

  inline CMessageProductBrandTempRequest& operator=(CMessageProductBrandTempRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageProductBrandTempRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageProductBrandTempRequest* internal_default_instance() {
    return reinterpret_cast<const CMessageProductBrandTempRequest*>(
               &_CMessageProductBrandTempRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CMessageProductBrandTempRequest* other);
  friend void swap(CMessageProductBrandTempRequest& a, CMessageProductBrandTempRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageProductBrandTempRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageProductBrandTempRequest>(NULL);
  }

  CMessageProductBrandTempRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageProductBrandTempRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageProductBrandTempRequest& from);
  void MergeFrom(const CMessageProductBrandTempRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageProductBrandTempRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // string productId = 3;
  void clear_productid();
  static const int kProductIdFieldNumber = 3;
  const ::std::string& productid() const;
  void set_productid(const ::std::string& value);
  #if LANG_CXX11
  void set_productid(::std::string&& value);
  #endif
  void set_productid(const char* value);
  void set_productid(const char* value, size_t size);
  ::std::string* mutable_productid();
  ::std::string* release_productid();
  void set_allocated_productid(::std::string* productid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.db2.CMessageProductBrandTempRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::internal::ArenaStringPtr productid_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fproduct_5fbrand_5ftemp_2eproto::TableStruct;
  friend void ::protobuf_message_5fproduct_5fbrand_5ftemp_2eproto::InitDefaultsCMessageProductBrandTempRequestImpl();
};
// -------------------------------------------------------------------

class CMessageProductBrandTempResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.db2.CMessageProductBrandTempResponse) */ {
 public:
  CMessageProductBrandTempResponse();
  virtual ~CMessageProductBrandTempResponse();

  CMessageProductBrandTempResponse(const CMessageProductBrandTempResponse& from);

  inline CMessageProductBrandTempResponse& operator=(const CMessageProductBrandTempResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageProductBrandTempResponse(CMessageProductBrandTempResponse&& from) noexcept
    : CMessageProductBrandTempResponse() {
    *this = ::std::move(from);
  }

  inline CMessageProductBrandTempResponse& operator=(CMessageProductBrandTempResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageProductBrandTempResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageProductBrandTempResponse* internal_default_instance() {
    return reinterpret_cast<const CMessageProductBrandTempResponse*>(
               &_CMessageProductBrandTempResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CMessageProductBrandTempResponse* other);
  friend void swap(CMessageProductBrandTempResponse& a, CMessageProductBrandTempResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageProductBrandTempResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageProductBrandTempResponse>(NULL);
  }

  CMessageProductBrandTempResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageProductBrandTempResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageProductBrandTempResponse& from);
  void MergeFrom(const CMessageProductBrandTempResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageProductBrandTempResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // .d5.db2.product_brand_temp data = 4;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 4;
  const ::d5::db2::product_brand_temp& data() const;
  ::d5::db2::product_brand_temp* release_data();
  ::d5::db2::product_brand_temp* mutable_data();
  void set_allocated_data(::d5::db2::product_brand_temp* data);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 state = 3;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.db2.CMessageProductBrandTempResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::d5::db2::product_brand_temp* data_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 state_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fproduct_5fbrand_5ftemp_2eproto::TableStruct;
  friend void ::protobuf_message_5fproduct_5fbrand_5ftemp_2eproto::InitDefaultsCMessageProductBrandTempResponseImpl();
};
// -------------------------------------------------------------------

class CMessageAddProductBrandTempRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.db2.CMessageAddProductBrandTempRequest) */ {
 public:
  CMessageAddProductBrandTempRequest();
  virtual ~CMessageAddProductBrandTempRequest();

  CMessageAddProductBrandTempRequest(const CMessageAddProductBrandTempRequest& from);

  inline CMessageAddProductBrandTempRequest& operator=(const CMessageAddProductBrandTempRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageAddProductBrandTempRequest(CMessageAddProductBrandTempRequest&& from) noexcept
    : CMessageAddProductBrandTempRequest() {
    *this = ::std::move(from);
  }

  inline CMessageAddProductBrandTempRequest& operator=(CMessageAddProductBrandTempRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAddProductBrandTempRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageAddProductBrandTempRequest* internal_default_instance() {
    return reinterpret_cast<const CMessageAddProductBrandTempRequest*>(
               &_CMessageAddProductBrandTempRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CMessageAddProductBrandTempRequest* other);
  friend void swap(CMessageAddProductBrandTempRequest& a, CMessageAddProductBrandTempRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageAddProductBrandTempRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageAddProductBrandTempRequest>(NULL);
  }

  CMessageAddProductBrandTempRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageAddProductBrandTempRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageAddProductBrandTempRequest& from);
  void MergeFrom(const CMessageAddProductBrandTempRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageAddProductBrandTempRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // .d5.db2.product_brand_temp data = 3;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::d5::db2::product_brand_temp& data() const;
  ::d5::db2::product_brand_temp* release_data();
  ::d5::db2::product_brand_temp* mutable_data();
  void set_allocated_data(::d5::db2::product_brand_temp* data);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.db2.CMessageAddProductBrandTempRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::d5::db2::product_brand_temp* data_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fproduct_5fbrand_5ftemp_2eproto::TableStruct;
  friend void ::protobuf_message_5fproduct_5fbrand_5ftemp_2eproto::InitDefaultsCMessageAddProductBrandTempRequestImpl();
};
// -------------------------------------------------------------------

class CMessageAddProductBrandTempResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.db2.CMessageAddProductBrandTempResponse) */ {
 public:
  CMessageAddProductBrandTempResponse();
  virtual ~CMessageAddProductBrandTempResponse();

  CMessageAddProductBrandTempResponse(const CMessageAddProductBrandTempResponse& from);

  inline CMessageAddProductBrandTempResponse& operator=(const CMessageAddProductBrandTempResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageAddProductBrandTempResponse(CMessageAddProductBrandTempResponse&& from) noexcept
    : CMessageAddProductBrandTempResponse() {
    *this = ::std::move(from);
  }

  inline CMessageAddProductBrandTempResponse& operator=(CMessageAddProductBrandTempResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAddProductBrandTempResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageAddProductBrandTempResponse* internal_default_instance() {
    return reinterpret_cast<const CMessageAddProductBrandTempResponse*>(
               &_CMessageAddProductBrandTempResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CMessageAddProductBrandTempResponse* other);
  friend void swap(CMessageAddProductBrandTempResponse& a, CMessageAddProductBrandTempResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageAddProductBrandTempResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageAddProductBrandTempResponse>(NULL);
  }

  CMessageAddProductBrandTempResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageAddProductBrandTempResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageAddProductBrandTempResponse& from);
  void MergeFrom(const CMessageAddProductBrandTempResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageAddProductBrandTempResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 state = 3;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.db2.CMessageAddProductBrandTempResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 state_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fproduct_5fbrand_5ftemp_2eproto::TableStruct;
  friend void ::protobuf_message_5fproduct_5fbrand_5ftemp_2eproto::InitDefaultsCMessageAddProductBrandTempResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMessageProductBrandTempRequest

// int32 type = 1;
inline void CMessageProductBrandTempRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageProductBrandTempRequest::type() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageProductBrandTempRequest.type)
  return type_;
}
inline void CMessageProductBrandTempRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageProductBrandTempRequest.type)
}

// string uuid = 2;
inline void CMessageProductBrandTempRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageProductBrandTempRequest::uuid() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageProductBrandTempRequest.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageProductBrandTempRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.db2.CMessageProductBrandTempRequest.uuid)
}
#if LANG_CXX11
inline void CMessageProductBrandTempRequest::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.db2.CMessageProductBrandTempRequest.uuid)
}
#endif
inline void CMessageProductBrandTempRequest::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.db2.CMessageProductBrandTempRequest.uuid)
}
inline void CMessageProductBrandTempRequest::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.db2.CMessageProductBrandTempRequest.uuid)
}
inline ::std::string* CMessageProductBrandTempRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessageProductBrandTempRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageProductBrandTempRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.db2.CMessageProductBrandTempRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageProductBrandTempRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.db2.CMessageProductBrandTempRequest.uuid)
}

// string productId = 3;
inline void CMessageProductBrandTempRequest::clear_productid() {
  productid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageProductBrandTempRequest::productid() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageProductBrandTempRequest.productId)
  return productid_.GetNoArena();
}
inline void CMessageProductBrandTempRequest::set_productid(const ::std::string& value) {
  
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.db2.CMessageProductBrandTempRequest.productId)
}
#if LANG_CXX11
inline void CMessageProductBrandTempRequest::set_productid(::std::string&& value) {
  
  productid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.db2.CMessageProductBrandTempRequest.productId)
}
#endif
inline void CMessageProductBrandTempRequest::set_productid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.db2.CMessageProductBrandTempRequest.productId)
}
inline void CMessageProductBrandTempRequest::set_productid(const char* value, size_t size) {
  
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.db2.CMessageProductBrandTempRequest.productId)
}
inline ::std::string* CMessageProductBrandTempRequest::mutable_productid() {
  
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessageProductBrandTempRequest.productId)
  return productid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageProductBrandTempRequest::release_productid() {
  // @@protoc_insertion_point(field_release:d5.db2.CMessageProductBrandTempRequest.productId)
  
  return productid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageProductBrandTempRequest::set_allocated_productid(::std::string* productid) {
  if (productid != NULL) {
    
  } else {
    
  }
  productid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productid);
  // @@protoc_insertion_point(field_set_allocated:d5.db2.CMessageProductBrandTempRequest.productId)
}

// -------------------------------------------------------------------

// CMessageProductBrandTempResponse

// int32 type = 1;
inline void CMessageProductBrandTempResponse::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageProductBrandTempResponse::type() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageProductBrandTempResponse.type)
  return type_;
}
inline void CMessageProductBrandTempResponse::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageProductBrandTempResponse.type)
}

// string uuid = 2;
inline void CMessageProductBrandTempResponse::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageProductBrandTempResponse::uuid() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageProductBrandTempResponse.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageProductBrandTempResponse::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.db2.CMessageProductBrandTempResponse.uuid)
}
#if LANG_CXX11
inline void CMessageProductBrandTempResponse::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.db2.CMessageProductBrandTempResponse.uuid)
}
#endif
inline void CMessageProductBrandTempResponse::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.db2.CMessageProductBrandTempResponse.uuid)
}
inline void CMessageProductBrandTempResponse::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.db2.CMessageProductBrandTempResponse.uuid)
}
inline ::std::string* CMessageProductBrandTempResponse::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessageProductBrandTempResponse.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageProductBrandTempResponse::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.db2.CMessageProductBrandTempResponse.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageProductBrandTempResponse::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.db2.CMessageProductBrandTempResponse.uuid)
}

// int32 state = 3;
inline void CMessageProductBrandTempResponse::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 CMessageProductBrandTempResponse::state() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageProductBrandTempResponse.state)
  return state_;
}
inline void CMessageProductBrandTempResponse::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageProductBrandTempResponse.state)
}

// .d5.db2.product_brand_temp data = 4;
inline bool CMessageProductBrandTempResponse::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline const ::d5::db2::product_brand_temp& CMessageProductBrandTempResponse::data() const {
  const ::d5::db2::product_brand_temp* p = data_;
  // @@protoc_insertion_point(field_get:d5.db2.CMessageProductBrandTempResponse.data)
  return p != NULL ? *p : *reinterpret_cast<const ::d5::db2::product_brand_temp*>(
      &::d5::db2::_product_brand_temp_default_instance_);
}
inline ::d5::db2::product_brand_temp* CMessageProductBrandTempResponse::release_data() {
  // @@protoc_insertion_point(field_release:d5.db2.CMessageProductBrandTempResponse.data)
  
  ::d5::db2::product_brand_temp* temp = data_;
  data_ = NULL;
  return temp;
}
inline ::d5::db2::product_brand_temp* CMessageProductBrandTempResponse::mutable_data() {
  
  if (data_ == NULL) {
    data_ = ::google::protobuf::Arena::Create< ::d5::db2::product_brand_temp >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessageProductBrandTempResponse.data)
  return data_;
}
inline void CMessageProductBrandTempResponse::set_allocated_data(::d5::db2::product_brand_temp* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_);
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:d5.db2.CMessageProductBrandTempResponse.data)
}

// -------------------------------------------------------------------

// CMessageAddProductBrandTempRequest

// int32 type = 1;
inline void CMessageAddProductBrandTempRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageAddProductBrandTempRequest::type() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAddProductBrandTempRequest.type)
  return type_;
}
inline void CMessageAddProductBrandTempRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAddProductBrandTempRequest.type)
}

// string uuid = 2;
inline void CMessageAddProductBrandTempRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageAddProductBrandTempRequest::uuid() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAddProductBrandTempRequest.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageAddProductBrandTempRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAddProductBrandTempRequest.uuid)
}
#if LANG_CXX11
inline void CMessageAddProductBrandTempRequest::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.db2.CMessageAddProductBrandTempRequest.uuid)
}
#endif
inline void CMessageAddProductBrandTempRequest::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.db2.CMessageAddProductBrandTempRequest.uuid)
}
inline void CMessageAddProductBrandTempRequest::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.db2.CMessageAddProductBrandTempRequest.uuid)
}
inline ::std::string* CMessageAddProductBrandTempRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessageAddProductBrandTempRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageAddProductBrandTempRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.db2.CMessageAddProductBrandTempRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageAddProductBrandTempRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.db2.CMessageAddProductBrandTempRequest.uuid)
}

// .d5.db2.product_brand_temp data = 3;
inline bool CMessageAddProductBrandTempRequest::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline const ::d5::db2::product_brand_temp& CMessageAddProductBrandTempRequest::data() const {
  const ::d5::db2::product_brand_temp* p = data_;
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAddProductBrandTempRequest.data)
  return p != NULL ? *p : *reinterpret_cast<const ::d5::db2::product_brand_temp*>(
      &::d5::db2::_product_brand_temp_default_instance_);
}
inline ::d5::db2::product_brand_temp* CMessageAddProductBrandTempRequest::release_data() {
  // @@protoc_insertion_point(field_release:d5.db2.CMessageAddProductBrandTempRequest.data)
  
  ::d5::db2::product_brand_temp* temp = data_;
  data_ = NULL;
  return temp;
}
inline ::d5::db2::product_brand_temp* CMessageAddProductBrandTempRequest::mutable_data() {
  
  if (data_ == NULL) {
    data_ = ::google::protobuf::Arena::Create< ::d5::db2::product_brand_temp >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessageAddProductBrandTempRequest.data)
  return data_;
}
inline void CMessageAddProductBrandTempRequest::set_allocated_data(::d5::db2::product_brand_temp* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_);
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:d5.db2.CMessageAddProductBrandTempRequest.data)
}

// -------------------------------------------------------------------

// CMessageAddProductBrandTempResponse

// int32 type = 1;
inline void CMessageAddProductBrandTempResponse::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageAddProductBrandTempResponse::type() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAddProductBrandTempResponse.type)
  return type_;
}
inline void CMessageAddProductBrandTempResponse::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAddProductBrandTempResponse.type)
}

// string uuid = 2;
inline void CMessageAddProductBrandTempResponse::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageAddProductBrandTempResponse::uuid() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAddProductBrandTempResponse.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageAddProductBrandTempResponse::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAddProductBrandTempResponse.uuid)
}
#if LANG_CXX11
inline void CMessageAddProductBrandTempResponse::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.db2.CMessageAddProductBrandTempResponse.uuid)
}
#endif
inline void CMessageAddProductBrandTempResponse::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.db2.CMessageAddProductBrandTempResponse.uuid)
}
inline void CMessageAddProductBrandTempResponse::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.db2.CMessageAddProductBrandTempResponse.uuid)
}
inline ::std::string* CMessageAddProductBrandTempResponse::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessageAddProductBrandTempResponse.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageAddProductBrandTempResponse::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.db2.CMessageAddProductBrandTempResponse.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageAddProductBrandTempResponse::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.db2.CMessageAddProductBrandTempResponse.uuid)
}

// int32 state = 3;
inline void CMessageAddProductBrandTempResponse::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 CMessageAddProductBrandTempResponse::state() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAddProductBrandTempResponse.state)
  return state_;
}
inline void CMessageAddProductBrandTempResponse::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAddProductBrandTempResponse.state)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace db2
}  // namespace d5

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_5fproduct_5fbrand_5ftemp_2eproto_INCLUDED
