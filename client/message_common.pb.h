// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_common.proto

#ifndef PROTOBUF_message_5fcommon_2eproto_INCLUDED
#define PROTOBUF_message_5fcommon_2eproto_INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "db2.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_message_5fcommon_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[12];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsCMessageDependentPakListImpl();
void InitDefaultsCMessageDependentPakList();
void InitDefaultsCMessageFilesUnitImpl();
void InitDefaultsCMessageFilesUnit();
void InitDefaultsCMessageSkpLoaderImpl();
void InitDefaultsCMessageSkpLoader();
void InitDefaultsCMessageSkpLoaderResponseImpl();
void InitDefaultsCMessageSkpLoaderResponse();
void InitDefaultsCMessageSkpLoaderProcessImpl();
void InitDefaultsCMessageSkpLoaderProcess();
void InitDefaultsCMessageCADConverterRequestImpl();
void InitDefaultsCMessageCADConverterRequest();
void InitDefaultsCMessageCADConverterResponseImpl();
void InitDefaultsCMessageCADConverterResponse();
void InitDefaultsCMessageWatchDogRequestImpl();
void InitDefaultsCMessageWatchDogRequest();
void InitDefaultsCMessageWatchDogImpl();
void InitDefaultsCMessageWatchDog();
void InitDefaultsCMessageGeneratePannellumRequestImpl();
void InitDefaultsCMessageGeneratePannellumRequest();
void InitDefaultsCMessageGeneratePannellumResponseImpl();
void InitDefaultsCMessageGeneratePannellumResponse();
void InitDefaultsCMessageGeneratePannellumProcessImpl();
void InitDefaultsCMessageGeneratePannellumProcess();
inline void InitDefaults() {
  InitDefaultsCMessageDependentPakList();
  InitDefaultsCMessageFilesUnit();
  InitDefaultsCMessageSkpLoader();
  InitDefaultsCMessageSkpLoaderResponse();
  InitDefaultsCMessageSkpLoaderProcess();
  InitDefaultsCMessageCADConverterRequest();
  InitDefaultsCMessageCADConverterResponse();
  InitDefaultsCMessageWatchDogRequest();
  InitDefaultsCMessageWatchDog();
  InitDefaultsCMessageGeneratePannellumRequest();
  InitDefaultsCMessageGeneratePannellumResponse();
  InitDefaultsCMessageGeneratePannellumProcess();
}
}  // namespace protobuf_message_5fcommon_2eproto
namespace d5 {
class CMessageCADConverterRequest;
class CMessageCADConverterRequestDefaultTypeInternal;
extern CMessageCADConverterRequestDefaultTypeInternal _CMessageCADConverterRequest_default_instance_;
class CMessageCADConverterResponse;
class CMessageCADConverterResponseDefaultTypeInternal;
extern CMessageCADConverterResponseDefaultTypeInternal _CMessageCADConverterResponse_default_instance_;
class CMessageDependentPakList;
class CMessageDependentPakListDefaultTypeInternal;
extern CMessageDependentPakListDefaultTypeInternal _CMessageDependentPakList_default_instance_;
class CMessageFilesUnit;
class CMessageFilesUnitDefaultTypeInternal;
extern CMessageFilesUnitDefaultTypeInternal _CMessageFilesUnit_default_instance_;
class CMessageGeneratePannellumProcess;
class CMessageGeneratePannellumProcessDefaultTypeInternal;
extern CMessageGeneratePannellumProcessDefaultTypeInternal _CMessageGeneratePannellumProcess_default_instance_;
class CMessageGeneratePannellumRequest;
class CMessageGeneratePannellumRequestDefaultTypeInternal;
extern CMessageGeneratePannellumRequestDefaultTypeInternal _CMessageGeneratePannellumRequest_default_instance_;
class CMessageGeneratePannellumResponse;
class CMessageGeneratePannellumResponseDefaultTypeInternal;
extern CMessageGeneratePannellumResponseDefaultTypeInternal _CMessageGeneratePannellumResponse_default_instance_;
class CMessageSkpLoader;
class CMessageSkpLoaderDefaultTypeInternal;
extern CMessageSkpLoaderDefaultTypeInternal _CMessageSkpLoader_default_instance_;
class CMessageSkpLoaderProcess;
class CMessageSkpLoaderProcessDefaultTypeInternal;
extern CMessageSkpLoaderProcessDefaultTypeInternal _CMessageSkpLoaderProcess_default_instance_;
class CMessageSkpLoaderResponse;
class CMessageSkpLoaderResponseDefaultTypeInternal;
extern CMessageSkpLoaderResponseDefaultTypeInternal _CMessageSkpLoaderResponse_default_instance_;
class CMessageWatchDog;
class CMessageWatchDogDefaultTypeInternal;
extern CMessageWatchDogDefaultTypeInternal _CMessageWatchDog_default_instance_;
class CMessageWatchDogRequest;
class CMessageWatchDogRequestDefaultTypeInternal;
extern CMessageWatchDogRequestDefaultTypeInternal _CMessageWatchDogRequest_default_instance_;
}  // namespace d5
namespace google {
namespace protobuf {
template<> ::d5::CMessageCADConverterRequest* Arena::Create< ::d5::CMessageCADConverterRequest>(Arena*);
template<> ::d5::CMessageCADConverterResponse* Arena::Create< ::d5::CMessageCADConverterResponse>(Arena*);
template<> ::d5::CMessageDependentPakList* Arena::Create< ::d5::CMessageDependentPakList>(Arena*);
template<> ::d5::CMessageFilesUnit* Arena::Create< ::d5::CMessageFilesUnit>(Arena*);
template<> ::d5::CMessageGeneratePannellumProcess* Arena::Create< ::d5::CMessageGeneratePannellumProcess>(Arena*);
template<> ::d5::CMessageGeneratePannellumRequest* Arena::Create< ::d5::CMessageGeneratePannellumRequest>(Arena*);
template<> ::d5::CMessageGeneratePannellumResponse* Arena::Create< ::d5::CMessageGeneratePannellumResponse>(Arena*);
template<> ::d5::CMessageSkpLoader* Arena::Create< ::d5::CMessageSkpLoader>(Arena*);
template<> ::d5::CMessageSkpLoaderProcess* Arena::Create< ::d5::CMessageSkpLoaderProcess>(Arena*);
template<> ::d5::CMessageSkpLoaderResponse* Arena::Create< ::d5::CMessageSkpLoaderResponse>(Arena*);
template<> ::d5::CMessageWatchDog* Arena::Create< ::d5::CMessageWatchDog>(Arena*);
template<> ::d5::CMessageWatchDogRequest* Arena::Create< ::d5::CMessageWatchDogRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace d5 {

// ===================================================================

class CMessageDependentPakList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageDependentPakList) */ {
 public:
  CMessageDependentPakList();
  virtual ~CMessageDependentPakList();

  CMessageDependentPakList(const CMessageDependentPakList& from);

  inline CMessageDependentPakList& operator=(const CMessageDependentPakList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageDependentPakList(CMessageDependentPakList&& from) noexcept
    : CMessageDependentPakList() {
    *this = ::std::move(from);
  }

  inline CMessageDependentPakList& operator=(CMessageDependentPakList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageDependentPakList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageDependentPakList* internal_default_instance() {
    return reinterpret_cast<const CMessageDependentPakList*>(
               &_CMessageDependentPakList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CMessageDependentPakList* other);
  friend void swap(CMessageDependentPakList& a, CMessageDependentPakList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageDependentPakList* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageDependentPakList>(NULL);
  }

  CMessageDependentPakList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageDependentPakList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageDependentPakList& from);
  void MergeFrom(const CMessageDependentPakList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageDependentPakList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string fileList = 1;
  int filelist_size() const;
  void clear_filelist();
  static const int kFileListFieldNumber = 1;
  const ::std::string& filelist(int index) const;
  ::std::string* mutable_filelist(int index);
  void set_filelist(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_filelist(int index, ::std::string&& value);
  #endif
  void set_filelist(int index, const char* value);
  void set_filelist(int index, const char* value, size_t size);
  ::std::string* add_filelist();
  void add_filelist(const ::std::string& value);
  #if LANG_CXX11
  void add_filelist(::std::string&& value);
  #endif
  void add_filelist(const char* value);
  void add_filelist(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& filelist() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_filelist();

  // @@protoc_insertion_point(class_scope:d5.CMessageDependentPakList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> filelist_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fcommon_2eproto::TableStruct;
  friend void ::protobuf_message_5fcommon_2eproto::InitDefaultsCMessageDependentPakListImpl();
};
// -------------------------------------------------------------------

class CMessageFilesUnit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageFilesUnit) */ {
 public:
  CMessageFilesUnit();
  virtual ~CMessageFilesUnit();

  CMessageFilesUnit(const CMessageFilesUnit& from);

  inline CMessageFilesUnit& operator=(const CMessageFilesUnit& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageFilesUnit(CMessageFilesUnit&& from) noexcept
    : CMessageFilesUnit() {
    *this = ::std::move(from);
  }

  inline CMessageFilesUnit& operator=(CMessageFilesUnit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFilesUnit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageFilesUnit* internal_default_instance() {
    return reinterpret_cast<const CMessageFilesUnit*>(
               &_CMessageFilesUnit_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CMessageFilesUnit* other);
  friend void swap(CMessageFilesUnit& a, CMessageFilesUnit& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageFilesUnit* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageFilesUnit>(NULL);
  }

  CMessageFilesUnit* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageFilesUnit>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageFilesUnit& from);
  void MergeFrom(const CMessageFilesUnit& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageFilesUnit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string url = 1;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // .d5.db2.files_map data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::d5::db2::files_map& data() const;
  ::d5::db2::files_map* release_data();
  ::d5::db2::files_map* mutable_data();
  void set_allocated_data(::d5::db2::files_map* data);

  // @@protoc_insertion_point(class_scope:d5.CMessageFilesUnit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::d5::db2::files_map* data_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fcommon_2eproto::TableStruct;
  friend void ::protobuf_message_5fcommon_2eproto::InitDefaultsCMessageFilesUnitImpl();
};
// -------------------------------------------------------------------

class CMessageSkpLoader : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageSkpLoader) */ {
 public:
  CMessageSkpLoader();
  virtual ~CMessageSkpLoader();

  CMessageSkpLoader(const CMessageSkpLoader& from);

  inline CMessageSkpLoader& operator=(const CMessageSkpLoader& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageSkpLoader(CMessageSkpLoader&& from) noexcept
    : CMessageSkpLoader() {
    *this = ::std::move(from);
  }

  inline CMessageSkpLoader& operator=(CMessageSkpLoader&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSkpLoader& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageSkpLoader* internal_default_instance() {
    return reinterpret_cast<const CMessageSkpLoader*>(
               &_CMessageSkpLoader_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CMessageSkpLoader* other);
  friend void swap(CMessageSkpLoader& a, CMessageSkpLoader& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageSkpLoader* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageSkpLoader>(NULL);
  }

  CMessageSkpLoader* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageSkpLoader>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageSkpLoader& from);
  void MergeFrom(const CMessageSkpLoader& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageSkpLoader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // string strSKPPath = 3;
  void clear_strskppath();
  static const int kStrSKPPathFieldNumber = 3;
  const ::std::string& strskppath() const;
  void set_strskppath(const ::std::string& value);
  #if LANG_CXX11
  void set_strskppath(::std::string&& value);
  #endif
  void set_strskppath(const char* value);
  void set_strskppath(const char* value, size_t size);
  ::std::string* mutable_strskppath();
  ::std::string* release_strskppath();
  void set_allocated_strskppath(::std::string* strskppath);

  // string strD5MPath = 4;
  void clear_strd5mpath();
  static const int kStrD5MPathFieldNumber = 4;
  const ::std::string& strd5mpath() const;
  void set_strd5mpath(const ::std::string& value);
  #if LANG_CXX11
  void set_strd5mpath(::std::string&& value);
  #endif
  void set_strd5mpath(const char* value);
  void set_strd5mpath(const char* value, size_t size);
  ::std::string* mutable_strd5mpath();
  ::std::string* release_strd5mpath();
  void set_allocated_strd5mpath(::std::string* strd5mpath);

  // string strTexturePath = 5;
  void clear_strtexturepath();
  static const int kStrTexturePathFieldNumber = 5;
  const ::std::string& strtexturepath() const;
  void set_strtexturepath(const ::std::string& value);
  #if LANG_CXX11
  void set_strtexturepath(::std::string&& value);
  #endif
  void set_strtexturepath(const char* value);
  void set_strtexturepath(const char* value, size_t size);
  ::std::string* mutable_strtexturepath();
  ::std::string* release_strtexturepath();
  void set_allocated_strtexturepath(::std::string* strtexturepath);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // bool withGroup = 6;
  void clear_withgroup();
  static const int kWithGroupFieldNumber = 6;
  bool withgroup() const;
  void set_withgroup(bool value);

  // bool withComponent = 7;
  void clear_withcomponent();
  static const int kWithComponentFieldNumber = 7;
  bool withcomponent() const;
  void set_withcomponent(bool value);

  // @@protoc_insertion_point(class_scope:d5.CMessageSkpLoader)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::internal::ArenaStringPtr strskppath_;
  ::google::protobuf::internal::ArenaStringPtr strd5mpath_;
  ::google::protobuf::internal::ArenaStringPtr strtexturepath_;
  ::google::protobuf::int32 type_;
  bool withgroup_;
  bool withcomponent_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fcommon_2eproto::TableStruct;
  friend void ::protobuf_message_5fcommon_2eproto::InitDefaultsCMessageSkpLoaderImpl();
};
// -------------------------------------------------------------------

class CMessageSkpLoaderResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageSkpLoaderResponse) */ {
 public:
  CMessageSkpLoaderResponse();
  virtual ~CMessageSkpLoaderResponse();

  CMessageSkpLoaderResponse(const CMessageSkpLoaderResponse& from);

  inline CMessageSkpLoaderResponse& operator=(const CMessageSkpLoaderResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageSkpLoaderResponse(CMessageSkpLoaderResponse&& from) noexcept
    : CMessageSkpLoaderResponse() {
    *this = ::std::move(from);
  }

  inline CMessageSkpLoaderResponse& operator=(CMessageSkpLoaderResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSkpLoaderResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageSkpLoaderResponse* internal_default_instance() {
    return reinterpret_cast<const CMessageSkpLoaderResponse*>(
               &_CMessageSkpLoaderResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CMessageSkpLoaderResponse* other);
  friend void swap(CMessageSkpLoaderResponse& a, CMessageSkpLoaderResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageSkpLoaderResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageSkpLoaderResponse>(NULL);
  }

  CMessageSkpLoaderResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageSkpLoaderResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageSkpLoaderResponse& from);
  void MergeFrom(const CMessageSkpLoaderResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageSkpLoaderResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 state = 3;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageSkpLoaderResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 state_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fcommon_2eproto::TableStruct;
  friend void ::protobuf_message_5fcommon_2eproto::InitDefaultsCMessageSkpLoaderResponseImpl();
};
// -------------------------------------------------------------------

class CMessageSkpLoaderProcess : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageSkpLoaderProcess) */ {
 public:
  CMessageSkpLoaderProcess();
  virtual ~CMessageSkpLoaderProcess();

  CMessageSkpLoaderProcess(const CMessageSkpLoaderProcess& from);

  inline CMessageSkpLoaderProcess& operator=(const CMessageSkpLoaderProcess& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageSkpLoaderProcess(CMessageSkpLoaderProcess&& from) noexcept
    : CMessageSkpLoaderProcess() {
    *this = ::std::move(from);
  }

  inline CMessageSkpLoaderProcess& operator=(CMessageSkpLoaderProcess&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSkpLoaderProcess& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageSkpLoaderProcess* internal_default_instance() {
    return reinterpret_cast<const CMessageSkpLoaderProcess*>(
               &_CMessageSkpLoaderProcess_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(CMessageSkpLoaderProcess* other);
  friend void swap(CMessageSkpLoaderProcess& a, CMessageSkpLoaderProcess& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageSkpLoaderProcess* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageSkpLoaderProcess>(NULL);
  }

  CMessageSkpLoaderProcess* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageSkpLoaderProcess>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageSkpLoaderProcess& from);
  void MergeFrom(const CMessageSkpLoaderProcess& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageSkpLoaderProcess* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 percent = 3;
  void clear_percent();
  static const int kPercentFieldNumber = 3;
  ::google::protobuf::int32 percent() const;
  void set_percent(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageSkpLoaderProcess)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 percent_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fcommon_2eproto::TableStruct;
  friend void ::protobuf_message_5fcommon_2eproto::InitDefaultsCMessageSkpLoaderProcessImpl();
};
// -------------------------------------------------------------------

class CMessageCADConverterRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageCADConverterRequest) */ {
 public:
  CMessageCADConverterRequest();
  virtual ~CMessageCADConverterRequest();

  CMessageCADConverterRequest(const CMessageCADConverterRequest& from);

  inline CMessageCADConverterRequest& operator=(const CMessageCADConverterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageCADConverterRequest(CMessageCADConverterRequest&& from) noexcept
    : CMessageCADConverterRequest() {
    *this = ::std::move(from);
  }

  inline CMessageCADConverterRequest& operator=(CMessageCADConverterRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCADConverterRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageCADConverterRequest* internal_default_instance() {
    return reinterpret_cast<const CMessageCADConverterRequest*>(
               &_CMessageCADConverterRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(CMessageCADConverterRequest* other);
  friend void swap(CMessageCADConverterRequest& a, CMessageCADConverterRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageCADConverterRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageCADConverterRequest>(NULL);
  }

  CMessageCADConverterRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageCADConverterRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageCADConverterRequest& from);
  void MergeFrom(const CMessageCADConverterRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageCADConverterRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // string strCADPath = 3;
  void clear_strcadpath();
  static const int kStrCADPathFieldNumber = 3;
  const ::std::string& strcadpath() const;
  void set_strcadpath(const ::std::string& value);
  #if LANG_CXX11
  void set_strcadpath(::std::string&& value);
  #endif
  void set_strcadpath(const char* value);
  void set_strcadpath(const char* value, size_t size);
  ::std::string* mutable_strcadpath();
  ::std::string* release_strcadpath();
  void set_allocated_strcadpath(::std::string* strcadpath);

  // string strDXFPath = 4;
  void clear_strdxfpath();
  static const int kStrDXFPathFieldNumber = 4;
  const ::std::string& strdxfpath() const;
  void set_strdxfpath(const ::std::string& value);
  #if LANG_CXX11
  void set_strdxfpath(::std::string&& value);
  #endif
  void set_strdxfpath(const char* value);
  void set_strdxfpath(const char* value, size_t size);
  ::std::string* mutable_strdxfpath();
  ::std::string* release_strdxfpath();
  void set_allocated_strdxfpath(::std::string* strdxfpath);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageCADConverterRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::internal::ArenaStringPtr strcadpath_;
  ::google::protobuf::internal::ArenaStringPtr strdxfpath_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fcommon_2eproto::TableStruct;
  friend void ::protobuf_message_5fcommon_2eproto::InitDefaultsCMessageCADConverterRequestImpl();
};
// -------------------------------------------------------------------

class CMessageCADConverterResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageCADConverterResponse) */ {
 public:
  CMessageCADConverterResponse();
  virtual ~CMessageCADConverterResponse();

  CMessageCADConverterResponse(const CMessageCADConverterResponse& from);

  inline CMessageCADConverterResponse& operator=(const CMessageCADConverterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageCADConverterResponse(CMessageCADConverterResponse&& from) noexcept
    : CMessageCADConverterResponse() {
    *this = ::std::move(from);
  }

  inline CMessageCADConverterResponse& operator=(CMessageCADConverterResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCADConverterResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageCADConverterResponse* internal_default_instance() {
    return reinterpret_cast<const CMessageCADConverterResponse*>(
               &_CMessageCADConverterResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(CMessageCADConverterResponse* other);
  friend void swap(CMessageCADConverterResponse& a, CMessageCADConverterResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageCADConverterResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageCADConverterResponse>(NULL);
  }

  CMessageCADConverterResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageCADConverterResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageCADConverterResponse& from);
  void MergeFrom(const CMessageCADConverterResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageCADConverterResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 state = 3;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageCADConverterResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 state_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fcommon_2eproto::TableStruct;
  friend void ::protobuf_message_5fcommon_2eproto::InitDefaultsCMessageCADConverterResponseImpl();
};
// -------------------------------------------------------------------

class CMessageWatchDogRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageWatchDogRequest) */ {
 public:
  CMessageWatchDogRequest();
  virtual ~CMessageWatchDogRequest();

  CMessageWatchDogRequest(const CMessageWatchDogRequest& from);

  inline CMessageWatchDogRequest& operator=(const CMessageWatchDogRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageWatchDogRequest(CMessageWatchDogRequest&& from) noexcept
    : CMessageWatchDogRequest() {
    *this = ::std::move(from);
  }

  inline CMessageWatchDogRequest& operator=(CMessageWatchDogRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageWatchDogRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageWatchDogRequest* internal_default_instance() {
    return reinterpret_cast<const CMessageWatchDogRequest*>(
               &_CMessageWatchDogRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(CMessageWatchDogRequest* other);
  friend void swap(CMessageWatchDogRequest& a, CMessageWatchDogRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageWatchDogRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageWatchDogRequest>(NULL);
  }

  CMessageWatchDogRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageWatchDogRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageWatchDogRequest& from);
  void MergeFrom(const CMessageWatchDogRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageWatchDogRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageWatchDogRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fcommon_2eproto::TableStruct;
  friend void ::protobuf_message_5fcommon_2eproto::InitDefaultsCMessageWatchDogRequestImpl();
};
// -------------------------------------------------------------------

class CMessageWatchDog : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageWatchDog) */ {
 public:
  CMessageWatchDog();
  virtual ~CMessageWatchDog();

  CMessageWatchDog(const CMessageWatchDog& from);

  inline CMessageWatchDog& operator=(const CMessageWatchDog& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageWatchDog(CMessageWatchDog&& from) noexcept
    : CMessageWatchDog() {
    *this = ::std::move(from);
  }

  inline CMessageWatchDog& operator=(CMessageWatchDog&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageWatchDog& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageWatchDog* internal_default_instance() {
    return reinterpret_cast<const CMessageWatchDog*>(
               &_CMessageWatchDog_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(CMessageWatchDog* other);
  friend void swap(CMessageWatchDog& a, CMessageWatchDog& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageWatchDog* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageWatchDog>(NULL);
  }

  CMessageWatchDog* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageWatchDog>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageWatchDog& from);
  void MergeFrom(const CMessageWatchDog& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageWatchDog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 state = 3;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // int32 source = 4;
  void clear_source();
  static const int kSourceFieldNumber = 4;
  ::google::protobuf::int32 source() const;
  void set_source(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageWatchDog)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 source_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fcommon_2eproto::TableStruct;
  friend void ::protobuf_message_5fcommon_2eproto::InitDefaultsCMessageWatchDogImpl();
};
// -------------------------------------------------------------------

class CMessageGeneratePannellumRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageGeneratePannellumRequest) */ {
 public:
  CMessageGeneratePannellumRequest();
  virtual ~CMessageGeneratePannellumRequest();

  CMessageGeneratePannellumRequest(const CMessageGeneratePannellumRequest& from);

  inline CMessageGeneratePannellumRequest& operator=(const CMessageGeneratePannellumRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageGeneratePannellumRequest(CMessageGeneratePannellumRequest&& from) noexcept
    : CMessageGeneratePannellumRequest() {
    *this = ::std::move(from);
  }

  inline CMessageGeneratePannellumRequest& operator=(CMessageGeneratePannellumRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGeneratePannellumRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageGeneratePannellumRequest* internal_default_instance() {
    return reinterpret_cast<const CMessageGeneratePannellumRequest*>(
               &_CMessageGeneratePannellumRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(CMessageGeneratePannellumRequest* other);
  friend void swap(CMessageGeneratePannellumRequest& a, CMessageGeneratePannellumRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageGeneratePannellumRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageGeneratePannellumRequest>(NULL);
  }

  CMessageGeneratePannellumRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageGeneratePannellumRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageGeneratePannellumRequest& from);
  void MergeFrom(const CMessageGeneratePannellumRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageGeneratePannellumRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // string strPicPath = 3;
  void clear_strpicpath();
  static const int kStrPicPathFieldNumber = 3;
  const ::std::string& strpicpath() const;
  void set_strpicpath(const ::std::string& value);
  #if LANG_CXX11
  void set_strpicpath(::std::string&& value);
  #endif
  void set_strpicpath(const char* value);
  void set_strpicpath(const char* value, size_t size);
  ::std::string* mutable_strpicpath();
  ::std::string* release_strpicpath();
  void set_allocated_strpicpath(::std::string* strpicpath);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageGeneratePannellumRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::internal::ArenaStringPtr strpicpath_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fcommon_2eproto::TableStruct;
  friend void ::protobuf_message_5fcommon_2eproto::InitDefaultsCMessageGeneratePannellumRequestImpl();
};
// -------------------------------------------------------------------

class CMessageGeneratePannellumResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageGeneratePannellumResponse) */ {
 public:
  CMessageGeneratePannellumResponse();
  virtual ~CMessageGeneratePannellumResponse();

  CMessageGeneratePannellumResponse(const CMessageGeneratePannellumResponse& from);

  inline CMessageGeneratePannellumResponse& operator=(const CMessageGeneratePannellumResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageGeneratePannellumResponse(CMessageGeneratePannellumResponse&& from) noexcept
    : CMessageGeneratePannellumResponse() {
    *this = ::std::move(from);
  }

  inline CMessageGeneratePannellumResponse& operator=(CMessageGeneratePannellumResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGeneratePannellumResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageGeneratePannellumResponse* internal_default_instance() {
    return reinterpret_cast<const CMessageGeneratePannellumResponse*>(
               &_CMessageGeneratePannellumResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(CMessageGeneratePannellumResponse* other);
  friend void swap(CMessageGeneratePannellumResponse& a, CMessageGeneratePannellumResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageGeneratePannellumResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageGeneratePannellumResponse>(NULL);
  }

  CMessageGeneratePannellumResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageGeneratePannellumResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageGeneratePannellumResponse& from);
  void MergeFrom(const CMessageGeneratePannellumResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageGeneratePannellumResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // string strCloudPath = 4;
  void clear_strcloudpath();
  static const int kStrCloudPathFieldNumber = 4;
  const ::std::string& strcloudpath() const;
  void set_strcloudpath(const ::std::string& value);
  #if LANG_CXX11
  void set_strcloudpath(::std::string&& value);
  #endif
  void set_strcloudpath(const char* value);
  void set_strcloudpath(const char* value, size_t size);
  ::std::string* mutable_strcloudpath();
  ::std::string* release_strcloudpath();
  void set_allocated_strcloudpath(::std::string* strcloudpath);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 state = 3;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageGeneratePannellumResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::internal::ArenaStringPtr strcloudpath_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 state_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fcommon_2eproto::TableStruct;
  friend void ::protobuf_message_5fcommon_2eproto::InitDefaultsCMessageGeneratePannellumResponseImpl();
};
// -------------------------------------------------------------------

class CMessageGeneratePannellumProcess : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageGeneratePannellumProcess) */ {
 public:
  CMessageGeneratePannellumProcess();
  virtual ~CMessageGeneratePannellumProcess();

  CMessageGeneratePannellumProcess(const CMessageGeneratePannellumProcess& from);

  inline CMessageGeneratePannellumProcess& operator=(const CMessageGeneratePannellumProcess& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageGeneratePannellumProcess(CMessageGeneratePannellumProcess&& from) noexcept
    : CMessageGeneratePannellumProcess() {
    *this = ::std::move(from);
  }

  inline CMessageGeneratePannellumProcess& operator=(CMessageGeneratePannellumProcess&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGeneratePannellumProcess& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageGeneratePannellumProcess* internal_default_instance() {
    return reinterpret_cast<const CMessageGeneratePannellumProcess*>(
               &_CMessageGeneratePannellumProcess_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(CMessageGeneratePannellumProcess* other);
  friend void swap(CMessageGeneratePannellumProcess& a, CMessageGeneratePannellumProcess& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageGeneratePannellumProcess* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageGeneratePannellumProcess>(NULL);
  }

  CMessageGeneratePannellumProcess* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageGeneratePannellumProcess>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageGeneratePannellumProcess& from);
  void MergeFrom(const CMessageGeneratePannellumProcess& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageGeneratePannellumProcess* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 percent = 3;
  void clear_percent();
  static const int kPercentFieldNumber = 3;
  ::google::protobuf::int32 percent() const;
  void set_percent(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageGeneratePannellumProcess)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 percent_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fcommon_2eproto::TableStruct;
  friend void ::protobuf_message_5fcommon_2eproto::InitDefaultsCMessageGeneratePannellumProcessImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMessageDependentPakList

// repeated string fileList = 1;
inline int CMessageDependentPakList::filelist_size() const {
  return filelist_.size();
}
inline void CMessageDependentPakList::clear_filelist() {
  filelist_.Clear();
}
inline const ::std::string& CMessageDependentPakList::filelist(int index) const {
  // @@protoc_insertion_point(field_get:d5.CMessageDependentPakList.fileList)
  return filelist_.Get(index);
}
inline ::std::string* CMessageDependentPakList::mutable_filelist(int index) {
  // @@protoc_insertion_point(field_mutable:d5.CMessageDependentPakList.fileList)
  return filelist_.Mutable(index);
}
inline void CMessageDependentPakList::set_filelist(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:d5.CMessageDependentPakList.fileList)
  filelist_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CMessageDependentPakList::set_filelist(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:d5.CMessageDependentPakList.fileList)
  filelist_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CMessageDependentPakList::set_filelist(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  filelist_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:d5.CMessageDependentPakList.fileList)
}
inline void CMessageDependentPakList::set_filelist(int index, const char* value, size_t size) {
  filelist_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageDependentPakList.fileList)
}
inline ::std::string* CMessageDependentPakList::add_filelist() {
  // @@protoc_insertion_point(field_add_mutable:d5.CMessageDependentPakList.fileList)
  return filelist_.Add();
}
inline void CMessageDependentPakList::add_filelist(const ::std::string& value) {
  filelist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:d5.CMessageDependentPakList.fileList)
}
#if LANG_CXX11
inline void CMessageDependentPakList::add_filelist(::std::string&& value) {
  filelist_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:d5.CMessageDependentPakList.fileList)
}
#endif
inline void CMessageDependentPakList::add_filelist(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  filelist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:d5.CMessageDependentPakList.fileList)
}
inline void CMessageDependentPakList::add_filelist(const char* value, size_t size) {
  filelist_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:d5.CMessageDependentPakList.fileList)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMessageDependentPakList::filelist() const {
  // @@protoc_insertion_point(field_list:d5.CMessageDependentPakList.fileList)
  return filelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMessageDependentPakList::mutable_filelist() {
  // @@protoc_insertion_point(field_mutable_list:d5.CMessageDependentPakList.fileList)
  return &filelist_;
}

// -------------------------------------------------------------------

// CMessageFilesUnit

// string url = 1;
inline void CMessageFilesUnit::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageFilesUnit::url() const {
  // @@protoc_insertion_point(field_get:d5.CMessageFilesUnit.url)
  return url_.GetNoArena();
}
inline void CMessageFilesUnit::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageFilesUnit.url)
}
#if LANG_CXX11
inline void CMessageFilesUnit::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageFilesUnit.url)
}
#endif
inline void CMessageFilesUnit::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageFilesUnit.url)
}
inline void CMessageFilesUnit::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageFilesUnit.url)
}
inline ::std::string* CMessageFilesUnit::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageFilesUnit.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageFilesUnit::release_url() {
  // @@protoc_insertion_point(field_release:d5.CMessageFilesUnit.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageFilesUnit::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageFilesUnit.url)
}

// .d5.db2.files_map data = 2;
inline bool CMessageFilesUnit::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline const ::d5::db2::files_map& CMessageFilesUnit::data() const {
  const ::d5::db2::files_map* p = data_;
  // @@protoc_insertion_point(field_get:d5.CMessageFilesUnit.data)
  return p != NULL ? *p : *reinterpret_cast<const ::d5::db2::files_map*>(
      &::d5::db2::_files_map_default_instance_);
}
inline ::d5::db2::files_map* CMessageFilesUnit::release_data() {
  // @@protoc_insertion_point(field_release:d5.CMessageFilesUnit.data)
  
  ::d5::db2::files_map* temp = data_;
  data_ = NULL;
  return temp;
}
inline ::d5::db2::files_map* CMessageFilesUnit::mutable_data() {
  
  if (data_ == NULL) {
    data_ = ::google::protobuf::Arena::Create< ::d5::db2::files_map >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:d5.CMessageFilesUnit.data)
  return data_;
}
inline void CMessageFilesUnit::set_allocated_data(::d5::db2::files_map* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_);
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageFilesUnit.data)
}

// -------------------------------------------------------------------

// CMessageSkpLoader

// int32 type = 1;
inline void CMessageSkpLoader::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageSkpLoader::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageSkpLoader.type)
  return type_;
}
inline void CMessageSkpLoader::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageSkpLoader.type)
}

// string uuid = 2;
inline void CMessageSkpLoader::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageSkpLoader::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageSkpLoader.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageSkpLoader::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageSkpLoader.uuid)
}
#if LANG_CXX11
inline void CMessageSkpLoader::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageSkpLoader.uuid)
}
#endif
inline void CMessageSkpLoader::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageSkpLoader.uuid)
}
inline void CMessageSkpLoader::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageSkpLoader.uuid)
}
inline ::std::string* CMessageSkpLoader::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageSkpLoader.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageSkpLoader::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageSkpLoader.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageSkpLoader::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageSkpLoader.uuid)
}

// string strSKPPath = 3;
inline void CMessageSkpLoader::clear_strskppath() {
  strskppath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageSkpLoader::strskppath() const {
  // @@protoc_insertion_point(field_get:d5.CMessageSkpLoader.strSKPPath)
  return strskppath_.GetNoArena();
}
inline void CMessageSkpLoader::set_strskppath(const ::std::string& value) {
  
  strskppath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageSkpLoader.strSKPPath)
}
#if LANG_CXX11
inline void CMessageSkpLoader::set_strskppath(::std::string&& value) {
  
  strskppath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageSkpLoader.strSKPPath)
}
#endif
inline void CMessageSkpLoader::set_strskppath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  strskppath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageSkpLoader.strSKPPath)
}
inline void CMessageSkpLoader::set_strskppath(const char* value, size_t size) {
  
  strskppath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageSkpLoader.strSKPPath)
}
inline ::std::string* CMessageSkpLoader::mutable_strskppath() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageSkpLoader.strSKPPath)
  return strskppath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageSkpLoader::release_strskppath() {
  // @@protoc_insertion_point(field_release:d5.CMessageSkpLoader.strSKPPath)
  
  return strskppath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageSkpLoader::set_allocated_strskppath(::std::string* strskppath) {
  if (strskppath != NULL) {
    
  } else {
    
  }
  strskppath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strskppath);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageSkpLoader.strSKPPath)
}

// string strD5MPath = 4;
inline void CMessageSkpLoader::clear_strd5mpath() {
  strd5mpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageSkpLoader::strd5mpath() const {
  // @@protoc_insertion_point(field_get:d5.CMessageSkpLoader.strD5MPath)
  return strd5mpath_.GetNoArena();
}
inline void CMessageSkpLoader::set_strd5mpath(const ::std::string& value) {
  
  strd5mpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageSkpLoader.strD5MPath)
}
#if LANG_CXX11
inline void CMessageSkpLoader::set_strd5mpath(::std::string&& value) {
  
  strd5mpath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageSkpLoader.strD5MPath)
}
#endif
inline void CMessageSkpLoader::set_strd5mpath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  strd5mpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageSkpLoader.strD5MPath)
}
inline void CMessageSkpLoader::set_strd5mpath(const char* value, size_t size) {
  
  strd5mpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageSkpLoader.strD5MPath)
}
inline ::std::string* CMessageSkpLoader::mutable_strd5mpath() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageSkpLoader.strD5MPath)
  return strd5mpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageSkpLoader::release_strd5mpath() {
  // @@protoc_insertion_point(field_release:d5.CMessageSkpLoader.strD5MPath)
  
  return strd5mpath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageSkpLoader::set_allocated_strd5mpath(::std::string* strd5mpath) {
  if (strd5mpath != NULL) {
    
  } else {
    
  }
  strd5mpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strd5mpath);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageSkpLoader.strD5MPath)
}

// string strTexturePath = 5;
inline void CMessageSkpLoader::clear_strtexturepath() {
  strtexturepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageSkpLoader::strtexturepath() const {
  // @@protoc_insertion_point(field_get:d5.CMessageSkpLoader.strTexturePath)
  return strtexturepath_.GetNoArena();
}
inline void CMessageSkpLoader::set_strtexturepath(const ::std::string& value) {
  
  strtexturepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageSkpLoader.strTexturePath)
}
#if LANG_CXX11
inline void CMessageSkpLoader::set_strtexturepath(::std::string&& value) {
  
  strtexturepath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageSkpLoader.strTexturePath)
}
#endif
inline void CMessageSkpLoader::set_strtexturepath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  strtexturepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageSkpLoader.strTexturePath)
}
inline void CMessageSkpLoader::set_strtexturepath(const char* value, size_t size) {
  
  strtexturepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageSkpLoader.strTexturePath)
}
inline ::std::string* CMessageSkpLoader::mutable_strtexturepath() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageSkpLoader.strTexturePath)
  return strtexturepath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageSkpLoader::release_strtexturepath() {
  // @@protoc_insertion_point(field_release:d5.CMessageSkpLoader.strTexturePath)
  
  return strtexturepath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageSkpLoader::set_allocated_strtexturepath(::std::string* strtexturepath) {
  if (strtexturepath != NULL) {
    
  } else {
    
  }
  strtexturepath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strtexturepath);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageSkpLoader.strTexturePath)
}

// bool withGroup = 6;
inline void CMessageSkpLoader::clear_withgroup() {
  withgroup_ = false;
}
inline bool CMessageSkpLoader::withgroup() const {
  // @@protoc_insertion_point(field_get:d5.CMessageSkpLoader.withGroup)
  return withgroup_;
}
inline void CMessageSkpLoader::set_withgroup(bool value) {
  
  withgroup_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageSkpLoader.withGroup)
}

// bool withComponent = 7;
inline void CMessageSkpLoader::clear_withcomponent() {
  withcomponent_ = false;
}
inline bool CMessageSkpLoader::withcomponent() const {
  // @@protoc_insertion_point(field_get:d5.CMessageSkpLoader.withComponent)
  return withcomponent_;
}
inline void CMessageSkpLoader::set_withcomponent(bool value) {
  
  withcomponent_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageSkpLoader.withComponent)
}

// -------------------------------------------------------------------

// CMessageSkpLoaderResponse

// int32 type = 1;
inline void CMessageSkpLoaderResponse::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageSkpLoaderResponse::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageSkpLoaderResponse.type)
  return type_;
}
inline void CMessageSkpLoaderResponse::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageSkpLoaderResponse.type)
}

// string uuid = 2;
inline void CMessageSkpLoaderResponse::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageSkpLoaderResponse::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageSkpLoaderResponse.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageSkpLoaderResponse::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageSkpLoaderResponse.uuid)
}
#if LANG_CXX11
inline void CMessageSkpLoaderResponse::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageSkpLoaderResponse.uuid)
}
#endif
inline void CMessageSkpLoaderResponse::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageSkpLoaderResponse.uuid)
}
inline void CMessageSkpLoaderResponse::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageSkpLoaderResponse.uuid)
}
inline ::std::string* CMessageSkpLoaderResponse::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageSkpLoaderResponse.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageSkpLoaderResponse::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageSkpLoaderResponse.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageSkpLoaderResponse::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageSkpLoaderResponse.uuid)
}

// int32 state = 3;
inline void CMessageSkpLoaderResponse::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 CMessageSkpLoaderResponse::state() const {
  // @@protoc_insertion_point(field_get:d5.CMessageSkpLoaderResponse.state)
  return state_;
}
inline void CMessageSkpLoaderResponse::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageSkpLoaderResponse.state)
}

// -------------------------------------------------------------------

// CMessageSkpLoaderProcess

// int32 type = 1;
inline void CMessageSkpLoaderProcess::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageSkpLoaderProcess::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageSkpLoaderProcess.type)
  return type_;
}
inline void CMessageSkpLoaderProcess::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageSkpLoaderProcess.type)
}

// string uuid = 2;
inline void CMessageSkpLoaderProcess::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageSkpLoaderProcess::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageSkpLoaderProcess.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageSkpLoaderProcess::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageSkpLoaderProcess.uuid)
}
#if LANG_CXX11
inline void CMessageSkpLoaderProcess::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageSkpLoaderProcess.uuid)
}
#endif
inline void CMessageSkpLoaderProcess::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageSkpLoaderProcess.uuid)
}
inline void CMessageSkpLoaderProcess::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageSkpLoaderProcess.uuid)
}
inline ::std::string* CMessageSkpLoaderProcess::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageSkpLoaderProcess.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageSkpLoaderProcess::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageSkpLoaderProcess.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageSkpLoaderProcess::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageSkpLoaderProcess.uuid)
}

// int32 percent = 3;
inline void CMessageSkpLoaderProcess::clear_percent() {
  percent_ = 0;
}
inline ::google::protobuf::int32 CMessageSkpLoaderProcess::percent() const {
  // @@protoc_insertion_point(field_get:d5.CMessageSkpLoaderProcess.percent)
  return percent_;
}
inline void CMessageSkpLoaderProcess::set_percent(::google::protobuf::int32 value) {
  
  percent_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageSkpLoaderProcess.percent)
}

// -------------------------------------------------------------------

// CMessageCADConverterRequest

// int32 type = 1;
inline void CMessageCADConverterRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageCADConverterRequest::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageCADConverterRequest.type)
  return type_;
}
inline void CMessageCADConverterRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageCADConverterRequest.type)
}

// string uuid = 2;
inline void CMessageCADConverterRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageCADConverterRequest::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageCADConverterRequest.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageCADConverterRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageCADConverterRequest.uuid)
}
#if LANG_CXX11
inline void CMessageCADConverterRequest::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageCADConverterRequest.uuid)
}
#endif
inline void CMessageCADConverterRequest::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageCADConverterRequest.uuid)
}
inline void CMessageCADConverterRequest::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageCADConverterRequest.uuid)
}
inline ::std::string* CMessageCADConverterRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageCADConverterRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageCADConverterRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageCADConverterRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageCADConverterRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageCADConverterRequest.uuid)
}

// string strCADPath = 3;
inline void CMessageCADConverterRequest::clear_strcadpath() {
  strcadpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageCADConverterRequest::strcadpath() const {
  // @@protoc_insertion_point(field_get:d5.CMessageCADConverterRequest.strCADPath)
  return strcadpath_.GetNoArena();
}
inline void CMessageCADConverterRequest::set_strcadpath(const ::std::string& value) {
  
  strcadpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageCADConverterRequest.strCADPath)
}
#if LANG_CXX11
inline void CMessageCADConverterRequest::set_strcadpath(::std::string&& value) {
  
  strcadpath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageCADConverterRequest.strCADPath)
}
#endif
inline void CMessageCADConverterRequest::set_strcadpath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  strcadpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageCADConverterRequest.strCADPath)
}
inline void CMessageCADConverterRequest::set_strcadpath(const char* value, size_t size) {
  
  strcadpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageCADConverterRequest.strCADPath)
}
inline ::std::string* CMessageCADConverterRequest::mutable_strcadpath() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageCADConverterRequest.strCADPath)
  return strcadpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageCADConverterRequest::release_strcadpath() {
  // @@protoc_insertion_point(field_release:d5.CMessageCADConverterRequest.strCADPath)
  
  return strcadpath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageCADConverterRequest::set_allocated_strcadpath(::std::string* strcadpath) {
  if (strcadpath != NULL) {
    
  } else {
    
  }
  strcadpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcadpath);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageCADConverterRequest.strCADPath)
}

// string strDXFPath = 4;
inline void CMessageCADConverterRequest::clear_strdxfpath() {
  strdxfpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageCADConverterRequest::strdxfpath() const {
  // @@protoc_insertion_point(field_get:d5.CMessageCADConverterRequest.strDXFPath)
  return strdxfpath_.GetNoArena();
}
inline void CMessageCADConverterRequest::set_strdxfpath(const ::std::string& value) {
  
  strdxfpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageCADConverterRequest.strDXFPath)
}
#if LANG_CXX11
inline void CMessageCADConverterRequest::set_strdxfpath(::std::string&& value) {
  
  strdxfpath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageCADConverterRequest.strDXFPath)
}
#endif
inline void CMessageCADConverterRequest::set_strdxfpath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  strdxfpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageCADConverterRequest.strDXFPath)
}
inline void CMessageCADConverterRequest::set_strdxfpath(const char* value, size_t size) {
  
  strdxfpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageCADConverterRequest.strDXFPath)
}
inline ::std::string* CMessageCADConverterRequest::mutable_strdxfpath() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageCADConverterRequest.strDXFPath)
  return strdxfpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageCADConverterRequest::release_strdxfpath() {
  // @@protoc_insertion_point(field_release:d5.CMessageCADConverterRequest.strDXFPath)
  
  return strdxfpath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageCADConverterRequest::set_allocated_strdxfpath(::std::string* strdxfpath) {
  if (strdxfpath != NULL) {
    
  } else {
    
  }
  strdxfpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdxfpath);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageCADConverterRequest.strDXFPath)
}

// -------------------------------------------------------------------

// CMessageCADConverterResponse

// int32 type = 1;
inline void CMessageCADConverterResponse::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageCADConverterResponse::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageCADConverterResponse.type)
  return type_;
}
inline void CMessageCADConverterResponse::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageCADConverterResponse.type)
}

// string uuid = 2;
inline void CMessageCADConverterResponse::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageCADConverterResponse::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageCADConverterResponse.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageCADConverterResponse::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageCADConverterResponse.uuid)
}
#if LANG_CXX11
inline void CMessageCADConverterResponse::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageCADConverterResponse.uuid)
}
#endif
inline void CMessageCADConverterResponse::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageCADConverterResponse.uuid)
}
inline void CMessageCADConverterResponse::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageCADConverterResponse.uuid)
}
inline ::std::string* CMessageCADConverterResponse::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageCADConverterResponse.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageCADConverterResponse::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageCADConverterResponse.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageCADConverterResponse::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageCADConverterResponse.uuid)
}

// int32 state = 3;
inline void CMessageCADConverterResponse::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 CMessageCADConverterResponse::state() const {
  // @@protoc_insertion_point(field_get:d5.CMessageCADConverterResponse.state)
  return state_;
}
inline void CMessageCADConverterResponse::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageCADConverterResponse.state)
}

// -------------------------------------------------------------------

// CMessageWatchDogRequest

// int32 type = 1;
inline void CMessageWatchDogRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageWatchDogRequest::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageWatchDogRequest.type)
  return type_;
}
inline void CMessageWatchDogRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageWatchDogRequest.type)
}

// string uuid = 2;
inline void CMessageWatchDogRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageWatchDogRequest::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageWatchDogRequest.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageWatchDogRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageWatchDogRequest.uuid)
}
#if LANG_CXX11
inline void CMessageWatchDogRequest::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageWatchDogRequest.uuid)
}
#endif
inline void CMessageWatchDogRequest::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageWatchDogRequest.uuid)
}
inline void CMessageWatchDogRequest::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageWatchDogRequest.uuid)
}
inline ::std::string* CMessageWatchDogRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageWatchDogRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageWatchDogRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageWatchDogRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageWatchDogRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageWatchDogRequest.uuid)
}

// -------------------------------------------------------------------

// CMessageWatchDog

// int32 type = 1;
inline void CMessageWatchDog::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageWatchDog::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageWatchDog.type)
  return type_;
}
inline void CMessageWatchDog::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageWatchDog.type)
}

// string uuid = 2;
inline void CMessageWatchDog::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageWatchDog::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageWatchDog.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageWatchDog::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageWatchDog.uuid)
}
#if LANG_CXX11
inline void CMessageWatchDog::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageWatchDog.uuid)
}
#endif
inline void CMessageWatchDog::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageWatchDog.uuid)
}
inline void CMessageWatchDog::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageWatchDog.uuid)
}
inline ::std::string* CMessageWatchDog::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageWatchDog.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageWatchDog::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageWatchDog.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageWatchDog::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageWatchDog.uuid)
}

// int32 state = 3;
inline void CMessageWatchDog::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 CMessageWatchDog::state() const {
  // @@protoc_insertion_point(field_get:d5.CMessageWatchDog.state)
  return state_;
}
inline void CMessageWatchDog::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageWatchDog.state)
}

// int32 source = 4;
inline void CMessageWatchDog::clear_source() {
  source_ = 0;
}
inline ::google::protobuf::int32 CMessageWatchDog::source() const {
  // @@protoc_insertion_point(field_get:d5.CMessageWatchDog.source)
  return source_;
}
inline void CMessageWatchDog::set_source(::google::protobuf::int32 value) {
  
  source_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageWatchDog.source)
}

// -------------------------------------------------------------------

// CMessageGeneratePannellumRequest

// int32 type = 1;
inline void CMessageGeneratePannellumRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageGeneratePannellumRequest::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageGeneratePannellumRequest.type)
  return type_;
}
inline void CMessageGeneratePannellumRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageGeneratePannellumRequest.type)
}

// string uuid = 2;
inline void CMessageGeneratePannellumRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageGeneratePannellumRequest::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageGeneratePannellumRequest.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageGeneratePannellumRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageGeneratePannellumRequest.uuid)
}
#if LANG_CXX11
inline void CMessageGeneratePannellumRequest::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageGeneratePannellumRequest.uuid)
}
#endif
inline void CMessageGeneratePannellumRequest::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageGeneratePannellumRequest.uuid)
}
inline void CMessageGeneratePannellumRequest::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageGeneratePannellumRequest.uuid)
}
inline ::std::string* CMessageGeneratePannellumRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageGeneratePannellumRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageGeneratePannellumRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageGeneratePannellumRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageGeneratePannellumRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageGeneratePannellumRequest.uuid)
}

// string strPicPath = 3;
inline void CMessageGeneratePannellumRequest::clear_strpicpath() {
  strpicpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageGeneratePannellumRequest::strpicpath() const {
  // @@protoc_insertion_point(field_get:d5.CMessageGeneratePannellumRequest.strPicPath)
  return strpicpath_.GetNoArena();
}
inline void CMessageGeneratePannellumRequest::set_strpicpath(const ::std::string& value) {
  
  strpicpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageGeneratePannellumRequest.strPicPath)
}
#if LANG_CXX11
inline void CMessageGeneratePannellumRequest::set_strpicpath(::std::string&& value) {
  
  strpicpath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageGeneratePannellumRequest.strPicPath)
}
#endif
inline void CMessageGeneratePannellumRequest::set_strpicpath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  strpicpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageGeneratePannellumRequest.strPicPath)
}
inline void CMessageGeneratePannellumRequest::set_strpicpath(const char* value, size_t size) {
  
  strpicpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageGeneratePannellumRequest.strPicPath)
}
inline ::std::string* CMessageGeneratePannellumRequest::mutable_strpicpath() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageGeneratePannellumRequest.strPicPath)
  return strpicpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageGeneratePannellumRequest::release_strpicpath() {
  // @@protoc_insertion_point(field_release:d5.CMessageGeneratePannellumRequest.strPicPath)
  
  return strpicpath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageGeneratePannellumRequest::set_allocated_strpicpath(::std::string* strpicpath) {
  if (strpicpath != NULL) {
    
  } else {
    
  }
  strpicpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpicpath);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageGeneratePannellumRequest.strPicPath)
}

// -------------------------------------------------------------------

// CMessageGeneratePannellumResponse

// int32 type = 1;
inline void CMessageGeneratePannellumResponse::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageGeneratePannellumResponse::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageGeneratePannellumResponse.type)
  return type_;
}
inline void CMessageGeneratePannellumResponse::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageGeneratePannellumResponse.type)
}

// string uuid = 2;
inline void CMessageGeneratePannellumResponse::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageGeneratePannellumResponse::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageGeneratePannellumResponse.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageGeneratePannellumResponse::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageGeneratePannellumResponse.uuid)
}
#if LANG_CXX11
inline void CMessageGeneratePannellumResponse::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageGeneratePannellumResponse.uuid)
}
#endif
inline void CMessageGeneratePannellumResponse::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageGeneratePannellumResponse.uuid)
}
inline void CMessageGeneratePannellumResponse::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageGeneratePannellumResponse.uuid)
}
inline ::std::string* CMessageGeneratePannellumResponse::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageGeneratePannellumResponse.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageGeneratePannellumResponse::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageGeneratePannellumResponse.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageGeneratePannellumResponse::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageGeneratePannellumResponse.uuid)
}

// int32 state = 3;
inline void CMessageGeneratePannellumResponse::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 CMessageGeneratePannellumResponse::state() const {
  // @@protoc_insertion_point(field_get:d5.CMessageGeneratePannellumResponse.state)
  return state_;
}
inline void CMessageGeneratePannellumResponse::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageGeneratePannellumResponse.state)
}

// string strCloudPath = 4;
inline void CMessageGeneratePannellumResponse::clear_strcloudpath() {
  strcloudpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageGeneratePannellumResponse::strcloudpath() const {
  // @@protoc_insertion_point(field_get:d5.CMessageGeneratePannellumResponse.strCloudPath)
  return strcloudpath_.GetNoArena();
}
inline void CMessageGeneratePannellumResponse::set_strcloudpath(const ::std::string& value) {
  
  strcloudpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageGeneratePannellumResponse.strCloudPath)
}
#if LANG_CXX11
inline void CMessageGeneratePannellumResponse::set_strcloudpath(::std::string&& value) {
  
  strcloudpath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageGeneratePannellumResponse.strCloudPath)
}
#endif
inline void CMessageGeneratePannellumResponse::set_strcloudpath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  strcloudpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageGeneratePannellumResponse.strCloudPath)
}
inline void CMessageGeneratePannellumResponse::set_strcloudpath(const char* value, size_t size) {
  
  strcloudpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageGeneratePannellumResponse.strCloudPath)
}
inline ::std::string* CMessageGeneratePannellumResponse::mutable_strcloudpath() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageGeneratePannellumResponse.strCloudPath)
  return strcloudpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageGeneratePannellumResponse::release_strcloudpath() {
  // @@protoc_insertion_point(field_release:d5.CMessageGeneratePannellumResponse.strCloudPath)
  
  return strcloudpath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageGeneratePannellumResponse::set_allocated_strcloudpath(::std::string* strcloudpath) {
  if (strcloudpath != NULL) {
    
  } else {
    
  }
  strcloudpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcloudpath);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageGeneratePannellumResponse.strCloudPath)
}

// -------------------------------------------------------------------

// CMessageGeneratePannellumProcess

// int32 type = 1;
inline void CMessageGeneratePannellumProcess::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageGeneratePannellumProcess::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageGeneratePannellumProcess.type)
  return type_;
}
inline void CMessageGeneratePannellumProcess::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageGeneratePannellumProcess.type)
}

// string uuid = 2;
inline void CMessageGeneratePannellumProcess::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageGeneratePannellumProcess::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageGeneratePannellumProcess.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageGeneratePannellumProcess::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageGeneratePannellumProcess.uuid)
}
#if LANG_CXX11
inline void CMessageGeneratePannellumProcess::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageGeneratePannellumProcess.uuid)
}
#endif
inline void CMessageGeneratePannellumProcess::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageGeneratePannellumProcess.uuid)
}
inline void CMessageGeneratePannellumProcess::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageGeneratePannellumProcess.uuid)
}
inline ::std::string* CMessageGeneratePannellumProcess::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageGeneratePannellumProcess.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageGeneratePannellumProcess::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageGeneratePannellumProcess.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageGeneratePannellumProcess::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageGeneratePannellumProcess.uuid)
}

// int32 percent = 3;
inline void CMessageGeneratePannellumProcess::clear_percent() {
  percent_ = 0;
}
inline ::google::protobuf::int32 CMessageGeneratePannellumProcess::percent() const {
  // @@protoc_insertion_point(field_get:d5.CMessageGeneratePannellumProcess.percent)
  return percent_;
}
inline void CMessageGeneratePannellumProcess::set_percent(::google::protobuf::int32 value) {
  
  percent_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageGeneratePannellumProcess.percent)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace d5

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_5fcommon_2eproto_INCLUDED
