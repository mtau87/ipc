// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_download.proto

#ifndef PROTOBUF_message_5fdownload_2eproto_INCLUDED
#define PROTOBUF_message_5fdownload_2eproto_INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_message_5fdownload_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsCMessageDownloadRequestImpl();
void InitDefaultsCMessageDownloadRequest();
void InitDefaultsCMessageDownloadResponseImpl();
void InitDefaultsCMessageDownloadResponse();
void InitDefaultsCMessageDownloadProcessResponseImpl();
void InitDefaultsCMessageDownloadProcessResponse();
inline void InitDefaults() {
  InitDefaultsCMessageDownloadRequest();
  InitDefaultsCMessageDownloadResponse();
  InitDefaultsCMessageDownloadProcessResponse();
}
}  // namespace protobuf_message_5fdownload_2eproto
namespace d5 {
class CMessageDownloadProcessResponse;
class CMessageDownloadProcessResponseDefaultTypeInternal;
extern CMessageDownloadProcessResponseDefaultTypeInternal _CMessageDownloadProcessResponse_default_instance_;
class CMessageDownloadRequest;
class CMessageDownloadRequestDefaultTypeInternal;
extern CMessageDownloadRequestDefaultTypeInternal _CMessageDownloadRequest_default_instance_;
class CMessageDownloadResponse;
class CMessageDownloadResponseDefaultTypeInternal;
extern CMessageDownloadResponseDefaultTypeInternal _CMessageDownloadResponse_default_instance_;
}  // namespace d5
namespace google {
namespace protobuf {
template<> ::d5::CMessageDownloadProcessResponse* Arena::Create< ::d5::CMessageDownloadProcessResponse>(Arena*);
template<> ::d5::CMessageDownloadRequest* Arena::Create< ::d5::CMessageDownloadRequest>(Arena*);
template<> ::d5::CMessageDownloadResponse* Arena::Create< ::d5::CMessageDownloadResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace d5 {

// ===================================================================

class CMessageDownloadRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageDownloadRequest) */ {
 public:
  CMessageDownloadRequest();
  virtual ~CMessageDownloadRequest();

  CMessageDownloadRequest(const CMessageDownloadRequest& from);

  inline CMessageDownloadRequest& operator=(const CMessageDownloadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageDownloadRequest(CMessageDownloadRequest&& from) noexcept
    : CMessageDownloadRequest() {
    *this = ::std::move(from);
  }

  inline CMessageDownloadRequest& operator=(CMessageDownloadRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageDownloadRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageDownloadRequest* internal_default_instance() {
    return reinterpret_cast<const CMessageDownloadRequest*>(
               &_CMessageDownloadRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CMessageDownloadRequest* other);
  friend void swap(CMessageDownloadRequest& a, CMessageDownloadRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageDownloadRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageDownloadRequest>(NULL);
  }

  CMessageDownloadRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageDownloadRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageDownloadRequest& from);
  void MergeFrom(const CMessageDownloadRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageDownloadRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // string url = 3;
  void clear_url();
  static const int kUrlFieldNumber = 3;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // string path = 4;
  void clear_path();
  static const int kPathFieldNumber = 4;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageDownloadRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fdownload_2eproto::TableStruct;
  friend void ::protobuf_message_5fdownload_2eproto::InitDefaultsCMessageDownloadRequestImpl();
};
// -------------------------------------------------------------------

class CMessageDownloadResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageDownloadResponse) */ {
 public:
  CMessageDownloadResponse();
  virtual ~CMessageDownloadResponse();

  CMessageDownloadResponse(const CMessageDownloadResponse& from);

  inline CMessageDownloadResponse& operator=(const CMessageDownloadResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageDownloadResponse(CMessageDownloadResponse&& from) noexcept
    : CMessageDownloadResponse() {
    *this = ::std::move(from);
  }

  inline CMessageDownloadResponse& operator=(CMessageDownloadResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageDownloadResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageDownloadResponse* internal_default_instance() {
    return reinterpret_cast<const CMessageDownloadResponse*>(
               &_CMessageDownloadResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CMessageDownloadResponse* other);
  friend void swap(CMessageDownloadResponse& a, CMessageDownloadResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageDownloadResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageDownloadResponse>(NULL);
  }

  CMessageDownloadResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageDownloadResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageDownloadResponse& from);
  void MergeFrom(const CMessageDownloadResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageDownloadResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // string url = 3;
  void clear_url();
  static const int kUrlFieldNumber = 3;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 state = 4;
  void clear_state();
  static const int kStateFieldNumber = 4;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageDownloadResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 state_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fdownload_2eproto::TableStruct;
  friend void ::protobuf_message_5fdownload_2eproto::InitDefaultsCMessageDownloadResponseImpl();
};
// -------------------------------------------------------------------

class CMessageDownloadProcessResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageDownloadProcessResponse) */ {
 public:
  CMessageDownloadProcessResponse();
  virtual ~CMessageDownloadProcessResponse();

  CMessageDownloadProcessResponse(const CMessageDownloadProcessResponse& from);

  inline CMessageDownloadProcessResponse& operator=(const CMessageDownloadProcessResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageDownloadProcessResponse(CMessageDownloadProcessResponse&& from) noexcept
    : CMessageDownloadProcessResponse() {
    *this = ::std::move(from);
  }

  inline CMessageDownloadProcessResponse& operator=(CMessageDownloadProcessResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageDownloadProcessResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageDownloadProcessResponse* internal_default_instance() {
    return reinterpret_cast<const CMessageDownloadProcessResponse*>(
               &_CMessageDownloadProcessResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CMessageDownloadProcessResponse* other);
  friend void swap(CMessageDownloadProcessResponse& a, CMessageDownloadProcessResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageDownloadProcessResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageDownloadProcessResponse>(NULL);
  }

  CMessageDownloadProcessResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageDownloadProcessResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageDownloadProcessResponse& from);
  void MergeFrom(const CMessageDownloadProcessResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageDownloadProcessResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // string url = 3;
  void clear_url();
  static const int kUrlFieldNumber = 3;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 size = 4;
  void clear_size();
  static const int kSizeFieldNumber = 4;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // int32 total = 5;
  void clear_total();
  static const int kTotalFieldNumber = 5;
  ::google::protobuf::int32 total() const;
  void set_total(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageDownloadProcessResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 size_;
  ::google::protobuf::int32 total_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fdownload_2eproto::TableStruct;
  friend void ::protobuf_message_5fdownload_2eproto::InitDefaultsCMessageDownloadProcessResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMessageDownloadRequest

// int32 type = 1;
inline void CMessageDownloadRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageDownloadRequest::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDownloadRequest.type)
  return type_;
}
inline void CMessageDownloadRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageDownloadRequest.type)
}

// string uuid = 2;
inline void CMessageDownloadRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageDownloadRequest::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDownloadRequest.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageDownloadRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageDownloadRequest.uuid)
}
#if LANG_CXX11
inline void CMessageDownloadRequest::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageDownloadRequest.uuid)
}
#endif
inline void CMessageDownloadRequest::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageDownloadRequest.uuid)
}
inline void CMessageDownloadRequest::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageDownloadRequest.uuid)
}
inline ::std::string* CMessageDownloadRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageDownloadRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageDownloadRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageDownloadRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageDownloadRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageDownloadRequest.uuid)
}

// string url = 3;
inline void CMessageDownloadRequest::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageDownloadRequest::url() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDownloadRequest.url)
  return url_.GetNoArena();
}
inline void CMessageDownloadRequest::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageDownloadRequest.url)
}
#if LANG_CXX11
inline void CMessageDownloadRequest::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageDownloadRequest.url)
}
#endif
inline void CMessageDownloadRequest::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageDownloadRequest.url)
}
inline void CMessageDownloadRequest::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageDownloadRequest.url)
}
inline ::std::string* CMessageDownloadRequest::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageDownloadRequest.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageDownloadRequest::release_url() {
  // @@protoc_insertion_point(field_release:d5.CMessageDownloadRequest.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageDownloadRequest::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageDownloadRequest.url)
}

// string path = 4;
inline void CMessageDownloadRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageDownloadRequest::path() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDownloadRequest.path)
  return path_.GetNoArena();
}
inline void CMessageDownloadRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageDownloadRequest.path)
}
#if LANG_CXX11
inline void CMessageDownloadRequest::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageDownloadRequest.path)
}
#endif
inline void CMessageDownloadRequest::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageDownloadRequest.path)
}
inline void CMessageDownloadRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageDownloadRequest.path)
}
inline ::std::string* CMessageDownloadRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageDownloadRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageDownloadRequest::release_path() {
  // @@protoc_insertion_point(field_release:d5.CMessageDownloadRequest.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageDownloadRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageDownloadRequest.path)
}

// -------------------------------------------------------------------

// CMessageDownloadResponse

// int32 type = 1;
inline void CMessageDownloadResponse::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageDownloadResponse::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDownloadResponse.type)
  return type_;
}
inline void CMessageDownloadResponse::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageDownloadResponse.type)
}

// string uuid = 2;
inline void CMessageDownloadResponse::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageDownloadResponse::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDownloadResponse.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageDownloadResponse::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageDownloadResponse.uuid)
}
#if LANG_CXX11
inline void CMessageDownloadResponse::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageDownloadResponse.uuid)
}
#endif
inline void CMessageDownloadResponse::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageDownloadResponse.uuid)
}
inline void CMessageDownloadResponse::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageDownloadResponse.uuid)
}
inline ::std::string* CMessageDownloadResponse::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageDownloadResponse.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageDownloadResponse::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageDownloadResponse.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageDownloadResponse::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageDownloadResponse.uuid)
}

// string url = 3;
inline void CMessageDownloadResponse::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageDownloadResponse::url() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDownloadResponse.url)
  return url_.GetNoArena();
}
inline void CMessageDownloadResponse::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageDownloadResponse.url)
}
#if LANG_CXX11
inline void CMessageDownloadResponse::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageDownloadResponse.url)
}
#endif
inline void CMessageDownloadResponse::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageDownloadResponse.url)
}
inline void CMessageDownloadResponse::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageDownloadResponse.url)
}
inline ::std::string* CMessageDownloadResponse::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageDownloadResponse.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageDownloadResponse::release_url() {
  // @@protoc_insertion_point(field_release:d5.CMessageDownloadResponse.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageDownloadResponse::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageDownloadResponse.url)
}

// int32 state = 4;
inline void CMessageDownloadResponse::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 CMessageDownloadResponse::state() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDownloadResponse.state)
  return state_;
}
inline void CMessageDownloadResponse::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageDownloadResponse.state)
}

// -------------------------------------------------------------------

// CMessageDownloadProcessResponse

// int32 type = 1;
inline void CMessageDownloadProcessResponse::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageDownloadProcessResponse::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDownloadProcessResponse.type)
  return type_;
}
inline void CMessageDownloadProcessResponse::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageDownloadProcessResponse.type)
}

// string uuid = 2;
inline void CMessageDownloadProcessResponse::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageDownloadProcessResponse::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDownloadProcessResponse.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageDownloadProcessResponse::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageDownloadProcessResponse.uuid)
}
#if LANG_CXX11
inline void CMessageDownloadProcessResponse::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageDownloadProcessResponse.uuid)
}
#endif
inline void CMessageDownloadProcessResponse::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageDownloadProcessResponse.uuid)
}
inline void CMessageDownloadProcessResponse::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageDownloadProcessResponse.uuid)
}
inline ::std::string* CMessageDownloadProcessResponse::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageDownloadProcessResponse.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageDownloadProcessResponse::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageDownloadProcessResponse.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageDownloadProcessResponse::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageDownloadProcessResponse.uuid)
}

// string url = 3;
inline void CMessageDownloadProcessResponse::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageDownloadProcessResponse::url() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDownloadProcessResponse.url)
  return url_.GetNoArena();
}
inline void CMessageDownloadProcessResponse::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageDownloadProcessResponse.url)
}
#if LANG_CXX11
inline void CMessageDownloadProcessResponse::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageDownloadProcessResponse.url)
}
#endif
inline void CMessageDownloadProcessResponse::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageDownloadProcessResponse.url)
}
inline void CMessageDownloadProcessResponse::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageDownloadProcessResponse.url)
}
inline ::std::string* CMessageDownloadProcessResponse::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageDownloadProcessResponse.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageDownloadProcessResponse::release_url() {
  // @@protoc_insertion_point(field_release:d5.CMessageDownloadProcessResponse.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageDownloadProcessResponse::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageDownloadProcessResponse.url)
}

// int32 size = 4;
inline void CMessageDownloadProcessResponse::clear_size() {
  size_ = 0;
}
inline ::google::protobuf::int32 CMessageDownloadProcessResponse::size() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDownloadProcessResponse.size)
  return size_;
}
inline void CMessageDownloadProcessResponse::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageDownloadProcessResponse.size)
}

// int32 total = 5;
inline void CMessageDownloadProcessResponse::clear_total() {
  total_ = 0;
}
inline ::google::protobuf::int32 CMessageDownloadProcessResponse::total() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDownloadProcessResponse.total)
  return total_;
}
inline void CMessageDownloadProcessResponse::set_total(::google::protobuf::int32 value) {
  
  total_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageDownloadProcessResponse.total)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace d5

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_5fdownload_2eproto_INCLUDED
