// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: db2.proto

#include "db2.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace d5 {
namespace db2 {
class asset_building_materialDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<asset_building_material>
      _instance;
} _asset_building_material_default_instance_;
class asset_furnitureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<asset_furniture>
      _instance;
} _asset_furniture_default_instance_;
class asset_furniture_styleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<asset_furniture_style>
      _instance;
} _asset_furniture_style_default_instance_;
class asset_furniture_style_material_mapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<asset_furniture_style_material_map>
      _instance;
} _asset_furniture_style_material_map_default_instance_;
class asset_materialDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<asset_material>
      _instance;
} _asset_material_default_instance_;
class asset_material_categoryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<asset_material_category>
      _instance;
} _asset_material_category_default_instance_;
class furniture_color_mapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<furniture_color_map>
      _instance;
} _furniture_color_map_default_instance_;
class GADefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GA>
      _instance;
} _GA_default_instance_;
class plan_desgin_template_statuDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<plan_desgin_template_statu>
      _instance;
} _plan_desgin_template_statu_default_instance_;
class plan_designDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<plan_design>
      _instance;
} _plan_design_default_instance_;
class productDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<product>
      _instance;
} _product_default_instance_;
class product_detail_virtualDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<product_detail_virtual>
      _instance;
} _product_detail_virtual_default_instance_;
class product_brand_tempDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<product_brand_temp>
      _instance;
} _product_brand_temp_default_instance_;
class product_category_mapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<product_category_map>
      _instance;
} _product_category_map_default_instance_;
class product_imageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<product_image>
      _instance;
} _product_image_default_instance_;
class setting_rememberDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<setting_remember>
      _instance;
} _setting_remember_default_instance_;
class user_loginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<user_login>
      _instance;
} _user_login_default_instance_;
class files_mapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<files_map>
      _instance;
} _files_map_default_instance_;
class headerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<header>
      _instance;
} _header_default_instance_;
class asset_building_material_dbDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<asset_building_material_db>
      _instance;
} _asset_building_material_db_default_instance_;
class asset_furniture_dbDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<asset_furniture_db>
      _instance;
} _asset_furniture_db_default_instance_;
class asset_furniture_style_dbDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<asset_furniture_style_db>
      _instance;
} _asset_furniture_style_db_default_instance_;
class asset_furniture_style_material_map_dbDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<asset_furniture_style_material_map_db>
      _instance;
} _asset_furniture_style_material_map_db_default_instance_;
class asset_material_dbDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<asset_material_db>
      _instance;
} _asset_material_db_default_instance_;
class asset_material_category_dbDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<asset_material_category_db>
      _instance;
} _asset_material_category_db_default_instance_;
class furniture_color_map_dbDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<furniture_color_map_db>
      _instance;
} _furniture_color_map_db_default_instance_;
class GA_dbDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GA_db>
      _instance;
} _GA_db_default_instance_;
class plan_desgin_template_statu_dbDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<plan_desgin_template_statu_db>
      _instance;
} _plan_desgin_template_statu_db_default_instance_;
class plan_design_dbDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<plan_design_db>
      _instance;
} _plan_design_db_default_instance_;
class product_dbDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<product_db>
      _instance;
} _product_db_default_instance_;
class product_brand_temp_dbDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<product_brand_temp_db>
      _instance;
} _product_brand_temp_db_default_instance_;
class product_category_map_dbDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<product_category_map_db>
      _instance;
} _product_category_map_db_default_instance_;
class product_image_dbDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<product_image_db>
      _instance;
} _product_image_db_default_instance_;
class setting_remember_dbDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<setting_remember_db>
      _instance;
} _setting_remember_db_default_instance_;
class user_login_dbDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<user_login_db>
      _instance;
} _user_login_db_default_instance_;
}  // namespace db2
}  // namespace d5
namespace protobuf_db2_2eproto {
void InitDefaultsasset_building_materialImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::db2::_asset_building_material_default_instance_;
    new (ptr) ::d5::db2::asset_building_material();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::asset_building_material::InitAsDefaultInstance();
}

void InitDefaultsasset_building_material() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsasset_building_materialImpl);
}

void InitDefaultsasset_furnitureImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::db2::_asset_furniture_default_instance_;
    new (ptr) ::d5::db2::asset_furniture();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::asset_furniture::InitAsDefaultInstance();
}

void InitDefaultsasset_furniture() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsasset_furnitureImpl);
}

void InitDefaultsasset_furniture_styleImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::db2::_asset_furniture_style_default_instance_;
    new (ptr) ::d5::db2::asset_furniture_style();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::asset_furniture_style::InitAsDefaultInstance();
}

void InitDefaultsasset_furniture_style() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsasset_furniture_styleImpl);
}

void InitDefaultsasset_furniture_style_material_mapImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::db2::_asset_furniture_style_material_map_default_instance_;
    new (ptr) ::d5::db2::asset_furniture_style_material_map();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::asset_furniture_style_material_map::InitAsDefaultInstance();
}

void InitDefaultsasset_furniture_style_material_map() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsasset_furniture_style_material_mapImpl);
}

void InitDefaultsasset_materialImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::db2::_asset_material_default_instance_;
    new (ptr) ::d5::db2::asset_material();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::asset_material::InitAsDefaultInstance();
}

void InitDefaultsasset_material() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsasset_materialImpl);
}

void InitDefaultsasset_material_categoryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::db2::_asset_material_category_default_instance_;
    new (ptr) ::d5::db2::asset_material_category();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::asset_material_category::InitAsDefaultInstance();
}

void InitDefaultsasset_material_category() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsasset_material_categoryImpl);
}

void InitDefaultsfurniture_color_mapImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::db2::_furniture_color_map_default_instance_;
    new (ptr) ::d5::db2::furniture_color_map();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::furniture_color_map::InitAsDefaultInstance();
}

void InitDefaultsfurniture_color_map() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsfurniture_color_mapImpl);
}

void InitDefaultsGAImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::db2::_GA_default_instance_;
    new (ptr) ::d5::db2::GA();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::GA::InitAsDefaultInstance();
}

void InitDefaultsGA() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGAImpl);
}

void InitDefaultsplan_desgin_template_statuImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::db2::_plan_desgin_template_statu_default_instance_;
    new (ptr) ::d5::db2::plan_desgin_template_statu();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::plan_desgin_template_statu::InitAsDefaultInstance();
}

void InitDefaultsplan_desgin_template_statu() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsplan_desgin_template_statuImpl);
}

void InitDefaultsplan_designImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::db2::_plan_design_default_instance_;
    new (ptr) ::d5::db2::plan_design();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::plan_design::InitAsDefaultInstance();
}

void InitDefaultsplan_design() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsplan_designImpl);
}

void InitDefaultsproductImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::db2::_product_default_instance_;
    new (ptr) ::d5::db2::product();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::product::InitAsDefaultInstance();
}

void InitDefaultsproduct() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsproductImpl);
}

void InitDefaultsproduct_detail_virtualImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::db2::_product_detail_virtual_default_instance_;
    new (ptr) ::d5::db2::product_detail_virtual();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::product_detail_virtual::InitAsDefaultInstance();
}

void InitDefaultsproduct_detail_virtual() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsproduct_detail_virtualImpl);
}

void InitDefaultsproduct_brand_tempImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::db2::_product_brand_temp_default_instance_;
    new (ptr) ::d5::db2::product_brand_temp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::product_brand_temp::InitAsDefaultInstance();
}

void InitDefaultsproduct_brand_temp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsproduct_brand_tempImpl);
}

void InitDefaultsproduct_category_mapImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::db2::_product_category_map_default_instance_;
    new (ptr) ::d5::db2::product_category_map();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::product_category_map::InitAsDefaultInstance();
}

void InitDefaultsproduct_category_map() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsproduct_category_mapImpl);
}

void InitDefaultsproduct_imageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::db2::_product_image_default_instance_;
    new (ptr) ::d5::db2::product_image();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::product_image::InitAsDefaultInstance();
}

void InitDefaultsproduct_image() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsproduct_imageImpl);
}

void InitDefaultssetting_rememberImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::db2::_setting_remember_default_instance_;
    new (ptr) ::d5::db2::setting_remember();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::setting_remember::InitAsDefaultInstance();
}

void InitDefaultssetting_remember() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultssetting_rememberImpl);
}

void InitDefaultsuser_loginImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::db2::_user_login_default_instance_;
    new (ptr) ::d5::db2::user_login();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::user_login::InitAsDefaultInstance();
}

void InitDefaultsuser_login() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsuser_loginImpl);
}

void InitDefaultsfiles_mapImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::db2::_files_map_default_instance_;
    new (ptr) ::d5::db2::files_map();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::files_map::InitAsDefaultInstance();
}

void InitDefaultsfiles_map() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsfiles_mapImpl);
}

void InitDefaultsheaderImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::db2::_header_default_instance_;
    new (ptr) ::d5::db2::header();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::header::InitAsDefaultInstance();
}

void InitDefaultsheader() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsheaderImpl);
}

void InitDefaultsasset_building_material_dbImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_db2_2eproto::InitDefaultsheader();
  protobuf_db2_2eproto::InitDefaultsasset_building_material();
  {
    void* ptr = &::d5::db2::_asset_building_material_db_default_instance_;
    new (ptr) ::d5::db2::asset_building_material_db();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::asset_building_material_db::InitAsDefaultInstance();
}

void InitDefaultsasset_building_material_db() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsasset_building_material_dbImpl);
}

void InitDefaultsasset_furniture_dbImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_db2_2eproto::InitDefaultsheader();
  protobuf_db2_2eproto::InitDefaultsasset_furniture();
  {
    void* ptr = &::d5::db2::_asset_furniture_db_default_instance_;
    new (ptr) ::d5::db2::asset_furniture_db();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::asset_furniture_db::InitAsDefaultInstance();
}

void InitDefaultsasset_furniture_db() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsasset_furniture_dbImpl);
}

void InitDefaultsasset_furniture_style_dbImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_db2_2eproto::InitDefaultsheader();
  protobuf_db2_2eproto::InitDefaultsasset_furniture_style();
  {
    void* ptr = &::d5::db2::_asset_furniture_style_db_default_instance_;
    new (ptr) ::d5::db2::asset_furniture_style_db();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::asset_furniture_style_db::InitAsDefaultInstance();
}

void InitDefaultsasset_furniture_style_db() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsasset_furniture_style_dbImpl);
}

void InitDefaultsasset_furniture_style_material_map_dbImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_db2_2eproto::InitDefaultsheader();
  protobuf_db2_2eproto::InitDefaultsasset_furniture_style_material_map();
  {
    void* ptr = &::d5::db2::_asset_furniture_style_material_map_db_default_instance_;
    new (ptr) ::d5::db2::asset_furniture_style_material_map_db();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::asset_furniture_style_material_map_db::InitAsDefaultInstance();
}

void InitDefaultsasset_furniture_style_material_map_db() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsasset_furniture_style_material_map_dbImpl);
}

void InitDefaultsasset_material_dbImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_db2_2eproto::InitDefaultsheader();
  protobuf_db2_2eproto::InitDefaultsasset_material();
  {
    void* ptr = &::d5::db2::_asset_material_db_default_instance_;
    new (ptr) ::d5::db2::asset_material_db();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::asset_material_db::InitAsDefaultInstance();
}

void InitDefaultsasset_material_db() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsasset_material_dbImpl);
}

void InitDefaultsasset_material_category_dbImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_db2_2eproto::InitDefaultsheader();
  protobuf_db2_2eproto::InitDefaultsasset_material_category();
  {
    void* ptr = &::d5::db2::_asset_material_category_db_default_instance_;
    new (ptr) ::d5::db2::asset_material_category_db();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::asset_material_category_db::InitAsDefaultInstance();
}

void InitDefaultsasset_material_category_db() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsasset_material_category_dbImpl);
}

void InitDefaultsfurniture_color_map_dbImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_db2_2eproto::InitDefaultsheader();
  protobuf_db2_2eproto::InitDefaultsfurniture_color_map();
  {
    void* ptr = &::d5::db2::_furniture_color_map_db_default_instance_;
    new (ptr) ::d5::db2::furniture_color_map_db();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::furniture_color_map_db::InitAsDefaultInstance();
}

void InitDefaultsfurniture_color_map_db() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsfurniture_color_map_dbImpl);
}

void InitDefaultsGA_dbImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_db2_2eproto::InitDefaultsheader();
  protobuf_db2_2eproto::InitDefaultsGA();
  {
    void* ptr = &::d5::db2::_GA_db_default_instance_;
    new (ptr) ::d5::db2::GA_db();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::GA_db::InitAsDefaultInstance();
}

void InitDefaultsGA_db() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGA_dbImpl);
}

void InitDefaultsplan_desgin_template_statu_dbImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_db2_2eproto::InitDefaultsheader();
  protobuf_db2_2eproto::InitDefaultsplan_desgin_template_statu();
  {
    void* ptr = &::d5::db2::_plan_desgin_template_statu_db_default_instance_;
    new (ptr) ::d5::db2::plan_desgin_template_statu_db();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::plan_desgin_template_statu_db::InitAsDefaultInstance();
}

void InitDefaultsplan_desgin_template_statu_db() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsplan_desgin_template_statu_dbImpl);
}

void InitDefaultsplan_design_dbImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_db2_2eproto::InitDefaultsheader();
  protobuf_db2_2eproto::InitDefaultsplan_design();
  {
    void* ptr = &::d5::db2::_plan_design_db_default_instance_;
    new (ptr) ::d5::db2::plan_design_db();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::plan_design_db::InitAsDefaultInstance();
}

void InitDefaultsplan_design_db() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsplan_design_dbImpl);
}

void InitDefaultsproduct_dbImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_db2_2eproto::InitDefaultsheader();
  protobuf_db2_2eproto::InitDefaultsproduct();
  {
    void* ptr = &::d5::db2::_product_db_default_instance_;
    new (ptr) ::d5::db2::product_db();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::product_db::InitAsDefaultInstance();
}

void InitDefaultsproduct_db() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsproduct_dbImpl);
}

void InitDefaultsproduct_brand_temp_dbImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_db2_2eproto::InitDefaultsheader();
  protobuf_db2_2eproto::InitDefaultsproduct_brand_temp();
  {
    void* ptr = &::d5::db2::_product_brand_temp_db_default_instance_;
    new (ptr) ::d5::db2::product_brand_temp_db();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::product_brand_temp_db::InitAsDefaultInstance();
}

void InitDefaultsproduct_brand_temp_db() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsproduct_brand_temp_dbImpl);
}

void InitDefaultsproduct_category_map_dbImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_db2_2eproto::InitDefaultsheader();
  protobuf_db2_2eproto::InitDefaultsproduct_category_map();
  {
    void* ptr = &::d5::db2::_product_category_map_db_default_instance_;
    new (ptr) ::d5::db2::product_category_map_db();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::product_category_map_db::InitAsDefaultInstance();
}

void InitDefaultsproduct_category_map_db() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsproduct_category_map_dbImpl);
}

void InitDefaultsproduct_image_dbImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_db2_2eproto::InitDefaultsheader();
  protobuf_db2_2eproto::InitDefaultsproduct_image();
  {
    void* ptr = &::d5::db2::_product_image_db_default_instance_;
    new (ptr) ::d5::db2::product_image_db();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::product_image_db::InitAsDefaultInstance();
}

void InitDefaultsproduct_image_db() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsproduct_image_dbImpl);
}

void InitDefaultssetting_remember_dbImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_db2_2eproto::InitDefaultsheader();
  protobuf_db2_2eproto::InitDefaultssetting_remember();
  {
    void* ptr = &::d5::db2::_setting_remember_db_default_instance_;
    new (ptr) ::d5::db2::setting_remember_db();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::setting_remember_db::InitAsDefaultInstance();
}

void InitDefaultssetting_remember_db() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultssetting_remember_dbImpl);
}

void InitDefaultsuser_login_dbImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_db2_2eproto::InitDefaultsheader();
  protobuf_db2_2eproto::InitDefaultsuser_login();
  {
    void* ptr = &::d5::db2::_user_login_db_default_instance_;
    new (ptr) ::d5::db2::user_login_db();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::db2::user_login_db::InitAsDefaultInstance();
}

void InitDefaultsuser_login_db() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsuser_login_dbImpl);
}

::google::protobuf::Metadata file_level_metadata[35];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_building_material, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_building_material, product_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_building_material, is_for_floor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_building_material, is_for_wall_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_building_material, is_for_ceiling_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_building_material, material_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_building_material, detail_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_building_material, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_building_material, width_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture, product_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture, ue_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture, pak_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture, depth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture, is_interactive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture, intelligent_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture, furniture_style_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture, furniture_main_material_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture, detail_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture_style, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture_style, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture_style, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture_style, thumbnail_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture_style, display_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture_style, product_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture_style, create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture_style, update_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture_style, sync_status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture_style_material_map, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture_style_material_map, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture_style_material_map, material_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture_style_material_map, style_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture_style_material_map, material_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture_style_material_map, element_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material, ue_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material, mat_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material, thumbnail_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material, is_del_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material, is_private_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material, company_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material, create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material, update_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material, category_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material, metallic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material, roughness_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material, emissive_color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material, is_repeat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material, is_submit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material, sync_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material, pak_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material, dependent_file_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material_category, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material_category, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material_category, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material_category, parent_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material_category, level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::furniture_color_map, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::furniture_color_map, color_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::furniture_color_map, product_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::GA, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::GA, cid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_desgin_template_statu, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_desgin_template_statu, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_desgin_template_statu, updatetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_desgin_template_statu, depend_files_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, pak_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, thumbnail_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, floor_edit_file_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, detail_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, design_file_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, district_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, property_type_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, room_type_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, template_type_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, cook_stage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, is_del_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, update_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, company_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, sync_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, floor_edit_error_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, cook_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, floor_ref_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, floor_ref_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, floor_ref_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, floor_ref_angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, condo_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, dependent_file_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, quotation_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design, is_private_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product, create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product, update_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product, brand_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product, product_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product, is_published_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product, is_private_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product, is_del_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product, company_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product, folder_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product, sync_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product, category_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product, buy_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product, dependent_file_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product, product_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, update_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, brand_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, product_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, is_published_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, is_private_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, is_del_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, company_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, folder_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, sync_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, category_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, buy_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, furniture_product_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, furniture_ue_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, furniture_pak_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, furniture_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, furniture_depth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, furniture_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, furniture_is_interactive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, furniture_intelligent_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, furniture_furniture_style_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, furniture_furniture_main_material_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, furniture_detail_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, building_material_product_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, building_material_is_for_floor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, building_material_is_for_wall_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, building_material_is_for_ceiling_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, building_material_material_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, building_material_detail_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, building_material_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, building_material_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, dependent_file_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_detail_virtual, product_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_brand_temp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_brand_temp, product_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_brand_temp, brand_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_category_map, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_category_map, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_category_map, category_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_category_map, product_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_image, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_image, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_image, display_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_image, file_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_image, product_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::setting_remember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::setting_remember, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::setting_remember, layout_page_tip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::setting_remember, layout_do_not_show_again_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::setting_remember, vr_capture_do_not_show_again_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::setting_remember, sync_data_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::setting_remember, scalability_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::setting_remember, magic_confirm_do_not_show_again_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::setting_remember, decoration_page_tip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::setting_remember, material_replace_tip_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::user_login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::user_login, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::user_login, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::user_login, laststatus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::files_map, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::files_map, file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::files_map, md5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::files_map, update_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::files_map, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::files_map, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::header, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::header, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::header, create_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_building_material_db, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_building_material_db, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_building_material_db, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture_db, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture_db, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture_db, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture_style_db, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture_style_db, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture_style_db, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture_style_material_map_db, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture_style_material_map_db, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_furniture_style_material_map_db, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material_db, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material_db, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material_db, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material_category_db, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material_category_db, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::asset_material_category_db, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::furniture_color_map_db, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::furniture_color_map_db, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::furniture_color_map_db, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::GA_db, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::GA_db, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::GA_db, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_desgin_template_statu_db, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_desgin_template_statu_db, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_desgin_template_statu_db, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design_db, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design_db, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::plan_design_db, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_db, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_db, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_db, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_brand_temp_db, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_brand_temp_db, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_brand_temp_db, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_category_map_db, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_category_map_db, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_category_map_db, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_image_db, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_image_db, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::product_image_db, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::setting_remember_db, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::setting_remember_db, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::setting_remember_db, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::user_login_db, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::user_login_db, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::db2::user_login_db, content_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::d5::db2::asset_building_material)},
  { 13, -1, sizeof(::d5::db2::asset_furniture)},
  { 29, -1, sizeof(::d5::db2::asset_furniture_style)},
  { 42, -1, sizeof(::d5::db2::asset_furniture_style_material_map)},
  { 52, -1, sizeof(::d5::db2::asset_material)},
  { 79, -1, sizeof(::d5::db2::asset_material_category)},
  { 88, -1, sizeof(::d5::db2::furniture_color_map)},
  { 95, -1, sizeof(::d5::db2::GA)},
  { 101, -1, sizeof(::d5::db2::plan_desgin_template_statu)},
  { 109, -1, sizeof(::d5::db2::plan_design)},
  { 146, -1, sizeof(::d5::db2::product)},
  { 171, -1, sizeof(::d5::db2::product_detail_virtual)},
  { 215, -1, sizeof(::d5::db2::product_brand_temp)},
  { 222, -1, sizeof(::d5::db2::product_category_map)},
  { 230, -1, sizeof(::d5::db2::product_image)},
  { 239, -1, sizeof(::d5::db2::setting_remember)},
  { 253, -1, sizeof(::d5::db2::user_login)},
  { 261, -1, sizeof(::d5::db2::files_map)},
  { 271, -1, sizeof(::d5::db2::header)},
  { 278, -1, sizeof(::d5::db2::asset_building_material_db)},
  { 285, -1, sizeof(::d5::db2::asset_furniture_db)},
  { 292, -1, sizeof(::d5::db2::asset_furniture_style_db)},
  { 299, -1, sizeof(::d5::db2::asset_furniture_style_material_map_db)},
  { 306, -1, sizeof(::d5::db2::asset_material_db)},
  { 313, -1, sizeof(::d5::db2::asset_material_category_db)},
  { 320, -1, sizeof(::d5::db2::furniture_color_map_db)},
  { 327, -1, sizeof(::d5::db2::GA_db)},
  { 334, -1, sizeof(::d5::db2::plan_desgin_template_statu_db)},
  { 341, -1, sizeof(::d5::db2::plan_design_db)},
  { 348, -1, sizeof(::d5::db2::product_db)},
  { 355, -1, sizeof(::d5::db2::product_brand_temp_db)},
  { 362, -1, sizeof(::d5::db2::product_category_map_db)},
  { 369, -1, sizeof(::d5::db2::product_image_db)},
  { 376, -1, sizeof(::d5::db2::setting_remember_db)},
  { 383, -1, sizeof(::d5::db2::user_login_db)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_asset_building_material_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_asset_furniture_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_asset_furniture_style_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_asset_furniture_style_material_map_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_asset_material_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_asset_material_category_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_furniture_color_map_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_GA_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_plan_desgin_template_statu_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_plan_design_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_product_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_product_detail_virtual_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_product_brand_temp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_product_category_map_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_product_image_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_setting_remember_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_user_login_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_files_map_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_header_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_asset_building_material_db_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_asset_furniture_db_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_asset_furniture_style_db_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_asset_furniture_style_material_map_db_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_asset_material_db_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_asset_material_category_db_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_furniture_color_map_db_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_GA_db_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_plan_desgin_template_statu_db_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_plan_design_db_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_product_db_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_product_brand_temp_db_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_product_category_map_db_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_product_image_db_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_setting_remember_db_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::db2::_user_login_db_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "db2.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 35);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tdb2.proto\022\006d5.db2\"\271\001\n\027asset_building_m"
      "aterial\022\022\n\nproduct_id\030\001 \001(\t\022\024\n\014is_for_fl"
      "oor\030\002 \001(\005\022\023\n\013is_for_wall\030\003 \001(\005\022\026\n\016is_for"
      "_ceiling\030\004 \001(\005\022\023\n\013material_id\030\005 \001(\t\022\023\n\013d"
      "etail_info\030\006 \001(\t\022\016\n\006length\030\007 \001(\005\022\r\n\005widt"
      "h\030\010 \001(\005\"\375\001\n\017asset_furniture\022\022\n\nproduct_i"
      "d\030\001 \001(\t\022\017\n\007ue_path\030\002 \001(\t\022\017\n\007pak_url\030\003 \001("
      "\t\022\016\n\006length\030\004 \001(\001\022\r\n\005depth\030\005 \001(\001\022\016\n\006heig"
      "ht\030\006 \001(\001\022\026\n\016is_interactive\030\007 \001(\005\022\030\n\020inte"
      "lligent_type\030\010 \001(\005\022\032\n\022furniture_style_id"
      "\030\t \001(\005\022\"\n\032furniture_main_material_id\030\n \001"
      "(\005\022\023\n\013detail_info\030\013 \001(\t\"\263\001\n\025asset_furnit"
      "ure_style\022\n\n\002id\030\001 \001(\t\022\r\n\005title\030\002 \001(\t\022\025\n\r"
      "thumbnail_url\030\003 \001(\t\022\025\n\rdisplay_index\030\004 \001"
      "(\005\022\022\n\nproduct_id\030\005 \001(\t\022\023\n\013create_time\030\006 "
      "\001(\003\022\023\n\013update_time\030\007 \001(\003\022\023\n\013sync_status\030"
      "\010 \001(\005\"\205\001\n\"asset_furniture_style_material"
      "_map\022\n\n\002id\030\001 \001(\t\022\023\n\013material_id\030\002 \001(\t\022\020\n"
      "\010style_id\030\003 \001(\t\022\026\n\016material_index\030\004 \001(\005\022"
      "\024\n\014element_name\030\005 \001(\t\"\261\003\n\016asset_material"
      "\022\n\n\002id\030\001 \001(\t\022\r\n\005title\030\002 \001(\t\022\017\n\007ue_path\030\003"
      " \001(\t\022\020\n\010mat_info\030\004 \001(\t\022\025\n\rthumbnail_url\030"
      "\005 \001(\t\022\016\n\006is_del\030\006 \001(\005\022\022\n\nis_private\030\007 \001("
      "\005\022\017\n\007user_id\030\010 \001(\005\022\022\n\ncompany_id\030\t \001(\005\022\023"
      "\n\013create_time\030\n \001(\003\022\023\n\013update_time\030\013 \001(\003"
      "\022\023\n\013category_id\030\014 \001(\005\022\020\n\010metallic\030\021 \001(\005\022"
      "\021\n\troughness\030\022 \001(\005\022\026\n\016emissive_color\030\023 \001"
      "(\005\022\014\n\004type\030\024 \001(\005\022\021\n\tis_repeat\030\025 \001(\005\022\021\n\ti"
      "s_submit\030\026 \001(\005\022\016\n\006source\030\027 \001(\005\022\023\n\013sync_s"
      "tatus\030\030 \001(\005\022\017\n\007pak_url\030\031 \001(\t\022\033\n\023dependen"
      "t_file_list\030\032 \001(\t\"V\n\027asset_material_cate"
      "gory\022\n\n\002id\030\001 \001(\005\022\r\n\005title\030\002 \001(\t\022\021\n\tparen"
      "t_id\030\003 \001(\005\022\r\n\005level\030\004 \001(\005\";\n\023furniture_c"
      "olor_map\022\020\n\010color_id\030\002 \001(\005\022\022\n\nproduct_id"
      "\030\003 \001(\t\"\021\n\002GA\022\013\n\003cid\030\001 \001(\005\"R\n\032plan_desgin"
      "_template_statu\022\n\n\002id\030\001 \001(\t\022\022\n\nupdatetim"
      "e\030\002 \001(\003\022\024\n\014depend_files\030\003 \001(\t\"\262\005\n\013plan_d"
      "esign\022\n\n\002id\030\001 \001(\t\022\r\n\005title\030\002 \001(\t\022\014\n\004size"
      "\030\003 \001(\001\022\017\n\007pak_url\030\005 \001(\t\022\025\n\rthumbnail_url"
      "\030\006 \001(\t\022\033\n\023floor_edit_file_url\030\007 \001(\t\022\023\n\013d"
      "etail_info\030\010 \001(\t\022\027\n\017design_file_url\030\t \001("
      "\t\022\023\n\013district_id\030\n \001(\005\022\030\n\020property_type_"
      "id\030\013 \001(\005\022\024\n\014room_type_id\030\014 \001(\005\022\030\n\020templa"
      "te_type_id\030\r \001(\005\022\022\n\ncook_stage\030\016 \001(\005\022\016\n\006"
      "is_del\030\017 \001(\005\022\023\n\013create_time\030\020 \001(\003\022\023\n\013upd"
      "ate_time\030\021 \001(\003\022\017\n\007user_id\030\022 \001(\005\022\022\n\ncompa"
      "ny_id\030\023 \001(\005\022\023\n\013sync_status\030\024 \001(\005\022\035\n\025floo"
      "r_edit_error_code\030\025 \001(\005\022\017\n\007cook_id\030\027 \001(\t"
      "\022\025\n\rfloor_ref_url\030\030 \001(\t\022\027\n\017floor_ref_wid"
      "th\030\031 \001(\001\022\030\n\020floor_ref_height\030\032 \001(\001\022\027\n\017fl"
      "oor_ref_angle\030\033 \001(\001\022\020\n\010group_id\030\034 \001(\005\022\020\n"
      "\010condo_id\030\035 \001(\005\022\020\n\010username\030\036 \001(\t\022\033\n\023dep"
      "endent_file_list\030\037 \001(\t\022\016\n\006source\030  \001(\005\022\026"
      "\n\016quotation_info\030! \001(\t\022\022\n\nis_private\030\" \001"
      "(\005\"\214\003\n\007product\022\n\n\002id\030\001 \001(\t\022\r\n\005title\030\002 \001("
      "\t\022\023\n\013description\030\003 \001(\t\022\r\n\005price\030\004 \001(\001\022\023\n"
      "\013create_time\030\005 \001(\003\022\023\n\013update_time\030\006 \001(\003\022"
      "\020\n\010brand_id\030\007 \001(\005\022\016\n\006source\030\010 \001(\005\022\024\n\014pro"
      "duct_type\030\t \001(\005\022\024\n\014is_published\030\n \001(\005\022\022\n"
      "\nis_private\030\013 \001(\005\022\016\n\006is_del\030\014 \001(\005\022\017\n\007use"
      "r_id\030\r \001(\005\022\022\n\ncompany_id\030\016 \001(\005\022\023\n\013folder"
      "_name\030\017 \001(\t\022\023\n\013sync_status\030\020 \001(\005\022\023\n\013cate"
      "gory_id\030\021 \001(\005\022\017\n\007buy_url\030\022 \001(\t\022\033\n\023depend"
      "ent_file_list\030\023 \001(\t\022\024\n\014product_code\030\024 \001("
      "\t\"\245\010\n\026product_detail_virtual\022\n\n\002id\030\001 \001(\t"
      "\022\r\n\005title\030\002 \001(\t\022\023\n\013description\030\003 \001(\t\022\r\n\005"
      "price\030\004 \001(\001\022\023\n\013create_time\030\005 \001(\003\022\023\n\013upda"
      "te_time\030\006 \001(\003\022\020\n\010brand_id\030\007 \001(\005\022\016\n\006sourc"
      "e\030\010 \001(\005\022\024\n\014product_type\030\t \001(\005\022\024\n\014is_publ"
      "ished\030\n \001(\005\022\022\n\nis_private\030\013 \001(\005\022\016\n\006is_de"
      "l\030\014 \001(\005\022\017\n\007user_id\030\r \001(\005\022\022\n\ncompany_id\030\016"
      " \001(\005\022\023\n\013folder_name\030\017 \001(\t\022\023\n\013sync_status"
      "\030\020 \001(\005\022\023\n\013category_id\030\021 \001(\005\022\017\n\007buy_url\030\022"
      " \001(\t\022\034\n\024furniture_product_id\030\023 \001(\t\022\031\n\021fu"
      "rniture_ue_path\030\024 \001(\t\022\031\n\021furniture_pak_u"
      "rl\030\025 \001(\t\022\030\n\020furniture_length\030\026 \001(\001\022\027\n\017fu"
      "rniture_depth\030\027 \001(\001\022\030\n\020furniture_height\030"
      "\030 \001(\001\022 \n\030furniture_is_interactive\030\031 \001(\005\022"
      "\"\n\032furniture_intelligent_type\030\032 \001(\005\022$\n\034f"
      "urniture_furniture_style_id\030\033 \001(\005\022,\n$fur"
      "niture_furniture_main_material_id\030\034 \001(\005\022"
      "\035\n\025furniture_detail_info\030\035 \001(\t\022$\n\034buildi"
      "ng_material_product_id\030\036 \001(\t\022&\n\036building"
      "_material_is_for_floor\030\037 \001(\005\022%\n\035building"
      "_material_is_for_wall\030  \001(\005\022(\n building_"
      "material_is_for_ceiling\030! \001(\005\022%\n\035buildin"
      "g_material_material_id\030\" \001(\t\022%\n\035building"
      "_material_detail_info\030# \001(\t\022 \n\030building_"
      "material_length\030$ \001(\005\022\037\n\027building_materi"
      "al_width\030% \001(\005\022\033\n\023dependent_file_list\030& "
      "\001(\t\022\024\n\014product_code\030\' \001(\t\"7\n\022product_bra"
      "nd_temp\022\022\n\nproduct_id\030\001 \001(\t\022\r\n\005brand\030\002 \001"
      "(\t\"K\n\024product_category_map\022\n\n\002id\030\001 \001(\005\022\023"
      "\n\013category_id\030\002 \001(\005\022\022\n\nproduct_id\030\003 \001(\t\""
      "X\n\rproduct_image\022\n\n\002id\030\001 \001(\t\022\025\n\rdisplay_"
      "index\030\002 \001(\005\022\020\n\010file_url\030\003 \001(\t\022\022\n\nproduct"
      "_id\030\004 \001(\t\"\232\002\n\020setting_remember\022\017\n\007user_i"
      "d\030\001 \001(\005\022\027\n\017layout_page_tip\030\002 \001(\005\022 \n\030layo"
      "ut_do_not_show_again\030\003 \001(\005\022$\n\034vr_capture"
      "_do_not_show_again\030\004 \001(\005\022\033\n\023sync_data_ti"
      "mestamp\030\005 \001(\003\022\023\n\013scalability\030\006 \001(\t\022\'\n\037ma"
      "gic_confirm_do_not_show_again\030\007 \001(\005\022\033\n\023d"
      "ecoration_page_tip\030\010 \001(\005\022\034\n\024material_rep"
      "lace_tip\030\t \001(\005\"@\n\nuser_login\022\014\n\004name\030\001 \001"
      "(\t\022\020\n\010password\030\002 \001(\t\022\022\n\nlastStatus\030\003 \001(\005"
      "\"Y\n\tfiles_map\022\014\n\004file\030\001 \001(\t\022\013\n\003md5\030\002 \001(\t"
      "\022\023\n\013update_time\030\003 \001(\003\022\016\n\006length\030\004 \001(\003\022\014\n"
      "\004type\030\005 \001(\t\"*\n\006header\022\013\n\003key\030\001 \001(\t\022\023\n\013cr"
      "eate_time\030\002 \001(\003\"l\n\032asset_building_materi"
      "al_db\022\034\n\004head\030\001 \001(\0132\016.d5.db2.header\0220\n\007c"
      "ontent\030\002 \003(\0132\037.d5.db2.asset_building_mat"
      "erial\"\\\n\022asset_furniture_db\022\034\n\004head\030\001 \001("
      "\0132\016.d5.db2.header\022(\n\007content\030\002 \003(\0132\027.d5."
      "db2.asset_furniture\"h\n\030asset_furniture_s"
      "tyle_db\022\034\n\004head\030\001 \001(\0132\016.d5.db2.header\022.\n"
      "\007content\030\002 \003(\0132\035.d5.db2.asset_furniture_"
      "style\"\202\001\n%asset_furniture_style_material"
      "_map_db\022\034\n\004head\030\001 \001(\0132\016.d5.db2.header\022;\n"
      "\007content\030\002 \003(\0132*.d5.db2.asset_furniture_"
      "style_material_map\"Z\n\021asset_material_db\022"
      "\034\n\004head\030\001 \001(\0132\016.d5.db2.header\022\'\n\007content"
      "\030\002 \003(\0132\026.d5.db2.asset_material\"l\n\032asset_"
      "material_category_db\022\034\n\004head\030\001 \001(\0132\016.d5."
      "db2.header\0220\n\007content\030\002 \003(\0132\037.d5.db2.ass"
      "et_material_category\"d\n\026furniture_color_"
      "map_db\022\034\n\004head\030\001 \001(\0132\016.d5.db2.header\022,\n\007"
      "content\030\002 \003(\0132\033.d5.db2.furniture_color_m"
      "ap\"B\n\005GA_db\022\034\n\004head\030\001 \001(\0132\016.d5.db2.heade"
      "r\022\033\n\007content\030\002 \003(\0132\n.d5.db2.GA\"r\n\035plan_d"
      "esgin_template_statu_db\022\034\n\004head\030\001 \001(\0132\016."
      "d5.db2.header\0223\n\007content\030\002 \003(\0132\".d5.db2."
      "plan_desgin_template_statu\"T\n\016plan_desig"
      "n_db\022\034\n\004head\030\001 \001(\0132\016.d5.db2.header\022$\n\007co"
      "ntent\030\002 \003(\0132\023.d5.db2.plan_design\"L\n\nprod"
      "uct_db\022\034\n\004head\030\001 \001(\0132\016.d5.db2.header\022 \n\007"
      "content\030\002 \003(\0132\017.d5.db2.product\"b\n\025produc"
      "t_brand_temp_db\022\034\n\004head\030\001 \001(\0132\016.d5.db2.h"
      "eader\022+\n\007content\030\002 \003(\0132\032.d5.db2.product_"
      "brand_temp\"f\n\027product_category_map_db\022\034\n"
      "\004head\030\001 \001(\0132\016.d5.db2.header\022-\n\007content\030\002"
      " \003(\0132\034.d5.db2.product_category_map\"X\n\020pr"
      "oduct_image_db\022\034\n\004head\030\001 \001(\0132\016.d5.db2.he"
      "ader\022&\n\007content\030\002 \003(\0132\025.d5.db2.product_i"
      "mage\"^\n\023setting_remember_db\022\034\n\004head\030\001 \001("
      "\0132\016.d5.db2.header\022)\n\007content\030\002 \003(\0132\030.d5."
      "db2.setting_remember\"R\n\ruser_login_db\022\034\n"
      "\004head\030\001 \001(\0132\016.d5.db2.header\022#\n\007content\030\002"
      " \003(\0132\022.d5.db2.user_loginb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 5912);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "db2.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_db2_2eproto
namespace d5 {
namespace db2 {

// ===================================================================

void asset_building_material::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int asset_building_material::kProductIdFieldNumber;
const int asset_building_material::kIsForFloorFieldNumber;
const int asset_building_material::kIsForWallFieldNumber;
const int asset_building_material::kIsForCeilingFieldNumber;
const int asset_building_material::kMaterialIdFieldNumber;
const int asset_building_material::kDetailInfoFieldNumber;
const int asset_building_material::kLengthFieldNumber;
const int asset_building_material::kWidthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

asset_building_material::asset_building_material()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsasset_building_material();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.asset_building_material)
}
asset_building_material::asset_building_material(const asset_building_material& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.product_id().size() > 0) {
    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  material_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.material_id().size() > 0) {
    material_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.material_id_);
  }
  detail_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.detail_info().size() > 0) {
    detail_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detail_info_);
  }
  ::memcpy(&is_for_floor_, &from.is_for_floor_,
    static_cast<size_t>(reinterpret_cast<char*>(&width_) -
    reinterpret_cast<char*>(&is_for_floor_)) + sizeof(width_));
  // @@protoc_insertion_point(copy_constructor:d5.db2.asset_building_material)
}

void asset_building_material::SharedCtor() {
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  material_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detail_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_for_floor_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&width_) -
      reinterpret_cast<char*>(&is_for_floor_)) + sizeof(width_));
  _cached_size_ = 0;
}

asset_building_material::~asset_building_material() {
  // @@protoc_insertion_point(destructor:d5.db2.asset_building_material)
  SharedDtor();
}

void asset_building_material::SharedDtor() {
  product_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  material_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detail_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void asset_building_material::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* asset_building_material::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const asset_building_material& asset_building_material::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsasset_building_material();
  return *internal_default_instance();
}


void asset_building_material::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.asset_building_material)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  material_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detail_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_for_floor_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&width_) -
      reinterpret_cast<char*>(&is_for_floor_)) + sizeof(width_));
  _internal_metadata_.Clear();
}

bool asset_building_material::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.asset_building_material)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string product_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->product_id().data(), static_cast<int>(this->product_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.asset_building_material.product_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 is_for_floor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_for_floor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 is_for_wall = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_for_wall_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 is_for_ceiling = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_for_ceiling_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string material_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_material_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->material_id().data(), static_cast<int>(this->material_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.asset_building_material.material_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string detail_info = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_detail_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->detail_info().data(), static_cast<int>(this->detail_info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.asset_building_material.detail_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 length = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 width = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.asset_building_material)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.asset_building_material)
  return false;
#undef DO_
}

void asset_building_material::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.asset_building_material)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string product_id = 1;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_building_material.product_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->product_id(), output);
  }

  // int32 is_for_floor = 2;
  if (this->is_for_floor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->is_for_floor(), output);
  }

  // int32 is_for_wall = 3;
  if (this->is_for_wall() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->is_for_wall(), output);
  }

  // int32 is_for_ceiling = 4;
  if (this->is_for_ceiling() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->is_for_ceiling(), output);
  }

  // string material_id = 5;
  if (this->material_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->material_id().data(), static_cast<int>(this->material_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_building_material.material_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->material_id(), output);
  }

  // string detail_info = 6;
  if (this->detail_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detail_info().data(), static_cast<int>(this->detail_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_building_material.detail_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->detail_info(), output);
  }

  // int32 length = 7;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->length(), output);
  }

  // int32 width = 8;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->width(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.asset_building_material)
}

::google::protobuf::uint8* asset_building_material::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.asset_building_material)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string product_id = 1;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_building_material.product_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->product_id(), target);
  }

  // int32 is_for_floor = 2;
  if (this->is_for_floor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->is_for_floor(), target);
  }

  // int32 is_for_wall = 3;
  if (this->is_for_wall() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->is_for_wall(), target);
  }

  // int32 is_for_ceiling = 4;
  if (this->is_for_ceiling() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->is_for_ceiling(), target);
  }

  // string material_id = 5;
  if (this->material_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->material_id().data(), static_cast<int>(this->material_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_building_material.material_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->material_id(), target);
  }

  // string detail_info = 6;
  if (this->detail_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detail_info().data(), static_cast<int>(this->detail_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_building_material.detail_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->detail_info(), target);
  }

  // int32 length = 7;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->length(), target);
  }

  // int32 width = 8;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->width(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.asset_building_material)
  return target;
}

size_t asset_building_material::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.asset_building_material)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string product_id = 1;
  if (this->product_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->product_id());
  }

  // string material_id = 5;
  if (this->material_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->material_id());
  }

  // string detail_info = 6;
  if (this->detail_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->detail_info());
  }

  // int32 is_for_floor = 2;
  if (this->is_for_floor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->is_for_floor());
  }

  // int32 is_for_wall = 3;
  if (this->is_for_wall() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->is_for_wall());
  }

  // int32 is_for_ceiling = 4;
  if (this->is_for_ceiling() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->is_for_ceiling());
  }

  // int32 length = 7;
  if (this->length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->length());
  }

  // int32 width = 8;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void asset_building_material::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.asset_building_material)
  GOOGLE_DCHECK_NE(&from, this);
  const asset_building_material* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const asset_building_material>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.asset_building_material)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.asset_building_material)
    MergeFrom(*source);
  }
}

void asset_building_material::MergeFrom(const asset_building_material& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.asset_building_material)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.product_id().size() > 0) {

    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  if (from.material_id().size() > 0) {

    material_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.material_id_);
  }
  if (from.detail_info().size() > 0) {

    detail_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detail_info_);
  }
  if (from.is_for_floor() != 0) {
    set_is_for_floor(from.is_for_floor());
  }
  if (from.is_for_wall() != 0) {
    set_is_for_wall(from.is_for_wall());
  }
  if (from.is_for_ceiling() != 0) {
    set_is_for_ceiling(from.is_for_ceiling());
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
}

void asset_building_material::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.asset_building_material)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void asset_building_material::CopyFrom(const asset_building_material& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.asset_building_material)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool asset_building_material::IsInitialized() const {
  return true;
}

void asset_building_material::Swap(asset_building_material* other) {
  if (other == this) return;
  InternalSwap(other);
}
void asset_building_material::InternalSwap(asset_building_material* other) {
  using std::swap;
  product_id_.Swap(&other->product_id_);
  material_id_.Swap(&other->material_id_);
  detail_info_.Swap(&other->detail_info_);
  swap(is_for_floor_, other->is_for_floor_);
  swap(is_for_wall_, other->is_for_wall_);
  swap(is_for_ceiling_, other->is_for_ceiling_);
  swap(length_, other->length_);
  swap(width_, other->width_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata asset_building_material::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void asset_furniture::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int asset_furniture::kProductIdFieldNumber;
const int asset_furniture::kUePathFieldNumber;
const int asset_furniture::kPakUrlFieldNumber;
const int asset_furniture::kLengthFieldNumber;
const int asset_furniture::kDepthFieldNumber;
const int asset_furniture::kHeightFieldNumber;
const int asset_furniture::kIsInteractiveFieldNumber;
const int asset_furniture::kIntelligentTypeFieldNumber;
const int asset_furniture::kFurnitureStyleIdFieldNumber;
const int asset_furniture::kFurnitureMainMaterialIdFieldNumber;
const int asset_furniture::kDetailInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

asset_furniture::asset_furniture()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsasset_furniture();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.asset_furniture)
}
asset_furniture::asset_furniture(const asset_furniture& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.product_id().size() > 0) {
    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  ue_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ue_path().size() > 0) {
    ue_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ue_path_);
  }
  pak_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pak_url().size() > 0) {
    pak_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pak_url_);
  }
  detail_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.detail_info().size() > 0) {
    detail_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detail_info_);
  }
  ::memcpy(&length_, &from.length_,
    static_cast<size_t>(reinterpret_cast<char*>(&furniture_main_material_id_) -
    reinterpret_cast<char*>(&length_)) + sizeof(furniture_main_material_id_));
  // @@protoc_insertion_point(copy_constructor:d5.db2.asset_furniture)
}

void asset_furniture::SharedCtor() {
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ue_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pak_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detail_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&furniture_main_material_id_) -
      reinterpret_cast<char*>(&length_)) + sizeof(furniture_main_material_id_));
  _cached_size_ = 0;
}

asset_furniture::~asset_furniture() {
  // @@protoc_insertion_point(destructor:d5.db2.asset_furniture)
  SharedDtor();
}

void asset_furniture::SharedDtor() {
  product_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ue_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pak_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detail_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void asset_furniture::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* asset_furniture::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const asset_furniture& asset_furniture::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsasset_furniture();
  return *internal_default_instance();
}


void asset_furniture::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.asset_furniture)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ue_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pak_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detail_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&furniture_main_material_id_) -
      reinterpret_cast<char*>(&length_)) + sizeof(furniture_main_material_id_));
  _internal_metadata_.Clear();
}

bool asset_furniture::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.asset_furniture)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string product_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->product_id().data(), static_cast<int>(this->product_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.asset_furniture.product_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ue_path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ue_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ue_path().data(), static_cast<int>(this->ue_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.asset_furniture.ue_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pak_url = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pak_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pak_url().data(), static_cast<int>(this->pak_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.asset_furniture.pak_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double length = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double depth = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &depth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double height = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 is_interactive = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_interactive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 intelligent_type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &intelligent_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 furniture_style_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &furniture_style_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 furniture_main_material_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &furniture_main_material_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string detail_info = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_detail_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->detail_info().data(), static_cast<int>(this->detail_info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.asset_furniture.detail_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.asset_furniture)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.asset_furniture)
  return false;
#undef DO_
}

void asset_furniture::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.asset_furniture)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string product_id = 1;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_furniture.product_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->product_id(), output);
  }

  // string ue_path = 2;
  if (this->ue_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ue_path().data(), static_cast<int>(this->ue_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_furniture.ue_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ue_path(), output);
  }

  // string pak_url = 3;
  if (this->pak_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pak_url().data(), static_cast<int>(this->pak_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_furniture.pak_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->pak_url(), output);
  }

  // double length = 4;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->length(), output);
  }

  // double depth = 5;
  if (this->depth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->depth(), output);
  }

  // double height = 6;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->height(), output);
  }

  // int32 is_interactive = 7;
  if (this->is_interactive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->is_interactive(), output);
  }

  // int32 intelligent_type = 8;
  if (this->intelligent_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->intelligent_type(), output);
  }

  // int32 furniture_style_id = 9;
  if (this->furniture_style_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->furniture_style_id(), output);
  }

  // int32 furniture_main_material_id = 10;
  if (this->furniture_main_material_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->furniture_main_material_id(), output);
  }

  // string detail_info = 11;
  if (this->detail_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detail_info().data(), static_cast<int>(this->detail_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_furniture.detail_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->detail_info(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.asset_furniture)
}

::google::protobuf::uint8* asset_furniture::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.asset_furniture)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string product_id = 1;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_furniture.product_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->product_id(), target);
  }

  // string ue_path = 2;
  if (this->ue_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ue_path().data(), static_cast<int>(this->ue_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_furniture.ue_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ue_path(), target);
  }

  // string pak_url = 3;
  if (this->pak_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pak_url().data(), static_cast<int>(this->pak_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_furniture.pak_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->pak_url(), target);
  }

  // double length = 4;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->length(), target);
  }

  // double depth = 5;
  if (this->depth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->depth(), target);
  }

  // double height = 6;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->height(), target);
  }

  // int32 is_interactive = 7;
  if (this->is_interactive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->is_interactive(), target);
  }

  // int32 intelligent_type = 8;
  if (this->intelligent_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->intelligent_type(), target);
  }

  // int32 furniture_style_id = 9;
  if (this->furniture_style_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->furniture_style_id(), target);
  }

  // int32 furniture_main_material_id = 10;
  if (this->furniture_main_material_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->furniture_main_material_id(), target);
  }

  // string detail_info = 11;
  if (this->detail_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detail_info().data(), static_cast<int>(this->detail_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_furniture.detail_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->detail_info(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.asset_furniture)
  return target;
}

size_t asset_furniture::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.asset_furniture)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string product_id = 1;
  if (this->product_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->product_id());
  }

  // string ue_path = 2;
  if (this->ue_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ue_path());
  }

  // string pak_url = 3;
  if (this->pak_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pak_url());
  }

  // string detail_info = 11;
  if (this->detail_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->detail_info());
  }

  // double length = 4;
  if (this->length() != 0) {
    total_size += 1 + 8;
  }

  // double depth = 5;
  if (this->depth() != 0) {
    total_size += 1 + 8;
  }

  // double height = 6;
  if (this->height() != 0) {
    total_size += 1 + 8;
  }

  // int32 is_interactive = 7;
  if (this->is_interactive() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->is_interactive());
  }

  // int32 intelligent_type = 8;
  if (this->intelligent_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->intelligent_type());
  }

  // int32 furniture_style_id = 9;
  if (this->furniture_style_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->furniture_style_id());
  }

  // int32 furniture_main_material_id = 10;
  if (this->furniture_main_material_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->furniture_main_material_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void asset_furniture::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.asset_furniture)
  GOOGLE_DCHECK_NE(&from, this);
  const asset_furniture* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const asset_furniture>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.asset_furniture)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.asset_furniture)
    MergeFrom(*source);
  }
}

void asset_furniture::MergeFrom(const asset_furniture& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.asset_furniture)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.product_id().size() > 0) {

    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  if (from.ue_path().size() > 0) {

    ue_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ue_path_);
  }
  if (from.pak_url().size() > 0) {

    pak_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pak_url_);
  }
  if (from.detail_info().size() > 0) {

    detail_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detail_info_);
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
  if (from.depth() != 0) {
    set_depth(from.depth());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.is_interactive() != 0) {
    set_is_interactive(from.is_interactive());
  }
  if (from.intelligent_type() != 0) {
    set_intelligent_type(from.intelligent_type());
  }
  if (from.furniture_style_id() != 0) {
    set_furniture_style_id(from.furniture_style_id());
  }
  if (from.furniture_main_material_id() != 0) {
    set_furniture_main_material_id(from.furniture_main_material_id());
  }
}

void asset_furniture::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.asset_furniture)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void asset_furniture::CopyFrom(const asset_furniture& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.asset_furniture)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool asset_furniture::IsInitialized() const {
  return true;
}

void asset_furniture::Swap(asset_furniture* other) {
  if (other == this) return;
  InternalSwap(other);
}
void asset_furniture::InternalSwap(asset_furniture* other) {
  using std::swap;
  product_id_.Swap(&other->product_id_);
  ue_path_.Swap(&other->ue_path_);
  pak_url_.Swap(&other->pak_url_);
  detail_info_.Swap(&other->detail_info_);
  swap(length_, other->length_);
  swap(depth_, other->depth_);
  swap(height_, other->height_);
  swap(is_interactive_, other->is_interactive_);
  swap(intelligent_type_, other->intelligent_type_);
  swap(furniture_style_id_, other->furniture_style_id_);
  swap(furniture_main_material_id_, other->furniture_main_material_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata asset_furniture::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void asset_furniture_style::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int asset_furniture_style::kIdFieldNumber;
const int asset_furniture_style::kTitleFieldNumber;
const int asset_furniture_style::kThumbnailUrlFieldNumber;
const int asset_furniture_style::kDisplayIndexFieldNumber;
const int asset_furniture_style::kProductIdFieldNumber;
const int asset_furniture_style::kCreateTimeFieldNumber;
const int asset_furniture_style::kUpdateTimeFieldNumber;
const int asset_furniture_style::kSyncStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

asset_furniture_style::asset_furniture_style()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsasset_furniture_style();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.asset_furniture_style)
}
asset_furniture_style::asset_furniture_style(const asset_furniture_style& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  thumbnail_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.thumbnail_url().size() > 0) {
    thumbnail_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_url_);
  }
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.product_id().size() > 0) {
    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  ::memcpy(&create_time_, &from.create_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&update_time_) -
    reinterpret_cast<char*>(&create_time_)) + sizeof(update_time_));
  // @@protoc_insertion_point(copy_constructor:d5.db2.asset_furniture_style)
}

void asset_furniture_style::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_time_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(update_time_));
  _cached_size_ = 0;
}

asset_furniture_style::~asset_furniture_style() {
  // @@protoc_insertion_point(destructor:d5.db2.asset_furniture_style)
  SharedDtor();
}

void asset_furniture_style::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void asset_furniture_style::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* asset_furniture_style::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const asset_furniture_style& asset_furniture_style::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsasset_furniture_style();
  return *internal_default_instance();
}


void asset_furniture_style::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.asset_furniture_style)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_time_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(update_time_));
  _internal_metadata_.Clear();
}

bool asset_furniture_style::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.asset_furniture_style)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.asset_furniture_style.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.asset_furniture_style.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string thumbnail_url = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_thumbnail_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->thumbnail_url().data(), static_cast<int>(this->thumbnail_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.asset_furniture_style.thumbnail_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 display_index = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &display_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string product_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->product_id().data(), static_cast<int>(this->product_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.asset_furniture_style.product_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 create_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &create_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 update_time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &update_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sync_status = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sync_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.asset_furniture_style)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.asset_furniture_style)
  return false;
#undef DO_
}

void asset_furniture_style::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.asset_furniture_style)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_furniture_style.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_furniture_style.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // string thumbnail_url = 3;
  if (this->thumbnail_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thumbnail_url().data(), static_cast<int>(this->thumbnail_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_furniture_style.thumbnail_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->thumbnail_url(), output);
  }

  // int32 display_index = 4;
  if (this->display_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->display_index(), output);
  }

  // string product_id = 5;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_furniture_style.product_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->product_id(), output);
  }

  // int64 create_time = 6;
  if (this->create_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->create_time(), output);
  }

  // int64 update_time = 7;
  if (this->update_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->update_time(), output);
  }

  // int32 sync_status = 8;
  if (this->sync_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->sync_status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.asset_furniture_style)
}

::google::protobuf::uint8* asset_furniture_style::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.asset_furniture_style)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_furniture_style.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_furniture_style.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // string thumbnail_url = 3;
  if (this->thumbnail_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thumbnail_url().data(), static_cast<int>(this->thumbnail_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_furniture_style.thumbnail_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->thumbnail_url(), target);
  }

  // int32 display_index = 4;
  if (this->display_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->display_index(), target);
  }

  // string product_id = 5;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_furniture_style.product_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->product_id(), target);
  }

  // int64 create_time = 6;
  if (this->create_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->create_time(), target);
  }

  // int64 update_time = 7;
  if (this->update_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->update_time(), target);
  }

  // int32 sync_status = 8;
  if (this->sync_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->sync_status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.asset_furniture_style)
  return target;
}

size_t asset_furniture_style::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.asset_furniture_style)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string thumbnail_url = 3;
  if (this->thumbnail_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->thumbnail_url());
  }

  // string product_id = 5;
  if (this->product_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->product_id());
  }

  // int64 create_time = 6;
  if (this->create_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->create_time());
  }

  // int32 display_index = 4;
  if (this->display_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->display_index());
  }

  // int32 sync_status = 8;
  if (this->sync_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sync_status());
  }

  // int64 update_time = 7;
  if (this->update_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->update_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void asset_furniture_style::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.asset_furniture_style)
  GOOGLE_DCHECK_NE(&from, this);
  const asset_furniture_style* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const asset_furniture_style>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.asset_furniture_style)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.asset_furniture_style)
    MergeFrom(*source);
  }
}

void asset_furniture_style::MergeFrom(const asset_furniture_style& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.asset_furniture_style)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.thumbnail_url().size() > 0) {

    thumbnail_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_url_);
  }
  if (from.product_id().size() > 0) {

    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  if (from.create_time() != 0) {
    set_create_time(from.create_time());
  }
  if (from.display_index() != 0) {
    set_display_index(from.display_index());
  }
  if (from.sync_status() != 0) {
    set_sync_status(from.sync_status());
  }
  if (from.update_time() != 0) {
    set_update_time(from.update_time());
  }
}

void asset_furniture_style::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.asset_furniture_style)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void asset_furniture_style::CopyFrom(const asset_furniture_style& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.asset_furniture_style)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool asset_furniture_style::IsInitialized() const {
  return true;
}

void asset_furniture_style::Swap(asset_furniture_style* other) {
  if (other == this) return;
  InternalSwap(other);
}
void asset_furniture_style::InternalSwap(asset_furniture_style* other) {
  using std::swap;
  id_.Swap(&other->id_);
  title_.Swap(&other->title_);
  thumbnail_url_.Swap(&other->thumbnail_url_);
  product_id_.Swap(&other->product_id_);
  swap(create_time_, other->create_time_);
  swap(display_index_, other->display_index_);
  swap(sync_status_, other->sync_status_);
  swap(update_time_, other->update_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata asset_furniture_style::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void asset_furniture_style_material_map::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int asset_furniture_style_material_map::kIdFieldNumber;
const int asset_furniture_style_material_map::kMaterialIdFieldNumber;
const int asset_furniture_style_material_map::kStyleIdFieldNumber;
const int asset_furniture_style_material_map::kMaterialIndexFieldNumber;
const int asset_furniture_style_material_map::kElementNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

asset_furniture_style_material_map::asset_furniture_style_material_map()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsasset_furniture_style_material_map();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.asset_furniture_style_material_map)
}
asset_furniture_style_material_map::asset_furniture_style_material_map(const asset_furniture_style_material_map& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  material_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.material_id().size() > 0) {
    material_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.material_id_);
  }
  style_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.style_id().size() > 0) {
    style_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.style_id_);
  }
  element_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.element_name().size() > 0) {
    element_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.element_name_);
  }
  material_index_ = from.material_index_;
  // @@protoc_insertion_point(copy_constructor:d5.db2.asset_furniture_style_material_map)
}

void asset_furniture_style_material_map::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  material_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  style_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  element_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  material_index_ = 0;
  _cached_size_ = 0;
}

asset_furniture_style_material_map::~asset_furniture_style_material_map() {
  // @@protoc_insertion_point(destructor:d5.db2.asset_furniture_style_material_map)
  SharedDtor();
}

void asset_furniture_style_material_map::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  material_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  style_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  element_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void asset_furniture_style_material_map::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* asset_furniture_style_material_map::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const asset_furniture_style_material_map& asset_furniture_style_material_map::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsasset_furniture_style_material_map();
  return *internal_default_instance();
}


void asset_furniture_style_material_map::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.asset_furniture_style_material_map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  material_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  style_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  element_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  material_index_ = 0;
  _internal_metadata_.Clear();
}

bool asset_furniture_style_material_map::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.asset_furniture_style_material_map)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.asset_furniture_style_material_map.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string material_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_material_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->material_id().data(), static_cast<int>(this->material_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.asset_furniture_style_material_map.material_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string style_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_style_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->style_id().data(), static_cast<int>(this->style_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.asset_furniture_style_material_map.style_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 material_index = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &material_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string element_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_element_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->element_name().data(), static_cast<int>(this->element_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.asset_furniture_style_material_map.element_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.asset_furniture_style_material_map)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.asset_furniture_style_material_map)
  return false;
#undef DO_
}

void asset_furniture_style_material_map::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.asset_furniture_style_material_map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_furniture_style_material_map.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string material_id = 2;
  if (this->material_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->material_id().data(), static_cast<int>(this->material_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_furniture_style_material_map.material_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->material_id(), output);
  }

  // string style_id = 3;
  if (this->style_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->style_id().data(), static_cast<int>(this->style_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_furniture_style_material_map.style_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->style_id(), output);
  }

  // int32 material_index = 4;
  if (this->material_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->material_index(), output);
  }

  // string element_name = 5;
  if (this->element_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->element_name().data(), static_cast<int>(this->element_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_furniture_style_material_map.element_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->element_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.asset_furniture_style_material_map)
}

::google::protobuf::uint8* asset_furniture_style_material_map::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.asset_furniture_style_material_map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_furniture_style_material_map.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string material_id = 2;
  if (this->material_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->material_id().data(), static_cast<int>(this->material_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_furniture_style_material_map.material_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->material_id(), target);
  }

  // string style_id = 3;
  if (this->style_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->style_id().data(), static_cast<int>(this->style_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_furniture_style_material_map.style_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->style_id(), target);
  }

  // int32 material_index = 4;
  if (this->material_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->material_index(), target);
  }

  // string element_name = 5;
  if (this->element_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->element_name().data(), static_cast<int>(this->element_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_furniture_style_material_map.element_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->element_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.asset_furniture_style_material_map)
  return target;
}

size_t asset_furniture_style_material_map::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.asset_furniture_style_material_map)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string material_id = 2;
  if (this->material_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->material_id());
  }

  // string style_id = 3;
  if (this->style_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->style_id());
  }

  // string element_name = 5;
  if (this->element_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->element_name());
  }

  // int32 material_index = 4;
  if (this->material_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->material_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void asset_furniture_style_material_map::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.asset_furniture_style_material_map)
  GOOGLE_DCHECK_NE(&from, this);
  const asset_furniture_style_material_map* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const asset_furniture_style_material_map>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.asset_furniture_style_material_map)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.asset_furniture_style_material_map)
    MergeFrom(*source);
  }
}

void asset_furniture_style_material_map::MergeFrom(const asset_furniture_style_material_map& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.asset_furniture_style_material_map)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.material_id().size() > 0) {

    material_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.material_id_);
  }
  if (from.style_id().size() > 0) {

    style_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.style_id_);
  }
  if (from.element_name().size() > 0) {

    element_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.element_name_);
  }
  if (from.material_index() != 0) {
    set_material_index(from.material_index());
  }
}

void asset_furniture_style_material_map::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.asset_furniture_style_material_map)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void asset_furniture_style_material_map::CopyFrom(const asset_furniture_style_material_map& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.asset_furniture_style_material_map)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool asset_furniture_style_material_map::IsInitialized() const {
  return true;
}

void asset_furniture_style_material_map::Swap(asset_furniture_style_material_map* other) {
  if (other == this) return;
  InternalSwap(other);
}
void asset_furniture_style_material_map::InternalSwap(asset_furniture_style_material_map* other) {
  using std::swap;
  id_.Swap(&other->id_);
  material_id_.Swap(&other->material_id_);
  style_id_.Swap(&other->style_id_);
  element_name_.Swap(&other->element_name_);
  swap(material_index_, other->material_index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata asset_furniture_style_material_map::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void asset_material::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int asset_material::kIdFieldNumber;
const int asset_material::kTitleFieldNumber;
const int asset_material::kUePathFieldNumber;
const int asset_material::kMatInfoFieldNumber;
const int asset_material::kThumbnailUrlFieldNumber;
const int asset_material::kIsDelFieldNumber;
const int asset_material::kIsPrivateFieldNumber;
const int asset_material::kUserIdFieldNumber;
const int asset_material::kCompanyIdFieldNumber;
const int asset_material::kCreateTimeFieldNumber;
const int asset_material::kUpdateTimeFieldNumber;
const int asset_material::kCategoryIdFieldNumber;
const int asset_material::kMetallicFieldNumber;
const int asset_material::kRoughnessFieldNumber;
const int asset_material::kEmissiveColorFieldNumber;
const int asset_material::kTypeFieldNumber;
const int asset_material::kIsRepeatFieldNumber;
const int asset_material::kIsSubmitFieldNumber;
const int asset_material::kSourceFieldNumber;
const int asset_material::kSyncStatusFieldNumber;
const int asset_material::kPakUrlFieldNumber;
const int asset_material::kDependentFileListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

asset_material::asset_material()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsasset_material();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.asset_material)
}
asset_material::asset_material(const asset_material& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  ue_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ue_path().size() > 0) {
    ue_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ue_path_);
  }
  mat_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mat_info().size() > 0) {
    mat_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mat_info_);
  }
  thumbnail_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.thumbnail_url().size() > 0) {
    thumbnail_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_url_);
  }
  pak_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pak_url().size() > 0) {
    pak_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pak_url_);
  }
  dependent_file_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dependent_file_list().size() > 0) {
    dependent_file_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dependent_file_list_);
  }
  ::memcpy(&is_del_, &from.is_del_,
    static_cast<size_t>(reinterpret_cast<char*>(&sync_status_) -
    reinterpret_cast<char*>(&is_del_)) + sizeof(sync_status_));
  // @@protoc_insertion_point(copy_constructor:d5.db2.asset_material)
}

void asset_material::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ue_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mat_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pak_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dependent_file_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_del_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sync_status_) -
      reinterpret_cast<char*>(&is_del_)) + sizeof(sync_status_));
  _cached_size_ = 0;
}

asset_material::~asset_material() {
  // @@protoc_insertion_point(destructor:d5.db2.asset_material)
  SharedDtor();
}

void asset_material::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ue_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mat_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pak_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dependent_file_list_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void asset_material::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* asset_material::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const asset_material& asset_material::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsasset_material();
  return *internal_default_instance();
}


void asset_material::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.asset_material)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ue_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mat_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pak_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dependent_file_list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_del_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sync_status_) -
      reinterpret_cast<char*>(&is_del_)) + sizeof(sync_status_));
  _internal_metadata_.Clear();
}

bool asset_material::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.asset_material)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.asset_material.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.asset_material.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ue_path = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ue_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ue_path().data(), static_cast<int>(this->ue_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.asset_material.ue_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mat_info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mat_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mat_info().data(), static_cast<int>(this->mat_info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.asset_material.mat_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string thumbnail_url = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_thumbnail_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->thumbnail_url().data(), static_cast<int>(this->thumbnail_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.asset_material.thumbnail_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 is_del = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_del_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 is_private = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_private_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 user_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 company_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &company_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 create_time = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &create_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 update_time = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &update_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 category_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &category_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 metallic = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &metallic_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 roughness = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roughness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 emissive_color = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &emissive_color_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 is_repeat = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_repeat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 is_submit = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_submit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 source = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &source_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sync_status = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sync_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pak_url = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pak_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pak_url().data(), static_cast<int>(this->pak_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.asset_material.pak_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dependent_file_list = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dependent_file_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dependent_file_list().data(), static_cast<int>(this->dependent_file_list().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.asset_material.dependent_file_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.asset_material)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.asset_material)
  return false;
#undef DO_
}

void asset_material::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.asset_material)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_material.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_material.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // string ue_path = 3;
  if (this->ue_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ue_path().data(), static_cast<int>(this->ue_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_material.ue_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ue_path(), output);
  }

  // string mat_info = 4;
  if (this->mat_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mat_info().data(), static_cast<int>(this->mat_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_material.mat_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->mat_info(), output);
  }

  // string thumbnail_url = 5;
  if (this->thumbnail_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thumbnail_url().data(), static_cast<int>(this->thumbnail_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_material.thumbnail_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->thumbnail_url(), output);
  }

  // int32 is_del = 6;
  if (this->is_del() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->is_del(), output);
  }

  // int32 is_private = 7;
  if (this->is_private() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->is_private(), output);
  }

  // int32 user_id = 8;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->user_id(), output);
  }

  // int32 company_id = 9;
  if (this->company_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->company_id(), output);
  }

  // int64 create_time = 10;
  if (this->create_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->create_time(), output);
  }

  // int64 update_time = 11;
  if (this->update_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->update_time(), output);
  }

  // int32 category_id = 12;
  if (this->category_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->category_id(), output);
  }

  // int32 metallic = 17;
  if (this->metallic() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->metallic(), output);
  }

  // int32 roughness = 18;
  if (this->roughness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->roughness(), output);
  }

  // int32 emissive_color = 19;
  if (this->emissive_color() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->emissive_color(), output);
  }

  // int32 type = 20;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->type(), output);
  }

  // int32 is_repeat = 21;
  if (this->is_repeat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->is_repeat(), output);
  }

  // int32 is_submit = 22;
  if (this->is_submit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->is_submit(), output);
  }

  // int32 source = 23;
  if (this->source() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->source(), output);
  }

  // int32 sync_status = 24;
  if (this->sync_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->sync_status(), output);
  }

  // string pak_url = 25;
  if (this->pak_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pak_url().data(), static_cast<int>(this->pak_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_material.pak_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->pak_url(), output);
  }

  // string dependent_file_list = 26;
  if (this->dependent_file_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dependent_file_list().data(), static_cast<int>(this->dependent_file_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_material.dependent_file_list");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      26, this->dependent_file_list(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.asset_material)
}

::google::protobuf::uint8* asset_material::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.asset_material)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_material.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_material.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // string ue_path = 3;
  if (this->ue_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ue_path().data(), static_cast<int>(this->ue_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_material.ue_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ue_path(), target);
  }

  // string mat_info = 4;
  if (this->mat_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mat_info().data(), static_cast<int>(this->mat_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_material.mat_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->mat_info(), target);
  }

  // string thumbnail_url = 5;
  if (this->thumbnail_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thumbnail_url().data(), static_cast<int>(this->thumbnail_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_material.thumbnail_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->thumbnail_url(), target);
  }

  // int32 is_del = 6;
  if (this->is_del() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->is_del(), target);
  }

  // int32 is_private = 7;
  if (this->is_private() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->is_private(), target);
  }

  // int32 user_id = 8;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->user_id(), target);
  }

  // int32 company_id = 9;
  if (this->company_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->company_id(), target);
  }

  // int64 create_time = 10;
  if (this->create_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->create_time(), target);
  }

  // int64 update_time = 11;
  if (this->update_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->update_time(), target);
  }

  // int32 category_id = 12;
  if (this->category_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->category_id(), target);
  }

  // int32 metallic = 17;
  if (this->metallic() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->metallic(), target);
  }

  // int32 roughness = 18;
  if (this->roughness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->roughness(), target);
  }

  // int32 emissive_color = 19;
  if (this->emissive_color() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->emissive_color(), target);
  }

  // int32 type = 20;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->type(), target);
  }

  // int32 is_repeat = 21;
  if (this->is_repeat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->is_repeat(), target);
  }

  // int32 is_submit = 22;
  if (this->is_submit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->is_submit(), target);
  }

  // int32 source = 23;
  if (this->source() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->source(), target);
  }

  // int32 sync_status = 24;
  if (this->sync_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->sync_status(), target);
  }

  // string pak_url = 25;
  if (this->pak_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pak_url().data(), static_cast<int>(this->pak_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_material.pak_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->pak_url(), target);
  }

  // string dependent_file_list = 26;
  if (this->dependent_file_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dependent_file_list().data(), static_cast<int>(this->dependent_file_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_material.dependent_file_list");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->dependent_file_list(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.asset_material)
  return target;
}

size_t asset_material::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.asset_material)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string ue_path = 3;
  if (this->ue_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ue_path());
  }

  // string mat_info = 4;
  if (this->mat_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mat_info());
  }

  // string thumbnail_url = 5;
  if (this->thumbnail_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->thumbnail_url());
  }

  // string pak_url = 25;
  if (this->pak_url().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pak_url());
  }

  // string dependent_file_list = 26;
  if (this->dependent_file_list().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dependent_file_list());
  }

  // int32 is_del = 6;
  if (this->is_del() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->is_del());
  }

  // int32 is_private = 7;
  if (this->is_private() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->is_private());
  }

  // int32 user_id = 8;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->user_id());
  }

  // int32 company_id = 9;
  if (this->company_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->company_id());
  }

  // int64 create_time = 10;
  if (this->create_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->create_time());
  }

  // int64 update_time = 11;
  if (this->update_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->update_time());
  }

  // int32 category_id = 12;
  if (this->category_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->category_id());
  }

  // int32 metallic = 17;
  if (this->metallic() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->metallic());
  }

  // int32 roughness = 18;
  if (this->roughness() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roughness());
  }

  // int32 emissive_color = 19;
  if (this->emissive_color() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->emissive_color());
  }

  // int32 type = 20;
  if (this->type() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 is_repeat = 21;
  if (this->is_repeat() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->is_repeat());
  }

  // int32 is_submit = 22;
  if (this->is_submit() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->is_submit());
  }

  // int32 source = 23;
  if (this->source() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->source());
  }

  // int32 sync_status = 24;
  if (this->sync_status() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sync_status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void asset_material::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.asset_material)
  GOOGLE_DCHECK_NE(&from, this);
  const asset_material* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const asset_material>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.asset_material)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.asset_material)
    MergeFrom(*source);
  }
}

void asset_material::MergeFrom(const asset_material& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.asset_material)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.ue_path().size() > 0) {

    ue_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ue_path_);
  }
  if (from.mat_info().size() > 0) {

    mat_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mat_info_);
  }
  if (from.thumbnail_url().size() > 0) {

    thumbnail_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_url_);
  }
  if (from.pak_url().size() > 0) {

    pak_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pak_url_);
  }
  if (from.dependent_file_list().size() > 0) {

    dependent_file_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dependent_file_list_);
  }
  if (from.is_del() != 0) {
    set_is_del(from.is_del());
  }
  if (from.is_private() != 0) {
    set_is_private(from.is_private());
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.company_id() != 0) {
    set_company_id(from.company_id());
  }
  if (from.create_time() != 0) {
    set_create_time(from.create_time());
  }
  if (from.update_time() != 0) {
    set_update_time(from.update_time());
  }
  if (from.category_id() != 0) {
    set_category_id(from.category_id());
  }
  if (from.metallic() != 0) {
    set_metallic(from.metallic());
  }
  if (from.roughness() != 0) {
    set_roughness(from.roughness());
  }
  if (from.emissive_color() != 0) {
    set_emissive_color(from.emissive_color());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.is_repeat() != 0) {
    set_is_repeat(from.is_repeat());
  }
  if (from.is_submit() != 0) {
    set_is_submit(from.is_submit());
  }
  if (from.source() != 0) {
    set_source(from.source());
  }
  if (from.sync_status() != 0) {
    set_sync_status(from.sync_status());
  }
}

void asset_material::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.asset_material)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void asset_material::CopyFrom(const asset_material& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.asset_material)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool asset_material::IsInitialized() const {
  return true;
}

void asset_material::Swap(asset_material* other) {
  if (other == this) return;
  InternalSwap(other);
}
void asset_material::InternalSwap(asset_material* other) {
  using std::swap;
  id_.Swap(&other->id_);
  title_.Swap(&other->title_);
  ue_path_.Swap(&other->ue_path_);
  mat_info_.Swap(&other->mat_info_);
  thumbnail_url_.Swap(&other->thumbnail_url_);
  pak_url_.Swap(&other->pak_url_);
  dependent_file_list_.Swap(&other->dependent_file_list_);
  swap(is_del_, other->is_del_);
  swap(is_private_, other->is_private_);
  swap(user_id_, other->user_id_);
  swap(company_id_, other->company_id_);
  swap(create_time_, other->create_time_);
  swap(update_time_, other->update_time_);
  swap(category_id_, other->category_id_);
  swap(metallic_, other->metallic_);
  swap(roughness_, other->roughness_);
  swap(emissive_color_, other->emissive_color_);
  swap(type_, other->type_);
  swap(is_repeat_, other->is_repeat_);
  swap(is_submit_, other->is_submit_);
  swap(source_, other->source_);
  swap(sync_status_, other->sync_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata asset_material::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void asset_material_category::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int asset_material_category::kIdFieldNumber;
const int asset_material_category::kTitleFieldNumber;
const int asset_material_category::kParentIdFieldNumber;
const int asset_material_category::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

asset_material_category::asset_material_category()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsasset_material_category();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.asset_material_category)
}
asset_material_category::asset_material_category(const asset_material_category& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&id_)) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:d5.db2.asset_material_category)
}

void asset_material_category::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&id_)) + sizeof(level_));
  _cached_size_ = 0;
}

asset_material_category::~asset_material_category() {
  // @@protoc_insertion_point(destructor:d5.db2.asset_material_category)
  SharedDtor();
}

void asset_material_category::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void asset_material_category::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* asset_material_category::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const asset_material_category& asset_material_category::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsasset_material_category();
  return *internal_default_instance();
}


void asset_material_category::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.asset_material_category)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&id_)) + sizeof(level_));
  _internal_metadata_.Clear();
}

bool asset_material_category::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.asset_material_category)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.asset_material_category.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 parent_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &parent_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 level = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.asset_material_category)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.asset_material_category)
  return false;
#undef DO_
}

void asset_material_category::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.asset_material_category)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_material_category.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // int32 parent_id = 3;
  if (this->parent_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->parent_id(), output);
  }

  // int32 level = 4;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.asset_material_category)
}

::google::protobuf::uint8* asset_material_category::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.asset_material_category)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.asset_material_category.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // int32 parent_id = 3;
  if (this->parent_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->parent_id(), target);
  }

  // int32 level = 4;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.asset_material_category)
  return target;
}

size_t asset_material_category::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.asset_material_category)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 parent_id = 3;
  if (this->parent_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->parent_id());
  }

  // int32 level = 4;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void asset_material_category::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.asset_material_category)
  GOOGLE_DCHECK_NE(&from, this);
  const asset_material_category* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const asset_material_category>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.asset_material_category)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.asset_material_category)
    MergeFrom(*source);
  }
}

void asset_material_category::MergeFrom(const asset_material_category& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.asset_material_category)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.parent_id() != 0) {
    set_parent_id(from.parent_id());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
}

void asset_material_category::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.asset_material_category)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void asset_material_category::CopyFrom(const asset_material_category& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.asset_material_category)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool asset_material_category::IsInitialized() const {
  return true;
}

void asset_material_category::Swap(asset_material_category* other) {
  if (other == this) return;
  InternalSwap(other);
}
void asset_material_category::InternalSwap(asset_material_category* other) {
  using std::swap;
  title_.Swap(&other->title_);
  swap(id_, other->id_);
  swap(parent_id_, other->parent_id_);
  swap(level_, other->level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata asset_material_category::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void furniture_color_map::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int furniture_color_map::kColorIdFieldNumber;
const int furniture_color_map::kProductIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

furniture_color_map::furniture_color_map()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsfurniture_color_map();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.furniture_color_map)
}
furniture_color_map::furniture_color_map(const furniture_color_map& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.product_id().size() > 0) {
    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  color_id_ = from.color_id_;
  // @@protoc_insertion_point(copy_constructor:d5.db2.furniture_color_map)
}

void furniture_color_map::SharedCtor() {
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  color_id_ = 0;
  _cached_size_ = 0;
}

furniture_color_map::~furniture_color_map() {
  // @@protoc_insertion_point(destructor:d5.db2.furniture_color_map)
  SharedDtor();
}

void furniture_color_map::SharedDtor() {
  product_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void furniture_color_map::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* furniture_color_map::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const furniture_color_map& furniture_color_map::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsfurniture_color_map();
  return *internal_default_instance();
}


void furniture_color_map::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.furniture_color_map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  color_id_ = 0;
  _internal_metadata_.Clear();
}

bool furniture_color_map::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.furniture_color_map)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 color_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &color_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string product_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->product_id().data(), static_cast<int>(this->product_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.furniture_color_map.product_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.furniture_color_map)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.furniture_color_map)
  return false;
#undef DO_
}

void furniture_color_map::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.furniture_color_map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 color_id = 2;
  if (this->color_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->color_id(), output);
  }

  // string product_id = 3;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.furniture_color_map.product_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->product_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.furniture_color_map)
}

::google::protobuf::uint8* furniture_color_map::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.furniture_color_map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 color_id = 2;
  if (this->color_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->color_id(), target);
  }

  // string product_id = 3;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.furniture_color_map.product_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->product_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.furniture_color_map)
  return target;
}

size_t furniture_color_map::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.furniture_color_map)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string product_id = 3;
  if (this->product_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->product_id());
  }

  // int32 color_id = 2;
  if (this->color_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->color_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void furniture_color_map::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.furniture_color_map)
  GOOGLE_DCHECK_NE(&from, this);
  const furniture_color_map* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const furniture_color_map>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.furniture_color_map)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.furniture_color_map)
    MergeFrom(*source);
  }
}

void furniture_color_map::MergeFrom(const furniture_color_map& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.furniture_color_map)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.product_id().size() > 0) {

    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  if (from.color_id() != 0) {
    set_color_id(from.color_id());
  }
}

void furniture_color_map::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.furniture_color_map)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void furniture_color_map::CopyFrom(const furniture_color_map& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.furniture_color_map)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool furniture_color_map::IsInitialized() const {
  return true;
}

void furniture_color_map::Swap(furniture_color_map* other) {
  if (other == this) return;
  InternalSwap(other);
}
void furniture_color_map::InternalSwap(furniture_color_map* other) {
  using std::swap;
  product_id_.Swap(&other->product_id_);
  swap(color_id_, other->color_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata furniture_color_map::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GA::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GA::kCidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GA::GA()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsGA();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.GA)
}
GA::GA(const GA& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cid_ = from.cid_;
  // @@protoc_insertion_point(copy_constructor:d5.db2.GA)
}

void GA::SharedCtor() {
  cid_ = 0;
  _cached_size_ = 0;
}

GA::~GA() {
  // @@protoc_insertion_point(destructor:d5.db2.GA)
  SharedDtor();
}

void GA::SharedDtor() {
}

void GA::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GA::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GA& GA::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsGA();
  return *internal_default_instance();
}


void GA::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.GA)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cid_ = 0;
  _internal_metadata_.Clear();
}

bool GA::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.GA)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 cid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.GA)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.GA)
  return false;
#undef DO_
}

void GA::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.GA)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 cid = 1;
  if (this->cid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.GA)
}

::google::protobuf::uint8* GA::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.GA)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 cid = 1;
  if (this->cid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.GA)
  return target;
}

size_t GA::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.GA)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 cid = 1;
  if (this->cid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GA::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.GA)
  GOOGLE_DCHECK_NE(&from, this);
  const GA* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GA>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.GA)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.GA)
    MergeFrom(*source);
  }
}

void GA::MergeFrom(const GA& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.GA)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cid() != 0) {
    set_cid(from.cid());
  }
}

void GA::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.GA)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GA::CopyFrom(const GA& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.GA)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GA::IsInitialized() const {
  return true;
}

void GA::Swap(GA* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GA::InternalSwap(GA* other) {
  using std::swap;
  swap(cid_, other->cid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GA::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void plan_desgin_template_statu::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int plan_desgin_template_statu::kIdFieldNumber;
const int plan_desgin_template_statu::kUpdatetimeFieldNumber;
const int plan_desgin_template_statu::kDependFilesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

plan_desgin_template_statu::plan_desgin_template_statu()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsplan_desgin_template_statu();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.plan_desgin_template_statu)
}
plan_desgin_template_statu::plan_desgin_template_statu(const plan_desgin_template_statu& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  depend_files_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.depend_files().size() > 0) {
    depend_files_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.depend_files_);
  }
  updatetime_ = from.updatetime_;
  // @@protoc_insertion_point(copy_constructor:d5.db2.plan_desgin_template_statu)
}

void plan_desgin_template_statu::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  depend_files_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatetime_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

plan_desgin_template_statu::~plan_desgin_template_statu() {
  // @@protoc_insertion_point(destructor:d5.db2.plan_desgin_template_statu)
  SharedDtor();
}

void plan_desgin_template_statu::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  depend_files_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void plan_desgin_template_statu::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* plan_desgin_template_statu::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const plan_desgin_template_statu& plan_desgin_template_statu::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsplan_desgin_template_statu();
  return *internal_default_instance();
}


void plan_desgin_template_statu::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.plan_desgin_template_statu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  depend_files_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatetime_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool plan_desgin_template_statu::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.plan_desgin_template_statu)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.plan_desgin_template_statu.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 updatetime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &updatetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string depend_files = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_depend_files()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->depend_files().data(), static_cast<int>(this->depend_files().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.plan_desgin_template_statu.depend_files"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.plan_desgin_template_statu)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.plan_desgin_template_statu)
  return false;
#undef DO_
}

void plan_desgin_template_statu::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.plan_desgin_template_statu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.plan_desgin_template_statu.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // int64 updatetime = 2;
  if (this->updatetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->updatetime(), output);
  }

  // string depend_files = 3;
  if (this->depend_files().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->depend_files().data(), static_cast<int>(this->depend_files().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.plan_desgin_template_statu.depend_files");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->depend_files(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.plan_desgin_template_statu)
}

::google::protobuf::uint8* plan_desgin_template_statu::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.plan_desgin_template_statu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.plan_desgin_template_statu.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // int64 updatetime = 2;
  if (this->updatetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->updatetime(), target);
  }

  // string depend_files = 3;
  if (this->depend_files().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->depend_files().data(), static_cast<int>(this->depend_files().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.plan_desgin_template_statu.depend_files");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->depend_files(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.plan_desgin_template_statu)
  return target;
}

size_t plan_desgin_template_statu::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.plan_desgin_template_statu)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string depend_files = 3;
  if (this->depend_files().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->depend_files());
  }

  // int64 updatetime = 2;
  if (this->updatetime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->updatetime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void plan_desgin_template_statu::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.plan_desgin_template_statu)
  GOOGLE_DCHECK_NE(&from, this);
  const plan_desgin_template_statu* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const plan_desgin_template_statu>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.plan_desgin_template_statu)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.plan_desgin_template_statu)
    MergeFrom(*source);
  }
}

void plan_desgin_template_statu::MergeFrom(const plan_desgin_template_statu& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.plan_desgin_template_statu)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.depend_files().size() > 0) {

    depend_files_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.depend_files_);
  }
  if (from.updatetime() != 0) {
    set_updatetime(from.updatetime());
  }
}

void plan_desgin_template_statu::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.plan_desgin_template_statu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void plan_desgin_template_statu::CopyFrom(const plan_desgin_template_statu& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.plan_desgin_template_statu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool plan_desgin_template_statu::IsInitialized() const {
  return true;
}

void plan_desgin_template_statu::Swap(plan_desgin_template_statu* other) {
  if (other == this) return;
  InternalSwap(other);
}
void plan_desgin_template_statu::InternalSwap(plan_desgin_template_statu* other) {
  using std::swap;
  id_.Swap(&other->id_);
  depend_files_.Swap(&other->depend_files_);
  swap(updatetime_, other->updatetime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata plan_desgin_template_statu::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void plan_design::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int plan_design::kIdFieldNumber;
const int plan_design::kTitleFieldNumber;
const int plan_design::kSizeFieldNumber;
const int plan_design::kPakUrlFieldNumber;
const int plan_design::kThumbnailUrlFieldNumber;
const int plan_design::kFloorEditFileUrlFieldNumber;
const int plan_design::kDetailInfoFieldNumber;
const int plan_design::kDesignFileUrlFieldNumber;
const int plan_design::kDistrictIdFieldNumber;
const int plan_design::kPropertyTypeIdFieldNumber;
const int plan_design::kRoomTypeIdFieldNumber;
const int plan_design::kTemplateTypeIdFieldNumber;
const int plan_design::kCookStageFieldNumber;
const int plan_design::kIsDelFieldNumber;
const int plan_design::kCreateTimeFieldNumber;
const int plan_design::kUpdateTimeFieldNumber;
const int plan_design::kUserIdFieldNumber;
const int plan_design::kCompanyIdFieldNumber;
const int plan_design::kSyncStatusFieldNumber;
const int plan_design::kFloorEditErrorCodeFieldNumber;
const int plan_design::kCookIdFieldNumber;
const int plan_design::kFloorRefUrlFieldNumber;
const int plan_design::kFloorRefWidthFieldNumber;
const int plan_design::kFloorRefHeightFieldNumber;
const int plan_design::kFloorRefAngleFieldNumber;
const int plan_design::kGroupIdFieldNumber;
const int plan_design::kCondoIdFieldNumber;
const int plan_design::kUsernameFieldNumber;
const int plan_design::kDependentFileListFieldNumber;
const int plan_design::kSourceFieldNumber;
const int plan_design::kQuotationInfoFieldNumber;
const int plan_design::kIsPrivateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

plan_design::plan_design()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsplan_design();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.plan_design)
}
plan_design::plan_design(const plan_design& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  pak_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pak_url().size() > 0) {
    pak_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pak_url_);
  }
  thumbnail_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.thumbnail_url().size() > 0) {
    thumbnail_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_url_);
  }
  floor_edit_file_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.floor_edit_file_url().size() > 0) {
    floor_edit_file_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.floor_edit_file_url_);
  }
  detail_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.detail_info().size() > 0) {
    detail_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detail_info_);
  }
  design_file_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.design_file_url().size() > 0) {
    design_file_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.design_file_url_);
  }
  cook_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cook_id().size() > 0) {
    cook_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cook_id_);
  }
  floor_ref_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.floor_ref_url().size() > 0) {
    floor_ref_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.floor_ref_url_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  dependent_file_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dependent_file_list().size() > 0) {
    dependent_file_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dependent_file_list_);
  }
  quotation_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.quotation_info().size() > 0) {
    quotation_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.quotation_info_);
  }
  ::memcpy(&size_, &from.size_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_private_) -
    reinterpret_cast<char*>(&size_)) + sizeof(is_private_));
  // @@protoc_insertion_point(copy_constructor:d5.db2.plan_design)
}

void plan_design::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pak_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  floor_edit_file_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detail_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  design_file_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cook_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  floor_ref_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dependent_file_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quotation_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_private_) -
      reinterpret_cast<char*>(&size_)) + sizeof(is_private_));
  _cached_size_ = 0;
}

plan_design::~plan_design() {
  // @@protoc_insertion_point(destructor:d5.db2.plan_design)
  SharedDtor();
}

void plan_design::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pak_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  floor_edit_file_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detail_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  design_file_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cook_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  floor_ref_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dependent_file_list_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quotation_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void plan_design::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* plan_design::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const plan_design& plan_design::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsplan_design();
  return *internal_default_instance();
}


void plan_design::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.plan_design)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pak_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  floor_edit_file_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detail_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  design_file_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cook_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  floor_ref_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dependent_file_list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quotation_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_private_) -
      reinterpret_cast<char*>(&size_)) + sizeof(is_private_));
  _internal_metadata_.Clear();
}

bool plan_design::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.plan_design)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.plan_design.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.plan_design.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pak_url = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pak_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pak_url().data(), static_cast<int>(this->pak_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.plan_design.pak_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string thumbnail_url = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_thumbnail_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->thumbnail_url().data(), static_cast<int>(this->thumbnail_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.plan_design.thumbnail_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string floor_edit_file_url = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_floor_edit_file_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->floor_edit_file_url().data(), static_cast<int>(this->floor_edit_file_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.plan_design.floor_edit_file_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string detail_info = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_detail_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->detail_info().data(), static_cast<int>(this->detail_info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.plan_design.detail_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string design_file_url = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_design_file_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->design_file_url().data(), static_cast<int>(this->design_file_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.plan_design.design_file_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 district_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &district_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 property_type_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &property_type_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 room_type_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &room_type_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 template_type_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &template_type_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cook_stage = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cook_stage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 is_del = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_del_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 create_time = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &create_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 update_time = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &update_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 user_id = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 company_id = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &company_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sync_status = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sync_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 floor_edit_error_code = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &floor_edit_error_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cook_id = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cook_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cook_id().data(), static_cast<int>(this->cook_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.plan_design.cook_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string floor_ref_url = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_floor_ref_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->floor_ref_url().data(), static_cast<int>(this->floor_ref_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.plan_design.floor_ref_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double floor_ref_width = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(201u /* 201 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &floor_ref_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double floor_ref_height = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(209u /* 209 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &floor_ref_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double floor_ref_angle = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(217u /* 217 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &floor_ref_angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 group_id = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 condo_id = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 232 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &condo_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string username = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.plan_design.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dependent_file_list = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dependent_file_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dependent_file_list().data(), static_cast<int>(this->dependent_file_list().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.plan_design.dependent_file_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 source = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 256 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &source_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string quotation_info = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_quotation_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->quotation_info().data(), static_cast<int>(this->quotation_info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.plan_design.quotation_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 is_private = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 272 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_private_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.plan_design)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.plan_design)
  return false;
#undef DO_
}

void plan_design::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.plan_design)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.plan_design.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.plan_design.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // double size = 3;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->size(), output);
  }

  // string pak_url = 5;
  if (this->pak_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pak_url().data(), static_cast<int>(this->pak_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.plan_design.pak_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->pak_url(), output);
  }

  // string thumbnail_url = 6;
  if (this->thumbnail_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thumbnail_url().data(), static_cast<int>(this->thumbnail_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.plan_design.thumbnail_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->thumbnail_url(), output);
  }

  // string floor_edit_file_url = 7;
  if (this->floor_edit_file_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->floor_edit_file_url().data(), static_cast<int>(this->floor_edit_file_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.plan_design.floor_edit_file_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->floor_edit_file_url(), output);
  }

  // string detail_info = 8;
  if (this->detail_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detail_info().data(), static_cast<int>(this->detail_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.plan_design.detail_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->detail_info(), output);
  }

  // string design_file_url = 9;
  if (this->design_file_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->design_file_url().data(), static_cast<int>(this->design_file_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.plan_design.design_file_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->design_file_url(), output);
  }

  // int32 district_id = 10;
  if (this->district_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->district_id(), output);
  }

  // int32 property_type_id = 11;
  if (this->property_type_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->property_type_id(), output);
  }

  // int32 room_type_id = 12;
  if (this->room_type_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->room_type_id(), output);
  }

  // int32 template_type_id = 13;
  if (this->template_type_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->template_type_id(), output);
  }

  // int32 cook_stage = 14;
  if (this->cook_stage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->cook_stage(), output);
  }

  // int32 is_del = 15;
  if (this->is_del() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->is_del(), output);
  }

  // int64 create_time = 16;
  if (this->create_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(16, this->create_time(), output);
  }

  // int64 update_time = 17;
  if (this->update_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(17, this->update_time(), output);
  }

  // int32 user_id = 18;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->user_id(), output);
  }

  // int32 company_id = 19;
  if (this->company_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->company_id(), output);
  }

  // int32 sync_status = 20;
  if (this->sync_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->sync_status(), output);
  }

  // int32 floor_edit_error_code = 21;
  if (this->floor_edit_error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->floor_edit_error_code(), output);
  }

  // string cook_id = 23;
  if (this->cook_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cook_id().data(), static_cast<int>(this->cook_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.plan_design.cook_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->cook_id(), output);
  }

  // string floor_ref_url = 24;
  if (this->floor_ref_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->floor_ref_url().data(), static_cast<int>(this->floor_ref_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.plan_design.floor_ref_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      24, this->floor_ref_url(), output);
  }

  // double floor_ref_width = 25;
  if (this->floor_ref_width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(25, this->floor_ref_width(), output);
  }

  // double floor_ref_height = 26;
  if (this->floor_ref_height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(26, this->floor_ref_height(), output);
  }

  // double floor_ref_angle = 27;
  if (this->floor_ref_angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(27, this->floor_ref_angle(), output);
  }

  // int32 group_id = 28;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->group_id(), output);
  }

  // int32 condo_id = 29;
  if (this->condo_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(29, this->condo_id(), output);
  }

  // string username = 30;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.plan_design.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      30, this->username(), output);
  }

  // string dependent_file_list = 31;
  if (this->dependent_file_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dependent_file_list().data(), static_cast<int>(this->dependent_file_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.plan_design.dependent_file_list");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      31, this->dependent_file_list(), output);
  }

  // int32 source = 32;
  if (this->source() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->source(), output);
  }

  // string quotation_info = 33;
  if (this->quotation_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->quotation_info().data(), static_cast<int>(this->quotation_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.plan_design.quotation_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      33, this->quotation_info(), output);
  }

  // int32 is_private = 34;
  if (this->is_private() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(34, this->is_private(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.plan_design)
}

::google::protobuf::uint8* plan_design::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.plan_design)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.plan_design.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.plan_design.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // double size = 3;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->size(), target);
  }

  // string pak_url = 5;
  if (this->pak_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pak_url().data(), static_cast<int>(this->pak_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.plan_design.pak_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->pak_url(), target);
  }

  // string thumbnail_url = 6;
  if (this->thumbnail_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thumbnail_url().data(), static_cast<int>(this->thumbnail_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.plan_design.thumbnail_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->thumbnail_url(), target);
  }

  // string floor_edit_file_url = 7;
  if (this->floor_edit_file_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->floor_edit_file_url().data(), static_cast<int>(this->floor_edit_file_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.plan_design.floor_edit_file_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->floor_edit_file_url(), target);
  }

  // string detail_info = 8;
  if (this->detail_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detail_info().data(), static_cast<int>(this->detail_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.plan_design.detail_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->detail_info(), target);
  }

  // string design_file_url = 9;
  if (this->design_file_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->design_file_url().data(), static_cast<int>(this->design_file_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.plan_design.design_file_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->design_file_url(), target);
  }

  // int32 district_id = 10;
  if (this->district_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->district_id(), target);
  }

  // int32 property_type_id = 11;
  if (this->property_type_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->property_type_id(), target);
  }

  // int32 room_type_id = 12;
  if (this->room_type_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->room_type_id(), target);
  }

  // int32 template_type_id = 13;
  if (this->template_type_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->template_type_id(), target);
  }

  // int32 cook_stage = 14;
  if (this->cook_stage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->cook_stage(), target);
  }

  // int32 is_del = 15;
  if (this->is_del() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->is_del(), target);
  }

  // int64 create_time = 16;
  if (this->create_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(16, this->create_time(), target);
  }

  // int64 update_time = 17;
  if (this->update_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(17, this->update_time(), target);
  }

  // int32 user_id = 18;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->user_id(), target);
  }

  // int32 company_id = 19;
  if (this->company_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->company_id(), target);
  }

  // int32 sync_status = 20;
  if (this->sync_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->sync_status(), target);
  }

  // int32 floor_edit_error_code = 21;
  if (this->floor_edit_error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->floor_edit_error_code(), target);
  }

  // string cook_id = 23;
  if (this->cook_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cook_id().data(), static_cast<int>(this->cook_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.plan_design.cook_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->cook_id(), target);
  }

  // string floor_ref_url = 24;
  if (this->floor_ref_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->floor_ref_url().data(), static_cast<int>(this->floor_ref_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.plan_design.floor_ref_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->floor_ref_url(), target);
  }

  // double floor_ref_width = 25;
  if (this->floor_ref_width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(25, this->floor_ref_width(), target);
  }

  // double floor_ref_height = 26;
  if (this->floor_ref_height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(26, this->floor_ref_height(), target);
  }

  // double floor_ref_angle = 27;
  if (this->floor_ref_angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(27, this->floor_ref_angle(), target);
  }

  // int32 group_id = 28;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->group_id(), target);
  }

  // int32 condo_id = 29;
  if (this->condo_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(29, this->condo_id(), target);
  }

  // string username = 30;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.plan_design.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        30, this->username(), target);
  }

  // string dependent_file_list = 31;
  if (this->dependent_file_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dependent_file_list().data(), static_cast<int>(this->dependent_file_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.plan_design.dependent_file_list");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        31, this->dependent_file_list(), target);
  }

  // int32 source = 32;
  if (this->source() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->source(), target);
  }

  // string quotation_info = 33;
  if (this->quotation_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->quotation_info().data(), static_cast<int>(this->quotation_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.plan_design.quotation_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        33, this->quotation_info(), target);
  }

  // int32 is_private = 34;
  if (this->is_private() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(34, this->is_private(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.plan_design)
  return target;
}

size_t plan_design::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.plan_design)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string pak_url = 5;
  if (this->pak_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pak_url());
  }

  // string thumbnail_url = 6;
  if (this->thumbnail_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->thumbnail_url());
  }

  // string floor_edit_file_url = 7;
  if (this->floor_edit_file_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->floor_edit_file_url());
  }

  // string detail_info = 8;
  if (this->detail_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->detail_info());
  }

  // string design_file_url = 9;
  if (this->design_file_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->design_file_url());
  }

  // string cook_id = 23;
  if (this->cook_id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cook_id());
  }

  // string floor_ref_url = 24;
  if (this->floor_ref_url().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->floor_ref_url());
  }

  // string username = 30;
  if (this->username().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string dependent_file_list = 31;
  if (this->dependent_file_list().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dependent_file_list());
  }

  // string quotation_info = 33;
  if (this->quotation_info().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->quotation_info());
  }

  // double size = 3;
  if (this->size() != 0) {
    total_size += 1 + 8;
  }

  // int32 district_id = 10;
  if (this->district_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->district_id());
  }

  // int32 property_type_id = 11;
  if (this->property_type_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->property_type_id());
  }

  // int32 room_type_id = 12;
  if (this->room_type_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->room_type_id());
  }

  // int32 template_type_id = 13;
  if (this->template_type_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->template_type_id());
  }

  // int32 cook_stage = 14;
  if (this->cook_stage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cook_stage());
  }

  // int32 is_del = 15;
  if (this->is_del() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->is_del());
  }

  // int64 create_time = 16;
  if (this->create_time() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->create_time());
  }

  // int64 update_time = 17;
  if (this->update_time() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->update_time());
  }

  // int32 user_id = 18;
  if (this->user_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->user_id());
  }

  // int32 company_id = 19;
  if (this->company_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->company_id());
  }

  // int32 sync_status = 20;
  if (this->sync_status() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sync_status());
  }

  // int32 floor_edit_error_code = 21;
  if (this->floor_edit_error_code() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->floor_edit_error_code());
  }

  // double floor_ref_width = 25;
  if (this->floor_ref_width() != 0) {
    total_size += 2 + 8;
  }

  // double floor_ref_height = 26;
  if (this->floor_ref_height() != 0) {
    total_size += 2 + 8;
  }

  // double floor_ref_angle = 27;
  if (this->floor_ref_angle() != 0) {
    total_size += 2 + 8;
  }

  // int32 group_id = 28;
  if (this->group_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->group_id());
  }

  // int32 condo_id = 29;
  if (this->condo_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->condo_id());
  }

  // int32 source = 32;
  if (this->source() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->source());
  }

  // int32 is_private = 34;
  if (this->is_private() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->is_private());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void plan_design::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.plan_design)
  GOOGLE_DCHECK_NE(&from, this);
  const plan_design* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const plan_design>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.plan_design)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.plan_design)
    MergeFrom(*source);
  }
}

void plan_design::MergeFrom(const plan_design& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.plan_design)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.pak_url().size() > 0) {

    pak_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pak_url_);
  }
  if (from.thumbnail_url().size() > 0) {

    thumbnail_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_url_);
  }
  if (from.floor_edit_file_url().size() > 0) {

    floor_edit_file_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.floor_edit_file_url_);
  }
  if (from.detail_info().size() > 0) {

    detail_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detail_info_);
  }
  if (from.design_file_url().size() > 0) {

    design_file_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.design_file_url_);
  }
  if (from.cook_id().size() > 0) {

    cook_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cook_id_);
  }
  if (from.floor_ref_url().size() > 0) {

    floor_ref_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.floor_ref_url_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.dependent_file_list().size() > 0) {

    dependent_file_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dependent_file_list_);
  }
  if (from.quotation_info().size() > 0) {

    quotation_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.quotation_info_);
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.district_id() != 0) {
    set_district_id(from.district_id());
  }
  if (from.property_type_id() != 0) {
    set_property_type_id(from.property_type_id());
  }
  if (from.room_type_id() != 0) {
    set_room_type_id(from.room_type_id());
  }
  if (from.template_type_id() != 0) {
    set_template_type_id(from.template_type_id());
  }
  if (from.cook_stage() != 0) {
    set_cook_stage(from.cook_stage());
  }
  if (from.is_del() != 0) {
    set_is_del(from.is_del());
  }
  if (from.create_time() != 0) {
    set_create_time(from.create_time());
  }
  if (from.update_time() != 0) {
    set_update_time(from.update_time());
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.company_id() != 0) {
    set_company_id(from.company_id());
  }
  if (from.sync_status() != 0) {
    set_sync_status(from.sync_status());
  }
  if (from.floor_edit_error_code() != 0) {
    set_floor_edit_error_code(from.floor_edit_error_code());
  }
  if (from.floor_ref_width() != 0) {
    set_floor_ref_width(from.floor_ref_width());
  }
  if (from.floor_ref_height() != 0) {
    set_floor_ref_height(from.floor_ref_height());
  }
  if (from.floor_ref_angle() != 0) {
    set_floor_ref_angle(from.floor_ref_angle());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
  if (from.condo_id() != 0) {
    set_condo_id(from.condo_id());
  }
  if (from.source() != 0) {
    set_source(from.source());
  }
  if (from.is_private() != 0) {
    set_is_private(from.is_private());
  }
}

void plan_design::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.plan_design)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void plan_design::CopyFrom(const plan_design& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.plan_design)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool plan_design::IsInitialized() const {
  return true;
}

void plan_design::Swap(plan_design* other) {
  if (other == this) return;
  InternalSwap(other);
}
void plan_design::InternalSwap(plan_design* other) {
  using std::swap;
  id_.Swap(&other->id_);
  title_.Swap(&other->title_);
  pak_url_.Swap(&other->pak_url_);
  thumbnail_url_.Swap(&other->thumbnail_url_);
  floor_edit_file_url_.Swap(&other->floor_edit_file_url_);
  detail_info_.Swap(&other->detail_info_);
  design_file_url_.Swap(&other->design_file_url_);
  cook_id_.Swap(&other->cook_id_);
  floor_ref_url_.Swap(&other->floor_ref_url_);
  username_.Swap(&other->username_);
  dependent_file_list_.Swap(&other->dependent_file_list_);
  quotation_info_.Swap(&other->quotation_info_);
  swap(size_, other->size_);
  swap(district_id_, other->district_id_);
  swap(property_type_id_, other->property_type_id_);
  swap(room_type_id_, other->room_type_id_);
  swap(template_type_id_, other->template_type_id_);
  swap(cook_stage_, other->cook_stage_);
  swap(is_del_, other->is_del_);
  swap(create_time_, other->create_time_);
  swap(update_time_, other->update_time_);
  swap(user_id_, other->user_id_);
  swap(company_id_, other->company_id_);
  swap(sync_status_, other->sync_status_);
  swap(floor_edit_error_code_, other->floor_edit_error_code_);
  swap(floor_ref_width_, other->floor_ref_width_);
  swap(floor_ref_height_, other->floor_ref_height_);
  swap(floor_ref_angle_, other->floor_ref_angle_);
  swap(group_id_, other->group_id_);
  swap(condo_id_, other->condo_id_);
  swap(source_, other->source_);
  swap(is_private_, other->is_private_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata plan_design::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void product::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int product::kIdFieldNumber;
const int product::kTitleFieldNumber;
const int product::kDescriptionFieldNumber;
const int product::kPriceFieldNumber;
const int product::kCreateTimeFieldNumber;
const int product::kUpdateTimeFieldNumber;
const int product::kBrandIdFieldNumber;
const int product::kSourceFieldNumber;
const int product::kProductTypeFieldNumber;
const int product::kIsPublishedFieldNumber;
const int product::kIsPrivateFieldNumber;
const int product::kIsDelFieldNumber;
const int product::kUserIdFieldNumber;
const int product::kCompanyIdFieldNumber;
const int product::kFolderNameFieldNumber;
const int product::kSyncStatusFieldNumber;
const int product::kCategoryIdFieldNumber;
const int product::kBuyUrlFieldNumber;
const int product::kDependentFileListFieldNumber;
const int product::kProductCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

product::product()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsproduct();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.product)
}
product::product(const product& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  folder_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.folder_name().size() > 0) {
    folder_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.folder_name_);
  }
  buy_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.buy_url().size() > 0) {
    buy_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buy_url_);
  }
  dependent_file_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dependent_file_list().size() > 0) {
    dependent_file_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dependent_file_list_);
  }
  product_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.product_code().size() > 0) {
    product_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_code_);
  }
  ::memcpy(&price_, &from.price_,
    static_cast<size_t>(reinterpret_cast<char*>(&category_id_) -
    reinterpret_cast<char*>(&price_)) + sizeof(category_id_));
  // @@protoc_insertion_point(copy_constructor:d5.db2.product)
}

void product::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  folder_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buy_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dependent_file_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&category_id_) -
      reinterpret_cast<char*>(&price_)) + sizeof(category_id_));
  _cached_size_ = 0;
}

product::~product() {
  // @@protoc_insertion_point(destructor:d5.db2.product)
  SharedDtor();
}

void product::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  folder_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buy_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dependent_file_list_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void product::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* product::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const product& product::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsproduct();
  return *internal_default_instance();
}


void product::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.product)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  folder_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buy_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dependent_file_list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&category_id_) -
      reinterpret_cast<char*>(&price_)) + sizeof(category_id_));
  _internal_metadata_.Clear();
}

bool product::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.product)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.product.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.product.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.product.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double price = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 create_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &create_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 update_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &update_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 brand_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &brand_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 source = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &source_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 product_type = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &product_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 is_published = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_published_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 is_private = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_private_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 is_del = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_del_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 user_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 company_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &company_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string folder_name = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_folder_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->folder_name().data(), static_cast<int>(this->folder_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.product.folder_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sync_status = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sync_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 category_id = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &category_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string buy_url = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buy_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->buy_url().data(), static_cast<int>(this->buy_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.product.buy_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dependent_file_list = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dependent_file_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dependent_file_list().data(), static_cast<int>(this->dependent_file_list().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.product.dependent_file_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string product_code = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->product_code().data(), static_cast<int>(this->product_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.product.product_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.product)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.product)
  return false;
#undef DO_
}

void product::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.product)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // double price = 4;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->price(), output);
  }

  // int64 create_time = 5;
  if (this->create_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->create_time(), output);
  }

  // int64 update_time = 6;
  if (this->update_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->update_time(), output);
  }

  // int32 brand_id = 7;
  if (this->brand_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->brand_id(), output);
  }

  // int32 source = 8;
  if (this->source() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->source(), output);
  }

  // int32 product_type = 9;
  if (this->product_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->product_type(), output);
  }

  // int32 is_published = 10;
  if (this->is_published() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->is_published(), output);
  }

  // int32 is_private = 11;
  if (this->is_private() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->is_private(), output);
  }

  // int32 is_del = 12;
  if (this->is_del() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->is_del(), output);
  }

  // int32 user_id = 13;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->user_id(), output);
  }

  // int32 company_id = 14;
  if (this->company_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->company_id(), output);
  }

  // string folder_name = 15;
  if (this->folder_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->folder_name().data(), static_cast<int>(this->folder_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product.folder_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->folder_name(), output);
  }

  // int32 sync_status = 16;
  if (this->sync_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->sync_status(), output);
  }

  // int32 category_id = 17;
  if (this->category_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->category_id(), output);
  }

  // string buy_url = 18;
  if (this->buy_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buy_url().data(), static_cast<int>(this->buy_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product.buy_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->buy_url(), output);
  }

  // string dependent_file_list = 19;
  if (this->dependent_file_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dependent_file_list().data(), static_cast<int>(this->dependent_file_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product.dependent_file_list");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->dependent_file_list(), output);
  }

  // string product_code = 20;
  if (this->product_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_code().data(), static_cast<int>(this->product_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product.product_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->product_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.product)
}

::google::protobuf::uint8* product::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.product)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // double price = 4;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->price(), target);
  }

  // int64 create_time = 5;
  if (this->create_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->create_time(), target);
  }

  // int64 update_time = 6;
  if (this->update_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->update_time(), target);
  }

  // int32 brand_id = 7;
  if (this->brand_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->brand_id(), target);
  }

  // int32 source = 8;
  if (this->source() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->source(), target);
  }

  // int32 product_type = 9;
  if (this->product_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->product_type(), target);
  }

  // int32 is_published = 10;
  if (this->is_published() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->is_published(), target);
  }

  // int32 is_private = 11;
  if (this->is_private() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->is_private(), target);
  }

  // int32 is_del = 12;
  if (this->is_del() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->is_del(), target);
  }

  // int32 user_id = 13;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->user_id(), target);
  }

  // int32 company_id = 14;
  if (this->company_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->company_id(), target);
  }

  // string folder_name = 15;
  if (this->folder_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->folder_name().data(), static_cast<int>(this->folder_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product.folder_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->folder_name(), target);
  }

  // int32 sync_status = 16;
  if (this->sync_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->sync_status(), target);
  }

  // int32 category_id = 17;
  if (this->category_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->category_id(), target);
  }

  // string buy_url = 18;
  if (this->buy_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buy_url().data(), static_cast<int>(this->buy_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product.buy_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->buy_url(), target);
  }

  // string dependent_file_list = 19;
  if (this->dependent_file_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dependent_file_list().data(), static_cast<int>(this->dependent_file_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product.dependent_file_list");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->dependent_file_list(), target);
  }

  // string product_code = 20;
  if (this->product_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_code().data(), static_cast<int>(this->product_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product.product_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->product_code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.product)
  return target;
}

size_t product::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.product)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string folder_name = 15;
  if (this->folder_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->folder_name());
  }

  // string buy_url = 18;
  if (this->buy_url().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->buy_url());
  }

  // string dependent_file_list = 19;
  if (this->dependent_file_list().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dependent_file_list());
  }

  // string product_code = 20;
  if (this->product_code().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->product_code());
  }

  // double price = 4;
  if (this->price() != 0) {
    total_size += 1 + 8;
  }

  // int64 create_time = 5;
  if (this->create_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->create_time());
  }

  // int64 update_time = 6;
  if (this->update_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->update_time());
  }

  // int32 brand_id = 7;
  if (this->brand_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->brand_id());
  }

  // int32 source = 8;
  if (this->source() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->source());
  }

  // int32 product_type = 9;
  if (this->product_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->product_type());
  }

  // int32 is_published = 10;
  if (this->is_published() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->is_published());
  }

  // int32 is_private = 11;
  if (this->is_private() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->is_private());
  }

  // int32 is_del = 12;
  if (this->is_del() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->is_del());
  }

  // int32 user_id = 13;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->user_id());
  }

  // int32 company_id = 14;
  if (this->company_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->company_id());
  }

  // int32 sync_status = 16;
  if (this->sync_status() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sync_status());
  }

  // int32 category_id = 17;
  if (this->category_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->category_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void product::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.product)
  GOOGLE_DCHECK_NE(&from, this);
  const product* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const product>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.product)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.product)
    MergeFrom(*source);
  }
}

void product::MergeFrom(const product& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.product)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.folder_name().size() > 0) {

    folder_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.folder_name_);
  }
  if (from.buy_url().size() > 0) {

    buy_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buy_url_);
  }
  if (from.dependent_file_list().size() > 0) {

    dependent_file_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dependent_file_list_);
  }
  if (from.product_code().size() > 0) {

    product_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_code_);
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.create_time() != 0) {
    set_create_time(from.create_time());
  }
  if (from.update_time() != 0) {
    set_update_time(from.update_time());
  }
  if (from.brand_id() != 0) {
    set_brand_id(from.brand_id());
  }
  if (from.source() != 0) {
    set_source(from.source());
  }
  if (from.product_type() != 0) {
    set_product_type(from.product_type());
  }
  if (from.is_published() != 0) {
    set_is_published(from.is_published());
  }
  if (from.is_private() != 0) {
    set_is_private(from.is_private());
  }
  if (from.is_del() != 0) {
    set_is_del(from.is_del());
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.company_id() != 0) {
    set_company_id(from.company_id());
  }
  if (from.sync_status() != 0) {
    set_sync_status(from.sync_status());
  }
  if (from.category_id() != 0) {
    set_category_id(from.category_id());
  }
}

void product::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.product)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void product::CopyFrom(const product& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.product)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool product::IsInitialized() const {
  return true;
}

void product::Swap(product* other) {
  if (other == this) return;
  InternalSwap(other);
}
void product::InternalSwap(product* other) {
  using std::swap;
  id_.Swap(&other->id_);
  title_.Swap(&other->title_);
  description_.Swap(&other->description_);
  folder_name_.Swap(&other->folder_name_);
  buy_url_.Swap(&other->buy_url_);
  dependent_file_list_.Swap(&other->dependent_file_list_);
  product_code_.Swap(&other->product_code_);
  swap(price_, other->price_);
  swap(create_time_, other->create_time_);
  swap(update_time_, other->update_time_);
  swap(brand_id_, other->brand_id_);
  swap(source_, other->source_);
  swap(product_type_, other->product_type_);
  swap(is_published_, other->is_published_);
  swap(is_private_, other->is_private_);
  swap(is_del_, other->is_del_);
  swap(user_id_, other->user_id_);
  swap(company_id_, other->company_id_);
  swap(sync_status_, other->sync_status_);
  swap(category_id_, other->category_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata product::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void product_detail_virtual::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int product_detail_virtual::kIdFieldNumber;
const int product_detail_virtual::kTitleFieldNumber;
const int product_detail_virtual::kDescriptionFieldNumber;
const int product_detail_virtual::kPriceFieldNumber;
const int product_detail_virtual::kCreateTimeFieldNumber;
const int product_detail_virtual::kUpdateTimeFieldNumber;
const int product_detail_virtual::kBrandIdFieldNumber;
const int product_detail_virtual::kSourceFieldNumber;
const int product_detail_virtual::kProductTypeFieldNumber;
const int product_detail_virtual::kIsPublishedFieldNumber;
const int product_detail_virtual::kIsPrivateFieldNumber;
const int product_detail_virtual::kIsDelFieldNumber;
const int product_detail_virtual::kUserIdFieldNumber;
const int product_detail_virtual::kCompanyIdFieldNumber;
const int product_detail_virtual::kFolderNameFieldNumber;
const int product_detail_virtual::kSyncStatusFieldNumber;
const int product_detail_virtual::kCategoryIdFieldNumber;
const int product_detail_virtual::kBuyUrlFieldNumber;
const int product_detail_virtual::kFurnitureProductIdFieldNumber;
const int product_detail_virtual::kFurnitureUePathFieldNumber;
const int product_detail_virtual::kFurniturePakUrlFieldNumber;
const int product_detail_virtual::kFurnitureLengthFieldNumber;
const int product_detail_virtual::kFurnitureDepthFieldNumber;
const int product_detail_virtual::kFurnitureHeightFieldNumber;
const int product_detail_virtual::kFurnitureIsInteractiveFieldNumber;
const int product_detail_virtual::kFurnitureIntelligentTypeFieldNumber;
const int product_detail_virtual::kFurnitureFurnitureStyleIdFieldNumber;
const int product_detail_virtual::kFurnitureFurnitureMainMaterialIdFieldNumber;
const int product_detail_virtual::kFurnitureDetailInfoFieldNumber;
const int product_detail_virtual::kBuildingMaterialProductIdFieldNumber;
const int product_detail_virtual::kBuildingMaterialIsForFloorFieldNumber;
const int product_detail_virtual::kBuildingMaterialIsForWallFieldNumber;
const int product_detail_virtual::kBuildingMaterialIsForCeilingFieldNumber;
const int product_detail_virtual::kBuildingMaterialMaterialIdFieldNumber;
const int product_detail_virtual::kBuildingMaterialDetailInfoFieldNumber;
const int product_detail_virtual::kBuildingMaterialLengthFieldNumber;
const int product_detail_virtual::kBuildingMaterialWidthFieldNumber;
const int product_detail_virtual::kDependentFileListFieldNumber;
const int product_detail_virtual::kProductCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

product_detail_virtual::product_detail_virtual()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsproduct_detail_virtual();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.product_detail_virtual)
}
product_detail_virtual::product_detail_virtual(const product_detail_virtual& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  folder_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.folder_name().size() > 0) {
    folder_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.folder_name_);
  }
  buy_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.buy_url().size() > 0) {
    buy_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buy_url_);
  }
  furniture_product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.furniture_product_id().size() > 0) {
    furniture_product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.furniture_product_id_);
  }
  furniture_ue_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.furniture_ue_path().size() > 0) {
    furniture_ue_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.furniture_ue_path_);
  }
  furniture_pak_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.furniture_pak_url().size() > 0) {
    furniture_pak_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.furniture_pak_url_);
  }
  furniture_detail_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.furniture_detail_info().size() > 0) {
    furniture_detail_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.furniture_detail_info_);
  }
  building_material_product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.building_material_product_id().size() > 0) {
    building_material_product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.building_material_product_id_);
  }
  building_material_material_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.building_material_material_id().size() > 0) {
    building_material_material_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.building_material_material_id_);
  }
  building_material_detail_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.building_material_detail_info().size() > 0) {
    building_material_detail_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.building_material_detail_info_);
  }
  dependent_file_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dependent_file_list().size() > 0) {
    dependent_file_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dependent_file_list_);
  }
  product_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.product_code().size() > 0) {
    product_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_code_);
  }
  ::memcpy(&price_, &from.price_,
    static_cast<size_t>(reinterpret_cast<char*>(&building_material_width_) -
    reinterpret_cast<char*>(&price_)) + sizeof(building_material_width_));
  // @@protoc_insertion_point(copy_constructor:d5.db2.product_detail_virtual)
}

void product_detail_virtual::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  folder_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buy_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  furniture_product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  furniture_ue_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  furniture_pak_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  furniture_detail_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  building_material_product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  building_material_material_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  building_material_detail_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dependent_file_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&building_material_width_) -
      reinterpret_cast<char*>(&price_)) + sizeof(building_material_width_));
  _cached_size_ = 0;
}

product_detail_virtual::~product_detail_virtual() {
  // @@protoc_insertion_point(destructor:d5.db2.product_detail_virtual)
  SharedDtor();
}

void product_detail_virtual::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  folder_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buy_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  furniture_product_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  furniture_ue_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  furniture_pak_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  furniture_detail_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  building_material_product_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  building_material_material_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  building_material_detail_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dependent_file_list_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void product_detail_virtual::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* product_detail_virtual::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const product_detail_virtual& product_detail_virtual::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsproduct_detail_virtual();
  return *internal_default_instance();
}


void product_detail_virtual::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.product_detail_virtual)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  folder_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buy_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  furniture_product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  furniture_ue_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  furniture_pak_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  furniture_detail_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  building_material_product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  building_material_material_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  building_material_detail_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dependent_file_list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&building_material_width_) -
      reinterpret_cast<char*>(&price_)) + sizeof(building_material_width_));
  _internal_metadata_.Clear();
}

bool product_detail_virtual::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.product_detail_virtual)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.product_detail_virtual.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.product_detail_virtual.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.product_detail_virtual.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double price = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 create_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &create_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 update_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &update_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 brand_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &brand_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 source = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &source_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 product_type = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &product_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 is_published = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_published_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 is_private = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_private_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 is_del = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_del_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 user_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 company_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &company_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string folder_name = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_folder_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->folder_name().data(), static_cast<int>(this->folder_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.product_detail_virtual.folder_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sync_status = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sync_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 category_id = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &category_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string buy_url = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buy_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->buy_url().data(), static_cast<int>(this->buy_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.product_detail_virtual.buy_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string furniture_product_id = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_furniture_product_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->furniture_product_id().data(), static_cast<int>(this->furniture_product_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.product_detail_virtual.furniture_product_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string furniture_ue_path = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_furniture_ue_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->furniture_ue_path().data(), static_cast<int>(this->furniture_ue_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.product_detail_virtual.furniture_ue_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string furniture_pak_url = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_furniture_pak_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->furniture_pak_url().data(), static_cast<int>(this->furniture_pak_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.product_detail_virtual.furniture_pak_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double furniture_length = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(177u /* 177 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &furniture_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double furniture_depth = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(185u /* 185 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &furniture_depth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double furniture_height = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(193u /* 193 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &furniture_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 furniture_is_interactive = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &furniture_is_interactive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 furniture_intelligent_type = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &furniture_intelligent_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 furniture_furniture_style_id = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &furniture_furniture_style_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 furniture_furniture_main_material_id = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &furniture_furniture_main_material_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string furniture_detail_info = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_furniture_detail_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->furniture_detail_info().data(), static_cast<int>(this->furniture_detail_info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.product_detail_virtual.furniture_detail_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string building_material_product_id = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_building_material_product_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->building_material_product_id().data(), static_cast<int>(this->building_material_product_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.product_detail_virtual.building_material_product_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 building_material_is_for_floor = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &building_material_is_for_floor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 building_material_is_for_wall = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 256 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &building_material_is_for_wall_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 building_material_is_for_ceiling = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 264 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &building_material_is_for_ceiling_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string building_material_material_id = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_building_material_material_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->building_material_material_id().data(), static_cast<int>(this->building_material_material_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.product_detail_virtual.building_material_material_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string building_material_detail_info = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 282 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_building_material_detail_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->building_material_detail_info().data(), static_cast<int>(this->building_material_detail_info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.product_detail_virtual.building_material_detail_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 building_material_length = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 288 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &building_material_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 building_material_width = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 296 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &building_material_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dependent_file_list = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 306 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dependent_file_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dependent_file_list().data(), static_cast<int>(this->dependent_file_list().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.product_detail_virtual.dependent_file_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string product_code = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 314 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->product_code().data(), static_cast<int>(this->product_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.product_detail_virtual.product_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.product_detail_virtual)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.product_detail_virtual)
  return false;
#undef DO_
}

void product_detail_virtual::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.product_detail_virtual)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_detail_virtual.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_detail_virtual.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_detail_virtual.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // double price = 4;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->price(), output);
  }

  // int64 create_time = 5;
  if (this->create_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->create_time(), output);
  }

  // int64 update_time = 6;
  if (this->update_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->update_time(), output);
  }

  // int32 brand_id = 7;
  if (this->brand_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->brand_id(), output);
  }

  // int32 source = 8;
  if (this->source() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->source(), output);
  }

  // int32 product_type = 9;
  if (this->product_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->product_type(), output);
  }

  // int32 is_published = 10;
  if (this->is_published() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->is_published(), output);
  }

  // int32 is_private = 11;
  if (this->is_private() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->is_private(), output);
  }

  // int32 is_del = 12;
  if (this->is_del() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->is_del(), output);
  }

  // int32 user_id = 13;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->user_id(), output);
  }

  // int32 company_id = 14;
  if (this->company_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->company_id(), output);
  }

  // string folder_name = 15;
  if (this->folder_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->folder_name().data(), static_cast<int>(this->folder_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_detail_virtual.folder_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->folder_name(), output);
  }

  // int32 sync_status = 16;
  if (this->sync_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->sync_status(), output);
  }

  // int32 category_id = 17;
  if (this->category_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->category_id(), output);
  }

  // string buy_url = 18;
  if (this->buy_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buy_url().data(), static_cast<int>(this->buy_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_detail_virtual.buy_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->buy_url(), output);
  }

  // string furniture_product_id = 19;
  if (this->furniture_product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->furniture_product_id().data(), static_cast<int>(this->furniture_product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_detail_virtual.furniture_product_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->furniture_product_id(), output);
  }

  // string furniture_ue_path = 20;
  if (this->furniture_ue_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->furniture_ue_path().data(), static_cast<int>(this->furniture_ue_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_detail_virtual.furniture_ue_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->furniture_ue_path(), output);
  }

  // string furniture_pak_url = 21;
  if (this->furniture_pak_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->furniture_pak_url().data(), static_cast<int>(this->furniture_pak_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_detail_virtual.furniture_pak_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->furniture_pak_url(), output);
  }

  // double furniture_length = 22;
  if (this->furniture_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(22, this->furniture_length(), output);
  }

  // double furniture_depth = 23;
  if (this->furniture_depth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(23, this->furniture_depth(), output);
  }

  // double furniture_height = 24;
  if (this->furniture_height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(24, this->furniture_height(), output);
  }

  // int32 furniture_is_interactive = 25;
  if (this->furniture_is_interactive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->furniture_is_interactive(), output);
  }

  // int32 furniture_intelligent_type = 26;
  if (this->furniture_intelligent_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->furniture_intelligent_type(), output);
  }

  // int32 furniture_furniture_style_id = 27;
  if (this->furniture_furniture_style_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->furniture_furniture_style_id(), output);
  }

  // int32 furniture_furniture_main_material_id = 28;
  if (this->furniture_furniture_main_material_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->furniture_furniture_main_material_id(), output);
  }

  // string furniture_detail_info = 29;
  if (this->furniture_detail_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->furniture_detail_info().data(), static_cast<int>(this->furniture_detail_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_detail_virtual.furniture_detail_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      29, this->furniture_detail_info(), output);
  }

  // string building_material_product_id = 30;
  if (this->building_material_product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->building_material_product_id().data(), static_cast<int>(this->building_material_product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_detail_virtual.building_material_product_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      30, this->building_material_product_id(), output);
  }

  // int32 building_material_is_for_floor = 31;
  if (this->building_material_is_for_floor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(31, this->building_material_is_for_floor(), output);
  }

  // int32 building_material_is_for_wall = 32;
  if (this->building_material_is_for_wall() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->building_material_is_for_wall(), output);
  }

  // int32 building_material_is_for_ceiling = 33;
  if (this->building_material_is_for_ceiling() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(33, this->building_material_is_for_ceiling(), output);
  }

  // string building_material_material_id = 34;
  if (this->building_material_material_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->building_material_material_id().data(), static_cast<int>(this->building_material_material_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_detail_virtual.building_material_material_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      34, this->building_material_material_id(), output);
  }

  // string building_material_detail_info = 35;
  if (this->building_material_detail_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->building_material_detail_info().data(), static_cast<int>(this->building_material_detail_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_detail_virtual.building_material_detail_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      35, this->building_material_detail_info(), output);
  }

  // int32 building_material_length = 36;
  if (this->building_material_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(36, this->building_material_length(), output);
  }

  // int32 building_material_width = 37;
  if (this->building_material_width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(37, this->building_material_width(), output);
  }

  // string dependent_file_list = 38;
  if (this->dependent_file_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dependent_file_list().data(), static_cast<int>(this->dependent_file_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_detail_virtual.dependent_file_list");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      38, this->dependent_file_list(), output);
  }

  // string product_code = 39;
  if (this->product_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_code().data(), static_cast<int>(this->product_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_detail_virtual.product_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      39, this->product_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.product_detail_virtual)
}

::google::protobuf::uint8* product_detail_virtual::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.product_detail_virtual)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_detail_virtual.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_detail_virtual.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_detail_virtual.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // double price = 4;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->price(), target);
  }

  // int64 create_time = 5;
  if (this->create_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->create_time(), target);
  }

  // int64 update_time = 6;
  if (this->update_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->update_time(), target);
  }

  // int32 brand_id = 7;
  if (this->brand_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->brand_id(), target);
  }

  // int32 source = 8;
  if (this->source() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->source(), target);
  }

  // int32 product_type = 9;
  if (this->product_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->product_type(), target);
  }

  // int32 is_published = 10;
  if (this->is_published() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->is_published(), target);
  }

  // int32 is_private = 11;
  if (this->is_private() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->is_private(), target);
  }

  // int32 is_del = 12;
  if (this->is_del() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->is_del(), target);
  }

  // int32 user_id = 13;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->user_id(), target);
  }

  // int32 company_id = 14;
  if (this->company_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->company_id(), target);
  }

  // string folder_name = 15;
  if (this->folder_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->folder_name().data(), static_cast<int>(this->folder_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_detail_virtual.folder_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->folder_name(), target);
  }

  // int32 sync_status = 16;
  if (this->sync_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->sync_status(), target);
  }

  // int32 category_id = 17;
  if (this->category_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->category_id(), target);
  }

  // string buy_url = 18;
  if (this->buy_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buy_url().data(), static_cast<int>(this->buy_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_detail_virtual.buy_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->buy_url(), target);
  }

  // string furniture_product_id = 19;
  if (this->furniture_product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->furniture_product_id().data(), static_cast<int>(this->furniture_product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_detail_virtual.furniture_product_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->furniture_product_id(), target);
  }

  // string furniture_ue_path = 20;
  if (this->furniture_ue_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->furniture_ue_path().data(), static_cast<int>(this->furniture_ue_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_detail_virtual.furniture_ue_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->furniture_ue_path(), target);
  }

  // string furniture_pak_url = 21;
  if (this->furniture_pak_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->furniture_pak_url().data(), static_cast<int>(this->furniture_pak_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_detail_virtual.furniture_pak_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->furniture_pak_url(), target);
  }

  // double furniture_length = 22;
  if (this->furniture_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(22, this->furniture_length(), target);
  }

  // double furniture_depth = 23;
  if (this->furniture_depth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(23, this->furniture_depth(), target);
  }

  // double furniture_height = 24;
  if (this->furniture_height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(24, this->furniture_height(), target);
  }

  // int32 furniture_is_interactive = 25;
  if (this->furniture_is_interactive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->furniture_is_interactive(), target);
  }

  // int32 furniture_intelligent_type = 26;
  if (this->furniture_intelligent_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->furniture_intelligent_type(), target);
  }

  // int32 furniture_furniture_style_id = 27;
  if (this->furniture_furniture_style_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->furniture_furniture_style_id(), target);
  }

  // int32 furniture_furniture_main_material_id = 28;
  if (this->furniture_furniture_main_material_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->furniture_furniture_main_material_id(), target);
  }

  // string furniture_detail_info = 29;
  if (this->furniture_detail_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->furniture_detail_info().data(), static_cast<int>(this->furniture_detail_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_detail_virtual.furniture_detail_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        29, this->furniture_detail_info(), target);
  }

  // string building_material_product_id = 30;
  if (this->building_material_product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->building_material_product_id().data(), static_cast<int>(this->building_material_product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_detail_virtual.building_material_product_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        30, this->building_material_product_id(), target);
  }

  // int32 building_material_is_for_floor = 31;
  if (this->building_material_is_for_floor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(31, this->building_material_is_for_floor(), target);
  }

  // int32 building_material_is_for_wall = 32;
  if (this->building_material_is_for_wall() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->building_material_is_for_wall(), target);
  }

  // int32 building_material_is_for_ceiling = 33;
  if (this->building_material_is_for_ceiling() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(33, this->building_material_is_for_ceiling(), target);
  }

  // string building_material_material_id = 34;
  if (this->building_material_material_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->building_material_material_id().data(), static_cast<int>(this->building_material_material_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_detail_virtual.building_material_material_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        34, this->building_material_material_id(), target);
  }

  // string building_material_detail_info = 35;
  if (this->building_material_detail_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->building_material_detail_info().data(), static_cast<int>(this->building_material_detail_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_detail_virtual.building_material_detail_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        35, this->building_material_detail_info(), target);
  }

  // int32 building_material_length = 36;
  if (this->building_material_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(36, this->building_material_length(), target);
  }

  // int32 building_material_width = 37;
  if (this->building_material_width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(37, this->building_material_width(), target);
  }

  // string dependent_file_list = 38;
  if (this->dependent_file_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dependent_file_list().data(), static_cast<int>(this->dependent_file_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_detail_virtual.dependent_file_list");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        38, this->dependent_file_list(), target);
  }

  // string product_code = 39;
  if (this->product_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_code().data(), static_cast<int>(this->product_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_detail_virtual.product_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        39, this->product_code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.product_detail_virtual)
  return target;
}

size_t product_detail_virtual::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.product_detail_virtual)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string folder_name = 15;
  if (this->folder_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->folder_name());
  }

  // string buy_url = 18;
  if (this->buy_url().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->buy_url());
  }

  // string furniture_product_id = 19;
  if (this->furniture_product_id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->furniture_product_id());
  }

  // string furniture_ue_path = 20;
  if (this->furniture_ue_path().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->furniture_ue_path());
  }

  // string furniture_pak_url = 21;
  if (this->furniture_pak_url().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->furniture_pak_url());
  }

  // string furniture_detail_info = 29;
  if (this->furniture_detail_info().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->furniture_detail_info());
  }

  // string building_material_product_id = 30;
  if (this->building_material_product_id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->building_material_product_id());
  }

  // string building_material_material_id = 34;
  if (this->building_material_material_id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->building_material_material_id());
  }

  // string building_material_detail_info = 35;
  if (this->building_material_detail_info().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->building_material_detail_info());
  }

  // string dependent_file_list = 38;
  if (this->dependent_file_list().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dependent_file_list());
  }

  // string product_code = 39;
  if (this->product_code().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->product_code());
  }

  // double price = 4;
  if (this->price() != 0) {
    total_size += 1 + 8;
  }

  // int64 create_time = 5;
  if (this->create_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->create_time());
  }

  // int64 update_time = 6;
  if (this->update_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->update_time());
  }

  // int32 brand_id = 7;
  if (this->brand_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->brand_id());
  }

  // int32 source = 8;
  if (this->source() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->source());
  }

  // int32 product_type = 9;
  if (this->product_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->product_type());
  }

  // int32 is_published = 10;
  if (this->is_published() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->is_published());
  }

  // int32 is_private = 11;
  if (this->is_private() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->is_private());
  }

  // int32 is_del = 12;
  if (this->is_del() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->is_del());
  }

  // int32 user_id = 13;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->user_id());
  }

  // int32 company_id = 14;
  if (this->company_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->company_id());
  }

  // int32 sync_status = 16;
  if (this->sync_status() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sync_status());
  }

  // int32 category_id = 17;
  if (this->category_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->category_id());
  }

  // double furniture_length = 22;
  if (this->furniture_length() != 0) {
    total_size += 2 + 8;
  }

  // double furniture_depth = 23;
  if (this->furniture_depth() != 0) {
    total_size += 2 + 8;
  }

  // double furniture_height = 24;
  if (this->furniture_height() != 0) {
    total_size += 2 + 8;
  }

  // int32 furniture_is_interactive = 25;
  if (this->furniture_is_interactive() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->furniture_is_interactive());
  }

  // int32 furniture_intelligent_type = 26;
  if (this->furniture_intelligent_type() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->furniture_intelligent_type());
  }

  // int32 furniture_furniture_style_id = 27;
  if (this->furniture_furniture_style_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->furniture_furniture_style_id());
  }

  // int32 furniture_furniture_main_material_id = 28;
  if (this->furniture_furniture_main_material_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->furniture_furniture_main_material_id());
  }

  // int32 building_material_is_for_floor = 31;
  if (this->building_material_is_for_floor() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->building_material_is_for_floor());
  }

  // int32 building_material_is_for_wall = 32;
  if (this->building_material_is_for_wall() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->building_material_is_for_wall());
  }

  // int32 building_material_is_for_ceiling = 33;
  if (this->building_material_is_for_ceiling() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->building_material_is_for_ceiling());
  }

  // int32 building_material_length = 36;
  if (this->building_material_length() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->building_material_length());
  }

  // int32 building_material_width = 37;
  if (this->building_material_width() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->building_material_width());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void product_detail_virtual::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.product_detail_virtual)
  GOOGLE_DCHECK_NE(&from, this);
  const product_detail_virtual* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const product_detail_virtual>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.product_detail_virtual)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.product_detail_virtual)
    MergeFrom(*source);
  }
}

void product_detail_virtual::MergeFrom(const product_detail_virtual& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.product_detail_virtual)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.folder_name().size() > 0) {

    folder_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.folder_name_);
  }
  if (from.buy_url().size() > 0) {

    buy_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buy_url_);
  }
  if (from.furniture_product_id().size() > 0) {

    furniture_product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.furniture_product_id_);
  }
  if (from.furniture_ue_path().size() > 0) {

    furniture_ue_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.furniture_ue_path_);
  }
  if (from.furniture_pak_url().size() > 0) {

    furniture_pak_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.furniture_pak_url_);
  }
  if (from.furniture_detail_info().size() > 0) {

    furniture_detail_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.furniture_detail_info_);
  }
  if (from.building_material_product_id().size() > 0) {

    building_material_product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.building_material_product_id_);
  }
  if (from.building_material_material_id().size() > 0) {

    building_material_material_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.building_material_material_id_);
  }
  if (from.building_material_detail_info().size() > 0) {

    building_material_detail_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.building_material_detail_info_);
  }
  if (from.dependent_file_list().size() > 0) {

    dependent_file_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dependent_file_list_);
  }
  if (from.product_code().size() > 0) {

    product_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_code_);
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.create_time() != 0) {
    set_create_time(from.create_time());
  }
  if (from.update_time() != 0) {
    set_update_time(from.update_time());
  }
  if (from.brand_id() != 0) {
    set_brand_id(from.brand_id());
  }
  if (from.source() != 0) {
    set_source(from.source());
  }
  if (from.product_type() != 0) {
    set_product_type(from.product_type());
  }
  if (from.is_published() != 0) {
    set_is_published(from.is_published());
  }
  if (from.is_private() != 0) {
    set_is_private(from.is_private());
  }
  if (from.is_del() != 0) {
    set_is_del(from.is_del());
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.company_id() != 0) {
    set_company_id(from.company_id());
  }
  if (from.sync_status() != 0) {
    set_sync_status(from.sync_status());
  }
  if (from.category_id() != 0) {
    set_category_id(from.category_id());
  }
  if (from.furniture_length() != 0) {
    set_furniture_length(from.furniture_length());
  }
  if (from.furniture_depth() != 0) {
    set_furniture_depth(from.furniture_depth());
  }
  if (from.furniture_height() != 0) {
    set_furniture_height(from.furniture_height());
  }
  if (from.furniture_is_interactive() != 0) {
    set_furniture_is_interactive(from.furniture_is_interactive());
  }
  if (from.furniture_intelligent_type() != 0) {
    set_furniture_intelligent_type(from.furniture_intelligent_type());
  }
  if (from.furniture_furniture_style_id() != 0) {
    set_furniture_furniture_style_id(from.furniture_furniture_style_id());
  }
  if (from.furniture_furniture_main_material_id() != 0) {
    set_furniture_furniture_main_material_id(from.furniture_furniture_main_material_id());
  }
  if (from.building_material_is_for_floor() != 0) {
    set_building_material_is_for_floor(from.building_material_is_for_floor());
  }
  if (from.building_material_is_for_wall() != 0) {
    set_building_material_is_for_wall(from.building_material_is_for_wall());
  }
  if (from.building_material_is_for_ceiling() != 0) {
    set_building_material_is_for_ceiling(from.building_material_is_for_ceiling());
  }
  if (from.building_material_length() != 0) {
    set_building_material_length(from.building_material_length());
  }
  if (from.building_material_width() != 0) {
    set_building_material_width(from.building_material_width());
  }
}

void product_detail_virtual::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.product_detail_virtual)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void product_detail_virtual::CopyFrom(const product_detail_virtual& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.product_detail_virtual)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool product_detail_virtual::IsInitialized() const {
  return true;
}

void product_detail_virtual::Swap(product_detail_virtual* other) {
  if (other == this) return;
  InternalSwap(other);
}
void product_detail_virtual::InternalSwap(product_detail_virtual* other) {
  using std::swap;
  id_.Swap(&other->id_);
  title_.Swap(&other->title_);
  description_.Swap(&other->description_);
  folder_name_.Swap(&other->folder_name_);
  buy_url_.Swap(&other->buy_url_);
  furniture_product_id_.Swap(&other->furniture_product_id_);
  furniture_ue_path_.Swap(&other->furniture_ue_path_);
  furniture_pak_url_.Swap(&other->furniture_pak_url_);
  furniture_detail_info_.Swap(&other->furniture_detail_info_);
  building_material_product_id_.Swap(&other->building_material_product_id_);
  building_material_material_id_.Swap(&other->building_material_material_id_);
  building_material_detail_info_.Swap(&other->building_material_detail_info_);
  dependent_file_list_.Swap(&other->dependent_file_list_);
  product_code_.Swap(&other->product_code_);
  swap(price_, other->price_);
  swap(create_time_, other->create_time_);
  swap(update_time_, other->update_time_);
  swap(brand_id_, other->brand_id_);
  swap(source_, other->source_);
  swap(product_type_, other->product_type_);
  swap(is_published_, other->is_published_);
  swap(is_private_, other->is_private_);
  swap(is_del_, other->is_del_);
  swap(user_id_, other->user_id_);
  swap(company_id_, other->company_id_);
  swap(sync_status_, other->sync_status_);
  swap(category_id_, other->category_id_);
  swap(furniture_length_, other->furniture_length_);
  swap(furniture_depth_, other->furniture_depth_);
  swap(furniture_height_, other->furniture_height_);
  swap(furniture_is_interactive_, other->furniture_is_interactive_);
  swap(furniture_intelligent_type_, other->furniture_intelligent_type_);
  swap(furniture_furniture_style_id_, other->furniture_furniture_style_id_);
  swap(furniture_furniture_main_material_id_, other->furniture_furniture_main_material_id_);
  swap(building_material_is_for_floor_, other->building_material_is_for_floor_);
  swap(building_material_is_for_wall_, other->building_material_is_for_wall_);
  swap(building_material_is_for_ceiling_, other->building_material_is_for_ceiling_);
  swap(building_material_length_, other->building_material_length_);
  swap(building_material_width_, other->building_material_width_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata product_detail_virtual::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void product_brand_temp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int product_brand_temp::kProductIdFieldNumber;
const int product_brand_temp::kBrandFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

product_brand_temp::product_brand_temp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsproduct_brand_temp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.product_brand_temp)
}
product_brand_temp::product_brand_temp(const product_brand_temp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.product_id().size() > 0) {
    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  brand_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.brand().size() > 0) {
    brand_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brand_);
  }
  // @@protoc_insertion_point(copy_constructor:d5.db2.product_brand_temp)
}

void product_brand_temp::SharedCtor() {
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brand_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

product_brand_temp::~product_brand_temp() {
  // @@protoc_insertion_point(destructor:d5.db2.product_brand_temp)
  SharedDtor();
}

void product_brand_temp::SharedDtor() {
  product_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brand_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void product_brand_temp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* product_brand_temp::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const product_brand_temp& product_brand_temp::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsproduct_brand_temp();
  return *internal_default_instance();
}


void product_brand_temp::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.product_brand_temp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brand_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool product_brand_temp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.product_brand_temp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string product_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->product_id().data(), static_cast<int>(this->product_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.product_brand_temp.product_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string brand = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_brand()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->brand().data(), static_cast<int>(this->brand().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.product_brand_temp.brand"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.product_brand_temp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.product_brand_temp)
  return false;
#undef DO_
}

void product_brand_temp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.product_brand_temp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string product_id = 1;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_brand_temp.product_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->product_id(), output);
  }

  // string brand = 2;
  if (this->brand().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brand().data(), static_cast<int>(this->brand().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_brand_temp.brand");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->brand(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.product_brand_temp)
}

::google::protobuf::uint8* product_brand_temp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.product_brand_temp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string product_id = 1;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_brand_temp.product_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->product_id(), target);
  }

  // string brand = 2;
  if (this->brand().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brand().data(), static_cast<int>(this->brand().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_brand_temp.brand");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->brand(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.product_brand_temp)
  return target;
}

size_t product_brand_temp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.product_brand_temp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string product_id = 1;
  if (this->product_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->product_id());
  }

  // string brand = 2;
  if (this->brand().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->brand());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void product_brand_temp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.product_brand_temp)
  GOOGLE_DCHECK_NE(&from, this);
  const product_brand_temp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const product_brand_temp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.product_brand_temp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.product_brand_temp)
    MergeFrom(*source);
  }
}

void product_brand_temp::MergeFrom(const product_brand_temp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.product_brand_temp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.product_id().size() > 0) {

    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  if (from.brand().size() > 0) {

    brand_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brand_);
  }
}

void product_brand_temp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.product_brand_temp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void product_brand_temp::CopyFrom(const product_brand_temp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.product_brand_temp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool product_brand_temp::IsInitialized() const {
  return true;
}

void product_brand_temp::Swap(product_brand_temp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void product_brand_temp::InternalSwap(product_brand_temp* other) {
  using std::swap;
  product_id_.Swap(&other->product_id_);
  brand_.Swap(&other->brand_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata product_brand_temp::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void product_category_map::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int product_category_map::kIdFieldNumber;
const int product_category_map::kCategoryIdFieldNumber;
const int product_category_map::kProductIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

product_category_map::product_category_map()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsproduct_category_map();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.product_category_map)
}
product_category_map::product_category_map(const product_category_map& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.product_id().size() > 0) {
    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&category_id_) -
    reinterpret_cast<char*>(&id_)) + sizeof(category_id_));
  // @@protoc_insertion_point(copy_constructor:d5.db2.product_category_map)
}

void product_category_map::SharedCtor() {
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&category_id_) -
      reinterpret_cast<char*>(&id_)) + sizeof(category_id_));
  _cached_size_ = 0;
}

product_category_map::~product_category_map() {
  // @@protoc_insertion_point(destructor:d5.db2.product_category_map)
  SharedDtor();
}

void product_category_map::SharedDtor() {
  product_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void product_category_map::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* product_category_map::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const product_category_map& product_category_map::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsproduct_category_map();
  return *internal_default_instance();
}


void product_category_map::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.product_category_map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&category_id_) -
      reinterpret_cast<char*>(&id_)) + sizeof(category_id_));
  _internal_metadata_.Clear();
}

bool product_category_map::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.product_category_map)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 category_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &category_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string product_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->product_id().data(), static_cast<int>(this->product_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.product_category_map.product_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.product_category_map)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.product_category_map)
  return false;
#undef DO_
}

void product_category_map::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.product_category_map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // int32 category_id = 2;
  if (this->category_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->category_id(), output);
  }

  // string product_id = 3;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_category_map.product_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->product_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.product_category_map)
}

::google::protobuf::uint8* product_category_map::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.product_category_map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // int32 category_id = 2;
  if (this->category_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->category_id(), target);
  }

  // string product_id = 3;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_category_map.product_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->product_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.product_category_map)
  return target;
}

size_t product_category_map::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.product_category_map)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string product_id = 3;
  if (this->product_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->product_id());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 category_id = 2;
  if (this->category_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->category_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void product_category_map::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.product_category_map)
  GOOGLE_DCHECK_NE(&from, this);
  const product_category_map* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const product_category_map>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.product_category_map)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.product_category_map)
    MergeFrom(*source);
  }
}

void product_category_map::MergeFrom(const product_category_map& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.product_category_map)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.product_id().size() > 0) {

    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.category_id() != 0) {
    set_category_id(from.category_id());
  }
}

void product_category_map::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.product_category_map)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void product_category_map::CopyFrom(const product_category_map& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.product_category_map)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool product_category_map::IsInitialized() const {
  return true;
}

void product_category_map::Swap(product_category_map* other) {
  if (other == this) return;
  InternalSwap(other);
}
void product_category_map::InternalSwap(product_category_map* other) {
  using std::swap;
  product_id_.Swap(&other->product_id_);
  swap(id_, other->id_);
  swap(category_id_, other->category_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata product_category_map::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void product_image::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int product_image::kIdFieldNumber;
const int product_image::kDisplayIndexFieldNumber;
const int product_image::kFileUrlFieldNumber;
const int product_image::kProductIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

product_image::product_image()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsproduct_image();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.product_image)
}
product_image::product_image(const product_image& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  file_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_url().size() > 0) {
    file_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_url_);
  }
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.product_id().size() > 0) {
    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  display_index_ = from.display_index_;
  // @@protoc_insertion_point(copy_constructor:d5.db2.product_image)
}

void product_image::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_index_ = 0;
  _cached_size_ = 0;
}

product_image::~product_image() {
  // @@protoc_insertion_point(destructor:d5.db2.product_image)
  SharedDtor();
}

void product_image::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void product_image::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* product_image::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const product_image& product_image::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsproduct_image();
  return *internal_default_instance();
}


void product_image::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.product_image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_index_ = 0;
  _internal_metadata_.Clear();
}

bool product_image::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.product_image)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.product_image.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 display_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &display_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file_url = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_url().data(), static_cast<int>(this->file_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.product_image.file_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string product_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->product_id().data(), static_cast<int>(this->product_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.product_image.product_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.product_image)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.product_image)
  return false;
#undef DO_
}

void product_image::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.product_image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_image.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // int32 display_index = 2;
  if (this->display_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->display_index(), output);
  }

  // string file_url = 3;
  if (this->file_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_url().data(), static_cast<int>(this->file_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_image.file_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->file_url(), output);
  }

  // string product_id = 4;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_image.product_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->product_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.product_image)
}

::google::protobuf::uint8* product_image::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.product_image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_image.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // int32 display_index = 2;
  if (this->display_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->display_index(), target);
  }

  // string file_url = 3;
  if (this->file_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_url().data(), static_cast<int>(this->file_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_image.file_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->file_url(), target);
  }

  // string product_id = 4;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.product_image.product_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->product_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.product_image)
  return target;
}

size_t product_image::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.product_image)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string file_url = 3;
  if (this->file_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_url());
  }

  // string product_id = 4;
  if (this->product_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->product_id());
  }

  // int32 display_index = 2;
  if (this->display_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->display_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void product_image::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.product_image)
  GOOGLE_DCHECK_NE(&from, this);
  const product_image* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const product_image>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.product_image)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.product_image)
    MergeFrom(*source);
  }
}

void product_image::MergeFrom(const product_image& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.product_image)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.file_url().size() > 0) {

    file_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_url_);
  }
  if (from.product_id().size() > 0) {

    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  if (from.display_index() != 0) {
    set_display_index(from.display_index());
  }
}

void product_image::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.product_image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void product_image::CopyFrom(const product_image& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.product_image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool product_image::IsInitialized() const {
  return true;
}

void product_image::Swap(product_image* other) {
  if (other == this) return;
  InternalSwap(other);
}
void product_image::InternalSwap(product_image* other) {
  using std::swap;
  id_.Swap(&other->id_);
  file_url_.Swap(&other->file_url_);
  product_id_.Swap(&other->product_id_);
  swap(display_index_, other->display_index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata product_image::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void setting_remember::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int setting_remember::kUserIdFieldNumber;
const int setting_remember::kLayoutPageTipFieldNumber;
const int setting_remember::kLayoutDoNotShowAgainFieldNumber;
const int setting_remember::kVrCaptureDoNotShowAgainFieldNumber;
const int setting_remember::kSyncDataTimestampFieldNumber;
const int setting_remember::kScalabilityFieldNumber;
const int setting_remember::kMagicConfirmDoNotShowAgainFieldNumber;
const int setting_remember::kDecorationPageTipFieldNumber;
const int setting_remember::kMaterialReplaceTipFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

setting_remember::setting_remember()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultssetting_remember();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.setting_remember)
}
setting_remember::setting_remember(const setting_remember& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  scalability_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scalability().size() > 0) {
    scalability_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scalability_);
  }
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&material_replace_tip_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(material_replace_tip_));
  // @@protoc_insertion_point(copy_constructor:d5.db2.setting_remember)
}

void setting_remember::SharedCtor() {
  scalability_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&material_replace_tip_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(material_replace_tip_));
  _cached_size_ = 0;
}

setting_remember::~setting_remember() {
  // @@protoc_insertion_point(destructor:d5.db2.setting_remember)
  SharedDtor();
}

void setting_remember::SharedDtor() {
  scalability_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void setting_remember::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* setting_remember::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const setting_remember& setting_remember::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultssetting_remember();
  return *internal_default_instance();
}


void setting_remember::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.setting_remember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scalability_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&material_replace_tip_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(material_replace_tip_));
  _internal_metadata_.Clear();
}

bool setting_remember::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.setting_remember)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 layout_page_tip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &layout_page_tip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 layout_do_not_show_again = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &layout_do_not_show_again_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vr_capture_do_not_show_again = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vr_capture_do_not_show_again_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 sync_data_timestamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sync_data_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string scalability = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scalability()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scalability().data(), static_cast<int>(this->scalability().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.setting_remember.scalability"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 magic_confirm_do_not_show_again = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &magic_confirm_do_not_show_again_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 decoration_page_tip = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &decoration_page_tip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 material_replace_tip = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &material_replace_tip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.setting_remember)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.setting_remember)
  return false;
#undef DO_
}

void setting_remember::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.setting_remember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->user_id(), output);
  }

  // int32 layout_page_tip = 2;
  if (this->layout_page_tip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->layout_page_tip(), output);
  }

  // int32 layout_do_not_show_again = 3;
  if (this->layout_do_not_show_again() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->layout_do_not_show_again(), output);
  }

  // int32 vr_capture_do_not_show_again = 4;
  if (this->vr_capture_do_not_show_again() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->vr_capture_do_not_show_again(), output);
  }

  // int64 sync_data_timestamp = 5;
  if (this->sync_data_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->sync_data_timestamp(), output);
  }

  // string scalability = 6;
  if (this->scalability().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scalability().data(), static_cast<int>(this->scalability().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.setting_remember.scalability");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->scalability(), output);
  }

  // int32 magic_confirm_do_not_show_again = 7;
  if (this->magic_confirm_do_not_show_again() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->magic_confirm_do_not_show_again(), output);
  }

  // int32 decoration_page_tip = 8;
  if (this->decoration_page_tip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->decoration_page_tip(), output);
  }

  // int32 material_replace_tip = 9;
  if (this->material_replace_tip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->material_replace_tip(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.setting_remember)
}

::google::protobuf::uint8* setting_remember::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.setting_remember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->user_id(), target);
  }

  // int32 layout_page_tip = 2;
  if (this->layout_page_tip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->layout_page_tip(), target);
  }

  // int32 layout_do_not_show_again = 3;
  if (this->layout_do_not_show_again() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->layout_do_not_show_again(), target);
  }

  // int32 vr_capture_do_not_show_again = 4;
  if (this->vr_capture_do_not_show_again() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->vr_capture_do_not_show_again(), target);
  }

  // int64 sync_data_timestamp = 5;
  if (this->sync_data_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->sync_data_timestamp(), target);
  }

  // string scalability = 6;
  if (this->scalability().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scalability().data(), static_cast<int>(this->scalability().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.setting_remember.scalability");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->scalability(), target);
  }

  // int32 magic_confirm_do_not_show_again = 7;
  if (this->magic_confirm_do_not_show_again() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->magic_confirm_do_not_show_again(), target);
  }

  // int32 decoration_page_tip = 8;
  if (this->decoration_page_tip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->decoration_page_tip(), target);
  }

  // int32 material_replace_tip = 9;
  if (this->material_replace_tip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->material_replace_tip(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.setting_remember)
  return target;
}

size_t setting_remember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.setting_remember)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string scalability = 6;
  if (this->scalability().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scalability());
  }

  // int32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->user_id());
  }

  // int32 layout_page_tip = 2;
  if (this->layout_page_tip() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->layout_page_tip());
  }

  // int32 layout_do_not_show_again = 3;
  if (this->layout_do_not_show_again() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->layout_do_not_show_again());
  }

  // int32 vr_capture_do_not_show_again = 4;
  if (this->vr_capture_do_not_show_again() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vr_capture_do_not_show_again());
  }

  // int64 sync_data_timestamp = 5;
  if (this->sync_data_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->sync_data_timestamp());
  }

  // int32 magic_confirm_do_not_show_again = 7;
  if (this->magic_confirm_do_not_show_again() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->magic_confirm_do_not_show_again());
  }

  // int32 decoration_page_tip = 8;
  if (this->decoration_page_tip() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->decoration_page_tip());
  }

  // int32 material_replace_tip = 9;
  if (this->material_replace_tip() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->material_replace_tip());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void setting_remember::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.setting_remember)
  GOOGLE_DCHECK_NE(&from, this);
  const setting_remember* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const setting_remember>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.setting_remember)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.setting_remember)
    MergeFrom(*source);
  }
}

void setting_remember::MergeFrom(const setting_remember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.setting_remember)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scalability().size() > 0) {

    scalability_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scalability_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.layout_page_tip() != 0) {
    set_layout_page_tip(from.layout_page_tip());
  }
  if (from.layout_do_not_show_again() != 0) {
    set_layout_do_not_show_again(from.layout_do_not_show_again());
  }
  if (from.vr_capture_do_not_show_again() != 0) {
    set_vr_capture_do_not_show_again(from.vr_capture_do_not_show_again());
  }
  if (from.sync_data_timestamp() != 0) {
    set_sync_data_timestamp(from.sync_data_timestamp());
  }
  if (from.magic_confirm_do_not_show_again() != 0) {
    set_magic_confirm_do_not_show_again(from.magic_confirm_do_not_show_again());
  }
  if (from.decoration_page_tip() != 0) {
    set_decoration_page_tip(from.decoration_page_tip());
  }
  if (from.material_replace_tip() != 0) {
    set_material_replace_tip(from.material_replace_tip());
  }
}

void setting_remember::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.setting_remember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void setting_remember::CopyFrom(const setting_remember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.setting_remember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setting_remember::IsInitialized() const {
  return true;
}

void setting_remember::Swap(setting_remember* other) {
  if (other == this) return;
  InternalSwap(other);
}
void setting_remember::InternalSwap(setting_remember* other) {
  using std::swap;
  scalability_.Swap(&other->scalability_);
  swap(user_id_, other->user_id_);
  swap(layout_page_tip_, other->layout_page_tip_);
  swap(layout_do_not_show_again_, other->layout_do_not_show_again_);
  swap(vr_capture_do_not_show_again_, other->vr_capture_do_not_show_again_);
  swap(sync_data_timestamp_, other->sync_data_timestamp_);
  swap(magic_confirm_do_not_show_again_, other->magic_confirm_do_not_show_again_);
  swap(decoration_page_tip_, other->decoration_page_tip_);
  swap(material_replace_tip_, other->material_replace_tip_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata setting_remember::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void user_login::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int user_login::kNameFieldNumber;
const int user_login::kPasswordFieldNumber;
const int user_login::kLastStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

user_login::user_login()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsuser_login();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.user_login)
}
user_login::user_login(const user_login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  laststatus_ = from.laststatus_;
  // @@protoc_insertion_point(copy_constructor:d5.db2.user_login)
}

void user_login::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  laststatus_ = 0;
  _cached_size_ = 0;
}

user_login::~user_login() {
  // @@protoc_insertion_point(destructor:d5.db2.user_login)
  SharedDtor();
}

void user_login::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void user_login::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* user_login::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const user_login& user_login::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsuser_login();
  return *internal_default_instance();
}


void user_login::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.user_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  laststatus_ = 0;
  _internal_metadata_.Clear();
}

bool user_login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.user_login)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.user_login.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.user_login.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 lastStatus = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &laststatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.user_login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.user_login)
  return false;
#undef DO_
}

void user_login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.user_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.user_login.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.user_login.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // int32 lastStatus = 3;
  if (this->laststatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->laststatus(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.user_login)
}

::google::protobuf::uint8* user_login::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.user_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.user_login.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.user_login.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // int32 lastStatus = 3;
  if (this->laststatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->laststatus(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.user_login)
  return target;
}

size_t user_login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.user_login)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // int32 lastStatus = 3;
  if (this->laststatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->laststatus());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void user_login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.user_login)
  GOOGLE_DCHECK_NE(&from, this);
  const user_login* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const user_login>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.user_login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.user_login)
    MergeFrom(*source);
  }
}

void user_login::MergeFrom(const user_login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.user_login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.laststatus() != 0) {
    set_laststatus(from.laststatus());
  }
}

void user_login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.user_login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void user_login::CopyFrom(const user_login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.user_login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool user_login::IsInitialized() const {
  return true;
}

void user_login::Swap(user_login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void user_login::InternalSwap(user_login* other) {
  using std::swap;
  name_.Swap(&other->name_);
  password_.Swap(&other->password_);
  swap(laststatus_, other->laststatus_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata user_login::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void files_map::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int files_map::kFileFieldNumber;
const int files_map::kMd5FieldNumber;
const int files_map::kUpdateTimeFieldNumber;
const int files_map::kLengthFieldNumber;
const int files_map::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

files_map::files_map()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsfiles_map();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.files_map)
}
files_map::files_map(const files_map& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file().size() > 0) {
    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.md5().size() > 0) {
    md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.md5_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  ::memcpy(&update_time_, &from.update_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&length_) -
    reinterpret_cast<char*>(&update_time_)) + sizeof(length_));
  // @@protoc_insertion_point(copy_constructor:d5.db2.files_map)
}

void files_map::SharedCtor() {
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&update_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&length_) -
      reinterpret_cast<char*>(&update_time_)) + sizeof(length_));
  _cached_size_ = 0;
}

files_map::~files_map() {
  // @@protoc_insertion_point(destructor:d5.db2.files_map)
  SharedDtor();
}

void files_map::SharedDtor() {
  file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void files_map::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* files_map::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const files_map& files_map::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsfiles_map();
  return *internal_default_instance();
}


void files_map::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.files_map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&update_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&length_) -
      reinterpret_cast<char*>(&update_time_)) + sizeof(length_));
  _internal_metadata_.Clear();
}

bool files_map::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.files_map)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string file = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file().data(), static_cast<int>(this->file().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.files_map.file"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string md5 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_md5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->md5().data(), static_cast<int>(this->md5().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.files_map.md5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 update_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &update_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 length = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.files_map.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.files_map)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.files_map)
  return false;
#undef DO_
}

void files_map::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.files_map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file = 1;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file().data(), static_cast<int>(this->file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.files_map.file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file(), output);
  }

  // string md5 = 2;
  if (this->md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->md5().data(), static_cast<int>(this->md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.files_map.md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->md5(), output);
  }

  // int64 update_time = 3;
  if (this->update_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->update_time(), output);
  }

  // int64 length = 4;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->length(), output);
  }

  // string type = 5;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.files_map.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.files_map)
}

::google::protobuf::uint8* files_map::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.files_map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file = 1;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file().data(), static_cast<int>(this->file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.files_map.file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file(), target);
  }

  // string md5 = 2;
  if (this->md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->md5().data(), static_cast<int>(this->md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.files_map.md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->md5(), target);
  }

  // int64 update_time = 3;
  if (this->update_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->update_time(), target);
  }

  // int64 length = 4;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->length(), target);
  }

  // string type = 5;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.files_map.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.files_map)
  return target;
}

size_t files_map::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.files_map)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string file = 1;
  if (this->file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file());
  }

  // string md5 = 2;
  if (this->md5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->md5());
  }

  // string type = 5;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // int64 update_time = 3;
  if (this->update_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->update_time());
  }

  // int64 length = 4;
  if (this->length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->length());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void files_map::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.files_map)
  GOOGLE_DCHECK_NE(&from, this);
  const files_map* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const files_map>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.files_map)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.files_map)
    MergeFrom(*source);
  }
}

void files_map::MergeFrom(const files_map& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.files_map)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file().size() > 0) {

    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  if (from.md5().size() > 0) {

    md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.md5_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.update_time() != 0) {
    set_update_time(from.update_time());
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
}

void files_map::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.files_map)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void files_map::CopyFrom(const files_map& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.files_map)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool files_map::IsInitialized() const {
  return true;
}

void files_map::Swap(files_map* other) {
  if (other == this) return;
  InternalSwap(other);
}
void files_map::InternalSwap(files_map* other) {
  using std::swap;
  file_.Swap(&other->file_);
  md5_.Swap(&other->md5_);
  type_.Swap(&other->type_);
  swap(update_time_, other->update_time_);
  swap(length_, other->length_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata files_map::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void header::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int header::kKeyFieldNumber;
const int header::kCreateTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

header::header()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsheader();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.header)
}
header::header(const header& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  create_time_ = from.create_time_;
  // @@protoc_insertion_point(copy_constructor:d5.db2.header)
}

void header::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  create_time_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

header::~header() {
  // @@protoc_insertion_point(destructor:d5.db2.header)
  SharedDtor();
}

void header::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void header::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* header::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const header& header::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsheader();
  return *internal_default_instance();
}


void header::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  create_time_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool header::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.header)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.db2.header.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 create_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &create_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.header)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.header)
  return false;
#undef DO_
}

void header::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.header.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // int64 create_time = 2;
  if (this->create_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->create_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.header)
}

::google::protobuf::uint8* header::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.db2.header.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // int64 create_time = 2;
  if (this->create_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->create_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.header)
  return target;
}

size_t header::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.header)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // int64 create_time = 2;
  if (this->create_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->create_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void header::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.header)
  GOOGLE_DCHECK_NE(&from, this);
  const header* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const header>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.header)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.header)
    MergeFrom(*source);
  }
}

void header::MergeFrom(const header& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.header)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.create_time() != 0) {
    set_create_time(from.create_time());
  }
}

void header::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void header::CopyFrom(const header& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool header::IsInitialized() const {
  return true;
}

void header::Swap(header* other) {
  if (other == this) return;
  InternalSwap(other);
}
void header::InternalSwap(header* other) {
  using std::swap;
  key_.Swap(&other->key_);
  swap(create_time_, other->create_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata header::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void asset_building_material_db::InitAsDefaultInstance() {
  ::d5::db2::_asset_building_material_db_default_instance_._instance.get_mutable()->head_ = const_cast< ::d5::db2::header*>(
      ::d5::db2::header::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int asset_building_material_db::kHeadFieldNumber;
const int asset_building_material_db::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

asset_building_material_db::asset_building_material_db()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsasset_building_material_db();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.asset_building_material_db)
}
asset_building_material_db::asset_building_material_db(const asset_building_material_db& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      content_(from.content_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::d5::db2::header(*from.head_);
  } else {
    head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:d5.db2.asset_building_material_db)
}

void asset_building_material_db::SharedCtor() {
  head_ = NULL;
  _cached_size_ = 0;
}

asset_building_material_db::~asset_building_material_db() {
  // @@protoc_insertion_point(destructor:d5.db2.asset_building_material_db)
  SharedDtor();
}

void asset_building_material_db::SharedDtor() {
  if (this != internal_default_instance()) delete head_;
}

void asset_building_material_db::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* asset_building_material_db::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const asset_building_material_db& asset_building_material_db::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsasset_building_material_db();
  return *internal_default_instance();
}


void asset_building_material_db::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.asset_building_material_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.Clear();
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  _internal_metadata_.Clear();
}

bool asset_building_material_db::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.asset_building_material_db)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .d5.db2.header head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .d5.db2.asset_building_material content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.asset_building_material_db)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.asset_building_material_db)
  return false;
#undef DO_
}

void asset_building_material_db::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.asset_building_material_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *head_, output);
  }

  // repeated .d5.db2.asset_building_material content = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->content(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.asset_building_material_db)
}

::google::protobuf::uint8* asset_building_material_db::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.asset_building_material_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *head_, deterministic, target);
  }

  // repeated .d5.db2.asset_building_material content = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->content(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.asset_building_material_db)
  return target;
}

size_t asset_building_material_db::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.asset_building_material_db)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .d5.db2.asset_building_material content = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->content_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->content(static_cast<int>(i)));
    }
  }

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void asset_building_material_db::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.asset_building_material_db)
  GOOGLE_DCHECK_NE(&from, this);
  const asset_building_material_db* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const asset_building_material_db>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.asset_building_material_db)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.asset_building_material_db)
    MergeFrom(*source);
  }
}

void asset_building_material_db::MergeFrom(const asset_building_material_db& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.asset_building_material_db)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  content_.MergeFrom(from.content_);
  if (from.has_head()) {
    mutable_head()->::d5::db2::header::MergeFrom(from.head());
  }
}

void asset_building_material_db::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.asset_building_material_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void asset_building_material_db::CopyFrom(const asset_building_material_db& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.asset_building_material_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool asset_building_material_db::IsInitialized() const {
  return true;
}

void asset_building_material_db::Swap(asset_building_material_db* other) {
  if (other == this) return;
  InternalSwap(other);
}
void asset_building_material_db::InternalSwap(asset_building_material_db* other) {
  using std::swap;
  CastToBase(&content_)->InternalSwap(CastToBase(&other->content_));
  swap(head_, other->head_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata asset_building_material_db::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void asset_furniture_db::InitAsDefaultInstance() {
  ::d5::db2::_asset_furniture_db_default_instance_._instance.get_mutable()->head_ = const_cast< ::d5::db2::header*>(
      ::d5::db2::header::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int asset_furniture_db::kHeadFieldNumber;
const int asset_furniture_db::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

asset_furniture_db::asset_furniture_db()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsasset_furniture_db();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.asset_furniture_db)
}
asset_furniture_db::asset_furniture_db(const asset_furniture_db& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      content_(from.content_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::d5::db2::header(*from.head_);
  } else {
    head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:d5.db2.asset_furniture_db)
}

void asset_furniture_db::SharedCtor() {
  head_ = NULL;
  _cached_size_ = 0;
}

asset_furniture_db::~asset_furniture_db() {
  // @@protoc_insertion_point(destructor:d5.db2.asset_furniture_db)
  SharedDtor();
}

void asset_furniture_db::SharedDtor() {
  if (this != internal_default_instance()) delete head_;
}

void asset_furniture_db::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* asset_furniture_db::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const asset_furniture_db& asset_furniture_db::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsasset_furniture_db();
  return *internal_default_instance();
}


void asset_furniture_db::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.asset_furniture_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.Clear();
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  _internal_metadata_.Clear();
}

bool asset_furniture_db::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.asset_furniture_db)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .d5.db2.header head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .d5.db2.asset_furniture content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.asset_furniture_db)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.asset_furniture_db)
  return false;
#undef DO_
}

void asset_furniture_db::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.asset_furniture_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *head_, output);
  }

  // repeated .d5.db2.asset_furniture content = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->content(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.asset_furniture_db)
}

::google::protobuf::uint8* asset_furniture_db::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.asset_furniture_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *head_, deterministic, target);
  }

  // repeated .d5.db2.asset_furniture content = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->content(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.asset_furniture_db)
  return target;
}

size_t asset_furniture_db::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.asset_furniture_db)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .d5.db2.asset_furniture content = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->content_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->content(static_cast<int>(i)));
    }
  }

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void asset_furniture_db::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.asset_furniture_db)
  GOOGLE_DCHECK_NE(&from, this);
  const asset_furniture_db* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const asset_furniture_db>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.asset_furniture_db)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.asset_furniture_db)
    MergeFrom(*source);
  }
}

void asset_furniture_db::MergeFrom(const asset_furniture_db& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.asset_furniture_db)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  content_.MergeFrom(from.content_);
  if (from.has_head()) {
    mutable_head()->::d5::db2::header::MergeFrom(from.head());
  }
}

void asset_furniture_db::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.asset_furniture_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void asset_furniture_db::CopyFrom(const asset_furniture_db& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.asset_furniture_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool asset_furniture_db::IsInitialized() const {
  return true;
}

void asset_furniture_db::Swap(asset_furniture_db* other) {
  if (other == this) return;
  InternalSwap(other);
}
void asset_furniture_db::InternalSwap(asset_furniture_db* other) {
  using std::swap;
  CastToBase(&content_)->InternalSwap(CastToBase(&other->content_));
  swap(head_, other->head_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata asset_furniture_db::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void asset_furniture_style_db::InitAsDefaultInstance() {
  ::d5::db2::_asset_furniture_style_db_default_instance_._instance.get_mutable()->head_ = const_cast< ::d5::db2::header*>(
      ::d5::db2::header::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int asset_furniture_style_db::kHeadFieldNumber;
const int asset_furniture_style_db::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

asset_furniture_style_db::asset_furniture_style_db()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsasset_furniture_style_db();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.asset_furniture_style_db)
}
asset_furniture_style_db::asset_furniture_style_db(const asset_furniture_style_db& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      content_(from.content_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::d5::db2::header(*from.head_);
  } else {
    head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:d5.db2.asset_furniture_style_db)
}

void asset_furniture_style_db::SharedCtor() {
  head_ = NULL;
  _cached_size_ = 0;
}

asset_furniture_style_db::~asset_furniture_style_db() {
  // @@protoc_insertion_point(destructor:d5.db2.asset_furniture_style_db)
  SharedDtor();
}

void asset_furniture_style_db::SharedDtor() {
  if (this != internal_default_instance()) delete head_;
}

void asset_furniture_style_db::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* asset_furniture_style_db::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const asset_furniture_style_db& asset_furniture_style_db::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsasset_furniture_style_db();
  return *internal_default_instance();
}


void asset_furniture_style_db::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.asset_furniture_style_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.Clear();
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  _internal_metadata_.Clear();
}

bool asset_furniture_style_db::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.asset_furniture_style_db)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .d5.db2.header head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .d5.db2.asset_furniture_style content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.asset_furniture_style_db)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.asset_furniture_style_db)
  return false;
#undef DO_
}

void asset_furniture_style_db::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.asset_furniture_style_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *head_, output);
  }

  // repeated .d5.db2.asset_furniture_style content = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->content(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.asset_furniture_style_db)
}

::google::protobuf::uint8* asset_furniture_style_db::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.asset_furniture_style_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *head_, deterministic, target);
  }

  // repeated .d5.db2.asset_furniture_style content = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->content(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.asset_furniture_style_db)
  return target;
}

size_t asset_furniture_style_db::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.asset_furniture_style_db)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .d5.db2.asset_furniture_style content = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->content_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->content(static_cast<int>(i)));
    }
  }

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void asset_furniture_style_db::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.asset_furniture_style_db)
  GOOGLE_DCHECK_NE(&from, this);
  const asset_furniture_style_db* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const asset_furniture_style_db>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.asset_furniture_style_db)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.asset_furniture_style_db)
    MergeFrom(*source);
  }
}

void asset_furniture_style_db::MergeFrom(const asset_furniture_style_db& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.asset_furniture_style_db)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  content_.MergeFrom(from.content_);
  if (from.has_head()) {
    mutable_head()->::d5::db2::header::MergeFrom(from.head());
  }
}

void asset_furniture_style_db::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.asset_furniture_style_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void asset_furniture_style_db::CopyFrom(const asset_furniture_style_db& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.asset_furniture_style_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool asset_furniture_style_db::IsInitialized() const {
  return true;
}

void asset_furniture_style_db::Swap(asset_furniture_style_db* other) {
  if (other == this) return;
  InternalSwap(other);
}
void asset_furniture_style_db::InternalSwap(asset_furniture_style_db* other) {
  using std::swap;
  CastToBase(&content_)->InternalSwap(CastToBase(&other->content_));
  swap(head_, other->head_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata asset_furniture_style_db::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void asset_furniture_style_material_map_db::InitAsDefaultInstance() {
  ::d5::db2::_asset_furniture_style_material_map_db_default_instance_._instance.get_mutable()->head_ = const_cast< ::d5::db2::header*>(
      ::d5::db2::header::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int asset_furniture_style_material_map_db::kHeadFieldNumber;
const int asset_furniture_style_material_map_db::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

asset_furniture_style_material_map_db::asset_furniture_style_material_map_db()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsasset_furniture_style_material_map_db();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.asset_furniture_style_material_map_db)
}
asset_furniture_style_material_map_db::asset_furniture_style_material_map_db(const asset_furniture_style_material_map_db& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      content_(from.content_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::d5::db2::header(*from.head_);
  } else {
    head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:d5.db2.asset_furniture_style_material_map_db)
}

void asset_furniture_style_material_map_db::SharedCtor() {
  head_ = NULL;
  _cached_size_ = 0;
}

asset_furniture_style_material_map_db::~asset_furniture_style_material_map_db() {
  // @@protoc_insertion_point(destructor:d5.db2.asset_furniture_style_material_map_db)
  SharedDtor();
}

void asset_furniture_style_material_map_db::SharedDtor() {
  if (this != internal_default_instance()) delete head_;
}

void asset_furniture_style_material_map_db::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* asset_furniture_style_material_map_db::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const asset_furniture_style_material_map_db& asset_furniture_style_material_map_db::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsasset_furniture_style_material_map_db();
  return *internal_default_instance();
}


void asset_furniture_style_material_map_db::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.asset_furniture_style_material_map_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.Clear();
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  _internal_metadata_.Clear();
}

bool asset_furniture_style_material_map_db::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.asset_furniture_style_material_map_db)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .d5.db2.header head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .d5.db2.asset_furniture_style_material_map content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.asset_furniture_style_material_map_db)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.asset_furniture_style_material_map_db)
  return false;
#undef DO_
}

void asset_furniture_style_material_map_db::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.asset_furniture_style_material_map_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *head_, output);
  }

  // repeated .d5.db2.asset_furniture_style_material_map content = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->content(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.asset_furniture_style_material_map_db)
}

::google::protobuf::uint8* asset_furniture_style_material_map_db::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.asset_furniture_style_material_map_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *head_, deterministic, target);
  }

  // repeated .d5.db2.asset_furniture_style_material_map content = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->content(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.asset_furniture_style_material_map_db)
  return target;
}

size_t asset_furniture_style_material_map_db::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.asset_furniture_style_material_map_db)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .d5.db2.asset_furniture_style_material_map content = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->content_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->content(static_cast<int>(i)));
    }
  }

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void asset_furniture_style_material_map_db::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.asset_furniture_style_material_map_db)
  GOOGLE_DCHECK_NE(&from, this);
  const asset_furniture_style_material_map_db* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const asset_furniture_style_material_map_db>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.asset_furniture_style_material_map_db)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.asset_furniture_style_material_map_db)
    MergeFrom(*source);
  }
}

void asset_furniture_style_material_map_db::MergeFrom(const asset_furniture_style_material_map_db& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.asset_furniture_style_material_map_db)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  content_.MergeFrom(from.content_);
  if (from.has_head()) {
    mutable_head()->::d5::db2::header::MergeFrom(from.head());
  }
}

void asset_furniture_style_material_map_db::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.asset_furniture_style_material_map_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void asset_furniture_style_material_map_db::CopyFrom(const asset_furniture_style_material_map_db& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.asset_furniture_style_material_map_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool asset_furniture_style_material_map_db::IsInitialized() const {
  return true;
}

void asset_furniture_style_material_map_db::Swap(asset_furniture_style_material_map_db* other) {
  if (other == this) return;
  InternalSwap(other);
}
void asset_furniture_style_material_map_db::InternalSwap(asset_furniture_style_material_map_db* other) {
  using std::swap;
  CastToBase(&content_)->InternalSwap(CastToBase(&other->content_));
  swap(head_, other->head_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata asset_furniture_style_material_map_db::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void asset_material_db::InitAsDefaultInstance() {
  ::d5::db2::_asset_material_db_default_instance_._instance.get_mutable()->head_ = const_cast< ::d5::db2::header*>(
      ::d5::db2::header::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int asset_material_db::kHeadFieldNumber;
const int asset_material_db::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

asset_material_db::asset_material_db()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsasset_material_db();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.asset_material_db)
}
asset_material_db::asset_material_db(const asset_material_db& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      content_(from.content_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::d5::db2::header(*from.head_);
  } else {
    head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:d5.db2.asset_material_db)
}

void asset_material_db::SharedCtor() {
  head_ = NULL;
  _cached_size_ = 0;
}

asset_material_db::~asset_material_db() {
  // @@protoc_insertion_point(destructor:d5.db2.asset_material_db)
  SharedDtor();
}

void asset_material_db::SharedDtor() {
  if (this != internal_default_instance()) delete head_;
}

void asset_material_db::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* asset_material_db::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const asset_material_db& asset_material_db::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsasset_material_db();
  return *internal_default_instance();
}


void asset_material_db::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.asset_material_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.Clear();
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  _internal_metadata_.Clear();
}

bool asset_material_db::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.asset_material_db)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .d5.db2.header head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .d5.db2.asset_material content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.asset_material_db)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.asset_material_db)
  return false;
#undef DO_
}

void asset_material_db::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.asset_material_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *head_, output);
  }

  // repeated .d5.db2.asset_material content = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->content(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.asset_material_db)
}

::google::protobuf::uint8* asset_material_db::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.asset_material_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *head_, deterministic, target);
  }

  // repeated .d5.db2.asset_material content = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->content(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.asset_material_db)
  return target;
}

size_t asset_material_db::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.asset_material_db)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .d5.db2.asset_material content = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->content_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->content(static_cast<int>(i)));
    }
  }

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void asset_material_db::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.asset_material_db)
  GOOGLE_DCHECK_NE(&from, this);
  const asset_material_db* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const asset_material_db>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.asset_material_db)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.asset_material_db)
    MergeFrom(*source);
  }
}

void asset_material_db::MergeFrom(const asset_material_db& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.asset_material_db)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  content_.MergeFrom(from.content_);
  if (from.has_head()) {
    mutable_head()->::d5::db2::header::MergeFrom(from.head());
  }
}

void asset_material_db::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.asset_material_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void asset_material_db::CopyFrom(const asset_material_db& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.asset_material_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool asset_material_db::IsInitialized() const {
  return true;
}

void asset_material_db::Swap(asset_material_db* other) {
  if (other == this) return;
  InternalSwap(other);
}
void asset_material_db::InternalSwap(asset_material_db* other) {
  using std::swap;
  CastToBase(&content_)->InternalSwap(CastToBase(&other->content_));
  swap(head_, other->head_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata asset_material_db::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void asset_material_category_db::InitAsDefaultInstance() {
  ::d5::db2::_asset_material_category_db_default_instance_._instance.get_mutable()->head_ = const_cast< ::d5::db2::header*>(
      ::d5::db2::header::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int asset_material_category_db::kHeadFieldNumber;
const int asset_material_category_db::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

asset_material_category_db::asset_material_category_db()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsasset_material_category_db();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.asset_material_category_db)
}
asset_material_category_db::asset_material_category_db(const asset_material_category_db& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      content_(from.content_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::d5::db2::header(*from.head_);
  } else {
    head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:d5.db2.asset_material_category_db)
}

void asset_material_category_db::SharedCtor() {
  head_ = NULL;
  _cached_size_ = 0;
}

asset_material_category_db::~asset_material_category_db() {
  // @@protoc_insertion_point(destructor:d5.db2.asset_material_category_db)
  SharedDtor();
}

void asset_material_category_db::SharedDtor() {
  if (this != internal_default_instance()) delete head_;
}

void asset_material_category_db::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* asset_material_category_db::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const asset_material_category_db& asset_material_category_db::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsasset_material_category_db();
  return *internal_default_instance();
}


void asset_material_category_db::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.asset_material_category_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.Clear();
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  _internal_metadata_.Clear();
}

bool asset_material_category_db::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.asset_material_category_db)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .d5.db2.header head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .d5.db2.asset_material_category content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.asset_material_category_db)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.asset_material_category_db)
  return false;
#undef DO_
}

void asset_material_category_db::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.asset_material_category_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *head_, output);
  }

  // repeated .d5.db2.asset_material_category content = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->content(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.asset_material_category_db)
}

::google::protobuf::uint8* asset_material_category_db::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.asset_material_category_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *head_, deterministic, target);
  }

  // repeated .d5.db2.asset_material_category content = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->content(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.asset_material_category_db)
  return target;
}

size_t asset_material_category_db::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.asset_material_category_db)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .d5.db2.asset_material_category content = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->content_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->content(static_cast<int>(i)));
    }
  }

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void asset_material_category_db::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.asset_material_category_db)
  GOOGLE_DCHECK_NE(&from, this);
  const asset_material_category_db* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const asset_material_category_db>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.asset_material_category_db)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.asset_material_category_db)
    MergeFrom(*source);
  }
}

void asset_material_category_db::MergeFrom(const asset_material_category_db& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.asset_material_category_db)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  content_.MergeFrom(from.content_);
  if (from.has_head()) {
    mutable_head()->::d5::db2::header::MergeFrom(from.head());
  }
}

void asset_material_category_db::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.asset_material_category_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void asset_material_category_db::CopyFrom(const asset_material_category_db& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.asset_material_category_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool asset_material_category_db::IsInitialized() const {
  return true;
}

void asset_material_category_db::Swap(asset_material_category_db* other) {
  if (other == this) return;
  InternalSwap(other);
}
void asset_material_category_db::InternalSwap(asset_material_category_db* other) {
  using std::swap;
  CastToBase(&content_)->InternalSwap(CastToBase(&other->content_));
  swap(head_, other->head_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata asset_material_category_db::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void furniture_color_map_db::InitAsDefaultInstance() {
  ::d5::db2::_furniture_color_map_db_default_instance_._instance.get_mutable()->head_ = const_cast< ::d5::db2::header*>(
      ::d5::db2::header::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int furniture_color_map_db::kHeadFieldNumber;
const int furniture_color_map_db::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

furniture_color_map_db::furniture_color_map_db()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsfurniture_color_map_db();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.furniture_color_map_db)
}
furniture_color_map_db::furniture_color_map_db(const furniture_color_map_db& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      content_(from.content_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::d5::db2::header(*from.head_);
  } else {
    head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:d5.db2.furniture_color_map_db)
}

void furniture_color_map_db::SharedCtor() {
  head_ = NULL;
  _cached_size_ = 0;
}

furniture_color_map_db::~furniture_color_map_db() {
  // @@protoc_insertion_point(destructor:d5.db2.furniture_color_map_db)
  SharedDtor();
}

void furniture_color_map_db::SharedDtor() {
  if (this != internal_default_instance()) delete head_;
}

void furniture_color_map_db::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* furniture_color_map_db::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const furniture_color_map_db& furniture_color_map_db::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsfurniture_color_map_db();
  return *internal_default_instance();
}


void furniture_color_map_db::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.furniture_color_map_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.Clear();
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  _internal_metadata_.Clear();
}

bool furniture_color_map_db::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.furniture_color_map_db)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .d5.db2.header head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .d5.db2.furniture_color_map content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.furniture_color_map_db)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.furniture_color_map_db)
  return false;
#undef DO_
}

void furniture_color_map_db::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.furniture_color_map_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *head_, output);
  }

  // repeated .d5.db2.furniture_color_map content = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->content(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.furniture_color_map_db)
}

::google::protobuf::uint8* furniture_color_map_db::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.furniture_color_map_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *head_, deterministic, target);
  }

  // repeated .d5.db2.furniture_color_map content = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->content(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.furniture_color_map_db)
  return target;
}

size_t furniture_color_map_db::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.furniture_color_map_db)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .d5.db2.furniture_color_map content = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->content_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->content(static_cast<int>(i)));
    }
  }

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void furniture_color_map_db::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.furniture_color_map_db)
  GOOGLE_DCHECK_NE(&from, this);
  const furniture_color_map_db* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const furniture_color_map_db>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.furniture_color_map_db)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.furniture_color_map_db)
    MergeFrom(*source);
  }
}

void furniture_color_map_db::MergeFrom(const furniture_color_map_db& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.furniture_color_map_db)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  content_.MergeFrom(from.content_);
  if (from.has_head()) {
    mutable_head()->::d5::db2::header::MergeFrom(from.head());
  }
}

void furniture_color_map_db::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.furniture_color_map_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void furniture_color_map_db::CopyFrom(const furniture_color_map_db& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.furniture_color_map_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool furniture_color_map_db::IsInitialized() const {
  return true;
}

void furniture_color_map_db::Swap(furniture_color_map_db* other) {
  if (other == this) return;
  InternalSwap(other);
}
void furniture_color_map_db::InternalSwap(furniture_color_map_db* other) {
  using std::swap;
  CastToBase(&content_)->InternalSwap(CastToBase(&other->content_));
  swap(head_, other->head_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata furniture_color_map_db::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GA_db::InitAsDefaultInstance() {
  ::d5::db2::_GA_db_default_instance_._instance.get_mutable()->head_ = const_cast< ::d5::db2::header*>(
      ::d5::db2::header::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GA_db::kHeadFieldNumber;
const int GA_db::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GA_db::GA_db()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsGA_db();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.GA_db)
}
GA_db::GA_db(const GA_db& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      content_(from.content_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::d5::db2::header(*from.head_);
  } else {
    head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:d5.db2.GA_db)
}

void GA_db::SharedCtor() {
  head_ = NULL;
  _cached_size_ = 0;
}

GA_db::~GA_db() {
  // @@protoc_insertion_point(destructor:d5.db2.GA_db)
  SharedDtor();
}

void GA_db::SharedDtor() {
  if (this != internal_default_instance()) delete head_;
}

void GA_db::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GA_db::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GA_db& GA_db::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsGA_db();
  return *internal_default_instance();
}


void GA_db::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.GA_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.Clear();
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  _internal_metadata_.Clear();
}

bool GA_db::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.GA_db)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .d5.db2.header head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .d5.db2.GA content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.GA_db)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.GA_db)
  return false;
#undef DO_
}

void GA_db::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.GA_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *head_, output);
  }

  // repeated .d5.db2.GA content = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->content(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.GA_db)
}

::google::protobuf::uint8* GA_db::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.GA_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *head_, deterministic, target);
  }

  // repeated .d5.db2.GA content = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->content(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.GA_db)
  return target;
}

size_t GA_db::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.GA_db)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .d5.db2.GA content = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->content_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->content(static_cast<int>(i)));
    }
  }

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GA_db::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.GA_db)
  GOOGLE_DCHECK_NE(&from, this);
  const GA_db* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GA_db>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.GA_db)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.GA_db)
    MergeFrom(*source);
  }
}

void GA_db::MergeFrom(const GA_db& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.GA_db)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  content_.MergeFrom(from.content_);
  if (from.has_head()) {
    mutable_head()->::d5::db2::header::MergeFrom(from.head());
  }
}

void GA_db::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.GA_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GA_db::CopyFrom(const GA_db& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.GA_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GA_db::IsInitialized() const {
  return true;
}

void GA_db::Swap(GA_db* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GA_db::InternalSwap(GA_db* other) {
  using std::swap;
  CastToBase(&content_)->InternalSwap(CastToBase(&other->content_));
  swap(head_, other->head_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GA_db::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void plan_desgin_template_statu_db::InitAsDefaultInstance() {
  ::d5::db2::_plan_desgin_template_statu_db_default_instance_._instance.get_mutable()->head_ = const_cast< ::d5::db2::header*>(
      ::d5::db2::header::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int plan_desgin_template_statu_db::kHeadFieldNumber;
const int plan_desgin_template_statu_db::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

plan_desgin_template_statu_db::plan_desgin_template_statu_db()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsplan_desgin_template_statu_db();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.plan_desgin_template_statu_db)
}
plan_desgin_template_statu_db::plan_desgin_template_statu_db(const plan_desgin_template_statu_db& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      content_(from.content_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::d5::db2::header(*from.head_);
  } else {
    head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:d5.db2.plan_desgin_template_statu_db)
}

void plan_desgin_template_statu_db::SharedCtor() {
  head_ = NULL;
  _cached_size_ = 0;
}

plan_desgin_template_statu_db::~plan_desgin_template_statu_db() {
  // @@protoc_insertion_point(destructor:d5.db2.plan_desgin_template_statu_db)
  SharedDtor();
}

void plan_desgin_template_statu_db::SharedDtor() {
  if (this != internal_default_instance()) delete head_;
}

void plan_desgin_template_statu_db::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* plan_desgin_template_statu_db::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const plan_desgin_template_statu_db& plan_desgin_template_statu_db::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsplan_desgin_template_statu_db();
  return *internal_default_instance();
}


void plan_desgin_template_statu_db::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.plan_desgin_template_statu_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.Clear();
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  _internal_metadata_.Clear();
}

bool plan_desgin_template_statu_db::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.plan_desgin_template_statu_db)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .d5.db2.header head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .d5.db2.plan_desgin_template_statu content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.plan_desgin_template_statu_db)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.plan_desgin_template_statu_db)
  return false;
#undef DO_
}

void plan_desgin_template_statu_db::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.plan_desgin_template_statu_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *head_, output);
  }

  // repeated .d5.db2.plan_desgin_template_statu content = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->content(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.plan_desgin_template_statu_db)
}

::google::protobuf::uint8* plan_desgin_template_statu_db::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.plan_desgin_template_statu_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *head_, deterministic, target);
  }

  // repeated .d5.db2.plan_desgin_template_statu content = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->content(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.plan_desgin_template_statu_db)
  return target;
}

size_t plan_desgin_template_statu_db::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.plan_desgin_template_statu_db)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .d5.db2.plan_desgin_template_statu content = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->content_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->content(static_cast<int>(i)));
    }
  }

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void plan_desgin_template_statu_db::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.plan_desgin_template_statu_db)
  GOOGLE_DCHECK_NE(&from, this);
  const plan_desgin_template_statu_db* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const plan_desgin_template_statu_db>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.plan_desgin_template_statu_db)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.plan_desgin_template_statu_db)
    MergeFrom(*source);
  }
}

void plan_desgin_template_statu_db::MergeFrom(const plan_desgin_template_statu_db& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.plan_desgin_template_statu_db)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  content_.MergeFrom(from.content_);
  if (from.has_head()) {
    mutable_head()->::d5::db2::header::MergeFrom(from.head());
  }
}

void plan_desgin_template_statu_db::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.plan_desgin_template_statu_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void plan_desgin_template_statu_db::CopyFrom(const plan_desgin_template_statu_db& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.plan_desgin_template_statu_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool plan_desgin_template_statu_db::IsInitialized() const {
  return true;
}

void plan_desgin_template_statu_db::Swap(plan_desgin_template_statu_db* other) {
  if (other == this) return;
  InternalSwap(other);
}
void plan_desgin_template_statu_db::InternalSwap(plan_desgin_template_statu_db* other) {
  using std::swap;
  CastToBase(&content_)->InternalSwap(CastToBase(&other->content_));
  swap(head_, other->head_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata plan_desgin_template_statu_db::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void plan_design_db::InitAsDefaultInstance() {
  ::d5::db2::_plan_design_db_default_instance_._instance.get_mutable()->head_ = const_cast< ::d5::db2::header*>(
      ::d5::db2::header::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int plan_design_db::kHeadFieldNumber;
const int plan_design_db::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

plan_design_db::plan_design_db()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsplan_design_db();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.plan_design_db)
}
plan_design_db::plan_design_db(const plan_design_db& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      content_(from.content_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::d5::db2::header(*from.head_);
  } else {
    head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:d5.db2.plan_design_db)
}

void plan_design_db::SharedCtor() {
  head_ = NULL;
  _cached_size_ = 0;
}

plan_design_db::~plan_design_db() {
  // @@protoc_insertion_point(destructor:d5.db2.plan_design_db)
  SharedDtor();
}

void plan_design_db::SharedDtor() {
  if (this != internal_default_instance()) delete head_;
}

void plan_design_db::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* plan_design_db::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const plan_design_db& plan_design_db::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsplan_design_db();
  return *internal_default_instance();
}


void plan_design_db::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.plan_design_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.Clear();
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  _internal_metadata_.Clear();
}

bool plan_design_db::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.plan_design_db)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .d5.db2.header head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .d5.db2.plan_design content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.plan_design_db)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.plan_design_db)
  return false;
#undef DO_
}

void plan_design_db::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.plan_design_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *head_, output);
  }

  // repeated .d5.db2.plan_design content = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->content(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.plan_design_db)
}

::google::protobuf::uint8* plan_design_db::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.plan_design_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *head_, deterministic, target);
  }

  // repeated .d5.db2.plan_design content = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->content(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.plan_design_db)
  return target;
}

size_t plan_design_db::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.plan_design_db)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .d5.db2.plan_design content = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->content_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->content(static_cast<int>(i)));
    }
  }

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void plan_design_db::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.plan_design_db)
  GOOGLE_DCHECK_NE(&from, this);
  const plan_design_db* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const plan_design_db>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.plan_design_db)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.plan_design_db)
    MergeFrom(*source);
  }
}

void plan_design_db::MergeFrom(const plan_design_db& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.plan_design_db)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  content_.MergeFrom(from.content_);
  if (from.has_head()) {
    mutable_head()->::d5::db2::header::MergeFrom(from.head());
  }
}

void plan_design_db::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.plan_design_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void plan_design_db::CopyFrom(const plan_design_db& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.plan_design_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool plan_design_db::IsInitialized() const {
  return true;
}

void plan_design_db::Swap(plan_design_db* other) {
  if (other == this) return;
  InternalSwap(other);
}
void plan_design_db::InternalSwap(plan_design_db* other) {
  using std::swap;
  CastToBase(&content_)->InternalSwap(CastToBase(&other->content_));
  swap(head_, other->head_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata plan_design_db::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void product_db::InitAsDefaultInstance() {
  ::d5::db2::_product_db_default_instance_._instance.get_mutable()->head_ = const_cast< ::d5::db2::header*>(
      ::d5::db2::header::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int product_db::kHeadFieldNumber;
const int product_db::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

product_db::product_db()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsproduct_db();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.product_db)
}
product_db::product_db(const product_db& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      content_(from.content_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::d5::db2::header(*from.head_);
  } else {
    head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:d5.db2.product_db)
}

void product_db::SharedCtor() {
  head_ = NULL;
  _cached_size_ = 0;
}

product_db::~product_db() {
  // @@protoc_insertion_point(destructor:d5.db2.product_db)
  SharedDtor();
}

void product_db::SharedDtor() {
  if (this != internal_default_instance()) delete head_;
}

void product_db::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* product_db::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const product_db& product_db::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsproduct_db();
  return *internal_default_instance();
}


void product_db::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.product_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.Clear();
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  _internal_metadata_.Clear();
}

bool product_db::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.product_db)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .d5.db2.header head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .d5.db2.product content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.product_db)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.product_db)
  return false;
#undef DO_
}

void product_db::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.product_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *head_, output);
  }

  // repeated .d5.db2.product content = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->content(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.product_db)
}

::google::protobuf::uint8* product_db::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.product_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *head_, deterministic, target);
  }

  // repeated .d5.db2.product content = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->content(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.product_db)
  return target;
}

size_t product_db::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.product_db)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .d5.db2.product content = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->content_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->content(static_cast<int>(i)));
    }
  }

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void product_db::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.product_db)
  GOOGLE_DCHECK_NE(&from, this);
  const product_db* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const product_db>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.product_db)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.product_db)
    MergeFrom(*source);
  }
}

void product_db::MergeFrom(const product_db& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.product_db)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  content_.MergeFrom(from.content_);
  if (from.has_head()) {
    mutable_head()->::d5::db2::header::MergeFrom(from.head());
  }
}

void product_db::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.product_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void product_db::CopyFrom(const product_db& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.product_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool product_db::IsInitialized() const {
  return true;
}

void product_db::Swap(product_db* other) {
  if (other == this) return;
  InternalSwap(other);
}
void product_db::InternalSwap(product_db* other) {
  using std::swap;
  CastToBase(&content_)->InternalSwap(CastToBase(&other->content_));
  swap(head_, other->head_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata product_db::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void product_brand_temp_db::InitAsDefaultInstance() {
  ::d5::db2::_product_brand_temp_db_default_instance_._instance.get_mutable()->head_ = const_cast< ::d5::db2::header*>(
      ::d5::db2::header::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int product_brand_temp_db::kHeadFieldNumber;
const int product_brand_temp_db::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

product_brand_temp_db::product_brand_temp_db()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsproduct_brand_temp_db();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.product_brand_temp_db)
}
product_brand_temp_db::product_brand_temp_db(const product_brand_temp_db& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      content_(from.content_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::d5::db2::header(*from.head_);
  } else {
    head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:d5.db2.product_brand_temp_db)
}

void product_brand_temp_db::SharedCtor() {
  head_ = NULL;
  _cached_size_ = 0;
}

product_brand_temp_db::~product_brand_temp_db() {
  // @@protoc_insertion_point(destructor:d5.db2.product_brand_temp_db)
  SharedDtor();
}

void product_brand_temp_db::SharedDtor() {
  if (this != internal_default_instance()) delete head_;
}

void product_brand_temp_db::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* product_brand_temp_db::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const product_brand_temp_db& product_brand_temp_db::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsproduct_brand_temp_db();
  return *internal_default_instance();
}


void product_brand_temp_db::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.product_brand_temp_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.Clear();
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  _internal_metadata_.Clear();
}

bool product_brand_temp_db::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.product_brand_temp_db)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .d5.db2.header head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .d5.db2.product_brand_temp content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.product_brand_temp_db)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.product_brand_temp_db)
  return false;
#undef DO_
}

void product_brand_temp_db::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.product_brand_temp_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *head_, output);
  }

  // repeated .d5.db2.product_brand_temp content = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->content(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.product_brand_temp_db)
}

::google::protobuf::uint8* product_brand_temp_db::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.product_brand_temp_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *head_, deterministic, target);
  }

  // repeated .d5.db2.product_brand_temp content = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->content(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.product_brand_temp_db)
  return target;
}

size_t product_brand_temp_db::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.product_brand_temp_db)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .d5.db2.product_brand_temp content = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->content_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->content(static_cast<int>(i)));
    }
  }

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void product_brand_temp_db::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.product_brand_temp_db)
  GOOGLE_DCHECK_NE(&from, this);
  const product_brand_temp_db* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const product_brand_temp_db>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.product_brand_temp_db)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.product_brand_temp_db)
    MergeFrom(*source);
  }
}

void product_brand_temp_db::MergeFrom(const product_brand_temp_db& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.product_brand_temp_db)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  content_.MergeFrom(from.content_);
  if (from.has_head()) {
    mutable_head()->::d5::db2::header::MergeFrom(from.head());
  }
}

void product_brand_temp_db::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.product_brand_temp_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void product_brand_temp_db::CopyFrom(const product_brand_temp_db& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.product_brand_temp_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool product_brand_temp_db::IsInitialized() const {
  return true;
}

void product_brand_temp_db::Swap(product_brand_temp_db* other) {
  if (other == this) return;
  InternalSwap(other);
}
void product_brand_temp_db::InternalSwap(product_brand_temp_db* other) {
  using std::swap;
  CastToBase(&content_)->InternalSwap(CastToBase(&other->content_));
  swap(head_, other->head_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata product_brand_temp_db::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void product_category_map_db::InitAsDefaultInstance() {
  ::d5::db2::_product_category_map_db_default_instance_._instance.get_mutable()->head_ = const_cast< ::d5::db2::header*>(
      ::d5::db2::header::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int product_category_map_db::kHeadFieldNumber;
const int product_category_map_db::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

product_category_map_db::product_category_map_db()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsproduct_category_map_db();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.product_category_map_db)
}
product_category_map_db::product_category_map_db(const product_category_map_db& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      content_(from.content_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::d5::db2::header(*from.head_);
  } else {
    head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:d5.db2.product_category_map_db)
}

void product_category_map_db::SharedCtor() {
  head_ = NULL;
  _cached_size_ = 0;
}

product_category_map_db::~product_category_map_db() {
  // @@protoc_insertion_point(destructor:d5.db2.product_category_map_db)
  SharedDtor();
}

void product_category_map_db::SharedDtor() {
  if (this != internal_default_instance()) delete head_;
}

void product_category_map_db::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* product_category_map_db::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const product_category_map_db& product_category_map_db::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsproduct_category_map_db();
  return *internal_default_instance();
}


void product_category_map_db::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.product_category_map_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.Clear();
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  _internal_metadata_.Clear();
}

bool product_category_map_db::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.product_category_map_db)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .d5.db2.header head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .d5.db2.product_category_map content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.product_category_map_db)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.product_category_map_db)
  return false;
#undef DO_
}

void product_category_map_db::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.product_category_map_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *head_, output);
  }

  // repeated .d5.db2.product_category_map content = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->content(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.product_category_map_db)
}

::google::protobuf::uint8* product_category_map_db::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.product_category_map_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *head_, deterministic, target);
  }

  // repeated .d5.db2.product_category_map content = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->content(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.product_category_map_db)
  return target;
}

size_t product_category_map_db::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.product_category_map_db)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .d5.db2.product_category_map content = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->content_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->content(static_cast<int>(i)));
    }
  }

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void product_category_map_db::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.product_category_map_db)
  GOOGLE_DCHECK_NE(&from, this);
  const product_category_map_db* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const product_category_map_db>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.product_category_map_db)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.product_category_map_db)
    MergeFrom(*source);
  }
}

void product_category_map_db::MergeFrom(const product_category_map_db& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.product_category_map_db)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  content_.MergeFrom(from.content_);
  if (from.has_head()) {
    mutable_head()->::d5::db2::header::MergeFrom(from.head());
  }
}

void product_category_map_db::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.product_category_map_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void product_category_map_db::CopyFrom(const product_category_map_db& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.product_category_map_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool product_category_map_db::IsInitialized() const {
  return true;
}

void product_category_map_db::Swap(product_category_map_db* other) {
  if (other == this) return;
  InternalSwap(other);
}
void product_category_map_db::InternalSwap(product_category_map_db* other) {
  using std::swap;
  CastToBase(&content_)->InternalSwap(CastToBase(&other->content_));
  swap(head_, other->head_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata product_category_map_db::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void product_image_db::InitAsDefaultInstance() {
  ::d5::db2::_product_image_db_default_instance_._instance.get_mutable()->head_ = const_cast< ::d5::db2::header*>(
      ::d5::db2::header::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int product_image_db::kHeadFieldNumber;
const int product_image_db::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

product_image_db::product_image_db()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsproduct_image_db();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.product_image_db)
}
product_image_db::product_image_db(const product_image_db& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      content_(from.content_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::d5::db2::header(*from.head_);
  } else {
    head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:d5.db2.product_image_db)
}

void product_image_db::SharedCtor() {
  head_ = NULL;
  _cached_size_ = 0;
}

product_image_db::~product_image_db() {
  // @@protoc_insertion_point(destructor:d5.db2.product_image_db)
  SharedDtor();
}

void product_image_db::SharedDtor() {
  if (this != internal_default_instance()) delete head_;
}

void product_image_db::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* product_image_db::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const product_image_db& product_image_db::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsproduct_image_db();
  return *internal_default_instance();
}


void product_image_db::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.product_image_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.Clear();
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  _internal_metadata_.Clear();
}

bool product_image_db::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.product_image_db)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .d5.db2.header head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .d5.db2.product_image content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.product_image_db)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.product_image_db)
  return false;
#undef DO_
}

void product_image_db::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.product_image_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *head_, output);
  }

  // repeated .d5.db2.product_image content = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->content(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.product_image_db)
}

::google::protobuf::uint8* product_image_db::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.product_image_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *head_, deterministic, target);
  }

  // repeated .d5.db2.product_image content = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->content(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.product_image_db)
  return target;
}

size_t product_image_db::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.product_image_db)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .d5.db2.product_image content = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->content_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->content(static_cast<int>(i)));
    }
  }

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void product_image_db::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.product_image_db)
  GOOGLE_DCHECK_NE(&from, this);
  const product_image_db* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const product_image_db>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.product_image_db)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.product_image_db)
    MergeFrom(*source);
  }
}

void product_image_db::MergeFrom(const product_image_db& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.product_image_db)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  content_.MergeFrom(from.content_);
  if (from.has_head()) {
    mutable_head()->::d5::db2::header::MergeFrom(from.head());
  }
}

void product_image_db::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.product_image_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void product_image_db::CopyFrom(const product_image_db& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.product_image_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool product_image_db::IsInitialized() const {
  return true;
}

void product_image_db::Swap(product_image_db* other) {
  if (other == this) return;
  InternalSwap(other);
}
void product_image_db::InternalSwap(product_image_db* other) {
  using std::swap;
  CastToBase(&content_)->InternalSwap(CastToBase(&other->content_));
  swap(head_, other->head_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata product_image_db::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void setting_remember_db::InitAsDefaultInstance() {
  ::d5::db2::_setting_remember_db_default_instance_._instance.get_mutable()->head_ = const_cast< ::d5::db2::header*>(
      ::d5::db2::header::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int setting_remember_db::kHeadFieldNumber;
const int setting_remember_db::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

setting_remember_db::setting_remember_db()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultssetting_remember_db();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.setting_remember_db)
}
setting_remember_db::setting_remember_db(const setting_remember_db& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      content_(from.content_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::d5::db2::header(*from.head_);
  } else {
    head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:d5.db2.setting_remember_db)
}

void setting_remember_db::SharedCtor() {
  head_ = NULL;
  _cached_size_ = 0;
}

setting_remember_db::~setting_remember_db() {
  // @@protoc_insertion_point(destructor:d5.db2.setting_remember_db)
  SharedDtor();
}

void setting_remember_db::SharedDtor() {
  if (this != internal_default_instance()) delete head_;
}

void setting_remember_db::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* setting_remember_db::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const setting_remember_db& setting_remember_db::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultssetting_remember_db();
  return *internal_default_instance();
}


void setting_remember_db::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.setting_remember_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.Clear();
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  _internal_metadata_.Clear();
}

bool setting_remember_db::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.setting_remember_db)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .d5.db2.header head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .d5.db2.setting_remember content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.setting_remember_db)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.setting_remember_db)
  return false;
#undef DO_
}

void setting_remember_db::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.setting_remember_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *head_, output);
  }

  // repeated .d5.db2.setting_remember content = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->content(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.setting_remember_db)
}

::google::protobuf::uint8* setting_remember_db::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.setting_remember_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *head_, deterministic, target);
  }

  // repeated .d5.db2.setting_remember content = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->content(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.setting_remember_db)
  return target;
}

size_t setting_remember_db::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.setting_remember_db)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .d5.db2.setting_remember content = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->content_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->content(static_cast<int>(i)));
    }
  }

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void setting_remember_db::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.setting_remember_db)
  GOOGLE_DCHECK_NE(&from, this);
  const setting_remember_db* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const setting_remember_db>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.setting_remember_db)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.setting_remember_db)
    MergeFrom(*source);
  }
}

void setting_remember_db::MergeFrom(const setting_remember_db& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.setting_remember_db)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  content_.MergeFrom(from.content_);
  if (from.has_head()) {
    mutable_head()->::d5::db2::header::MergeFrom(from.head());
  }
}

void setting_remember_db::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.setting_remember_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void setting_remember_db::CopyFrom(const setting_remember_db& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.setting_remember_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setting_remember_db::IsInitialized() const {
  return true;
}

void setting_remember_db::Swap(setting_remember_db* other) {
  if (other == this) return;
  InternalSwap(other);
}
void setting_remember_db::InternalSwap(setting_remember_db* other) {
  using std::swap;
  CastToBase(&content_)->InternalSwap(CastToBase(&other->content_));
  swap(head_, other->head_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata setting_remember_db::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void user_login_db::InitAsDefaultInstance() {
  ::d5::db2::_user_login_db_default_instance_._instance.get_mutable()->head_ = const_cast< ::d5::db2::header*>(
      ::d5::db2::header::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int user_login_db::kHeadFieldNumber;
const int user_login_db::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

user_login_db::user_login_db()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_db2_2eproto::InitDefaultsuser_login_db();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.db2.user_login_db)
}
user_login_db::user_login_db(const user_login_db& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      content_(from.content_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::d5::db2::header(*from.head_);
  } else {
    head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:d5.db2.user_login_db)
}

void user_login_db::SharedCtor() {
  head_ = NULL;
  _cached_size_ = 0;
}

user_login_db::~user_login_db() {
  // @@protoc_insertion_point(destructor:d5.db2.user_login_db)
  SharedDtor();
}

void user_login_db::SharedDtor() {
  if (this != internal_default_instance()) delete head_;
}

void user_login_db::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* user_login_db::descriptor() {
  ::protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const user_login_db& user_login_db::default_instance() {
  ::protobuf_db2_2eproto::InitDefaultsuser_login_db();
  return *internal_default_instance();
}


void user_login_db::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.db2.user_login_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.Clear();
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  _internal_metadata_.Clear();
}

bool user_login_db::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.db2.user_login_db)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .d5.db2.header head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .d5.db2.user_login content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.db2.user_login_db)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.db2.user_login_db)
  return false;
#undef DO_
}

void user_login_db::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.db2.user_login_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *head_, output);
  }

  // repeated .d5.db2.user_login content = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->content(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.db2.user_login_db)
}

::google::protobuf::uint8* user_login_db::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.db2.user_login_db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *head_, deterministic, target);
  }

  // repeated .d5.db2.user_login content = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->content(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.db2.user_login_db)
  return target;
}

size_t user_login_db::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.db2.user_login_db)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .d5.db2.user_login content = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->content_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->content(static_cast<int>(i)));
    }
  }

  // .d5.db2.header head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void user_login_db::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.db2.user_login_db)
  GOOGLE_DCHECK_NE(&from, this);
  const user_login_db* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const user_login_db>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.db2.user_login_db)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.db2.user_login_db)
    MergeFrom(*source);
  }
}

void user_login_db::MergeFrom(const user_login_db& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.db2.user_login_db)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  content_.MergeFrom(from.content_);
  if (from.has_head()) {
    mutable_head()->::d5::db2::header::MergeFrom(from.head());
  }
}

void user_login_db::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.db2.user_login_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void user_login_db::CopyFrom(const user_login_db& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.db2.user_login_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool user_login_db::IsInitialized() const {
  return true;
}

void user_login_db::Swap(user_login_db* other) {
  if (other == this) return;
  InternalSwap(other);
}
void user_login_db::InternalSwap(user_login_db* other) {
  using std::swap;
  CastToBase(&content_)->InternalSwap(CastToBase(&other->content_));
  swap(head_, other->head_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata user_login_db::GetMetadata() const {
  protobuf_db2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace db2
}  // namespace d5
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::asset_building_material* Arena::Create< ::d5::db2::asset_building_material >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::asset_building_material >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::asset_furniture* Arena::Create< ::d5::db2::asset_furniture >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::asset_furniture >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::asset_furniture_style* Arena::Create< ::d5::db2::asset_furniture_style >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::asset_furniture_style >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::asset_furniture_style_material_map* Arena::Create< ::d5::db2::asset_furniture_style_material_map >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::asset_furniture_style_material_map >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::asset_material* Arena::Create< ::d5::db2::asset_material >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::asset_material >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::asset_material_category* Arena::Create< ::d5::db2::asset_material_category >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::asset_material_category >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::furniture_color_map* Arena::Create< ::d5::db2::furniture_color_map >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::furniture_color_map >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::GA* Arena::Create< ::d5::db2::GA >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::GA >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::plan_desgin_template_statu* Arena::Create< ::d5::db2::plan_desgin_template_statu >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::plan_desgin_template_statu >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::plan_design* Arena::Create< ::d5::db2::plan_design >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::plan_design >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::product* Arena::Create< ::d5::db2::product >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::product >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::product_detail_virtual* Arena::Create< ::d5::db2::product_detail_virtual >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::product_detail_virtual >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::product_brand_temp* Arena::Create< ::d5::db2::product_brand_temp >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::product_brand_temp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::product_category_map* Arena::Create< ::d5::db2::product_category_map >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::product_category_map >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::product_image* Arena::Create< ::d5::db2::product_image >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::product_image >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::setting_remember* Arena::Create< ::d5::db2::setting_remember >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::setting_remember >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::user_login* Arena::Create< ::d5::db2::user_login >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::user_login >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::files_map* Arena::Create< ::d5::db2::files_map >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::files_map >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::header* Arena::Create< ::d5::db2::header >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::header >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::asset_building_material_db* Arena::Create< ::d5::db2::asset_building_material_db >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::asset_building_material_db >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::asset_furniture_db* Arena::Create< ::d5::db2::asset_furniture_db >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::asset_furniture_db >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::asset_furniture_style_db* Arena::Create< ::d5::db2::asset_furniture_style_db >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::asset_furniture_style_db >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::asset_furniture_style_material_map_db* Arena::Create< ::d5::db2::asset_furniture_style_material_map_db >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::asset_furniture_style_material_map_db >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::asset_material_db* Arena::Create< ::d5::db2::asset_material_db >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::asset_material_db >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::asset_material_category_db* Arena::Create< ::d5::db2::asset_material_category_db >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::asset_material_category_db >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::furniture_color_map_db* Arena::Create< ::d5::db2::furniture_color_map_db >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::furniture_color_map_db >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::GA_db* Arena::Create< ::d5::db2::GA_db >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::GA_db >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::plan_desgin_template_statu_db* Arena::Create< ::d5::db2::plan_desgin_template_statu_db >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::plan_desgin_template_statu_db >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::plan_design_db* Arena::Create< ::d5::db2::plan_design_db >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::plan_design_db >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::product_db* Arena::Create< ::d5::db2::product_db >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::product_db >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::product_brand_temp_db* Arena::Create< ::d5::db2::product_brand_temp_db >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::product_brand_temp_db >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::product_category_map_db* Arena::Create< ::d5::db2::product_category_map_db >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::product_category_map_db >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::product_image_db* Arena::Create< ::d5::db2::product_image_db >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::product_image_db >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::setting_remember_db* Arena::Create< ::d5::db2::setting_remember_db >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::setting_remember_db >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::db2::user_login_db* Arena::Create< ::d5::db2::user_login_db >(Arena* arena) {
  return Arena::CreateInternal< ::d5::db2::user_login_db >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
