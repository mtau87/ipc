// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_channel_list.proto

#ifndef PROTOBUF_message_5fchannel_5flist_2eproto_INCLUDED
#define PROTOBUF_message_5fchannel_5flist_2eproto_INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_message_5fchannel_5flist_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsCMessageChannelListRequestImpl();
void InitDefaultsCMessageChannelListRequest();
void InitDefaultsCMessageChannelListResponse_CMessageHttpChannelUnitImpl();
void InitDefaultsCMessageChannelListResponse_CMessageHttpChannelUnit();
void InitDefaultsCMessageChannelListResponseImpl();
void InitDefaultsCMessageChannelListResponse();
inline void InitDefaults() {
  InitDefaultsCMessageChannelListRequest();
  InitDefaultsCMessageChannelListResponse_CMessageHttpChannelUnit();
  InitDefaultsCMessageChannelListResponse();
}
}  // namespace protobuf_message_5fchannel_5flist_2eproto
namespace d5 {
class CMessageChannelListRequest;
class CMessageChannelListRequestDefaultTypeInternal;
extern CMessageChannelListRequestDefaultTypeInternal _CMessageChannelListRequest_default_instance_;
class CMessageChannelListResponse;
class CMessageChannelListResponseDefaultTypeInternal;
extern CMessageChannelListResponseDefaultTypeInternal _CMessageChannelListResponse_default_instance_;
class CMessageChannelListResponse_CMessageHttpChannelUnit;
class CMessageChannelListResponse_CMessageHttpChannelUnitDefaultTypeInternal;
extern CMessageChannelListResponse_CMessageHttpChannelUnitDefaultTypeInternal _CMessageChannelListResponse_CMessageHttpChannelUnit_default_instance_;
}  // namespace d5
namespace google {
namespace protobuf {
template<> ::d5::CMessageChannelListRequest* Arena::Create< ::d5::CMessageChannelListRequest>(Arena*);
template<> ::d5::CMessageChannelListResponse* Arena::Create< ::d5::CMessageChannelListResponse>(Arena*);
template<> ::d5::CMessageChannelListResponse_CMessageHttpChannelUnit* Arena::Create< ::d5::CMessageChannelListResponse_CMessageHttpChannelUnit>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace d5 {

// ===================================================================

class CMessageChannelListRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageChannelListRequest) */ {
 public:
  CMessageChannelListRequest();
  virtual ~CMessageChannelListRequest();

  CMessageChannelListRequest(const CMessageChannelListRequest& from);

  inline CMessageChannelListRequest& operator=(const CMessageChannelListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageChannelListRequest(CMessageChannelListRequest&& from) noexcept
    : CMessageChannelListRequest() {
    *this = ::std::move(from);
  }

  inline CMessageChannelListRequest& operator=(CMessageChannelListRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChannelListRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageChannelListRequest* internal_default_instance() {
    return reinterpret_cast<const CMessageChannelListRequest*>(
               &_CMessageChannelListRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CMessageChannelListRequest* other);
  friend void swap(CMessageChannelListRequest& a, CMessageChannelListRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageChannelListRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageChannelListRequest>(NULL);
  }

  CMessageChannelListRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageChannelListRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageChannelListRequest& from);
  void MergeFrom(const CMessageChannelListRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageChannelListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageChannelListRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fchannel_5flist_2eproto::TableStruct;
  friend void ::protobuf_message_5fchannel_5flist_2eproto::InitDefaultsCMessageChannelListRequestImpl();
};
// -------------------------------------------------------------------

class CMessageChannelListResponse_CMessageHttpChannelUnit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageChannelListResponse.CMessageHttpChannelUnit) */ {
 public:
  CMessageChannelListResponse_CMessageHttpChannelUnit();
  virtual ~CMessageChannelListResponse_CMessageHttpChannelUnit();

  CMessageChannelListResponse_CMessageHttpChannelUnit(const CMessageChannelListResponse_CMessageHttpChannelUnit& from);

  inline CMessageChannelListResponse_CMessageHttpChannelUnit& operator=(const CMessageChannelListResponse_CMessageHttpChannelUnit& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageChannelListResponse_CMessageHttpChannelUnit(CMessageChannelListResponse_CMessageHttpChannelUnit&& from) noexcept
    : CMessageChannelListResponse_CMessageHttpChannelUnit() {
    *this = ::std::move(from);
  }

  inline CMessageChannelListResponse_CMessageHttpChannelUnit& operator=(CMessageChannelListResponse_CMessageHttpChannelUnit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChannelListResponse_CMessageHttpChannelUnit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageChannelListResponse_CMessageHttpChannelUnit* internal_default_instance() {
    return reinterpret_cast<const CMessageChannelListResponse_CMessageHttpChannelUnit*>(
               &_CMessageChannelListResponse_CMessageHttpChannelUnit_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CMessageChannelListResponse_CMessageHttpChannelUnit* other);
  friend void swap(CMessageChannelListResponse_CMessageHttpChannelUnit& a, CMessageChannelListResponse_CMessageHttpChannelUnit& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageChannelListResponse_CMessageHttpChannelUnit* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageChannelListResponse_CMessageHttpChannelUnit>(NULL);
  }

  CMessageChannelListResponse_CMessageHttpChannelUnit* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageChannelListResponse_CMessageHttpChannelUnit>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageChannelListResponse_CMessageHttpChannelUnit& from);
  void MergeFrom(const CMessageChannelListResponse_CMessageHttpChannelUnit& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageChannelListResponse_CMessageHttpChannelUnit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string companyName = 2;
  void clear_companyname();
  static const int kCompanyNameFieldNumber = 2;
  const ::std::string& companyname() const;
  void set_companyname(const ::std::string& value);
  #if LANG_CXX11
  void set_companyname(::std::string&& value);
  #endif
  void set_companyname(const char* value);
  void set_companyname(const char* value, size_t size);
  ::std::string* mutable_companyname();
  ::std::string* release_companyname();
  void set_allocated_companyname(::std::string* companyname);

  // int32 companyId = 1;
  void clear_companyid();
  static const int kCompanyIdFieldNumber = 1;
  ::google::protobuf::int32 companyid() const;
  void set_companyid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageChannelListResponse.CMessageHttpChannelUnit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr companyname_;
  ::google::protobuf::int32 companyid_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fchannel_5flist_2eproto::TableStruct;
  friend void ::protobuf_message_5fchannel_5flist_2eproto::InitDefaultsCMessageChannelListResponse_CMessageHttpChannelUnitImpl();
};
// -------------------------------------------------------------------

class CMessageChannelListResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageChannelListResponse) */ {
 public:
  CMessageChannelListResponse();
  virtual ~CMessageChannelListResponse();

  CMessageChannelListResponse(const CMessageChannelListResponse& from);

  inline CMessageChannelListResponse& operator=(const CMessageChannelListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageChannelListResponse(CMessageChannelListResponse&& from) noexcept
    : CMessageChannelListResponse() {
    *this = ::std::move(from);
  }

  inline CMessageChannelListResponse& operator=(CMessageChannelListResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChannelListResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageChannelListResponse* internal_default_instance() {
    return reinterpret_cast<const CMessageChannelListResponse*>(
               &_CMessageChannelListResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CMessageChannelListResponse* other);
  friend void swap(CMessageChannelListResponse& a, CMessageChannelListResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageChannelListResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageChannelListResponse>(NULL);
  }

  CMessageChannelListResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageChannelListResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageChannelListResponse& from);
  void MergeFrom(const CMessageChannelListResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageChannelListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMessageChannelListResponse_CMessageHttpChannelUnit CMessageHttpChannelUnit;

  // accessors -------------------------------------------------------

  // repeated .d5.CMessageChannelListResponse.CMessageHttpChannelUnit list = 4;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 4;
  ::d5::CMessageChannelListResponse_CMessageHttpChannelUnit* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::d5::CMessageChannelListResponse_CMessageHttpChannelUnit >*
      mutable_list();
  const ::d5::CMessageChannelListResponse_CMessageHttpChannelUnit& list(int index) const;
  ::d5::CMessageChannelListResponse_CMessageHttpChannelUnit* add_list();
  const ::google::protobuf::RepeatedPtrField< ::d5::CMessageChannelListResponse_CMessageHttpChannelUnit >&
      list() const;

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 state = 3;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageChannelListResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::d5::CMessageChannelListResponse_CMessageHttpChannelUnit > list_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 state_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fchannel_5flist_2eproto::TableStruct;
  friend void ::protobuf_message_5fchannel_5flist_2eproto::InitDefaultsCMessageChannelListResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMessageChannelListRequest

// int32 type = 1;
inline void CMessageChannelListRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageChannelListRequest::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageChannelListRequest.type)
  return type_;
}
inline void CMessageChannelListRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageChannelListRequest.type)
}

// string uuid = 2;
inline void CMessageChannelListRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageChannelListRequest::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageChannelListRequest.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageChannelListRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageChannelListRequest.uuid)
}
#if LANG_CXX11
inline void CMessageChannelListRequest::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageChannelListRequest.uuid)
}
#endif
inline void CMessageChannelListRequest::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageChannelListRequest.uuid)
}
inline void CMessageChannelListRequest::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageChannelListRequest.uuid)
}
inline ::std::string* CMessageChannelListRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageChannelListRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageChannelListRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageChannelListRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageChannelListRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageChannelListRequest.uuid)
}

// -------------------------------------------------------------------

// CMessageChannelListResponse_CMessageHttpChannelUnit

// int32 companyId = 1;
inline void CMessageChannelListResponse_CMessageHttpChannelUnit::clear_companyid() {
  companyid_ = 0;
}
inline ::google::protobuf::int32 CMessageChannelListResponse_CMessageHttpChannelUnit::companyid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageChannelListResponse.CMessageHttpChannelUnit.companyId)
  return companyid_;
}
inline void CMessageChannelListResponse_CMessageHttpChannelUnit::set_companyid(::google::protobuf::int32 value) {
  
  companyid_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageChannelListResponse.CMessageHttpChannelUnit.companyId)
}

// string companyName = 2;
inline void CMessageChannelListResponse_CMessageHttpChannelUnit::clear_companyname() {
  companyname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageChannelListResponse_CMessageHttpChannelUnit::companyname() const {
  // @@protoc_insertion_point(field_get:d5.CMessageChannelListResponse.CMessageHttpChannelUnit.companyName)
  return companyname_.GetNoArena();
}
inline void CMessageChannelListResponse_CMessageHttpChannelUnit::set_companyname(const ::std::string& value) {
  
  companyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageChannelListResponse.CMessageHttpChannelUnit.companyName)
}
#if LANG_CXX11
inline void CMessageChannelListResponse_CMessageHttpChannelUnit::set_companyname(::std::string&& value) {
  
  companyname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageChannelListResponse.CMessageHttpChannelUnit.companyName)
}
#endif
inline void CMessageChannelListResponse_CMessageHttpChannelUnit::set_companyname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  companyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageChannelListResponse.CMessageHttpChannelUnit.companyName)
}
inline void CMessageChannelListResponse_CMessageHttpChannelUnit::set_companyname(const char* value, size_t size) {
  
  companyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageChannelListResponse.CMessageHttpChannelUnit.companyName)
}
inline ::std::string* CMessageChannelListResponse_CMessageHttpChannelUnit::mutable_companyname() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageChannelListResponse.CMessageHttpChannelUnit.companyName)
  return companyname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageChannelListResponse_CMessageHttpChannelUnit::release_companyname() {
  // @@protoc_insertion_point(field_release:d5.CMessageChannelListResponse.CMessageHttpChannelUnit.companyName)
  
  return companyname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageChannelListResponse_CMessageHttpChannelUnit::set_allocated_companyname(::std::string* companyname) {
  if (companyname != NULL) {
    
  } else {
    
  }
  companyname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), companyname);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageChannelListResponse.CMessageHttpChannelUnit.companyName)
}

// -------------------------------------------------------------------

// CMessageChannelListResponse

// int32 type = 1;
inline void CMessageChannelListResponse::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageChannelListResponse::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageChannelListResponse.type)
  return type_;
}
inline void CMessageChannelListResponse::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageChannelListResponse.type)
}

// string uuid = 2;
inline void CMessageChannelListResponse::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageChannelListResponse::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageChannelListResponse.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageChannelListResponse::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageChannelListResponse.uuid)
}
#if LANG_CXX11
inline void CMessageChannelListResponse::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageChannelListResponse.uuid)
}
#endif
inline void CMessageChannelListResponse::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageChannelListResponse.uuid)
}
inline void CMessageChannelListResponse::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageChannelListResponse.uuid)
}
inline ::std::string* CMessageChannelListResponse::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageChannelListResponse.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageChannelListResponse::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageChannelListResponse.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageChannelListResponse::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageChannelListResponse.uuid)
}

// int32 state = 3;
inline void CMessageChannelListResponse::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 CMessageChannelListResponse::state() const {
  // @@protoc_insertion_point(field_get:d5.CMessageChannelListResponse.state)
  return state_;
}
inline void CMessageChannelListResponse::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageChannelListResponse.state)
}

// repeated .d5.CMessageChannelListResponse.CMessageHttpChannelUnit list = 4;
inline int CMessageChannelListResponse::list_size() const {
  return list_.size();
}
inline void CMessageChannelListResponse::clear_list() {
  list_.Clear();
}
inline ::d5::CMessageChannelListResponse_CMessageHttpChannelUnit* CMessageChannelListResponse::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:d5.CMessageChannelListResponse.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::d5::CMessageChannelListResponse_CMessageHttpChannelUnit >*
CMessageChannelListResponse::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:d5.CMessageChannelListResponse.list)
  return &list_;
}
inline const ::d5::CMessageChannelListResponse_CMessageHttpChannelUnit& CMessageChannelListResponse::list(int index) const {
  // @@protoc_insertion_point(field_get:d5.CMessageChannelListResponse.list)
  return list_.Get(index);
}
inline ::d5::CMessageChannelListResponse_CMessageHttpChannelUnit* CMessageChannelListResponse::add_list() {
  // @@protoc_insertion_point(field_add:d5.CMessageChannelListResponse.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::d5::CMessageChannelListResponse_CMessageHttpChannelUnit >&
CMessageChannelListResponse::list() const {
  // @@protoc_insertion_point(field_list:d5.CMessageChannelListResponse.list)
  return list_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace d5

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_5fchannel_5flist_2eproto_INCLUDED
