// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_http_cook_status.proto

#ifndef PROTOBUF_message_5fhttp_5fcook_5fstatus_2eproto_INCLUDED
#define PROTOBUF_message_5fhttp_5fcook_5fstatus_2eproto_INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_message_5fhttp_5fcook_5fstatus_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsCMessageHttpCookStatusImpl();
void InitDefaultsCMessageHttpCookStatus();
void InitDefaultsCMessageDesignHttpCookStatusImpl();
void InitDefaultsCMessageDesignHttpCookStatus();
inline void InitDefaults() {
  InitDefaultsCMessageHttpCookStatus();
  InitDefaultsCMessageDesignHttpCookStatus();
}
}  // namespace protobuf_message_5fhttp_5fcook_5fstatus_2eproto
namespace d5 {
class CMessageDesignHttpCookStatus;
class CMessageDesignHttpCookStatusDefaultTypeInternal;
extern CMessageDesignHttpCookStatusDefaultTypeInternal _CMessageDesignHttpCookStatus_default_instance_;
class CMessageHttpCookStatus;
class CMessageHttpCookStatusDefaultTypeInternal;
extern CMessageHttpCookStatusDefaultTypeInternal _CMessageHttpCookStatus_default_instance_;
}  // namespace d5
namespace google {
namespace protobuf {
template<> ::d5::CMessageDesignHttpCookStatus* Arena::Create< ::d5::CMessageDesignHttpCookStatus>(Arena*);
template<> ::d5::CMessageHttpCookStatus* Arena::Create< ::d5::CMessageHttpCookStatus>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace d5 {

// ===================================================================

class CMessageHttpCookStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageHttpCookStatus) */ {
 public:
  CMessageHttpCookStatus();
  virtual ~CMessageHttpCookStatus();

  CMessageHttpCookStatus(const CMessageHttpCookStatus& from);

  inline CMessageHttpCookStatus& operator=(const CMessageHttpCookStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageHttpCookStatus(CMessageHttpCookStatus&& from) noexcept
    : CMessageHttpCookStatus() {
    *this = ::std::move(from);
  }

  inline CMessageHttpCookStatus& operator=(CMessageHttpCookStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageHttpCookStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageHttpCookStatus* internal_default_instance() {
    return reinterpret_cast<const CMessageHttpCookStatus*>(
               &_CMessageHttpCookStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CMessageHttpCookStatus* other);
  friend void swap(CMessageHttpCookStatus& a, CMessageHttpCookStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageHttpCookStatus* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageHttpCookStatus>(NULL);
  }

  CMessageHttpCookStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageHttpCookStatus>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageHttpCookStatus& from);
  void MergeFrom(const CMessageHttpCookStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageHttpCookStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string designId = 2;
  void clear_designid();
  static const int kDesignIdFieldNumber = 2;
  const ::std::string& designid() const;
  void set_designid(const ::std::string& value);
  #if LANG_CXX11
  void set_designid(::std::string&& value);
  #endif
  void set_designid(const char* value);
  void set_designid(const char* value, size_t size);
  ::std::string* mutable_designid();
  ::std::string* release_designid();
  void set_allocated_designid(::std::string* designid);

  // string layoutId = 3;
  void clear_layoutid();
  static const int kLayoutIdFieldNumber = 3;
  const ::std::string& layoutid() const;
  void set_layoutid(const ::std::string& value);
  #if LANG_CXX11
  void set_layoutid(::std::string&& value);
  #endif
  void set_layoutid(const char* value);
  void set_layoutid(const char* value, size_t size);
  ::std::string* mutable_layoutid();
  ::std::string* release_layoutid();
  void set_allocated_layoutid(::std::string* layoutid);

  // string inputUrl = 4;
  void clear_inputurl();
  static const int kInputUrlFieldNumber = 4;
  const ::std::string& inputurl() const;
  void set_inputurl(const ::std::string& value);
  #if LANG_CXX11
  void set_inputurl(::std::string&& value);
  #endif
  void set_inputurl(const char* value);
  void set_inputurl(const char* value, size_t size);
  ::std::string* mutable_inputurl();
  ::std::string* release_inputurl();
  void set_allocated_inputurl(::std::string* inputurl);

  // string outputUrl = 5;
  void clear_outputurl();
  static const int kOutputUrlFieldNumber = 5;
  const ::std::string& outputurl() const;
  void set_outputurl(const ::std::string& value);
  #if LANG_CXX11
  void set_outputurl(::std::string&& value);
  #endif
  void set_outputurl(const char* value);
  void set_outputurl(const char* value, size_t size);
  ::std::string* mutable_outputurl();
  ::std::string* release_outputurl();
  void set_allocated_outputurl(::std::string* outputurl);

  // string errorInfo = 11;
  void clear_errorinfo();
  static const int kErrorInfoFieldNumber = 11;
  const ::std::string& errorinfo() const;
  void set_errorinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_errorinfo(::std::string&& value);
  #endif
  void set_errorinfo(const char* value);
  void set_errorinfo(const char* value, size_t size);
  ::std::string* mutable_errorinfo();
  ::std::string* release_errorinfo();
  void set_allocated_errorinfo(::std::string* errorinfo);

  // string hostName = 13;
  void clear_hostname();
  static const int kHostNameFieldNumber = 13;
  const ::std::string& hostname() const;
  void set_hostname(const ::std::string& value);
  #if LANG_CXX11
  void set_hostname(::std::string&& value);
  #endif
  void set_hostname(const char* value);
  void set_hostname(const char* value, size_t size);
  ::std::string* mutable_hostname();
  ::std::string* release_hostname();
  void set_allocated_hostname(::std::string* hostname);

  // int64 submitTime = 7;
  void clear_submittime();
  static const int kSubmitTimeFieldNumber = 7;
  ::google::protobuf::int64 submittime() const;
  void set_submittime(::google::protobuf::int64 value);

  // int64 startTime = 8;
  void clear_starttime();
  static const int kStartTimeFieldNumber = 8;
  ::google::protobuf::int64 starttime() const;
  void set_starttime(::google::protobuf::int64 value);

  // int32 cookStage = 6;
  void clear_cookstage();
  static const int kCookStageFieldNumber = 6;
  ::google::protobuf::int32 cookstage() const;
  void set_cookstage(::google::protobuf::int32 value);

  // int32 tryCount = 10;
  void clear_trycount();
  static const int kTryCountFieldNumber = 10;
  ::google::protobuf::int32 trycount() const;
  void set_trycount(::google::protobuf::int32 value);

  // int64 finishTime = 9;
  void clear_finishtime();
  static const int kFinishTimeFieldNumber = 9;
  ::google::protobuf::int64 finishtime() const;
  void set_finishtime(::google::protobuf::int64 value);

  // int32 userId = 12;
  void clear_userid();
  static const int kUserIdFieldNumber = 12;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // int32 pakSize = 14;
  void clear_paksize();
  static const int kPakSizeFieldNumber = 14;
  ::google::protobuf::int32 paksize() const;
  void set_paksize(::google::protobuf::int32 value);

  // int64 expectedFinishTime = 15;
  void clear_expectedfinishtime();
  static const int kExpectedFinishTimeFieldNumber = 15;
  ::google::protobuf::int64 expectedfinishtime() const;
  void set_expectedfinishtime(::google::protobuf::int64 value);

  // int64 currentTime = 16;
  void clear_currenttime();
  static const int kCurrentTimeFieldNumber = 16;
  ::google::protobuf::int64 currenttime() const;
  void set_currenttime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageHttpCookStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr designid_;
  ::google::protobuf::internal::ArenaStringPtr layoutid_;
  ::google::protobuf::internal::ArenaStringPtr inputurl_;
  ::google::protobuf::internal::ArenaStringPtr outputurl_;
  ::google::protobuf::internal::ArenaStringPtr errorinfo_;
  ::google::protobuf::internal::ArenaStringPtr hostname_;
  ::google::protobuf::int64 submittime_;
  ::google::protobuf::int64 starttime_;
  ::google::protobuf::int32 cookstage_;
  ::google::protobuf::int32 trycount_;
  ::google::protobuf::int64 finishtime_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 paksize_;
  ::google::protobuf::int64 expectedfinishtime_;
  ::google::protobuf::int64 currenttime_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fhttp_5fcook_5fstatus_2eproto::TableStruct;
  friend void ::protobuf_message_5fhttp_5fcook_5fstatus_2eproto::InitDefaultsCMessageHttpCookStatusImpl();
};
// -------------------------------------------------------------------

class CMessageDesignHttpCookStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageDesignHttpCookStatus) */ {
 public:
  CMessageDesignHttpCookStatus();
  virtual ~CMessageDesignHttpCookStatus();

  CMessageDesignHttpCookStatus(const CMessageDesignHttpCookStatus& from);

  inline CMessageDesignHttpCookStatus& operator=(const CMessageDesignHttpCookStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageDesignHttpCookStatus(CMessageDesignHttpCookStatus&& from) noexcept
    : CMessageDesignHttpCookStatus() {
    *this = ::std::move(from);
  }

  inline CMessageDesignHttpCookStatus& operator=(CMessageDesignHttpCookStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageDesignHttpCookStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageDesignHttpCookStatus* internal_default_instance() {
    return reinterpret_cast<const CMessageDesignHttpCookStatus*>(
               &_CMessageDesignHttpCookStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CMessageDesignHttpCookStatus* other);
  friend void swap(CMessageDesignHttpCookStatus& a, CMessageDesignHttpCookStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageDesignHttpCookStatus* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageDesignHttpCookStatus>(NULL);
  }

  CMessageDesignHttpCookStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageDesignHttpCookStatus>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageDesignHttpCookStatus& from);
  void MergeFrom(const CMessageDesignHttpCookStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageDesignHttpCookStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string designId = 2;
  void clear_designid();
  static const int kDesignIdFieldNumber = 2;
  const ::std::string& designid() const;
  void set_designid(const ::std::string& value);
  #if LANG_CXX11
  void set_designid(::std::string&& value);
  #endif
  void set_designid(const char* value);
  void set_designid(const char* value, size_t size);
  ::std::string* mutable_designid();
  ::std::string* release_designid();
  void set_allocated_designid(::std::string* designid);

  // string layoutId = 3;
  void clear_layoutid();
  static const int kLayoutIdFieldNumber = 3;
  const ::std::string& layoutid() const;
  void set_layoutid(const ::std::string& value);
  #if LANG_CXX11
  void set_layoutid(::std::string&& value);
  #endif
  void set_layoutid(const char* value);
  void set_layoutid(const char* value, size_t size);
  ::std::string* mutable_layoutid();
  ::std::string* release_layoutid();
  void set_allocated_layoutid(::std::string* layoutid);

  // string inputUrl = 4;
  void clear_inputurl();
  static const int kInputUrlFieldNumber = 4;
  const ::std::string& inputurl() const;
  void set_inputurl(const ::std::string& value);
  #if LANG_CXX11
  void set_inputurl(::std::string&& value);
  #endif
  void set_inputurl(const char* value);
  void set_inputurl(const char* value, size_t size);
  ::std::string* mutable_inputurl();
  ::std::string* release_inputurl();
  void set_allocated_inputurl(::std::string* inputurl);

  // string outputUrl = 5;
  void clear_outputurl();
  static const int kOutputUrlFieldNumber = 5;
  const ::std::string& outputurl() const;
  void set_outputurl(const ::std::string& value);
  #if LANG_CXX11
  void set_outputurl(::std::string&& value);
  #endif
  void set_outputurl(const char* value);
  void set_outputurl(const char* value, size_t size);
  ::std::string* mutable_outputurl();
  ::std::string* release_outputurl();
  void set_allocated_outputurl(::std::string* outputurl);

  // string errorInfo = 11;
  void clear_errorinfo();
  static const int kErrorInfoFieldNumber = 11;
  const ::std::string& errorinfo() const;
  void set_errorinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_errorinfo(::std::string&& value);
  #endif
  void set_errorinfo(const char* value);
  void set_errorinfo(const char* value, size_t size);
  ::std::string* mutable_errorinfo();
  ::std::string* release_errorinfo();
  void set_allocated_errorinfo(::std::string* errorinfo);

  // string hostName = 13;
  void clear_hostname();
  static const int kHostNameFieldNumber = 13;
  const ::std::string& hostname() const;
  void set_hostname(const ::std::string& value);
  #if LANG_CXX11
  void set_hostname(::std::string&& value);
  #endif
  void set_hostname(const char* value);
  void set_hostname(const char* value, size_t size);
  ::std::string* mutable_hostname();
  ::std::string* release_hostname();
  void set_allocated_hostname(::std::string* hostname);

  // string designFileUrl = 15;
  void clear_designfileurl();
  static const int kDesignFileUrlFieldNumber = 15;
  const ::std::string& designfileurl() const;
  void set_designfileurl(const ::std::string& value);
  #if LANG_CXX11
  void set_designfileurl(::std::string&& value);
  #endif
  void set_designfileurl(const char* value);
  void set_designfileurl(const char* value, size_t size);
  ::std::string* mutable_designfileurl();
  ::std::string* release_designfileurl();
  void set_allocated_designfileurl(::std::string* designfileurl);

  // int64 submitTime = 7;
  void clear_submittime();
  static const int kSubmitTimeFieldNumber = 7;
  ::google::protobuf::int64 submittime() const;
  void set_submittime(::google::protobuf::int64 value);

  // int64 startTime = 8;
  void clear_starttime();
  static const int kStartTimeFieldNumber = 8;
  ::google::protobuf::int64 starttime() const;
  void set_starttime(::google::protobuf::int64 value);

  // int32 cookStage = 6;
  void clear_cookstage();
  static const int kCookStageFieldNumber = 6;
  ::google::protobuf::int32 cookstage() const;
  void set_cookstage(::google::protobuf::int32 value);

  // int32 tryCount = 10;
  void clear_trycount();
  static const int kTryCountFieldNumber = 10;
  ::google::protobuf::int32 trycount() const;
  void set_trycount(::google::protobuf::int32 value);

  // int64 finishTime = 9;
  void clear_finishtime();
  static const int kFinishTimeFieldNumber = 9;
  ::google::protobuf::int64 finishtime() const;
  void set_finishtime(::google::protobuf::int64 value);

  // int32 userId = 12;
  void clear_userid();
  static const int kUserIdFieldNumber = 12;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // int32 pakSize = 14;
  void clear_paksize();
  static const int kPakSizeFieldNumber = 14;
  ::google::protobuf::int32 paksize() const;
  void set_paksize(::google::protobuf::int32 value);

  // int64 expectedFinishTime = 16;
  void clear_expectedfinishtime();
  static const int kExpectedFinishTimeFieldNumber = 16;
  ::google::protobuf::int64 expectedfinishtime() const;
  void set_expectedfinishtime(::google::protobuf::int64 value);

  // int64 currentTime = 17;
  void clear_currenttime();
  static const int kCurrentTimeFieldNumber = 17;
  ::google::protobuf::int64 currenttime() const;
  void set_currenttime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageDesignHttpCookStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr designid_;
  ::google::protobuf::internal::ArenaStringPtr layoutid_;
  ::google::protobuf::internal::ArenaStringPtr inputurl_;
  ::google::protobuf::internal::ArenaStringPtr outputurl_;
  ::google::protobuf::internal::ArenaStringPtr errorinfo_;
  ::google::protobuf::internal::ArenaStringPtr hostname_;
  ::google::protobuf::internal::ArenaStringPtr designfileurl_;
  ::google::protobuf::int64 submittime_;
  ::google::protobuf::int64 starttime_;
  ::google::protobuf::int32 cookstage_;
  ::google::protobuf::int32 trycount_;
  ::google::protobuf::int64 finishtime_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 paksize_;
  ::google::protobuf::int64 expectedfinishtime_;
  ::google::protobuf::int64 currenttime_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fhttp_5fcook_5fstatus_2eproto::TableStruct;
  friend void ::protobuf_message_5fhttp_5fcook_5fstatus_2eproto::InitDefaultsCMessageDesignHttpCookStatusImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMessageHttpCookStatus

// string id = 1;
inline void CMessageHttpCookStatus::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpCookStatus::id() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpCookStatus.id)
  return id_.GetNoArena();
}
inline void CMessageHttpCookStatus::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpCookStatus.id)
}
#if LANG_CXX11
inline void CMessageHttpCookStatus::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpCookStatus.id)
}
#endif
inline void CMessageHttpCookStatus::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpCookStatus.id)
}
inline void CMessageHttpCookStatus::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpCookStatus.id)
}
inline ::std::string* CMessageHttpCookStatus::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpCookStatus.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpCookStatus::release_id() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpCookStatus.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpCookStatus::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpCookStatus.id)
}

// string designId = 2;
inline void CMessageHttpCookStatus::clear_designid() {
  designid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpCookStatus::designid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpCookStatus.designId)
  return designid_.GetNoArena();
}
inline void CMessageHttpCookStatus::set_designid(const ::std::string& value) {
  
  designid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpCookStatus.designId)
}
#if LANG_CXX11
inline void CMessageHttpCookStatus::set_designid(::std::string&& value) {
  
  designid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpCookStatus.designId)
}
#endif
inline void CMessageHttpCookStatus::set_designid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  designid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpCookStatus.designId)
}
inline void CMessageHttpCookStatus::set_designid(const char* value, size_t size) {
  
  designid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpCookStatus.designId)
}
inline ::std::string* CMessageHttpCookStatus::mutable_designid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpCookStatus.designId)
  return designid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpCookStatus::release_designid() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpCookStatus.designId)
  
  return designid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpCookStatus::set_allocated_designid(::std::string* designid) {
  if (designid != NULL) {
    
  } else {
    
  }
  designid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), designid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpCookStatus.designId)
}

// string layoutId = 3;
inline void CMessageHttpCookStatus::clear_layoutid() {
  layoutid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpCookStatus::layoutid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpCookStatus.layoutId)
  return layoutid_.GetNoArena();
}
inline void CMessageHttpCookStatus::set_layoutid(const ::std::string& value) {
  
  layoutid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpCookStatus.layoutId)
}
#if LANG_CXX11
inline void CMessageHttpCookStatus::set_layoutid(::std::string&& value) {
  
  layoutid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpCookStatus.layoutId)
}
#endif
inline void CMessageHttpCookStatus::set_layoutid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  layoutid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpCookStatus.layoutId)
}
inline void CMessageHttpCookStatus::set_layoutid(const char* value, size_t size) {
  
  layoutid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpCookStatus.layoutId)
}
inline ::std::string* CMessageHttpCookStatus::mutable_layoutid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpCookStatus.layoutId)
  return layoutid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpCookStatus::release_layoutid() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpCookStatus.layoutId)
  
  return layoutid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpCookStatus::set_allocated_layoutid(::std::string* layoutid) {
  if (layoutid != NULL) {
    
  } else {
    
  }
  layoutid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), layoutid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpCookStatus.layoutId)
}

// string inputUrl = 4;
inline void CMessageHttpCookStatus::clear_inputurl() {
  inputurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpCookStatus::inputurl() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpCookStatus.inputUrl)
  return inputurl_.GetNoArena();
}
inline void CMessageHttpCookStatus::set_inputurl(const ::std::string& value) {
  
  inputurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpCookStatus.inputUrl)
}
#if LANG_CXX11
inline void CMessageHttpCookStatus::set_inputurl(::std::string&& value) {
  
  inputurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpCookStatus.inputUrl)
}
#endif
inline void CMessageHttpCookStatus::set_inputurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  inputurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpCookStatus.inputUrl)
}
inline void CMessageHttpCookStatus::set_inputurl(const char* value, size_t size) {
  
  inputurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpCookStatus.inputUrl)
}
inline ::std::string* CMessageHttpCookStatus::mutable_inputurl() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpCookStatus.inputUrl)
  return inputurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpCookStatus::release_inputurl() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpCookStatus.inputUrl)
  
  return inputurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpCookStatus::set_allocated_inputurl(::std::string* inputurl) {
  if (inputurl != NULL) {
    
  } else {
    
  }
  inputurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), inputurl);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpCookStatus.inputUrl)
}

// string outputUrl = 5;
inline void CMessageHttpCookStatus::clear_outputurl() {
  outputurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpCookStatus::outputurl() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpCookStatus.outputUrl)
  return outputurl_.GetNoArena();
}
inline void CMessageHttpCookStatus::set_outputurl(const ::std::string& value) {
  
  outputurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpCookStatus.outputUrl)
}
#if LANG_CXX11
inline void CMessageHttpCookStatus::set_outputurl(::std::string&& value) {
  
  outputurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpCookStatus.outputUrl)
}
#endif
inline void CMessageHttpCookStatus::set_outputurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  outputurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpCookStatus.outputUrl)
}
inline void CMessageHttpCookStatus::set_outputurl(const char* value, size_t size) {
  
  outputurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpCookStatus.outputUrl)
}
inline ::std::string* CMessageHttpCookStatus::mutable_outputurl() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpCookStatus.outputUrl)
  return outputurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpCookStatus::release_outputurl() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpCookStatus.outputUrl)
  
  return outputurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpCookStatus::set_allocated_outputurl(::std::string* outputurl) {
  if (outputurl != NULL) {
    
  } else {
    
  }
  outputurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), outputurl);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpCookStatus.outputUrl)
}

// int32 cookStage = 6;
inline void CMessageHttpCookStatus::clear_cookstage() {
  cookstage_ = 0;
}
inline ::google::protobuf::int32 CMessageHttpCookStatus::cookstage() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpCookStatus.cookStage)
  return cookstage_;
}
inline void CMessageHttpCookStatus::set_cookstage(::google::protobuf::int32 value) {
  
  cookstage_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpCookStatus.cookStage)
}

// int64 submitTime = 7;
inline void CMessageHttpCookStatus::clear_submittime() {
  submittime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CMessageHttpCookStatus::submittime() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpCookStatus.submitTime)
  return submittime_;
}
inline void CMessageHttpCookStatus::set_submittime(::google::protobuf::int64 value) {
  
  submittime_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpCookStatus.submitTime)
}

// int64 startTime = 8;
inline void CMessageHttpCookStatus::clear_starttime() {
  starttime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CMessageHttpCookStatus::starttime() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpCookStatus.startTime)
  return starttime_;
}
inline void CMessageHttpCookStatus::set_starttime(::google::protobuf::int64 value) {
  
  starttime_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpCookStatus.startTime)
}

// int64 finishTime = 9;
inline void CMessageHttpCookStatus::clear_finishtime() {
  finishtime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CMessageHttpCookStatus::finishtime() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpCookStatus.finishTime)
  return finishtime_;
}
inline void CMessageHttpCookStatus::set_finishtime(::google::protobuf::int64 value) {
  
  finishtime_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpCookStatus.finishTime)
}

// int32 tryCount = 10;
inline void CMessageHttpCookStatus::clear_trycount() {
  trycount_ = 0;
}
inline ::google::protobuf::int32 CMessageHttpCookStatus::trycount() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpCookStatus.tryCount)
  return trycount_;
}
inline void CMessageHttpCookStatus::set_trycount(::google::protobuf::int32 value) {
  
  trycount_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpCookStatus.tryCount)
}

// string errorInfo = 11;
inline void CMessageHttpCookStatus::clear_errorinfo() {
  errorinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpCookStatus::errorinfo() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpCookStatus.errorInfo)
  return errorinfo_.GetNoArena();
}
inline void CMessageHttpCookStatus::set_errorinfo(const ::std::string& value) {
  
  errorinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpCookStatus.errorInfo)
}
#if LANG_CXX11
inline void CMessageHttpCookStatus::set_errorinfo(::std::string&& value) {
  
  errorinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpCookStatus.errorInfo)
}
#endif
inline void CMessageHttpCookStatus::set_errorinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  errorinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpCookStatus.errorInfo)
}
inline void CMessageHttpCookStatus::set_errorinfo(const char* value, size_t size) {
  
  errorinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpCookStatus.errorInfo)
}
inline ::std::string* CMessageHttpCookStatus::mutable_errorinfo() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpCookStatus.errorInfo)
  return errorinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpCookStatus::release_errorinfo() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpCookStatus.errorInfo)
  
  return errorinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpCookStatus::set_allocated_errorinfo(::std::string* errorinfo) {
  if (errorinfo != NULL) {
    
  } else {
    
  }
  errorinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errorinfo);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpCookStatus.errorInfo)
}

// int32 userId = 12;
inline void CMessageHttpCookStatus::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 CMessageHttpCookStatus::userid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpCookStatus.userId)
  return userid_;
}
inline void CMessageHttpCookStatus::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpCookStatus.userId)
}

// string hostName = 13;
inline void CMessageHttpCookStatus::clear_hostname() {
  hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpCookStatus::hostname() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpCookStatus.hostName)
  return hostname_.GetNoArena();
}
inline void CMessageHttpCookStatus::set_hostname(const ::std::string& value) {
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpCookStatus.hostName)
}
#if LANG_CXX11
inline void CMessageHttpCookStatus::set_hostname(::std::string&& value) {
  
  hostname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpCookStatus.hostName)
}
#endif
inline void CMessageHttpCookStatus::set_hostname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpCookStatus.hostName)
}
inline void CMessageHttpCookStatus::set_hostname(const char* value, size_t size) {
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpCookStatus.hostName)
}
inline ::std::string* CMessageHttpCookStatus::mutable_hostname() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpCookStatus.hostName)
  return hostname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpCookStatus::release_hostname() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpCookStatus.hostName)
  
  return hostname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpCookStatus::set_allocated_hostname(::std::string* hostname) {
  if (hostname != NULL) {
    
  } else {
    
  }
  hostname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hostname);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpCookStatus.hostName)
}

// int32 pakSize = 14;
inline void CMessageHttpCookStatus::clear_paksize() {
  paksize_ = 0;
}
inline ::google::protobuf::int32 CMessageHttpCookStatus::paksize() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpCookStatus.pakSize)
  return paksize_;
}
inline void CMessageHttpCookStatus::set_paksize(::google::protobuf::int32 value) {
  
  paksize_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpCookStatus.pakSize)
}

// int64 expectedFinishTime = 15;
inline void CMessageHttpCookStatus::clear_expectedfinishtime() {
  expectedfinishtime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CMessageHttpCookStatus::expectedfinishtime() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpCookStatus.expectedFinishTime)
  return expectedfinishtime_;
}
inline void CMessageHttpCookStatus::set_expectedfinishtime(::google::protobuf::int64 value) {
  
  expectedfinishtime_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpCookStatus.expectedFinishTime)
}

// int64 currentTime = 16;
inline void CMessageHttpCookStatus::clear_currenttime() {
  currenttime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CMessageHttpCookStatus::currenttime() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpCookStatus.currentTime)
  return currenttime_;
}
inline void CMessageHttpCookStatus::set_currenttime(::google::protobuf::int64 value) {
  
  currenttime_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpCookStatus.currentTime)
}

// -------------------------------------------------------------------

// CMessageDesignHttpCookStatus

// string id = 1;
inline void CMessageDesignHttpCookStatus::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageDesignHttpCookStatus::id() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDesignHttpCookStatus.id)
  return id_.GetNoArena();
}
inline void CMessageDesignHttpCookStatus::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageDesignHttpCookStatus.id)
}
#if LANG_CXX11
inline void CMessageDesignHttpCookStatus::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageDesignHttpCookStatus.id)
}
#endif
inline void CMessageDesignHttpCookStatus::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageDesignHttpCookStatus.id)
}
inline void CMessageDesignHttpCookStatus::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageDesignHttpCookStatus.id)
}
inline ::std::string* CMessageDesignHttpCookStatus::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageDesignHttpCookStatus.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageDesignHttpCookStatus::release_id() {
  // @@protoc_insertion_point(field_release:d5.CMessageDesignHttpCookStatus.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageDesignHttpCookStatus::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageDesignHttpCookStatus.id)
}

// string designId = 2;
inline void CMessageDesignHttpCookStatus::clear_designid() {
  designid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageDesignHttpCookStatus::designid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDesignHttpCookStatus.designId)
  return designid_.GetNoArena();
}
inline void CMessageDesignHttpCookStatus::set_designid(const ::std::string& value) {
  
  designid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageDesignHttpCookStatus.designId)
}
#if LANG_CXX11
inline void CMessageDesignHttpCookStatus::set_designid(::std::string&& value) {
  
  designid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageDesignHttpCookStatus.designId)
}
#endif
inline void CMessageDesignHttpCookStatus::set_designid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  designid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageDesignHttpCookStatus.designId)
}
inline void CMessageDesignHttpCookStatus::set_designid(const char* value, size_t size) {
  
  designid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageDesignHttpCookStatus.designId)
}
inline ::std::string* CMessageDesignHttpCookStatus::mutable_designid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageDesignHttpCookStatus.designId)
  return designid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageDesignHttpCookStatus::release_designid() {
  // @@protoc_insertion_point(field_release:d5.CMessageDesignHttpCookStatus.designId)
  
  return designid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageDesignHttpCookStatus::set_allocated_designid(::std::string* designid) {
  if (designid != NULL) {
    
  } else {
    
  }
  designid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), designid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageDesignHttpCookStatus.designId)
}

// string layoutId = 3;
inline void CMessageDesignHttpCookStatus::clear_layoutid() {
  layoutid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageDesignHttpCookStatus::layoutid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDesignHttpCookStatus.layoutId)
  return layoutid_.GetNoArena();
}
inline void CMessageDesignHttpCookStatus::set_layoutid(const ::std::string& value) {
  
  layoutid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageDesignHttpCookStatus.layoutId)
}
#if LANG_CXX11
inline void CMessageDesignHttpCookStatus::set_layoutid(::std::string&& value) {
  
  layoutid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageDesignHttpCookStatus.layoutId)
}
#endif
inline void CMessageDesignHttpCookStatus::set_layoutid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  layoutid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageDesignHttpCookStatus.layoutId)
}
inline void CMessageDesignHttpCookStatus::set_layoutid(const char* value, size_t size) {
  
  layoutid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageDesignHttpCookStatus.layoutId)
}
inline ::std::string* CMessageDesignHttpCookStatus::mutable_layoutid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageDesignHttpCookStatus.layoutId)
  return layoutid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageDesignHttpCookStatus::release_layoutid() {
  // @@protoc_insertion_point(field_release:d5.CMessageDesignHttpCookStatus.layoutId)
  
  return layoutid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageDesignHttpCookStatus::set_allocated_layoutid(::std::string* layoutid) {
  if (layoutid != NULL) {
    
  } else {
    
  }
  layoutid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), layoutid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageDesignHttpCookStatus.layoutId)
}

// string inputUrl = 4;
inline void CMessageDesignHttpCookStatus::clear_inputurl() {
  inputurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageDesignHttpCookStatus::inputurl() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDesignHttpCookStatus.inputUrl)
  return inputurl_.GetNoArena();
}
inline void CMessageDesignHttpCookStatus::set_inputurl(const ::std::string& value) {
  
  inputurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageDesignHttpCookStatus.inputUrl)
}
#if LANG_CXX11
inline void CMessageDesignHttpCookStatus::set_inputurl(::std::string&& value) {
  
  inputurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageDesignHttpCookStatus.inputUrl)
}
#endif
inline void CMessageDesignHttpCookStatus::set_inputurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  inputurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageDesignHttpCookStatus.inputUrl)
}
inline void CMessageDesignHttpCookStatus::set_inputurl(const char* value, size_t size) {
  
  inputurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageDesignHttpCookStatus.inputUrl)
}
inline ::std::string* CMessageDesignHttpCookStatus::mutable_inputurl() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageDesignHttpCookStatus.inputUrl)
  return inputurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageDesignHttpCookStatus::release_inputurl() {
  // @@protoc_insertion_point(field_release:d5.CMessageDesignHttpCookStatus.inputUrl)
  
  return inputurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageDesignHttpCookStatus::set_allocated_inputurl(::std::string* inputurl) {
  if (inputurl != NULL) {
    
  } else {
    
  }
  inputurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), inputurl);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageDesignHttpCookStatus.inputUrl)
}

// string outputUrl = 5;
inline void CMessageDesignHttpCookStatus::clear_outputurl() {
  outputurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageDesignHttpCookStatus::outputurl() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDesignHttpCookStatus.outputUrl)
  return outputurl_.GetNoArena();
}
inline void CMessageDesignHttpCookStatus::set_outputurl(const ::std::string& value) {
  
  outputurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageDesignHttpCookStatus.outputUrl)
}
#if LANG_CXX11
inline void CMessageDesignHttpCookStatus::set_outputurl(::std::string&& value) {
  
  outputurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageDesignHttpCookStatus.outputUrl)
}
#endif
inline void CMessageDesignHttpCookStatus::set_outputurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  outputurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageDesignHttpCookStatus.outputUrl)
}
inline void CMessageDesignHttpCookStatus::set_outputurl(const char* value, size_t size) {
  
  outputurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageDesignHttpCookStatus.outputUrl)
}
inline ::std::string* CMessageDesignHttpCookStatus::mutable_outputurl() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageDesignHttpCookStatus.outputUrl)
  return outputurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageDesignHttpCookStatus::release_outputurl() {
  // @@protoc_insertion_point(field_release:d5.CMessageDesignHttpCookStatus.outputUrl)
  
  return outputurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageDesignHttpCookStatus::set_allocated_outputurl(::std::string* outputurl) {
  if (outputurl != NULL) {
    
  } else {
    
  }
  outputurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), outputurl);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageDesignHttpCookStatus.outputUrl)
}

// int32 cookStage = 6;
inline void CMessageDesignHttpCookStatus::clear_cookstage() {
  cookstage_ = 0;
}
inline ::google::protobuf::int32 CMessageDesignHttpCookStatus::cookstage() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDesignHttpCookStatus.cookStage)
  return cookstage_;
}
inline void CMessageDesignHttpCookStatus::set_cookstage(::google::protobuf::int32 value) {
  
  cookstage_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageDesignHttpCookStatus.cookStage)
}

// int64 submitTime = 7;
inline void CMessageDesignHttpCookStatus::clear_submittime() {
  submittime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CMessageDesignHttpCookStatus::submittime() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDesignHttpCookStatus.submitTime)
  return submittime_;
}
inline void CMessageDesignHttpCookStatus::set_submittime(::google::protobuf::int64 value) {
  
  submittime_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageDesignHttpCookStatus.submitTime)
}

// int64 startTime = 8;
inline void CMessageDesignHttpCookStatus::clear_starttime() {
  starttime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CMessageDesignHttpCookStatus::starttime() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDesignHttpCookStatus.startTime)
  return starttime_;
}
inline void CMessageDesignHttpCookStatus::set_starttime(::google::protobuf::int64 value) {
  
  starttime_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageDesignHttpCookStatus.startTime)
}

// int64 finishTime = 9;
inline void CMessageDesignHttpCookStatus::clear_finishtime() {
  finishtime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CMessageDesignHttpCookStatus::finishtime() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDesignHttpCookStatus.finishTime)
  return finishtime_;
}
inline void CMessageDesignHttpCookStatus::set_finishtime(::google::protobuf::int64 value) {
  
  finishtime_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageDesignHttpCookStatus.finishTime)
}

// int32 tryCount = 10;
inline void CMessageDesignHttpCookStatus::clear_trycount() {
  trycount_ = 0;
}
inline ::google::protobuf::int32 CMessageDesignHttpCookStatus::trycount() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDesignHttpCookStatus.tryCount)
  return trycount_;
}
inline void CMessageDesignHttpCookStatus::set_trycount(::google::protobuf::int32 value) {
  
  trycount_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageDesignHttpCookStatus.tryCount)
}

// string errorInfo = 11;
inline void CMessageDesignHttpCookStatus::clear_errorinfo() {
  errorinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageDesignHttpCookStatus::errorinfo() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDesignHttpCookStatus.errorInfo)
  return errorinfo_.GetNoArena();
}
inline void CMessageDesignHttpCookStatus::set_errorinfo(const ::std::string& value) {
  
  errorinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageDesignHttpCookStatus.errorInfo)
}
#if LANG_CXX11
inline void CMessageDesignHttpCookStatus::set_errorinfo(::std::string&& value) {
  
  errorinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageDesignHttpCookStatus.errorInfo)
}
#endif
inline void CMessageDesignHttpCookStatus::set_errorinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  errorinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageDesignHttpCookStatus.errorInfo)
}
inline void CMessageDesignHttpCookStatus::set_errorinfo(const char* value, size_t size) {
  
  errorinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageDesignHttpCookStatus.errorInfo)
}
inline ::std::string* CMessageDesignHttpCookStatus::mutable_errorinfo() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageDesignHttpCookStatus.errorInfo)
  return errorinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageDesignHttpCookStatus::release_errorinfo() {
  // @@protoc_insertion_point(field_release:d5.CMessageDesignHttpCookStatus.errorInfo)
  
  return errorinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageDesignHttpCookStatus::set_allocated_errorinfo(::std::string* errorinfo) {
  if (errorinfo != NULL) {
    
  } else {
    
  }
  errorinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errorinfo);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageDesignHttpCookStatus.errorInfo)
}

// int32 userId = 12;
inline void CMessageDesignHttpCookStatus::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 CMessageDesignHttpCookStatus::userid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDesignHttpCookStatus.userId)
  return userid_;
}
inline void CMessageDesignHttpCookStatus::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageDesignHttpCookStatus.userId)
}

// string hostName = 13;
inline void CMessageDesignHttpCookStatus::clear_hostname() {
  hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageDesignHttpCookStatus::hostname() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDesignHttpCookStatus.hostName)
  return hostname_.GetNoArena();
}
inline void CMessageDesignHttpCookStatus::set_hostname(const ::std::string& value) {
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageDesignHttpCookStatus.hostName)
}
#if LANG_CXX11
inline void CMessageDesignHttpCookStatus::set_hostname(::std::string&& value) {
  
  hostname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageDesignHttpCookStatus.hostName)
}
#endif
inline void CMessageDesignHttpCookStatus::set_hostname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageDesignHttpCookStatus.hostName)
}
inline void CMessageDesignHttpCookStatus::set_hostname(const char* value, size_t size) {
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageDesignHttpCookStatus.hostName)
}
inline ::std::string* CMessageDesignHttpCookStatus::mutable_hostname() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageDesignHttpCookStatus.hostName)
  return hostname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageDesignHttpCookStatus::release_hostname() {
  // @@protoc_insertion_point(field_release:d5.CMessageDesignHttpCookStatus.hostName)
  
  return hostname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageDesignHttpCookStatus::set_allocated_hostname(::std::string* hostname) {
  if (hostname != NULL) {
    
  } else {
    
  }
  hostname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hostname);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageDesignHttpCookStatus.hostName)
}

// int32 pakSize = 14;
inline void CMessageDesignHttpCookStatus::clear_paksize() {
  paksize_ = 0;
}
inline ::google::protobuf::int32 CMessageDesignHttpCookStatus::paksize() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDesignHttpCookStatus.pakSize)
  return paksize_;
}
inline void CMessageDesignHttpCookStatus::set_paksize(::google::protobuf::int32 value) {
  
  paksize_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageDesignHttpCookStatus.pakSize)
}

// string designFileUrl = 15;
inline void CMessageDesignHttpCookStatus::clear_designfileurl() {
  designfileurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageDesignHttpCookStatus::designfileurl() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDesignHttpCookStatus.designFileUrl)
  return designfileurl_.GetNoArena();
}
inline void CMessageDesignHttpCookStatus::set_designfileurl(const ::std::string& value) {
  
  designfileurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageDesignHttpCookStatus.designFileUrl)
}
#if LANG_CXX11
inline void CMessageDesignHttpCookStatus::set_designfileurl(::std::string&& value) {
  
  designfileurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageDesignHttpCookStatus.designFileUrl)
}
#endif
inline void CMessageDesignHttpCookStatus::set_designfileurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  designfileurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageDesignHttpCookStatus.designFileUrl)
}
inline void CMessageDesignHttpCookStatus::set_designfileurl(const char* value, size_t size) {
  
  designfileurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageDesignHttpCookStatus.designFileUrl)
}
inline ::std::string* CMessageDesignHttpCookStatus::mutable_designfileurl() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageDesignHttpCookStatus.designFileUrl)
  return designfileurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageDesignHttpCookStatus::release_designfileurl() {
  // @@protoc_insertion_point(field_release:d5.CMessageDesignHttpCookStatus.designFileUrl)
  
  return designfileurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageDesignHttpCookStatus::set_allocated_designfileurl(::std::string* designfileurl) {
  if (designfileurl != NULL) {
    
  } else {
    
  }
  designfileurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), designfileurl);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageDesignHttpCookStatus.designFileUrl)
}

// int64 expectedFinishTime = 16;
inline void CMessageDesignHttpCookStatus::clear_expectedfinishtime() {
  expectedfinishtime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CMessageDesignHttpCookStatus::expectedfinishtime() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDesignHttpCookStatus.expectedFinishTime)
  return expectedfinishtime_;
}
inline void CMessageDesignHttpCookStatus::set_expectedfinishtime(::google::protobuf::int64 value) {
  
  expectedfinishtime_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageDesignHttpCookStatus.expectedFinishTime)
}

// int64 currentTime = 17;
inline void CMessageDesignHttpCookStatus::clear_currenttime() {
  currenttime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CMessageDesignHttpCookStatus::currenttime() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDesignHttpCookStatus.currentTime)
  return currenttime_;
}
inline void CMessageDesignHttpCookStatus::set_currenttime(::google::protobuf::int64 value) {
  
  currenttime_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageDesignHttpCookStatus.currentTime)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace d5

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_5fhttp_5fcook_5fstatus_2eproto_INCLUDED
