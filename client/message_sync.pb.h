// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_sync.proto

#ifndef PROTOBUF_message_5fsync_2eproto_INCLUDED
#define PROTOBUF_message_5fsync_2eproto_INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_message_5fsync_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsCMessageSyncRequestImpl();
void InitDefaultsCMessageSyncRequest();
void InitDefaultsCMessageSyncResponseImpl();
void InitDefaultsCMessageSyncResponse();
void InitDefaultsCMessageSyncProcessImpl();
void InitDefaultsCMessageSyncProcess();
inline void InitDefaults() {
  InitDefaultsCMessageSyncRequest();
  InitDefaultsCMessageSyncResponse();
  InitDefaultsCMessageSyncProcess();
}
}  // namespace protobuf_message_5fsync_2eproto
namespace d5 {
class CMessageSyncProcess;
class CMessageSyncProcessDefaultTypeInternal;
extern CMessageSyncProcessDefaultTypeInternal _CMessageSyncProcess_default_instance_;
class CMessageSyncRequest;
class CMessageSyncRequestDefaultTypeInternal;
extern CMessageSyncRequestDefaultTypeInternal _CMessageSyncRequest_default_instance_;
class CMessageSyncResponse;
class CMessageSyncResponseDefaultTypeInternal;
extern CMessageSyncResponseDefaultTypeInternal _CMessageSyncResponse_default_instance_;
}  // namespace d5
namespace google {
namespace protobuf {
template<> ::d5::CMessageSyncProcess* Arena::Create< ::d5::CMessageSyncProcess>(Arena*);
template<> ::d5::CMessageSyncRequest* Arena::Create< ::d5::CMessageSyncRequest>(Arena*);
template<> ::d5::CMessageSyncResponse* Arena::Create< ::d5::CMessageSyncResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace d5 {

// ===================================================================

class CMessageSyncRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageSyncRequest) */ {
 public:
  CMessageSyncRequest();
  virtual ~CMessageSyncRequest();

  CMessageSyncRequest(const CMessageSyncRequest& from);

  inline CMessageSyncRequest& operator=(const CMessageSyncRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageSyncRequest(CMessageSyncRequest&& from) noexcept
    : CMessageSyncRequest() {
    *this = ::std::move(from);
  }

  inline CMessageSyncRequest& operator=(CMessageSyncRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSyncRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageSyncRequest* internal_default_instance() {
    return reinterpret_cast<const CMessageSyncRequest*>(
               &_CMessageSyncRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CMessageSyncRequest* other);
  friend void swap(CMessageSyncRequest& a, CMessageSyncRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageSyncRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageSyncRequest>(NULL);
  }

  CMessageSyncRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageSyncRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageSyncRequest& from);
  void MergeFrom(const CMessageSyncRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageSyncRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 level = 3;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageSyncRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 level_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fsync_2eproto::TableStruct;
  friend void ::protobuf_message_5fsync_2eproto::InitDefaultsCMessageSyncRequestImpl();
};
// -------------------------------------------------------------------

class CMessageSyncResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageSyncResponse) */ {
 public:
  CMessageSyncResponse();
  virtual ~CMessageSyncResponse();

  CMessageSyncResponse(const CMessageSyncResponse& from);

  inline CMessageSyncResponse& operator=(const CMessageSyncResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageSyncResponse(CMessageSyncResponse&& from) noexcept
    : CMessageSyncResponse() {
    *this = ::std::move(from);
  }

  inline CMessageSyncResponse& operator=(CMessageSyncResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSyncResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageSyncResponse* internal_default_instance() {
    return reinterpret_cast<const CMessageSyncResponse*>(
               &_CMessageSyncResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CMessageSyncResponse* other);
  friend void swap(CMessageSyncResponse& a, CMessageSyncResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageSyncResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageSyncResponse>(NULL);
  }

  CMessageSyncResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageSyncResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageSyncResponse& from);
  void MergeFrom(const CMessageSyncResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageSyncResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 state = 3;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageSyncResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 state_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fsync_2eproto::TableStruct;
  friend void ::protobuf_message_5fsync_2eproto::InitDefaultsCMessageSyncResponseImpl();
};
// -------------------------------------------------------------------

class CMessageSyncProcess : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageSyncProcess) */ {
 public:
  CMessageSyncProcess();
  virtual ~CMessageSyncProcess();

  CMessageSyncProcess(const CMessageSyncProcess& from);

  inline CMessageSyncProcess& operator=(const CMessageSyncProcess& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageSyncProcess(CMessageSyncProcess&& from) noexcept
    : CMessageSyncProcess() {
    *this = ::std::move(from);
  }

  inline CMessageSyncProcess& operator=(CMessageSyncProcess&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSyncProcess& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageSyncProcess* internal_default_instance() {
    return reinterpret_cast<const CMessageSyncProcess*>(
               &_CMessageSyncProcess_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CMessageSyncProcess* other);
  friend void swap(CMessageSyncProcess& a, CMessageSyncProcess& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageSyncProcess* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageSyncProcess>(NULL);
  }

  CMessageSyncProcess* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageSyncProcess>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageSyncProcess& from);
  void MergeFrom(const CMessageSyncProcess& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageSyncProcess* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 percent = 3;
  void clear_percent();
  static const int kPercentFieldNumber = 3;
  ::google::protobuf::int32 percent() const;
  void set_percent(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageSyncProcess)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 percent_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fsync_2eproto::TableStruct;
  friend void ::protobuf_message_5fsync_2eproto::InitDefaultsCMessageSyncProcessImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMessageSyncRequest

// int32 type = 1;
inline void CMessageSyncRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageSyncRequest::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageSyncRequest.type)
  return type_;
}
inline void CMessageSyncRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageSyncRequest.type)
}

// string uuid = 2;
inline void CMessageSyncRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageSyncRequest::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageSyncRequest.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageSyncRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageSyncRequest.uuid)
}
#if LANG_CXX11
inline void CMessageSyncRequest::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageSyncRequest.uuid)
}
#endif
inline void CMessageSyncRequest::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageSyncRequest.uuid)
}
inline void CMessageSyncRequest::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageSyncRequest.uuid)
}
inline ::std::string* CMessageSyncRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageSyncRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageSyncRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageSyncRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageSyncRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageSyncRequest.uuid)
}

// int32 level = 3;
inline void CMessageSyncRequest::clear_level() {
  level_ = 0;
}
inline ::google::protobuf::int32 CMessageSyncRequest::level() const {
  // @@protoc_insertion_point(field_get:d5.CMessageSyncRequest.level)
  return level_;
}
inline void CMessageSyncRequest::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageSyncRequest.level)
}

// -------------------------------------------------------------------

// CMessageSyncResponse

// int32 type = 1;
inline void CMessageSyncResponse::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageSyncResponse::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageSyncResponse.type)
  return type_;
}
inline void CMessageSyncResponse::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageSyncResponse.type)
}

// string uuid = 2;
inline void CMessageSyncResponse::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageSyncResponse::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageSyncResponse.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageSyncResponse::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageSyncResponse.uuid)
}
#if LANG_CXX11
inline void CMessageSyncResponse::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageSyncResponse.uuid)
}
#endif
inline void CMessageSyncResponse::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageSyncResponse.uuid)
}
inline void CMessageSyncResponse::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageSyncResponse.uuid)
}
inline ::std::string* CMessageSyncResponse::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageSyncResponse.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageSyncResponse::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageSyncResponse.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageSyncResponse::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageSyncResponse.uuid)
}

// int32 state = 3;
inline void CMessageSyncResponse::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 CMessageSyncResponse::state() const {
  // @@protoc_insertion_point(field_get:d5.CMessageSyncResponse.state)
  return state_;
}
inline void CMessageSyncResponse::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageSyncResponse.state)
}

// -------------------------------------------------------------------

// CMessageSyncProcess

// int32 type = 1;
inline void CMessageSyncProcess::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageSyncProcess::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageSyncProcess.type)
  return type_;
}
inline void CMessageSyncProcess::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageSyncProcess.type)
}

// string uuid = 2;
inline void CMessageSyncProcess::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageSyncProcess::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageSyncProcess.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageSyncProcess::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageSyncProcess.uuid)
}
#if LANG_CXX11
inline void CMessageSyncProcess::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageSyncProcess.uuid)
}
#endif
inline void CMessageSyncProcess::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageSyncProcess.uuid)
}
inline void CMessageSyncProcess::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageSyncProcess.uuid)
}
inline ::std::string* CMessageSyncProcess::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageSyncProcess.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageSyncProcess::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageSyncProcess.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageSyncProcess::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageSyncProcess.uuid)
}

// int32 percent = 3;
inline void CMessageSyncProcess::clear_percent() {
  percent_ = 0;
}
inline ::google::protobuf::int32 CMessageSyncProcess::percent() const {
  // @@protoc_insertion_point(field_get:d5.CMessageSyncProcess.percent)
  return percent_;
}
inline void CMessageSyncProcess::set_percent(::google::protobuf::int32 value) {
  
  percent_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageSyncProcess.percent)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace d5

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_5fsync_2eproto_INCLUDED
