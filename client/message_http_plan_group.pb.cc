// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_http_plan_group.proto

#include "message_http_plan_group.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace d5 {
class CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit>
      _instance;
} _CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit_default_instance_;
class CMessageHttpGetPlanGroupResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageHttpGetPlanGroupResponse>
      _instance;
} _CMessageHttpGetPlanGroupResponse_default_instance_;
class CMessageHttpAddPlanGroupResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageHttpAddPlanGroupResponse>
      _instance;
} _CMessageHttpAddPlanGroupResponse_default_instance_;
class CMessageHttpUpdatePlanGroupRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageHttpUpdatePlanGroupRequest>
      _instance;
} _CMessageHttpUpdatePlanGroupRequest_default_instance_;
}  // namespace d5
namespace protobuf_message_5fhttp_5fplan_5fgroup_2eproto {
void InitDefaultsCMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnitImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::_CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit_default_instance_;
    new (ptr) ::d5::CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit::InitAsDefaultInstance();
}

void InitDefaultsCMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnitImpl);
}

void InitDefaultsCMessageHttpGetPlanGroupResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_5fhttp_5fplan_5fgroup_2eproto::InitDefaultsCMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit();
  {
    void* ptr = &::d5::_CMessageHttpGetPlanGroupResponse_default_instance_;
    new (ptr) ::d5::CMessageHttpGetPlanGroupResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageHttpGetPlanGroupResponse::InitAsDefaultInstance();
}

void InitDefaultsCMessageHttpGetPlanGroupResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageHttpGetPlanGroupResponseImpl);
}

void InitDefaultsCMessageHttpAddPlanGroupResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::_CMessageHttpAddPlanGroupResponse_default_instance_;
    new (ptr) ::d5::CMessageHttpAddPlanGroupResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageHttpAddPlanGroupResponse::InitAsDefaultInstance();
}

void InitDefaultsCMessageHttpAddPlanGroupResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageHttpAddPlanGroupResponseImpl);
}

void InitDefaultsCMessageHttpUpdatePlanGroupRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::_CMessageHttpUpdatePlanGroupRequest_default_instance_;
    new (ptr) ::d5::CMessageHttpUpdatePlanGroupRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageHttpUpdatePlanGroupRequest::InitAsDefaultInstance();
}

void InitDefaultsCMessageHttpUpdatePlanGroupRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageHttpUpdatePlanGroupRequestImpl);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit, companyid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpGetPlanGroupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpGetPlanGroupResponse, list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpAddPlanGroupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpAddPlanGroupResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpAddPlanGroupResponse, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpAddPlanGroupResponse, companyid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpUpdatePlanGroupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpUpdatePlanGroupRequest, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpUpdatePlanGroupRequest, name_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::d5::CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit)},
  { 8, -1, sizeof(::d5::CMessageHttpGetPlanGroupResponse)},
  { 14, -1, sizeof(::d5::CMessageHttpAddPlanGroupResponse)},
  { 22, -1, sizeof(::d5::CMessageHttpUpdatePlanGroupRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageHttpGetPlanGroupResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageHttpAddPlanGroupResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageHttpUpdatePlanGroupRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "message_http_plan_group.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\035message_http_plan_group.proto\022\002d5\"\300\001\n "
      "CMessageHttpGetPlanGroupResponse\022O\n\004list"
      "\030\001 \003(\0132A.d5.CMessageHttpGetPlanGroupResp"
      "onse.CMessageHttpGetPlanGroupUnit\032K\n\034CMe"
      "ssageHttpGetPlanGroupUnit\022\n\n\002id\030\001 \001(\005\022\014\n"
      "\004name\030\002 \001(\t\022\021\n\tcompanyId\030\003 \001(\005\"O\n CMessa"
      "geHttpAddPlanGroupResponse\022\n\n\002id\030\001 \001(\005\022\014"
      "\n\004name\030\002 \001(\t\022\021\n\tcompanyId\030\003 \001(\005\">\n\"CMess"
      "ageHttpUpdatePlanGroupRequest\022\n\n\002id\030\001 \001("
      "\005\022\014\n\004name\030\002 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 383);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message_http_plan_group.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_message_5fhttp_5fplan_5fgroup_2eproto
namespace d5 {

// ===================================================================

void CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit::kIdFieldNumber;
const int CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit::kNameFieldNumber;
const int CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit::kCompanyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit::CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fhttp_5fplan_5fgroup_2eproto::InitDefaultsCMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageHttpGetPlanGroupResponse.CMessageHttpGetPlanGroupUnit)
}
CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit::CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit(const CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&companyid_) -
    reinterpret_cast<char*>(&id_)) + sizeof(companyid_));
  // @@protoc_insertion_point(copy_constructor:d5.CMessageHttpGetPlanGroupResponse.CMessageHttpGetPlanGroupUnit)
}

void CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&companyid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(companyid_));
  _cached_size_ = 0;
}

CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit::~CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit() {
  // @@protoc_insertion_point(destructor:d5.CMessageHttpGetPlanGroupResponse.CMessageHttpGetPlanGroupUnit)
  SharedDtor();
}

void CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit::descriptor() {
  ::protobuf_message_5fhttp_5fplan_5fgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fhttp_5fplan_5fgroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit& CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit::default_instance() {
  ::protobuf_message_5fhttp_5fplan_5fgroup_2eproto::InitDefaultsCMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit();
  return *internal_default_instance();
}


void CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageHttpGetPlanGroupResponse.CMessageHttpGetPlanGroupUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&companyid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(companyid_));
  _internal_metadata_.Clear();
}

bool CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageHttpGetPlanGroupResponse.CMessageHttpGetPlanGroupUnit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpGetPlanGroupResponse.CMessageHttpGetPlanGroupUnit.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 companyId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &companyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageHttpGetPlanGroupResponse.CMessageHttpGetPlanGroupUnit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageHttpGetPlanGroupResponse.CMessageHttpGetPlanGroupUnit)
  return false;
#undef DO_
}

void CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageHttpGetPlanGroupResponse.CMessageHttpGetPlanGroupUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpGetPlanGroupResponse.CMessageHttpGetPlanGroupUnit.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // int32 companyId = 3;
  if (this->companyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->companyid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageHttpGetPlanGroupResponse.CMessageHttpGetPlanGroupUnit)
}

::google::protobuf::uint8* CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageHttpGetPlanGroupResponse.CMessageHttpGetPlanGroupUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpGetPlanGroupResponse.CMessageHttpGetPlanGroupUnit.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // int32 companyId = 3;
  if (this->companyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->companyid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageHttpGetPlanGroupResponse.CMessageHttpGetPlanGroupUnit)
  return target;
}

size_t CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageHttpGetPlanGroupResponse.CMessageHttpGetPlanGroupUnit)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 companyId = 3;
  if (this->companyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->companyid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageHttpGetPlanGroupResponse.CMessageHttpGetPlanGroupUnit)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageHttpGetPlanGroupResponse.CMessageHttpGetPlanGroupUnit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageHttpGetPlanGroupResponse.CMessageHttpGetPlanGroupUnit)
    MergeFrom(*source);
  }
}

void CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit::MergeFrom(const CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageHttpGetPlanGroupResponse.CMessageHttpGetPlanGroupUnit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.companyid() != 0) {
    set_companyid(from.companyid());
  }
}

void CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageHttpGetPlanGroupResponse.CMessageHttpGetPlanGroupUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit::CopyFrom(const CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageHttpGetPlanGroupResponse.CMessageHttpGetPlanGroupUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit::IsInitialized() const {
  return true;
}

void CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit::Swap(CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit::InternalSwap(CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(id_, other->id_);
  swap(companyid_, other->companyid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit::GetMetadata() const {
  protobuf_message_5fhttp_5fplan_5fgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fhttp_5fplan_5fgroup_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMessageHttpGetPlanGroupResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageHttpGetPlanGroupResponse::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageHttpGetPlanGroupResponse::CMessageHttpGetPlanGroupResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fhttp_5fplan_5fgroup_2eproto::InitDefaultsCMessageHttpGetPlanGroupResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageHttpGetPlanGroupResponse)
}
CMessageHttpGetPlanGroupResponse::CMessageHttpGetPlanGroupResponse(const CMessageHttpGetPlanGroupResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      list_(from.list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:d5.CMessageHttpGetPlanGroupResponse)
}

void CMessageHttpGetPlanGroupResponse::SharedCtor() {
  _cached_size_ = 0;
}

CMessageHttpGetPlanGroupResponse::~CMessageHttpGetPlanGroupResponse() {
  // @@protoc_insertion_point(destructor:d5.CMessageHttpGetPlanGroupResponse)
  SharedDtor();
}

void CMessageHttpGetPlanGroupResponse::SharedDtor() {
}

void CMessageHttpGetPlanGroupResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageHttpGetPlanGroupResponse::descriptor() {
  ::protobuf_message_5fhttp_5fplan_5fgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fhttp_5fplan_5fgroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageHttpGetPlanGroupResponse& CMessageHttpGetPlanGroupResponse::default_instance() {
  ::protobuf_message_5fhttp_5fplan_5fgroup_2eproto::InitDefaultsCMessageHttpGetPlanGroupResponse();
  return *internal_default_instance();
}


void CMessageHttpGetPlanGroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageHttpGetPlanGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _internal_metadata_.Clear();
}

bool CMessageHttpGetPlanGroupResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageHttpGetPlanGroupResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .d5.CMessageHttpGetPlanGroupResponse.CMessageHttpGetPlanGroupUnit list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageHttpGetPlanGroupResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageHttpGetPlanGroupResponse)
  return false;
#undef DO_
}

void CMessageHttpGetPlanGroupResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageHttpGetPlanGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .d5.CMessageHttpGetPlanGroupResponse.CMessageHttpGetPlanGroupUnit list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageHttpGetPlanGroupResponse)
}

::google::protobuf::uint8* CMessageHttpGetPlanGroupResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageHttpGetPlanGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .d5.CMessageHttpGetPlanGroupResponse.CMessageHttpGetPlanGroupUnit list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageHttpGetPlanGroupResponse)
  return target;
}

size_t CMessageHttpGetPlanGroupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageHttpGetPlanGroupResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .d5.CMessageHttpGetPlanGroupResponse.CMessageHttpGetPlanGroupUnit list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageHttpGetPlanGroupResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageHttpGetPlanGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageHttpGetPlanGroupResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageHttpGetPlanGroupResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageHttpGetPlanGroupResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageHttpGetPlanGroupResponse)
    MergeFrom(*source);
  }
}

void CMessageHttpGetPlanGroupResponse::MergeFrom(const CMessageHttpGetPlanGroupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageHttpGetPlanGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void CMessageHttpGetPlanGroupResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageHttpGetPlanGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageHttpGetPlanGroupResponse::CopyFrom(const CMessageHttpGetPlanGroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageHttpGetPlanGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageHttpGetPlanGroupResponse::IsInitialized() const {
  return true;
}

void CMessageHttpGetPlanGroupResponse::Swap(CMessageHttpGetPlanGroupResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageHttpGetPlanGroupResponse::InternalSwap(CMessageHttpGetPlanGroupResponse* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageHttpGetPlanGroupResponse::GetMetadata() const {
  protobuf_message_5fhttp_5fplan_5fgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fhttp_5fplan_5fgroup_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMessageHttpAddPlanGroupResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageHttpAddPlanGroupResponse::kIdFieldNumber;
const int CMessageHttpAddPlanGroupResponse::kNameFieldNumber;
const int CMessageHttpAddPlanGroupResponse::kCompanyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageHttpAddPlanGroupResponse::CMessageHttpAddPlanGroupResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fhttp_5fplan_5fgroup_2eproto::InitDefaultsCMessageHttpAddPlanGroupResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageHttpAddPlanGroupResponse)
}
CMessageHttpAddPlanGroupResponse::CMessageHttpAddPlanGroupResponse(const CMessageHttpAddPlanGroupResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&companyid_) -
    reinterpret_cast<char*>(&id_)) + sizeof(companyid_));
  // @@protoc_insertion_point(copy_constructor:d5.CMessageHttpAddPlanGroupResponse)
}

void CMessageHttpAddPlanGroupResponse::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&companyid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(companyid_));
  _cached_size_ = 0;
}

CMessageHttpAddPlanGroupResponse::~CMessageHttpAddPlanGroupResponse() {
  // @@protoc_insertion_point(destructor:d5.CMessageHttpAddPlanGroupResponse)
  SharedDtor();
}

void CMessageHttpAddPlanGroupResponse::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMessageHttpAddPlanGroupResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageHttpAddPlanGroupResponse::descriptor() {
  ::protobuf_message_5fhttp_5fplan_5fgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fhttp_5fplan_5fgroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageHttpAddPlanGroupResponse& CMessageHttpAddPlanGroupResponse::default_instance() {
  ::protobuf_message_5fhttp_5fplan_5fgroup_2eproto::InitDefaultsCMessageHttpAddPlanGroupResponse();
  return *internal_default_instance();
}


void CMessageHttpAddPlanGroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageHttpAddPlanGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&companyid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(companyid_));
  _internal_metadata_.Clear();
}

bool CMessageHttpAddPlanGroupResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageHttpAddPlanGroupResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpAddPlanGroupResponse.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 companyId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &companyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageHttpAddPlanGroupResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageHttpAddPlanGroupResponse)
  return false;
#undef DO_
}

void CMessageHttpAddPlanGroupResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageHttpAddPlanGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpAddPlanGroupResponse.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // int32 companyId = 3;
  if (this->companyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->companyid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageHttpAddPlanGroupResponse)
}

::google::protobuf::uint8* CMessageHttpAddPlanGroupResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageHttpAddPlanGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpAddPlanGroupResponse.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // int32 companyId = 3;
  if (this->companyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->companyid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageHttpAddPlanGroupResponse)
  return target;
}

size_t CMessageHttpAddPlanGroupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageHttpAddPlanGroupResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 companyId = 3;
  if (this->companyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->companyid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageHttpAddPlanGroupResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageHttpAddPlanGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageHttpAddPlanGroupResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageHttpAddPlanGroupResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageHttpAddPlanGroupResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageHttpAddPlanGroupResponse)
    MergeFrom(*source);
  }
}

void CMessageHttpAddPlanGroupResponse::MergeFrom(const CMessageHttpAddPlanGroupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageHttpAddPlanGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.companyid() != 0) {
    set_companyid(from.companyid());
  }
}

void CMessageHttpAddPlanGroupResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageHttpAddPlanGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageHttpAddPlanGroupResponse::CopyFrom(const CMessageHttpAddPlanGroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageHttpAddPlanGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageHttpAddPlanGroupResponse::IsInitialized() const {
  return true;
}

void CMessageHttpAddPlanGroupResponse::Swap(CMessageHttpAddPlanGroupResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageHttpAddPlanGroupResponse::InternalSwap(CMessageHttpAddPlanGroupResponse* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(id_, other->id_);
  swap(companyid_, other->companyid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageHttpAddPlanGroupResponse::GetMetadata() const {
  protobuf_message_5fhttp_5fplan_5fgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fhttp_5fplan_5fgroup_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMessageHttpUpdatePlanGroupRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageHttpUpdatePlanGroupRequest::kIdFieldNumber;
const int CMessageHttpUpdatePlanGroupRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageHttpUpdatePlanGroupRequest::CMessageHttpUpdatePlanGroupRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fhttp_5fplan_5fgroup_2eproto::InitDefaultsCMessageHttpUpdatePlanGroupRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageHttpUpdatePlanGroupRequest)
}
CMessageHttpUpdatePlanGroupRequest::CMessageHttpUpdatePlanGroupRequest(const CMessageHttpUpdatePlanGroupRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:d5.CMessageHttpUpdatePlanGroupRequest)
}

void CMessageHttpUpdatePlanGroupRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
  _cached_size_ = 0;
}

CMessageHttpUpdatePlanGroupRequest::~CMessageHttpUpdatePlanGroupRequest() {
  // @@protoc_insertion_point(destructor:d5.CMessageHttpUpdatePlanGroupRequest)
  SharedDtor();
}

void CMessageHttpUpdatePlanGroupRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMessageHttpUpdatePlanGroupRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageHttpUpdatePlanGroupRequest::descriptor() {
  ::protobuf_message_5fhttp_5fplan_5fgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fhttp_5fplan_5fgroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageHttpUpdatePlanGroupRequest& CMessageHttpUpdatePlanGroupRequest::default_instance() {
  ::protobuf_message_5fhttp_5fplan_5fgroup_2eproto::InitDefaultsCMessageHttpUpdatePlanGroupRequest();
  return *internal_default_instance();
}


void CMessageHttpUpdatePlanGroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageHttpUpdatePlanGroupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
  _internal_metadata_.Clear();
}

bool CMessageHttpUpdatePlanGroupRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageHttpUpdatePlanGroupRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpUpdatePlanGroupRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageHttpUpdatePlanGroupRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageHttpUpdatePlanGroupRequest)
  return false;
#undef DO_
}

void CMessageHttpUpdatePlanGroupRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageHttpUpdatePlanGroupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpUpdatePlanGroupRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageHttpUpdatePlanGroupRequest)
}

::google::protobuf::uint8* CMessageHttpUpdatePlanGroupRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageHttpUpdatePlanGroupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpUpdatePlanGroupRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageHttpUpdatePlanGroupRequest)
  return target;
}

size_t CMessageHttpUpdatePlanGroupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageHttpUpdatePlanGroupRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageHttpUpdatePlanGroupRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageHttpUpdatePlanGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageHttpUpdatePlanGroupRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageHttpUpdatePlanGroupRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageHttpUpdatePlanGroupRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageHttpUpdatePlanGroupRequest)
    MergeFrom(*source);
  }
}

void CMessageHttpUpdatePlanGroupRequest::MergeFrom(const CMessageHttpUpdatePlanGroupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageHttpUpdatePlanGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void CMessageHttpUpdatePlanGroupRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageHttpUpdatePlanGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageHttpUpdatePlanGroupRequest::CopyFrom(const CMessageHttpUpdatePlanGroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageHttpUpdatePlanGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageHttpUpdatePlanGroupRequest::IsInitialized() const {
  return true;
}

void CMessageHttpUpdatePlanGroupRequest::Swap(CMessageHttpUpdatePlanGroupRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageHttpUpdatePlanGroupRequest::InternalSwap(CMessageHttpUpdatePlanGroupRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageHttpUpdatePlanGroupRequest::GetMetadata() const {
  protobuf_message_5fhttp_5fplan_5fgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fhttp_5fplan_5fgroup_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace d5
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit* Arena::Create< ::d5::CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageHttpGetPlanGroupResponse_CMessageHttpGetPlanGroupUnit >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageHttpGetPlanGroupResponse* Arena::Create< ::d5::CMessageHttpGetPlanGroupResponse >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageHttpGetPlanGroupResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageHttpAddPlanGroupResponse* Arena::Create< ::d5::CMessageHttpAddPlanGroupResponse >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageHttpAddPlanGroupResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageHttpUpdatePlanGroupRequest* Arena::Create< ::d5::CMessageHttpUpdatePlanGroupRequest >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageHttpUpdatePlanGroupRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
