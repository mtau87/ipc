// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_http_category_list.proto

#include "message_http_category_list.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace d5 {
class CMessageHttpCategoryList_CMessageHttpCategoryUnitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageHttpCategoryList_CMessageHttpCategoryUnit>
      _instance;
} _CMessageHttpCategoryList_CMessageHttpCategoryUnit_default_instance_;
class CMessageHttpCategoryListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMessageHttpCategoryList>
      _instance;
} _CMessageHttpCategoryList_default_instance_;
}  // namespace d5
namespace protobuf_message_5fhttp_5fcategory_5flist_2eproto {
void InitDefaultsCMessageHttpCategoryList_CMessageHttpCategoryUnitImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::d5::_CMessageHttpCategoryList_CMessageHttpCategoryUnit_default_instance_;
    new (ptr) ::d5::CMessageHttpCategoryList_CMessageHttpCategoryUnit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageHttpCategoryList_CMessageHttpCategoryUnit::InitAsDefaultInstance();
}

void InitDefaultsCMessageHttpCategoryList_CMessageHttpCategoryUnit() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageHttpCategoryList_CMessageHttpCategoryUnitImpl);
}

void InitDefaultsCMessageHttpCategoryListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_5fhttp_5fcategory_5flist_2eproto::InitDefaultsCMessageHttpCategoryList_CMessageHttpCategoryUnit();
  {
    void* ptr = &::d5::_CMessageHttpCategoryList_default_instance_;
    new (ptr) ::d5::CMessageHttpCategoryList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::d5::CMessageHttpCategoryList::InitAsDefaultInstance();
}

void InitDefaultsCMessageHttpCategoryList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMessageHttpCategoryListImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpCategoryList_CMessageHttpCategoryUnit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpCategoryList_CMessageHttpCategoryUnit, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpCategoryList_CMessageHttpCategoryUnit, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpCategoryList_CMessageHttpCategoryUnit, companyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpCategoryList_CMessageHttpCategoryUnit, parentid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpCategoryList_CMessageHttpCategoryUnit, level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpCategoryList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::d5::CMessageHttpCategoryList, list_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::d5::CMessageHttpCategoryList_CMessageHttpCategoryUnit)},
  { 10, -1, sizeof(::d5::CMessageHttpCategoryList)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageHttpCategoryList_CMessageHttpCategoryUnit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::d5::_CMessageHttpCategoryList_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "message_http_category_list.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n message_http_category_list.proto\022\002d5\"\312"
      "\001\n\030CMessageHttpCategoryList\022C\n\004list\030\001 \003("
      "\01325.d5.CMessageHttpCategoryList.CMessage"
      "HttpCategoryUnit\032i\n\030CMessageHttpCategory"
      "Unit\022\n\n\002id\030\001 \001(\005\022\r\n\005title\030\002 \001(\t\022\021\n\tcompa"
      "nyId\030\003 \001(\005\022\020\n\010parentId\030\004 \001(\005\022\r\n\005level\030\005 "
      "\001(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 251);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message_http_category_list.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_message_5fhttp_5fcategory_5flist_2eproto
namespace d5 {

// ===================================================================

void CMessageHttpCategoryList_CMessageHttpCategoryUnit::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageHttpCategoryList_CMessageHttpCategoryUnit::kIdFieldNumber;
const int CMessageHttpCategoryList_CMessageHttpCategoryUnit::kTitleFieldNumber;
const int CMessageHttpCategoryList_CMessageHttpCategoryUnit::kCompanyIdFieldNumber;
const int CMessageHttpCategoryList_CMessageHttpCategoryUnit::kParentIdFieldNumber;
const int CMessageHttpCategoryList_CMessageHttpCategoryUnit::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageHttpCategoryList_CMessageHttpCategoryUnit::CMessageHttpCategoryList_CMessageHttpCategoryUnit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fhttp_5fcategory_5flist_2eproto::InitDefaultsCMessageHttpCategoryList_CMessageHttpCategoryUnit();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageHttpCategoryList.CMessageHttpCategoryUnit)
}
CMessageHttpCategoryList_CMessageHttpCategoryUnit::CMessageHttpCategoryList_CMessageHttpCategoryUnit(const CMessageHttpCategoryList_CMessageHttpCategoryUnit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&id_)) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:d5.CMessageHttpCategoryList.CMessageHttpCategoryUnit)
}

void CMessageHttpCategoryList_CMessageHttpCategoryUnit::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&id_)) + sizeof(level_));
  _cached_size_ = 0;
}

CMessageHttpCategoryList_CMessageHttpCategoryUnit::~CMessageHttpCategoryList_CMessageHttpCategoryUnit() {
  // @@protoc_insertion_point(destructor:d5.CMessageHttpCategoryList.CMessageHttpCategoryUnit)
  SharedDtor();
}

void CMessageHttpCategoryList_CMessageHttpCategoryUnit::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMessageHttpCategoryList_CMessageHttpCategoryUnit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageHttpCategoryList_CMessageHttpCategoryUnit::descriptor() {
  ::protobuf_message_5fhttp_5fcategory_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fhttp_5fcategory_5flist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageHttpCategoryList_CMessageHttpCategoryUnit& CMessageHttpCategoryList_CMessageHttpCategoryUnit::default_instance() {
  ::protobuf_message_5fhttp_5fcategory_5flist_2eproto::InitDefaultsCMessageHttpCategoryList_CMessageHttpCategoryUnit();
  return *internal_default_instance();
}


void CMessageHttpCategoryList_CMessageHttpCategoryUnit::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageHttpCategoryList.CMessageHttpCategoryUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&id_)) + sizeof(level_));
  _internal_metadata_.Clear();
}

bool CMessageHttpCategoryList_CMessageHttpCategoryUnit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageHttpCategoryList.CMessageHttpCategoryUnit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "d5.CMessageHttpCategoryList.CMessageHttpCategoryUnit.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 companyId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &companyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 parentId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &parentid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 level = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageHttpCategoryList.CMessageHttpCategoryUnit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageHttpCategoryList.CMessageHttpCategoryUnit)
  return false;
#undef DO_
}

void CMessageHttpCategoryList_CMessageHttpCategoryUnit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageHttpCategoryList.CMessageHttpCategoryUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpCategoryList.CMessageHttpCategoryUnit.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // int32 companyId = 3;
  if (this->companyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->companyid(), output);
  }

  // int32 parentId = 4;
  if (this->parentid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->parentid(), output);
  }

  // int32 level = 5;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageHttpCategoryList.CMessageHttpCategoryUnit)
}

::google::protobuf::uint8* CMessageHttpCategoryList_CMessageHttpCategoryUnit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageHttpCategoryList.CMessageHttpCategoryUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "d5.CMessageHttpCategoryList.CMessageHttpCategoryUnit.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // int32 companyId = 3;
  if (this->companyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->companyid(), target);
  }

  // int32 parentId = 4;
  if (this->parentid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->parentid(), target);
  }

  // int32 level = 5;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageHttpCategoryList.CMessageHttpCategoryUnit)
  return target;
}

size_t CMessageHttpCategoryList_CMessageHttpCategoryUnit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageHttpCategoryList.CMessageHttpCategoryUnit)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 companyId = 3;
  if (this->companyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->companyid());
  }

  // int32 parentId = 4;
  if (this->parentid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->parentid());
  }

  // int32 level = 5;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageHttpCategoryList_CMessageHttpCategoryUnit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageHttpCategoryList.CMessageHttpCategoryUnit)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageHttpCategoryList_CMessageHttpCategoryUnit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageHttpCategoryList_CMessageHttpCategoryUnit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageHttpCategoryList.CMessageHttpCategoryUnit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageHttpCategoryList.CMessageHttpCategoryUnit)
    MergeFrom(*source);
  }
}

void CMessageHttpCategoryList_CMessageHttpCategoryUnit::MergeFrom(const CMessageHttpCategoryList_CMessageHttpCategoryUnit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageHttpCategoryList.CMessageHttpCategoryUnit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.companyid() != 0) {
    set_companyid(from.companyid());
  }
  if (from.parentid() != 0) {
    set_parentid(from.parentid());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
}

void CMessageHttpCategoryList_CMessageHttpCategoryUnit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageHttpCategoryList.CMessageHttpCategoryUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageHttpCategoryList_CMessageHttpCategoryUnit::CopyFrom(const CMessageHttpCategoryList_CMessageHttpCategoryUnit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageHttpCategoryList.CMessageHttpCategoryUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageHttpCategoryList_CMessageHttpCategoryUnit::IsInitialized() const {
  return true;
}

void CMessageHttpCategoryList_CMessageHttpCategoryUnit::Swap(CMessageHttpCategoryList_CMessageHttpCategoryUnit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageHttpCategoryList_CMessageHttpCategoryUnit::InternalSwap(CMessageHttpCategoryList_CMessageHttpCategoryUnit* other) {
  using std::swap;
  title_.Swap(&other->title_);
  swap(id_, other->id_);
  swap(companyid_, other->companyid_);
  swap(parentid_, other->parentid_);
  swap(level_, other->level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageHttpCategoryList_CMessageHttpCategoryUnit::GetMetadata() const {
  protobuf_message_5fhttp_5fcategory_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fhttp_5fcategory_5flist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMessageHttpCategoryList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageHttpCategoryList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageHttpCategoryList::CMessageHttpCategoryList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_5fhttp_5fcategory_5flist_2eproto::InitDefaultsCMessageHttpCategoryList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:d5.CMessageHttpCategoryList)
}
CMessageHttpCategoryList::CMessageHttpCategoryList(const CMessageHttpCategoryList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      list_(from.list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:d5.CMessageHttpCategoryList)
}

void CMessageHttpCategoryList::SharedCtor() {
  _cached_size_ = 0;
}

CMessageHttpCategoryList::~CMessageHttpCategoryList() {
  // @@protoc_insertion_point(destructor:d5.CMessageHttpCategoryList)
  SharedDtor();
}

void CMessageHttpCategoryList::SharedDtor() {
}

void CMessageHttpCategoryList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageHttpCategoryList::descriptor() {
  ::protobuf_message_5fhttp_5fcategory_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fhttp_5fcategory_5flist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMessageHttpCategoryList& CMessageHttpCategoryList::default_instance() {
  ::protobuf_message_5fhttp_5fcategory_5flist_2eproto::InitDefaultsCMessageHttpCategoryList();
  return *internal_default_instance();
}


void CMessageHttpCategoryList::Clear() {
// @@protoc_insertion_point(message_clear_start:d5.CMessageHttpCategoryList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _internal_metadata_.Clear();
}

bool CMessageHttpCategoryList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:d5.CMessageHttpCategoryList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .d5.CMessageHttpCategoryList.CMessageHttpCategoryUnit list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:d5.CMessageHttpCategoryList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:d5.CMessageHttpCategoryList)
  return false;
#undef DO_
}

void CMessageHttpCategoryList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:d5.CMessageHttpCategoryList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .d5.CMessageHttpCategoryList.CMessageHttpCategoryUnit list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:d5.CMessageHttpCategoryList)
}

::google::protobuf::uint8* CMessageHttpCategoryList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:d5.CMessageHttpCategoryList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .d5.CMessageHttpCategoryList.CMessageHttpCategoryUnit list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:d5.CMessageHttpCategoryList)
  return target;
}

size_t CMessageHttpCategoryList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:d5.CMessageHttpCategoryList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .d5.CMessageHttpCategoryList.CMessageHttpCategoryUnit list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageHttpCategoryList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:d5.CMessageHttpCategoryList)
  GOOGLE_DCHECK_NE(&from, this);
  const CMessageHttpCategoryList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageHttpCategoryList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:d5.CMessageHttpCategoryList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:d5.CMessageHttpCategoryList)
    MergeFrom(*source);
  }
}

void CMessageHttpCategoryList::MergeFrom(const CMessageHttpCategoryList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:d5.CMessageHttpCategoryList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void CMessageHttpCategoryList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:d5.CMessageHttpCategoryList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageHttpCategoryList::CopyFrom(const CMessageHttpCategoryList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:d5.CMessageHttpCategoryList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMessageHttpCategoryList::IsInitialized() const {
  return true;
}

void CMessageHttpCategoryList::Swap(CMessageHttpCategoryList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageHttpCategoryList::InternalSwap(CMessageHttpCategoryList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageHttpCategoryList::GetMetadata() const {
  protobuf_message_5fhttp_5fcategory_5flist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fhttp_5fcategory_5flist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace d5
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageHttpCategoryList_CMessageHttpCategoryUnit* Arena::Create< ::d5::CMessageHttpCategoryList_CMessageHttpCategoryUnit >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageHttpCategoryList_CMessageHttpCategoryUnit >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::d5::CMessageHttpCategoryList* Arena::Create< ::d5::CMessageHttpCategoryList >(Arena* arena) {
  return Arena::CreateInternal< ::d5::CMessageHttpCategoryList >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
