// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_asset_material.proto

#ifndef PROTOBUF_message_5fasset_5fmaterial_2eproto_INCLUDED
#define PROTOBUF_message_5fasset_5fmaterial_2eproto_INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "db2.pb.h"
#include "message_common.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_message_5fasset_5fmaterial_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[10];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsCMessageAssetMaterialRequestImpl();
void InitDefaultsCMessageAssetMaterialRequest();
void InitDefaultsCMessageAssetMaterialResponseImpl();
void InitDefaultsCMessageAssetMaterialResponse();
void InitDefaultsCMessageAddAssetMaterialRequestImpl();
void InitDefaultsCMessageAddAssetMaterialRequest();
void InitDefaultsCMessageAddAssetMaterialResponseImpl();
void InitDefaultsCMessageAddAssetMaterialResponse();
void InitDefaultsCMessageAddAssetMaterialProcessResponseImpl();
void InitDefaultsCMessageAddAssetMaterialProcessResponse();
void InitDefaultsCMessageDelAssetMaterialRequestImpl();
void InitDefaultsCMessageDelAssetMaterialRequest();
void InitDefaultsCMessageDelAssetMaterialResponseImpl();
void InitDefaultsCMessageDelAssetMaterialResponse();
void InitDefaultsCMessageAssetMaterialDownloadRequestImpl();
void InitDefaultsCMessageAssetMaterialDownloadRequest();
void InitDefaultsCMessageAssetMaterialDownloadResponseImpl();
void InitDefaultsCMessageAssetMaterialDownloadResponse();
void InitDefaultsCMessageAssetMaterialDownloadProcessResponseImpl();
void InitDefaultsCMessageAssetMaterialDownloadProcessResponse();
inline void InitDefaults() {
  InitDefaultsCMessageAssetMaterialRequest();
  InitDefaultsCMessageAssetMaterialResponse();
  InitDefaultsCMessageAddAssetMaterialRequest();
  InitDefaultsCMessageAddAssetMaterialResponse();
  InitDefaultsCMessageAddAssetMaterialProcessResponse();
  InitDefaultsCMessageDelAssetMaterialRequest();
  InitDefaultsCMessageDelAssetMaterialResponse();
  InitDefaultsCMessageAssetMaterialDownloadRequest();
  InitDefaultsCMessageAssetMaterialDownloadResponse();
  InitDefaultsCMessageAssetMaterialDownloadProcessResponse();
}
}  // namespace protobuf_message_5fasset_5fmaterial_2eproto
namespace d5 {
namespace db2 {
class CMessageAddAssetMaterialProcessResponse;
class CMessageAddAssetMaterialProcessResponseDefaultTypeInternal;
extern CMessageAddAssetMaterialProcessResponseDefaultTypeInternal _CMessageAddAssetMaterialProcessResponse_default_instance_;
class CMessageAddAssetMaterialRequest;
class CMessageAddAssetMaterialRequestDefaultTypeInternal;
extern CMessageAddAssetMaterialRequestDefaultTypeInternal _CMessageAddAssetMaterialRequest_default_instance_;
class CMessageAddAssetMaterialResponse;
class CMessageAddAssetMaterialResponseDefaultTypeInternal;
extern CMessageAddAssetMaterialResponseDefaultTypeInternal _CMessageAddAssetMaterialResponse_default_instance_;
class CMessageAssetMaterialDownloadProcessResponse;
class CMessageAssetMaterialDownloadProcessResponseDefaultTypeInternal;
extern CMessageAssetMaterialDownloadProcessResponseDefaultTypeInternal _CMessageAssetMaterialDownloadProcessResponse_default_instance_;
class CMessageAssetMaterialDownloadRequest;
class CMessageAssetMaterialDownloadRequestDefaultTypeInternal;
extern CMessageAssetMaterialDownloadRequestDefaultTypeInternal _CMessageAssetMaterialDownloadRequest_default_instance_;
class CMessageAssetMaterialDownloadResponse;
class CMessageAssetMaterialDownloadResponseDefaultTypeInternal;
extern CMessageAssetMaterialDownloadResponseDefaultTypeInternal _CMessageAssetMaterialDownloadResponse_default_instance_;
class CMessageAssetMaterialRequest;
class CMessageAssetMaterialRequestDefaultTypeInternal;
extern CMessageAssetMaterialRequestDefaultTypeInternal _CMessageAssetMaterialRequest_default_instance_;
class CMessageAssetMaterialResponse;
class CMessageAssetMaterialResponseDefaultTypeInternal;
extern CMessageAssetMaterialResponseDefaultTypeInternal _CMessageAssetMaterialResponse_default_instance_;
class CMessageDelAssetMaterialRequest;
class CMessageDelAssetMaterialRequestDefaultTypeInternal;
extern CMessageDelAssetMaterialRequestDefaultTypeInternal _CMessageDelAssetMaterialRequest_default_instance_;
class CMessageDelAssetMaterialResponse;
class CMessageDelAssetMaterialResponseDefaultTypeInternal;
extern CMessageDelAssetMaterialResponseDefaultTypeInternal _CMessageDelAssetMaterialResponse_default_instance_;
}  // namespace db2
}  // namespace d5
namespace google {
namespace protobuf {
template<> ::d5::db2::CMessageAddAssetMaterialProcessResponse* Arena::Create< ::d5::db2::CMessageAddAssetMaterialProcessResponse>(Arena*);
template<> ::d5::db2::CMessageAddAssetMaterialRequest* Arena::Create< ::d5::db2::CMessageAddAssetMaterialRequest>(Arena*);
template<> ::d5::db2::CMessageAddAssetMaterialResponse* Arena::Create< ::d5::db2::CMessageAddAssetMaterialResponse>(Arena*);
template<> ::d5::db2::CMessageAssetMaterialDownloadProcessResponse* Arena::Create< ::d5::db2::CMessageAssetMaterialDownloadProcessResponse>(Arena*);
template<> ::d5::db2::CMessageAssetMaterialDownloadRequest* Arena::Create< ::d5::db2::CMessageAssetMaterialDownloadRequest>(Arena*);
template<> ::d5::db2::CMessageAssetMaterialDownloadResponse* Arena::Create< ::d5::db2::CMessageAssetMaterialDownloadResponse>(Arena*);
template<> ::d5::db2::CMessageAssetMaterialRequest* Arena::Create< ::d5::db2::CMessageAssetMaterialRequest>(Arena*);
template<> ::d5::db2::CMessageAssetMaterialResponse* Arena::Create< ::d5::db2::CMessageAssetMaterialResponse>(Arena*);
template<> ::d5::db2::CMessageDelAssetMaterialRequest* Arena::Create< ::d5::db2::CMessageDelAssetMaterialRequest>(Arena*);
template<> ::d5::db2::CMessageDelAssetMaterialResponse* Arena::Create< ::d5::db2::CMessageDelAssetMaterialResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace d5 {
namespace db2 {

enum CMessageAssetMaterialRequest_Order {
  CMessageAssetMaterialRequest_Order_NORMAL = 0,
  CMessageAssetMaterialRequest_Order_ASC = 1,
  CMessageAssetMaterialRequest_Order_DESC = 2,
  CMessageAssetMaterialRequest_Order_CMessageAssetMaterialRequest_Order_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CMessageAssetMaterialRequest_Order_CMessageAssetMaterialRequest_Order_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CMessageAssetMaterialRequest_Order_IsValid(int value);
const CMessageAssetMaterialRequest_Order CMessageAssetMaterialRequest_Order_Order_MIN = CMessageAssetMaterialRequest_Order_NORMAL;
const CMessageAssetMaterialRequest_Order CMessageAssetMaterialRequest_Order_Order_MAX = CMessageAssetMaterialRequest_Order_DESC;
const int CMessageAssetMaterialRequest_Order_Order_ARRAYSIZE = CMessageAssetMaterialRequest_Order_Order_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMessageAssetMaterialRequest_Order_descriptor();
inline const ::std::string& CMessageAssetMaterialRequest_Order_Name(CMessageAssetMaterialRequest_Order value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMessageAssetMaterialRequest_Order_descriptor(), value);
}
inline bool CMessageAssetMaterialRequest_Order_Parse(
    const ::std::string& name, CMessageAssetMaterialRequest_Order* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMessageAssetMaterialRequest_Order>(
    CMessageAssetMaterialRequest_Order_descriptor(), name, value);
}
// ===================================================================

class CMessageAssetMaterialRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.db2.CMessageAssetMaterialRequest) */ {
 public:
  CMessageAssetMaterialRequest();
  virtual ~CMessageAssetMaterialRequest();

  CMessageAssetMaterialRequest(const CMessageAssetMaterialRequest& from);

  inline CMessageAssetMaterialRequest& operator=(const CMessageAssetMaterialRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageAssetMaterialRequest(CMessageAssetMaterialRequest&& from) noexcept
    : CMessageAssetMaterialRequest() {
    *this = ::std::move(from);
  }

  inline CMessageAssetMaterialRequest& operator=(CMessageAssetMaterialRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAssetMaterialRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageAssetMaterialRequest* internal_default_instance() {
    return reinterpret_cast<const CMessageAssetMaterialRequest*>(
               &_CMessageAssetMaterialRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CMessageAssetMaterialRequest* other);
  friend void swap(CMessageAssetMaterialRequest& a, CMessageAssetMaterialRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageAssetMaterialRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageAssetMaterialRequest>(NULL);
  }

  CMessageAssetMaterialRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageAssetMaterialRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageAssetMaterialRequest& from);
  void MergeFrom(const CMessageAssetMaterialRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageAssetMaterialRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMessageAssetMaterialRequest_Order Order;
  static const Order NORMAL =
    CMessageAssetMaterialRequest_Order_NORMAL;
  static const Order ASC =
    CMessageAssetMaterialRequest_Order_ASC;
  static const Order DESC =
    CMessageAssetMaterialRequest_Order_DESC;
  static inline bool Order_IsValid(int value) {
    return CMessageAssetMaterialRequest_Order_IsValid(value);
  }
  static const Order Order_MIN =
    CMessageAssetMaterialRequest_Order_Order_MIN;
  static const Order Order_MAX =
    CMessageAssetMaterialRequest_Order_Order_MAX;
  static const int Order_ARRAYSIZE =
    CMessageAssetMaterialRequest_Order_Order_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Order_descriptor() {
    return CMessageAssetMaterialRequest_Order_descriptor();
  }
  static inline const ::std::string& Order_Name(Order value) {
    return CMessageAssetMaterialRequest_Order_Name(value);
  }
  static inline bool Order_Parse(const ::std::string& name,
      Order* value) {
    return CMessageAssetMaterialRequest_Order_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // string id = 3;
  void clear_id();
  static const int kIdFieldNumber = 3;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string uePath = 15;
  void clear_uepath();
  static const int kUePathFieldNumber = 15;
  const ::std::string& uepath() const;
  void set_uepath(const ::std::string& value);
  #if LANG_CXX11
  void set_uepath(::std::string&& value);
  #endif
  void set_uepath(const char* value);
  void set_uepath(const char* value, size_t size);
  ::std::string* mutable_uepath();
  ::std::string* release_uepath();
  void set_allocated_uepath(::std::string* uepath);

  // string title = 19;
  void clear_title();
  static const int kTitleFieldNumber = 19;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 companyId = 5;
  void clear_companyid();
  static const int kCompanyIdFieldNumber = 5;
  ::google::protobuf::int32 companyid() const;
  void set_companyid(::google::protobuf::int32 value);

  // int32 categoryId = 7;
  void clear_categoryid();
  static const int kCategoryIdFieldNumber = 7;
  ::google::protobuf::int32 categoryid() const;
  void set_categoryid(::google::protobuf::int32 value);

  // bool idValid = 4;
  void clear_idvalid();
  static const int kIdValidFieldNumber = 4;
  bool idvalid() const;
  void set_idvalid(bool value);

  // bool companyIdValid = 6;
  void clear_companyidvalid();
  static const int kCompanyIdValidFieldNumber = 6;
  bool companyidvalid() const;
  void set_companyidvalid(bool value);

  // bool categoryIdValid = 8;
  void clear_categoryidvalid();
  static const int kCategoryIdValidFieldNumber = 8;
  bool categoryidvalid() const;
  void set_categoryidvalid(bool value);

  // bool materialTypeValid = 10;
  void clear_materialtypevalid();
  static const int kMaterialTypeValidFieldNumber = 10;
  bool materialtypevalid() const;
  void set_materialtypevalid(bool value);

  // int32 materialType = 9;
  void clear_materialtype();
  static const int kMaterialTypeFieldNumber = 9;
  ::google::protobuf::int32 materialtype() const;
  void set_materialtype(::google::protobuf::int32 value);

  // .d5.db2.CMessageAssetMaterialRequest.Order updateTime = 12;
  void clear_updatetime();
  static const int kUpdateTimeFieldNumber = 12;
  ::d5::db2::CMessageAssetMaterialRequest_Order updatetime() const;
  void set_updatetime(::d5::db2::CMessageAssetMaterialRequest_Order value);

  // int32 pageNum = 13;
  void clear_pagenum();
  static const int kPageNumFieldNumber = 13;
  ::google::protobuf::int32 pagenum() const;
  void set_pagenum(::google::protobuf::int32 value);

  // int32 pageSize = 14;
  void clear_pagesize();
  static const int kPageSizeFieldNumber = 14;
  ::google::protobuf::int32 pagesize() const;
  void set_pagesize(::google::protobuf::int32 value);

  // bool isPrivate = 11;
  void clear_isprivate();
  static const int kIsPrivateFieldNumber = 11;
  bool isprivate() const;
  void set_isprivate(bool value);

  // bool uePathValid = 16;
  void clear_uepathvalid();
  static const int kUePathValidFieldNumber = 16;
  bool uepathvalid() const;
  void set_uepathvalid(bool value);

  // bool userIdValid = 18;
  void clear_useridvalid();
  static const int kUserIdValidFieldNumber = 18;
  bool useridvalid() const;
  void set_useridvalid(bool value);

  // bool titleValid = 20;
  void clear_titlevalid();
  static const int kTitleValidFieldNumber = 20;
  bool titlevalid() const;
  void set_titlevalid(bool value);

  // int32 userId = 17;
  void clear_userid();
  static const int kUserIdFieldNumber = 17;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.db2.CMessageAssetMaterialRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr uepath_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 companyid_;
  ::google::protobuf::int32 categoryid_;
  bool idvalid_;
  bool companyidvalid_;
  bool categoryidvalid_;
  bool materialtypevalid_;
  ::google::protobuf::int32 materialtype_;
  int updatetime_;
  ::google::protobuf::int32 pagenum_;
  ::google::protobuf::int32 pagesize_;
  bool isprivate_;
  bool uepathvalid_;
  bool useridvalid_;
  bool titlevalid_;
  ::google::protobuf::int32 userid_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fasset_5fmaterial_2eproto::TableStruct;
  friend void ::protobuf_message_5fasset_5fmaterial_2eproto::InitDefaultsCMessageAssetMaterialRequestImpl();
};
// -------------------------------------------------------------------

class CMessageAssetMaterialResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.db2.CMessageAssetMaterialResponse) */ {
 public:
  CMessageAssetMaterialResponse();
  virtual ~CMessageAssetMaterialResponse();

  CMessageAssetMaterialResponse(const CMessageAssetMaterialResponse& from);

  inline CMessageAssetMaterialResponse& operator=(const CMessageAssetMaterialResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageAssetMaterialResponse(CMessageAssetMaterialResponse&& from) noexcept
    : CMessageAssetMaterialResponse() {
    *this = ::std::move(from);
  }

  inline CMessageAssetMaterialResponse& operator=(CMessageAssetMaterialResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAssetMaterialResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageAssetMaterialResponse* internal_default_instance() {
    return reinterpret_cast<const CMessageAssetMaterialResponse*>(
               &_CMessageAssetMaterialResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CMessageAssetMaterialResponse* other);
  friend void swap(CMessageAssetMaterialResponse& a, CMessageAssetMaterialResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageAssetMaterialResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageAssetMaterialResponse>(NULL);
  }

  CMessageAssetMaterialResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageAssetMaterialResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageAssetMaterialResponse& from);
  void MergeFrom(const CMessageAssetMaterialResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageAssetMaterialResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .d5.db2.asset_material list = 4;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 4;
  ::d5::db2::asset_material* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::d5::db2::asset_material >*
      mutable_list();
  const ::d5::db2::asset_material& list(int index) const;
  ::d5::db2::asset_material* add_list();
  const ::google::protobuf::RepeatedPtrField< ::d5::db2::asset_material >&
      list() const;

  // repeated .d5.CMessageDependentPakList fileList = 5;
  int filelist_size() const;
  void clear_filelist();
  static const int kFileListFieldNumber = 5;
  ::d5::CMessageDependentPakList* mutable_filelist(int index);
  ::google::protobuf::RepeatedPtrField< ::d5::CMessageDependentPakList >*
      mutable_filelist();
  const ::d5::CMessageDependentPakList& filelist(int index) const;
  ::d5::CMessageDependentPakList* add_filelist();
  const ::google::protobuf::RepeatedPtrField< ::d5::CMessageDependentPakList >&
      filelist() const;

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 state = 3;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // int32 pageNum = 6;
  void clear_pagenum();
  static const int kPageNumFieldNumber = 6;
  ::google::protobuf::int32 pagenum() const;
  void set_pagenum(::google::protobuf::int32 value);

  // int32 pageTotal = 7;
  void clear_pagetotal();
  static const int kPageTotalFieldNumber = 7;
  ::google::protobuf::int32 pagetotal() const;
  void set_pagetotal(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.db2.CMessageAssetMaterialResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::d5::db2::asset_material > list_;
  ::google::protobuf::RepeatedPtrField< ::d5::CMessageDependentPakList > filelist_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 pagenum_;
  ::google::protobuf::int32 pagetotal_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fasset_5fmaterial_2eproto::TableStruct;
  friend void ::protobuf_message_5fasset_5fmaterial_2eproto::InitDefaultsCMessageAssetMaterialResponseImpl();
};
// -------------------------------------------------------------------

class CMessageAddAssetMaterialRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.db2.CMessageAddAssetMaterialRequest) */ {
 public:
  CMessageAddAssetMaterialRequest();
  virtual ~CMessageAddAssetMaterialRequest();

  CMessageAddAssetMaterialRequest(const CMessageAddAssetMaterialRequest& from);

  inline CMessageAddAssetMaterialRequest& operator=(const CMessageAddAssetMaterialRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageAddAssetMaterialRequest(CMessageAddAssetMaterialRequest&& from) noexcept
    : CMessageAddAssetMaterialRequest() {
    *this = ::std::move(from);
  }

  inline CMessageAddAssetMaterialRequest& operator=(CMessageAddAssetMaterialRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAddAssetMaterialRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageAddAssetMaterialRequest* internal_default_instance() {
    return reinterpret_cast<const CMessageAddAssetMaterialRequest*>(
               &_CMessageAddAssetMaterialRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CMessageAddAssetMaterialRequest* other);
  friend void swap(CMessageAddAssetMaterialRequest& a, CMessageAddAssetMaterialRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageAddAssetMaterialRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageAddAssetMaterialRequest>(NULL);
  }

  CMessageAddAssetMaterialRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageAddAssetMaterialRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageAddAssetMaterialRequest& from);
  void MergeFrom(const CMessageAddAssetMaterialRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageAddAssetMaterialRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // .d5.db2.asset_material data = 3;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::d5::db2::asset_material& data() const;
  ::d5::db2::asset_material* release_data();
  ::d5::db2::asset_material* mutable_data();
  void set_allocated_data(::d5::db2::asset_material* data);

  // .d5.CMessageDependentPakList fileList = 4;
  bool has_filelist() const;
  void clear_filelist();
  static const int kFileListFieldNumber = 4;
  const ::d5::CMessageDependentPakList& filelist() const;
  ::d5::CMessageDependentPakList* release_filelist();
  ::d5::CMessageDependentPakList* mutable_filelist();
  void set_allocated_filelist(::d5::CMessageDependentPakList* filelist);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.db2.CMessageAddAssetMaterialRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::d5::db2::asset_material* data_;
  ::d5::CMessageDependentPakList* filelist_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fasset_5fmaterial_2eproto::TableStruct;
  friend void ::protobuf_message_5fasset_5fmaterial_2eproto::InitDefaultsCMessageAddAssetMaterialRequestImpl();
};
// -------------------------------------------------------------------

class CMessageAddAssetMaterialResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.db2.CMessageAddAssetMaterialResponse) */ {
 public:
  CMessageAddAssetMaterialResponse();
  virtual ~CMessageAddAssetMaterialResponse();

  CMessageAddAssetMaterialResponse(const CMessageAddAssetMaterialResponse& from);

  inline CMessageAddAssetMaterialResponse& operator=(const CMessageAddAssetMaterialResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageAddAssetMaterialResponse(CMessageAddAssetMaterialResponse&& from) noexcept
    : CMessageAddAssetMaterialResponse() {
    *this = ::std::move(from);
  }

  inline CMessageAddAssetMaterialResponse& operator=(CMessageAddAssetMaterialResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAddAssetMaterialResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageAddAssetMaterialResponse* internal_default_instance() {
    return reinterpret_cast<const CMessageAddAssetMaterialResponse*>(
               &_CMessageAddAssetMaterialResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CMessageAddAssetMaterialResponse* other);
  friend void swap(CMessageAddAssetMaterialResponse& a, CMessageAddAssetMaterialResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageAddAssetMaterialResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageAddAssetMaterialResponse>(NULL);
  }

  CMessageAddAssetMaterialResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageAddAssetMaterialResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageAddAssetMaterialResponse& from);
  void MergeFrom(const CMessageAddAssetMaterialResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageAddAssetMaterialResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 state = 3;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.db2.CMessageAddAssetMaterialResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 state_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fasset_5fmaterial_2eproto::TableStruct;
  friend void ::protobuf_message_5fasset_5fmaterial_2eproto::InitDefaultsCMessageAddAssetMaterialResponseImpl();
};
// -------------------------------------------------------------------

class CMessageAddAssetMaterialProcessResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.db2.CMessageAddAssetMaterialProcessResponse) */ {
 public:
  CMessageAddAssetMaterialProcessResponse();
  virtual ~CMessageAddAssetMaterialProcessResponse();

  CMessageAddAssetMaterialProcessResponse(const CMessageAddAssetMaterialProcessResponse& from);

  inline CMessageAddAssetMaterialProcessResponse& operator=(const CMessageAddAssetMaterialProcessResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageAddAssetMaterialProcessResponse(CMessageAddAssetMaterialProcessResponse&& from) noexcept
    : CMessageAddAssetMaterialProcessResponse() {
    *this = ::std::move(from);
  }

  inline CMessageAddAssetMaterialProcessResponse& operator=(CMessageAddAssetMaterialProcessResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAddAssetMaterialProcessResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageAddAssetMaterialProcessResponse* internal_default_instance() {
    return reinterpret_cast<const CMessageAddAssetMaterialProcessResponse*>(
               &_CMessageAddAssetMaterialProcessResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(CMessageAddAssetMaterialProcessResponse* other);
  friend void swap(CMessageAddAssetMaterialProcessResponse& a, CMessageAddAssetMaterialProcessResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageAddAssetMaterialProcessResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageAddAssetMaterialProcessResponse>(NULL);
  }

  CMessageAddAssetMaterialProcessResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageAddAssetMaterialProcessResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageAddAssetMaterialProcessResponse& from);
  void MergeFrom(const CMessageAddAssetMaterialProcessResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageAddAssetMaterialProcessResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 percent = 3;
  void clear_percent();
  static const int kPercentFieldNumber = 3;
  ::google::protobuf::int32 percent() const;
  void set_percent(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.db2.CMessageAddAssetMaterialProcessResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 percent_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fasset_5fmaterial_2eproto::TableStruct;
  friend void ::protobuf_message_5fasset_5fmaterial_2eproto::InitDefaultsCMessageAddAssetMaterialProcessResponseImpl();
};
// -------------------------------------------------------------------

class CMessageDelAssetMaterialRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.db2.CMessageDelAssetMaterialRequest) */ {
 public:
  CMessageDelAssetMaterialRequest();
  virtual ~CMessageDelAssetMaterialRequest();

  CMessageDelAssetMaterialRequest(const CMessageDelAssetMaterialRequest& from);

  inline CMessageDelAssetMaterialRequest& operator=(const CMessageDelAssetMaterialRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageDelAssetMaterialRequest(CMessageDelAssetMaterialRequest&& from) noexcept
    : CMessageDelAssetMaterialRequest() {
    *this = ::std::move(from);
  }

  inline CMessageDelAssetMaterialRequest& operator=(CMessageDelAssetMaterialRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageDelAssetMaterialRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageDelAssetMaterialRequest* internal_default_instance() {
    return reinterpret_cast<const CMessageDelAssetMaterialRequest*>(
               &_CMessageDelAssetMaterialRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(CMessageDelAssetMaterialRequest* other);
  friend void swap(CMessageDelAssetMaterialRequest& a, CMessageDelAssetMaterialRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageDelAssetMaterialRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageDelAssetMaterialRequest>(NULL);
  }

  CMessageDelAssetMaterialRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageDelAssetMaterialRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageDelAssetMaterialRequest& from);
  void MergeFrom(const CMessageDelAssetMaterialRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageDelAssetMaterialRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // string id = 3;
  void clear_id();
  static const int kIdFieldNumber = 3;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.db2.CMessageDelAssetMaterialRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fasset_5fmaterial_2eproto::TableStruct;
  friend void ::protobuf_message_5fasset_5fmaterial_2eproto::InitDefaultsCMessageDelAssetMaterialRequestImpl();
};
// -------------------------------------------------------------------

class CMessageDelAssetMaterialResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.db2.CMessageDelAssetMaterialResponse) */ {
 public:
  CMessageDelAssetMaterialResponse();
  virtual ~CMessageDelAssetMaterialResponse();

  CMessageDelAssetMaterialResponse(const CMessageDelAssetMaterialResponse& from);

  inline CMessageDelAssetMaterialResponse& operator=(const CMessageDelAssetMaterialResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageDelAssetMaterialResponse(CMessageDelAssetMaterialResponse&& from) noexcept
    : CMessageDelAssetMaterialResponse() {
    *this = ::std::move(from);
  }

  inline CMessageDelAssetMaterialResponse& operator=(CMessageDelAssetMaterialResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageDelAssetMaterialResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageDelAssetMaterialResponse* internal_default_instance() {
    return reinterpret_cast<const CMessageDelAssetMaterialResponse*>(
               &_CMessageDelAssetMaterialResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(CMessageDelAssetMaterialResponse* other);
  friend void swap(CMessageDelAssetMaterialResponse& a, CMessageDelAssetMaterialResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageDelAssetMaterialResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageDelAssetMaterialResponse>(NULL);
  }

  CMessageDelAssetMaterialResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageDelAssetMaterialResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageDelAssetMaterialResponse& from);
  void MergeFrom(const CMessageDelAssetMaterialResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageDelAssetMaterialResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 state = 3;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.db2.CMessageDelAssetMaterialResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 state_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fasset_5fmaterial_2eproto::TableStruct;
  friend void ::protobuf_message_5fasset_5fmaterial_2eproto::InitDefaultsCMessageDelAssetMaterialResponseImpl();
};
// -------------------------------------------------------------------

class CMessageAssetMaterialDownloadRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.db2.CMessageAssetMaterialDownloadRequest) */ {
 public:
  CMessageAssetMaterialDownloadRequest();
  virtual ~CMessageAssetMaterialDownloadRequest();

  CMessageAssetMaterialDownloadRequest(const CMessageAssetMaterialDownloadRequest& from);

  inline CMessageAssetMaterialDownloadRequest& operator=(const CMessageAssetMaterialDownloadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageAssetMaterialDownloadRequest(CMessageAssetMaterialDownloadRequest&& from) noexcept
    : CMessageAssetMaterialDownloadRequest() {
    *this = ::std::move(from);
  }

  inline CMessageAssetMaterialDownloadRequest& operator=(CMessageAssetMaterialDownloadRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAssetMaterialDownloadRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageAssetMaterialDownloadRequest* internal_default_instance() {
    return reinterpret_cast<const CMessageAssetMaterialDownloadRequest*>(
               &_CMessageAssetMaterialDownloadRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(CMessageAssetMaterialDownloadRequest* other);
  friend void swap(CMessageAssetMaterialDownloadRequest& a, CMessageAssetMaterialDownloadRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageAssetMaterialDownloadRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageAssetMaterialDownloadRequest>(NULL);
  }

  CMessageAssetMaterialDownloadRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageAssetMaterialDownloadRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageAssetMaterialDownloadRequest& from);
  void MergeFrom(const CMessageAssetMaterialDownloadRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageAssetMaterialDownloadRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // string id = 3;
  void clear_id();
  static const int kIdFieldNumber = 3;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.db2.CMessageAssetMaterialDownloadRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fasset_5fmaterial_2eproto::TableStruct;
  friend void ::protobuf_message_5fasset_5fmaterial_2eproto::InitDefaultsCMessageAssetMaterialDownloadRequestImpl();
};
// -------------------------------------------------------------------

class CMessageAssetMaterialDownloadResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.db2.CMessageAssetMaterialDownloadResponse) */ {
 public:
  CMessageAssetMaterialDownloadResponse();
  virtual ~CMessageAssetMaterialDownloadResponse();

  CMessageAssetMaterialDownloadResponse(const CMessageAssetMaterialDownloadResponse& from);

  inline CMessageAssetMaterialDownloadResponse& operator=(const CMessageAssetMaterialDownloadResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageAssetMaterialDownloadResponse(CMessageAssetMaterialDownloadResponse&& from) noexcept
    : CMessageAssetMaterialDownloadResponse() {
    *this = ::std::move(from);
  }

  inline CMessageAssetMaterialDownloadResponse& operator=(CMessageAssetMaterialDownloadResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAssetMaterialDownloadResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageAssetMaterialDownloadResponse* internal_default_instance() {
    return reinterpret_cast<const CMessageAssetMaterialDownloadResponse*>(
               &_CMessageAssetMaterialDownloadResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(CMessageAssetMaterialDownloadResponse* other);
  friend void swap(CMessageAssetMaterialDownloadResponse& a, CMessageAssetMaterialDownloadResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageAssetMaterialDownloadResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageAssetMaterialDownloadResponse>(NULL);
  }

  CMessageAssetMaterialDownloadResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageAssetMaterialDownloadResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageAssetMaterialDownloadResponse& from);
  void MergeFrom(const CMessageAssetMaterialDownloadResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageAssetMaterialDownloadResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // .d5.CMessageDependentPakList fileList = 4;
  bool has_filelist() const;
  void clear_filelist();
  static const int kFileListFieldNumber = 4;
  const ::d5::CMessageDependentPakList& filelist() const;
  ::d5::CMessageDependentPakList* release_filelist();
  ::d5::CMessageDependentPakList* mutable_filelist();
  void set_allocated_filelist(::d5::CMessageDependentPakList* filelist);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 state = 3;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.db2.CMessageAssetMaterialDownloadResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::d5::CMessageDependentPakList* filelist_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 state_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fasset_5fmaterial_2eproto::TableStruct;
  friend void ::protobuf_message_5fasset_5fmaterial_2eproto::InitDefaultsCMessageAssetMaterialDownloadResponseImpl();
};
// -------------------------------------------------------------------

class CMessageAssetMaterialDownloadProcessResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.db2.CMessageAssetMaterialDownloadProcessResponse) */ {
 public:
  CMessageAssetMaterialDownloadProcessResponse();
  virtual ~CMessageAssetMaterialDownloadProcessResponse();

  CMessageAssetMaterialDownloadProcessResponse(const CMessageAssetMaterialDownloadProcessResponse& from);

  inline CMessageAssetMaterialDownloadProcessResponse& operator=(const CMessageAssetMaterialDownloadProcessResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageAssetMaterialDownloadProcessResponse(CMessageAssetMaterialDownloadProcessResponse&& from) noexcept
    : CMessageAssetMaterialDownloadProcessResponse() {
    *this = ::std::move(from);
  }

  inline CMessageAssetMaterialDownloadProcessResponse& operator=(CMessageAssetMaterialDownloadProcessResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAssetMaterialDownloadProcessResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageAssetMaterialDownloadProcessResponse* internal_default_instance() {
    return reinterpret_cast<const CMessageAssetMaterialDownloadProcessResponse*>(
               &_CMessageAssetMaterialDownloadProcessResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(CMessageAssetMaterialDownloadProcessResponse* other);
  friend void swap(CMessageAssetMaterialDownloadProcessResponse& a, CMessageAssetMaterialDownloadProcessResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageAssetMaterialDownloadProcessResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageAssetMaterialDownloadProcessResponse>(NULL);
  }

  CMessageAssetMaterialDownloadProcessResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageAssetMaterialDownloadProcessResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageAssetMaterialDownloadProcessResponse& from);
  void MergeFrom(const CMessageAssetMaterialDownloadProcessResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageAssetMaterialDownloadProcessResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 percent = 3;
  void clear_percent();
  static const int kPercentFieldNumber = 3;
  ::google::protobuf::int32 percent() const;
  void set_percent(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.db2.CMessageAssetMaterialDownloadProcessResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 percent_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fasset_5fmaterial_2eproto::TableStruct;
  friend void ::protobuf_message_5fasset_5fmaterial_2eproto::InitDefaultsCMessageAssetMaterialDownloadProcessResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMessageAssetMaterialRequest

// int32 type = 1;
inline void CMessageAssetMaterialRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageAssetMaterialRequest::type() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialRequest.type)
  return type_;
}
inline void CMessageAssetMaterialRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialRequest.type)
}

// string uuid = 2;
inline void CMessageAssetMaterialRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageAssetMaterialRequest::uuid() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialRequest.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageAssetMaterialRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialRequest.uuid)
}
#if LANG_CXX11
inline void CMessageAssetMaterialRequest::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.db2.CMessageAssetMaterialRequest.uuid)
}
#endif
inline void CMessageAssetMaterialRequest::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.db2.CMessageAssetMaterialRequest.uuid)
}
inline void CMessageAssetMaterialRequest::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.db2.CMessageAssetMaterialRequest.uuid)
}
inline ::std::string* CMessageAssetMaterialRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessageAssetMaterialRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageAssetMaterialRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.db2.CMessageAssetMaterialRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageAssetMaterialRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.db2.CMessageAssetMaterialRequest.uuid)
}

// string id = 3;
inline void CMessageAssetMaterialRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageAssetMaterialRequest::id() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialRequest.id)
  return id_.GetNoArena();
}
inline void CMessageAssetMaterialRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialRequest.id)
}
#if LANG_CXX11
inline void CMessageAssetMaterialRequest::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.db2.CMessageAssetMaterialRequest.id)
}
#endif
inline void CMessageAssetMaterialRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.db2.CMessageAssetMaterialRequest.id)
}
inline void CMessageAssetMaterialRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.db2.CMessageAssetMaterialRequest.id)
}
inline ::std::string* CMessageAssetMaterialRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessageAssetMaterialRequest.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageAssetMaterialRequest::release_id() {
  // @@protoc_insertion_point(field_release:d5.db2.CMessageAssetMaterialRequest.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageAssetMaterialRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:d5.db2.CMessageAssetMaterialRequest.id)
}

// bool idValid = 4;
inline void CMessageAssetMaterialRequest::clear_idvalid() {
  idvalid_ = false;
}
inline bool CMessageAssetMaterialRequest::idvalid() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialRequest.idValid)
  return idvalid_;
}
inline void CMessageAssetMaterialRequest::set_idvalid(bool value) {
  
  idvalid_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialRequest.idValid)
}

// int32 companyId = 5;
inline void CMessageAssetMaterialRequest::clear_companyid() {
  companyid_ = 0;
}
inline ::google::protobuf::int32 CMessageAssetMaterialRequest::companyid() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialRequest.companyId)
  return companyid_;
}
inline void CMessageAssetMaterialRequest::set_companyid(::google::protobuf::int32 value) {
  
  companyid_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialRequest.companyId)
}

// bool companyIdValid = 6;
inline void CMessageAssetMaterialRequest::clear_companyidvalid() {
  companyidvalid_ = false;
}
inline bool CMessageAssetMaterialRequest::companyidvalid() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialRequest.companyIdValid)
  return companyidvalid_;
}
inline void CMessageAssetMaterialRequest::set_companyidvalid(bool value) {
  
  companyidvalid_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialRequest.companyIdValid)
}

// int32 categoryId = 7;
inline void CMessageAssetMaterialRequest::clear_categoryid() {
  categoryid_ = 0;
}
inline ::google::protobuf::int32 CMessageAssetMaterialRequest::categoryid() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialRequest.categoryId)
  return categoryid_;
}
inline void CMessageAssetMaterialRequest::set_categoryid(::google::protobuf::int32 value) {
  
  categoryid_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialRequest.categoryId)
}

// bool categoryIdValid = 8;
inline void CMessageAssetMaterialRequest::clear_categoryidvalid() {
  categoryidvalid_ = false;
}
inline bool CMessageAssetMaterialRequest::categoryidvalid() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialRequest.categoryIdValid)
  return categoryidvalid_;
}
inline void CMessageAssetMaterialRequest::set_categoryidvalid(bool value) {
  
  categoryidvalid_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialRequest.categoryIdValid)
}

// int32 materialType = 9;
inline void CMessageAssetMaterialRequest::clear_materialtype() {
  materialtype_ = 0;
}
inline ::google::protobuf::int32 CMessageAssetMaterialRequest::materialtype() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialRequest.materialType)
  return materialtype_;
}
inline void CMessageAssetMaterialRequest::set_materialtype(::google::protobuf::int32 value) {
  
  materialtype_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialRequest.materialType)
}

// bool materialTypeValid = 10;
inline void CMessageAssetMaterialRequest::clear_materialtypevalid() {
  materialtypevalid_ = false;
}
inline bool CMessageAssetMaterialRequest::materialtypevalid() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialRequest.materialTypeValid)
  return materialtypevalid_;
}
inline void CMessageAssetMaterialRequest::set_materialtypevalid(bool value) {
  
  materialtypevalid_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialRequest.materialTypeValid)
}

// bool isPrivate = 11;
inline void CMessageAssetMaterialRequest::clear_isprivate() {
  isprivate_ = false;
}
inline bool CMessageAssetMaterialRequest::isprivate() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialRequest.isPrivate)
  return isprivate_;
}
inline void CMessageAssetMaterialRequest::set_isprivate(bool value) {
  
  isprivate_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialRequest.isPrivate)
}

// .d5.db2.CMessageAssetMaterialRequest.Order updateTime = 12;
inline void CMessageAssetMaterialRequest::clear_updatetime() {
  updatetime_ = 0;
}
inline ::d5::db2::CMessageAssetMaterialRequest_Order CMessageAssetMaterialRequest::updatetime() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialRequest.updateTime)
  return static_cast< ::d5::db2::CMessageAssetMaterialRequest_Order >(updatetime_);
}
inline void CMessageAssetMaterialRequest::set_updatetime(::d5::db2::CMessageAssetMaterialRequest_Order value) {
  
  updatetime_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialRequest.updateTime)
}

// int32 pageNum = 13;
inline void CMessageAssetMaterialRequest::clear_pagenum() {
  pagenum_ = 0;
}
inline ::google::protobuf::int32 CMessageAssetMaterialRequest::pagenum() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialRequest.pageNum)
  return pagenum_;
}
inline void CMessageAssetMaterialRequest::set_pagenum(::google::protobuf::int32 value) {
  
  pagenum_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialRequest.pageNum)
}

// int32 pageSize = 14;
inline void CMessageAssetMaterialRequest::clear_pagesize() {
  pagesize_ = 0;
}
inline ::google::protobuf::int32 CMessageAssetMaterialRequest::pagesize() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialRequest.pageSize)
  return pagesize_;
}
inline void CMessageAssetMaterialRequest::set_pagesize(::google::protobuf::int32 value) {
  
  pagesize_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialRequest.pageSize)
}

// string uePath = 15;
inline void CMessageAssetMaterialRequest::clear_uepath() {
  uepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageAssetMaterialRequest::uepath() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialRequest.uePath)
  return uepath_.GetNoArena();
}
inline void CMessageAssetMaterialRequest::set_uepath(const ::std::string& value) {
  
  uepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialRequest.uePath)
}
#if LANG_CXX11
inline void CMessageAssetMaterialRequest::set_uepath(::std::string&& value) {
  
  uepath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.db2.CMessageAssetMaterialRequest.uePath)
}
#endif
inline void CMessageAssetMaterialRequest::set_uepath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.db2.CMessageAssetMaterialRequest.uePath)
}
inline void CMessageAssetMaterialRequest::set_uepath(const char* value, size_t size) {
  
  uepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.db2.CMessageAssetMaterialRequest.uePath)
}
inline ::std::string* CMessageAssetMaterialRequest::mutable_uepath() {
  
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessageAssetMaterialRequest.uePath)
  return uepath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageAssetMaterialRequest::release_uepath() {
  // @@protoc_insertion_point(field_release:d5.db2.CMessageAssetMaterialRequest.uePath)
  
  return uepath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageAssetMaterialRequest::set_allocated_uepath(::std::string* uepath) {
  if (uepath != NULL) {
    
  } else {
    
  }
  uepath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uepath);
  // @@protoc_insertion_point(field_set_allocated:d5.db2.CMessageAssetMaterialRequest.uePath)
}

// bool uePathValid = 16;
inline void CMessageAssetMaterialRequest::clear_uepathvalid() {
  uepathvalid_ = false;
}
inline bool CMessageAssetMaterialRequest::uepathvalid() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialRequest.uePathValid)
  return uepathvalid_;
}
inline void CMessageAssetMaterialRequest::set_uepathvalid(bool value) {
  
  uepathvalid_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialRequest.uePathValid)
}

// int32 userId = 17;
inline void CMessageAssetMaterialRequest::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 CMessageAssetMaterialRequest::userid() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialRequest.userId)
  return userid_;
}
inline void CMessageAssetMaterialRequest::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialRequest.userId)
}

// bool userIdValid = 18;
inline void CMessageAssetMaterialRequest::clear_useridvalid() {
  useridvalid_ = false;
}
inline bool CMessageAssetMaterialRequest::useridvalid() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialRequest.userIdValid)
  return useridvalid_;
}
inline void CMessageAssetMaterialRequest::set_useridvalid(bool value) {
  
  useridvalid_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialRequest.userIdValid)
}

// string title = 19;
inline void CMessageAssetMaterialRequest::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageAssetMaterialRequest::title() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialRequest.title)
  return title_.GetNoArena();
}
inline void CMessageAssetMaterialRequest::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialRequest.title)
}
#if LANG_CXX11
inline void CMessageAssetMaterialRequest::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.db2.CMessageAssetMaterialRequest.title)
}
#endif
inline void CMessageAssetMaterialRequest::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.db2.CMessageAssetMaterialRequest.title)
}
inline void CMessageAssetMaterialRequest::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.db2.CMessageAssetMaterialRequest.title)
}
inline ::std::string* CMessageAssetMaterialRequest::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessageAssetMaterialRequest.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageAssetMaterialRequest::release_title() {
  // @@protoc_insertion_point(field_release:d5.db2.CMessageAssetMaterialRequest.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageAssetMaterialRequest::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:d5.db2.CMessageAssetMaterialRequest.title)
}

// bool titleValid = 20;
inline void CMessageAssetMaterialRequest::clear_titlevalid() {
  titlevalid_ = false;
}
inline bool CMessageAssetMaterialRequest::titlevalid() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialRequest.titleValid)
  return titlevalid_;
}
inline void CMessageAssetMaterialRequest::set_titlevalid(bool value) {
  
  titlevalid_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialRequest.titleValid)
}

// -------------------------------------------------------------------

// CMessageAssetMaterialResponse

// int32 type = 1;
inline void CMessageAssetMaterialResponse::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageAssetMaterialResponse::type() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialResponse.type)
  return type_;
}
inline void CMessageAssetMaterialResponse::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialResponse.type)
}

// string uuid = 2;
inline void CMessageAssetMaterialResponse::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageAssetMaterialResponse::uuid() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialResponse.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageAssetMaterialResponse::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialResponse.uuid)
}
#if LANG_CXX11
inline void CMessageAssetMaterialResponse::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.db2.CMessageAssetMaterialResponse.uuid)
}
#endif
inline void CMessageAssetMaterialResponse::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.db2.CMessageAssetMaterialResponse.uuid)
}
inline void CMessageAssetMaterialResponse::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.db2.CMessageAssetMaterialResponse.uuid)
}
inline ::std::string* CMessageAssetMaterialResponse::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessageAssetMaterialResponse.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageAssetMaterialResponse::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.db2.CMessageAssetMaterialResponse.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageAssetMaterialResponse::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.db2.CMessageAssetMaterialResponse.uuid)
}

// int32 state = 3;
inline void CMessageAssetMaterialResponse::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 CMessageAssetMaterialResponse::state() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialResponse.state)
  return state_;
}
inline void CMessageAssetMaterialResponse::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialResponse.state)
}

// repeated .d5.db2.asset_material list = 4;
inline int CMessageAssetMaterialResponse::list_size() const {
  return list_.size();
}
inline ::d5::db2::asset_material* CMessageAssetMaterialResponse::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessageAssetMaterialResponse.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::d5::db2::asset_material >*
CMessageAssetMaterialResponse::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:d5.db2.CMessageAssetMaterialResponse.list)
  return &list_;
}
inline const ::d5::db2::asset_material& CMessageAssetMaterialResponse::list(int index) const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialResponse.list)
  return list_.Get(index);
}
inline ::d5::db2::asset_material* CMessageAssetMaterialResponse::add_list() {
  // @@protoc_insertion_point(field_add:d5.db2.CMessageAssetMaterialResponse.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::d5::db2::asset_material >&
CMessageAssetMaterialResponse::list() const {
  // @@protoc_insertion_point(field_list:d5.db2.CMessageAssetMaterialResponse.list)
  return list_;
}

// repeated .d5.CMessageDependentPakList fileList = 5;
inline int CMessageAssetMaterialResponse::filelist_size() const {
  return filelist_.size();
}
inline ::d5::CMessageDependentPakList* CMessageAssetMaterialResponse::mutable_filelist(int index) {
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessageAssetMaterialResponse.fileList)
  return filelist_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::d5::CMessageDependentPakList >*
CMessageAssetMaterialResponse::mutable_filelist() {
  // @@protoc_insertion_point(field_mutable_list:d5.db2.CMessageAssetMaterialResponse.fileList)
  return &filelist_;
}
inline const ::d5::CMessageDependentPakList& CMessageAssetMaterialResponse::filelist(int index) const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialResponse.fileList)
  return filelist_.Get(index);
}
inline ::d5::CMessageDependentPakList* CMessageAssetMaterialResponse::add_filelist() {
  // @@protoc_insertion_point(field_add:d5.db2.CMessageAssetMaterialResponse.fileList)
  return filelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::d5::CMessageDependentPakList >&
CMessageAssetMaterialResponse::filelist() const {
  // @@protoc_insertion_point(field_list:d5.db2.CMessageAssetMaterialResponse.fileList)
  return filelist_;
}

// int32 pageNum = 6;
inline void CMessageAssetMaterialResponse::clear_pagenum() {
  pagenum_ = 0;
}
inline ::google::protobuf::int32 CMessageAssetMaterialResponse::pagenum() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialResponse.pageNum)
  return pagenum_;
}
inline void CMessageAssetMaterialResponse::set_pagenum(::google::protobuf::int32 value) {
  
  pagenum_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialResponse.pageNum)
}

// int32 pageTotal = 7;
inline void CMessageAssetMaterialResponse::clear_pagetotal() {
  pagetotal_ = 0;
}
inline ::google::protobuf::int32 CMessageAssetMaterialResponse::pagetotal() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialResponse.pageTotal)
  return pagetotal_;
}
inline void CMessageAssetMaterialResponse::set_pagetotal(::google::protobuf::int32 value) {
  
  pagetotal_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialResponse.pageTotal)
}

// -------------------------------------------------------------------

// CMessageAddAssetMaterialRequest

// int32 type = 1;
inline void CMessageAddAssetMaterialRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageAddAssetMaterialRequest::type() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAddAssetMaterialRequest.type)
  return type_;
}
inline void CMessageAddAssetMaterialRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAddAssetMaterialRequest.type)
}

// string uuid = 2;
inline void CMessageAddAssetMaterialRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageAddAssetMaterialRequest::uuid() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAddAssetMaterialRequest.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageAddAssetMaterialRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAddAssetMaterialRequest.uuid)
}
#if LANG_CXX11
inline void CMessageAddAssetMaterialRequest::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.db2.CMessageAddAssetMaterialRequest.uuid)
}
#endif
inline void CMessageAddAssetMaterialRequest::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.db2.CMessageAddAssetMaterialRequest.uuid)
}
inline void CMessageAddAssetMaterialRequest::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.db2.CMessageAddAssetMaterialRequest.uuid)
}
inline ::std::string* CMessageAddAssetMaterialRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessageAddAssetMaterialRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageAddAssetMaterialRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.db2.CMessageAddAssetMaterialRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageAddAssetMaterialRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.db2.CMessageAddAssetMaterialRequest.uuid)
}

// .d5.db2.asset_material data = 3;
inline bool CMessageAddAssetMaterialRequest::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline const ::d5::db2::asset_material& CMessageAddAssetMaterialRequest::data() const {
  const ::d5::db2::asset_material* p = data_;
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAddAssetMaterialRequest.data)
  return p != NULL ? *p : *reinterpret_cast<const ::d5::db2::asset_material*>(
      &::d5::db2::_asset_material_default_instance_);
}
inline ::d5::db2::asset_material* CMessageAddAssetMaterialRequest::release_data() {
  // @@protoc_insertion_point(field_release:d5.db2.CMessageAddAssetMaterialRequest.data)
  
  ::d5::db2::asset_material* temp = data_;
  data_ = NULL;
  return temp;
}
inline ::d5::db2::asset_material* CMessageAddAssetMaterialRequest::mutable_data() {
  
  if (data_ == NULL) {
    data_ = ::google::protobuf::Arena::Create< ::d5::db2::asset_material >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessageAddAssetMaterialRequest.data)
  return data_;
}
inline void CMessageAddAssetMaterialRequest::set_allocated_data(::d5::db2::asset_material* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_);
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:d5.db2.CMessageAddAssetMaterialRequest.data)
}

// .d5.CMessageDependentPakList fileList = 4;
inline bool CMessageAddAssetMaterialRequest::has_filelist() const {
  return this != internal_default_instance() && filelist_ != NULL;
}
inline const ::d5::CMessageDependentPakList& CMessageAddAssetMaterialRequest::filelist() const {
  const ::d5::CMessageDependentPakList* p = filelist_;
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAddAssetMaterialRequest.fileList)
  return p != NULL ? *p : *reinterpret_cast<const ::d5::CMessageDependentPakList*>(
      &::d5::_CMessageDependentPakList_default_instance_);
}
inline ::d5::CMessageDependentPakList* CMessageAddAssetMaterialRequest::release_filelist() {
  // @@protoc_insertion_point(field_release:d5.db2.CMessageAddAssetMaterialRequest.fileList)
  
  ::d5::CMessageDependentPakList* temp = filelist_;
  filelist_ = NULL;
  return temp;
}
inline ::d5::CMessageDependentPakList* CMessageAddAssetMaterialRequest::mutable_filelist() {
  
  if (filelist_ == NULL) {
    filelist_ = ::google::protobuf::Arena::Create< ::d5::CMessageDependentPakList >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessageAddAssetMaterialRequest.fileList)
  return filelist_;
}
inline void CMessageAddAssetMaterialRequest::set_allocated_filelist(::d5::CMessageDependentPakList* filelist) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(filelist_);
  }
  if (filelist) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      filelist = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, filelist, submessage_arena);
    }
    
  } else {
    
  }
  filelist_ = filelist;
  // @@protoc_insertion_point(field_set_allocated:d5.db2.CMessageAddAssetMaterialRequest.fileList)
}

// -------------------------------------------------------------------

// CMessageAddAssetMaterialResponse

// int32 type = 1;
inline void CMessageAddAssetMaterialResponse::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageAddAssetMaterialResponse::type() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAddAssetMaterialResponse.type)
  return type_;
}
inline void CMessageAddAssetMaterialResponse::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAddAssetMaterialResponse.type)
}

// string uuid = 2;
inline void CMessageAddAssetMaterialResponse::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageAddAssetMaterialResponse::uuid() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAddAssetMaterialResponse.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageAddAssetMaterialResponse::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAddAssetMaterialResponse.uuid)
}
#if LANG_CXX11
inline void CMessageAddAssetMaterialResponse::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.db2.CMessageAddAssetMaterialResponse.uuid)
}
#endif
inline void CMessageAddAssetMaterialResponse::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.db2.CMessageAddAssetMaterialResponse.uuid)
}
inline void CMessageAddAssetMaterialResponse::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.db2.CMessageAddAssetMaterialResponse.uuid)
}
inline ::std::string* CMessageAddAssetMaterialResponse::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessageAddAssetMaterialResponse.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageAddAssetMaterialResponse::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.db2.CMessageAddAssetMaterialResponse.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageAddAssetMaterialResponse::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.db2.CMessageAddAssetMaterialResponse.uuid)
}

// int32 state = 3;
inline void CMessageAddAssetMaterialResponse::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 CMessageAddAssetMaterialResponse::state() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAddAssetMaterialResponse.state)
  return state_;
}
inline void CMessageAddAssetMaterialResponse::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAddAssetMaterialResponse.state)
}

// -------------------------------------------------------------------

// CMessageAddAssetMaterialProcessResponse

// int32 type = 1;
inline void CMessageAddAssetMaterialProcessResponse::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageAddAssetMaterialProcessResponse::type() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAddAssetMaterialProcessResponse.type)
  return type_;
}
inline void CMessageAddAssetMaterialProcessResponse::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAddAssetMaterialProcessResponse.type)
}

// string uuid = 2;
inline void CMessageAddAssetMaterialProcessResponse::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageAddAssetMaterialProcessResponse::uuid() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAddAssetMaterialProcessResponse.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageAddAssetMaterialProcessResponse::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAddAssetMaterialProcessResponse.uuid)
}
#if LANG_CXX11
inline void CMessageAddAssetMaterialProcessResponse::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.db2.CMessageAddAssetMaterialProcessResponse.uuid)
}
#endif
inline void CMessageAddAssetMaterialProcessResponse::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.db2.CMessageAddAssetMaterialProcessResponse.uuid)
}
inline void CMessageAddAssetMaterialProcessResponse::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.db2.CMessageAddAssetMaterialProcessResponse.uuid)
}
inline ::std::string* CMessageAddAssetMaterialProcessResponse::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessageAddAssetMaterialProcessResponse.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageAddAssetMaterialProcessResponse::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.db2.CMessageAddAssetMaterialProcessResponse.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageAddAssetMaterialProcessResponse::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.db2.CMessageAddAssetMaterialProcessResponse.uuid)
}

// int32 percent = 3;
inline void CMessageAddAssetMaterialProcessResponse::clear_percent() {
  percent_ = 0;
}
inline ::google::protobuf::int32 CMessageAddAssetMaterialProcessResponse::percent() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAddAssetMaterialProcessResponse.percent)
  return percent_;
}
inline void CMessageAddAssetMaterialProcessResponse::set_percent(::google::protobuf::int32 value) {
  
  percent_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAddAssetMaterialProcessResponse.percent)
}

// -------------------------------------------------------------------

// CMessageDelAssetMaterialRequest

// int32 type = 1;
inline void CMessageDelAssetMaterialRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageDelAssetMaterialRequest::type() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageDelAssetMaterialRequest.type)
  return type_;
}
inline void CMessageDelAssetMaterialRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageDelAssetMaterialRequest.type)
}

// string uuid = 2;
inline void CMessageDelAssetMaterialRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageDelAssetMaterialRequest::uuid() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageDelAssetMaterialRequest.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageDelAssetMaterialRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.db2.CMessageDelAssetMaterialRequest.uuid)
}
#if LANG_CXX11
inline void CMessageDelAssetMaterialRequest::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.db2.CMessageDelAssetMaterialRequest.uuid)
}
#endif
inline void CMessageDelAssetMaterialRequest::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.db2.CMessageDelAssetMaterialRequest.uuid)
}
inline void CMessageDelAssetMaterialRequest::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.db2.CMessageDelAssetMaterialRequest.uuid)
}
inline ::std::string* CMessageDelAssetMaterialRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessageDelAssetMaterialRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageDelAssetMaterialRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.db2.CMessageDelAssetMaterialRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageDelAssetMaterialRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.db2.CMessageDelAssetMaterialRequest.uuid)
}

// string id = 3;
inline void CMessageDelAssetMaterialRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageDelAssetMaterialRequest::id() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageDelAssetMaterialRequest.id)
  return id_.GetNoArena();
}
inline void CMessageDelAssetMaterialRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.db2.CMessageDelAssetMaterialRequest.id)
}
#if LANG_CXX11
inline void CMessageDelAssetMaterialRequest::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.db2.CMessageDelAssetMaterialRequest.id)
}
#endif
inline void CMessageDelAssetMaterialRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.db2.CMessageDelAssetMaterialRequest.id)
}
inline void CMessageDelAssetMaterialRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.db2.CMessageDelAssetMaterialRequest.id)
}
inline ::std::string* CMessageDelAssetMaterialRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessageDelAssetMaterialRequest.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageDelAssetMaterialRequest::release_id() {
  // @@protoc_insertion_point(field_release:d5.db2.CMessageDelAssetMaterialRequest.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageDelAssetMaterialRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:d5.db2.CMessageDelAssetMaterialRequest.id)
}

// -------------------------------------------------------------------

// CMessageDelAssetMaterialResponse

// int32 type = 1;
inline void CMessageDelAssetMaterialResponse::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageDelAssetMaterialResponse::type() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageDelAssetMaterialResponse.type)
  return type_;
}
inline void CMessageDelAssetMaterialResponse::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageDelAssetMaterialResponse.type)
}

// string uuid = 2;
inline void CMessageDelAssetMaterialResponse::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageDelAssetMaterialResponse::uuid() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageDelAssetMaterialResponse.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageDelAssetMaterialResponse::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.db2.CMessageDelAssetMaterialResponse.uuid)
}
#if LANG_CXX11
inline void CMessageDelAssetMaterialResponse::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.db2.CMessageDelAssetMaterialResponse.uuid)
}
#endif
inline void CMessageDelAssetMaterialResponse::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.db2.CMessageDelAssetMaterialResponse.uuid)
}
inline void CMessageDelAssetMaterialResponse::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.db2.CMessageDelAssetMaterialResponse.uuid)
}
inline ::std::string* CMessageDelAssetMaterialResponse::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessageDelAssetMaterialResponse.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageDelAssetMaterialResponse::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.db2.CMessageDelAssetMaterialResponse.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageDelAssetMaterialResponse::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.db2.CMessageDelAssetMaterialResponse.uuid)
}

// int32 state = 3;
inline void CMessageDelAssetMaterialResponse::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 CMessageDelAssetMaterialResponse::state() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageDelAssetMaterialResponse.state)
  return state_;
}
inline void CMessageDelAssetMaterialResponse::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageDelAssetMaterialResponse.state)
}

// -------------------------------------------------------------------

// CMessageAssetMaterialDownloadRequest

// int32 type = 1;
inline void CMessageAssetMaterialDownloadRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageAssetMaterialDownloadRequest::type() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialDownloadRequest.type)
  return type_;
}
inline void CMessageAssetMaterialDownloadRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialDownloadRequest.type)
}

// string uuid = 2;
inline void CMessageAssetMaterialDownloadRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageAssetMaterialDownloadRequest::uuid() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialDownloadRequest.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageAssetMaterialDownloadRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialDownloadRequest.uuid)
}
#if LANG_CXX11
inline void CMessageAssetMaterialDownloadRequest::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.db2.CMessageAssetMaterialDownloadRequest.uuid)
}
#endif
inline void CMessageAssetMaterialDownloadRequest::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.db2.CMessageAssetMaterialDownloadRequest.uuid)
}
inline void CMessageAssetMaterialDownloadRequest::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.db2.CMessageAssetMaterialDownloadRequest.uuid)
}
inline ::std::string* CMessageAssetMaterialDownloadRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessageAssetMaterialDownloadRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageAssetMaterialDownloadRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.db2.CMessageAssetMaterialDownloadRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageAssetMaterialDownloadRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.db2.CMessageAssetMaterialDownloadRequest.uuid)
}

// string id = 3;
inline void CMessageAssetMaterialDownloadRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageAssetMaterialDownloadRequest::id() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialDownloadRequest.id)
  return id_.GetNoArena();
}
inline void CMessageAssetMaterialDownloadRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialDownloadRequest.id)
}
#if LANG_CXX11
inline void CMessageAssetMaterialDownloadRequest::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.db2.CMessageAssetMaterialDownloadRequest.id)
}
#endif
inline void CMessageAssetMaterialDownloadRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.db2.CMessageAssetMaterialDownloadRequest.id)
}
inline void CMessageAssetMaterialDownloadRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.db2.CMessageAssetMaterialDownloadRequest.id)
}
inline ::std::string* CMessageAssetMaterialDownloadRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessageAssetMaterialDownloadRequest.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageAssetMaterialDownloadRequest::release_id() {
  // @@protoc_insertion_point(field_release:d5.db2.CMessageAssetMaterialDownloadRequest.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageAssetMaterialDownloadRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:d5.db2.CMessageAssetMaterialDownloadRequest.id)
}

// -------------------------------------------------------------------

// CMessageAssetMaterialDownloadResponse

// int32 type = 1;
inline void CMessageAssetMaterialDownloadResponse::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageAssetMaterialDownloadResponse::type() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialDownloadResponse.type)
  return type_;
}
inline void CMessageAssetMaterialDownloadResponse::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialDownloadResponse.type)
}

// string uuid = 2;
inline void CMessageAssetMaterialDownloadResponse::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageAssetMaterialDownloadResponse::uuid() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialDownloadResponse.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageAssetMaterialDownloadResponse::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialDownloadResponse.uuid)
}
#if LANG_CXX11
inline void CMessageAssetMaterialDownloadResponse::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.db2.CMessageAssetMaterialDownloadResponse.uuid)
}
#endif
inline void CMessageAssetMaterialDownloadResponse::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.db2.CMessageAssetMaterialDownloadResponse.uuid)
}
inline void CMessageAssetMaterialDownloadResponse::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.db2.CMessageAssetMaterialDownloadResponse.uuid)
}
inline ::std::string* CMessageAssetMaterialDownloadResponse::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessageAssetMaterialDownloadResponse.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageAssetMaterialDownloadResponse::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.db2.CMessageAssetMaterialDownloadResponse.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageAssetMaterialDownloadResponse::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.db2.CMessageAssetMaterialDownloadResponse.uuid)
}

// int32 state = 3;
inline void CMessageAssetMaterialDownloadResponse::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 CMessageAssetMaterialDownloadResponse::state() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialDownloadResponse.state)
  return state_;
}
inline void CMessageAssetMaterialDownloadResponse::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialDownloadResponse.state)
}

// .d5.CMessageDependentPakList fileList = 4;
inline bool CMessageAssetMaterialDownloadResponse::has_filelist() const {
  return this != internal_default_instance() && filelist_ != NULL;
}
inline const ::d5::CMessageDependentPakList& CMessageAssetMaterialDownloadResponse::filelist() const {
  const ::d5::CMessageDependentPakList* p = filelist_;
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialDownloadResponse.fileList)
  return p != NULL ? *p : *reinterpret_cast<const ::d5::CMessageDependentPakList*>(
      &::d5::_CMessageDependentPakList_default_instance_);
}
inline ::d5::CMessageDependentPakList* CMessageAssetMaterialDownloadResponse::release_filelist() {
  // @@protoc_insertion_point(field_release:d5.db2.CMessageAssetMaterialDownloadResponse.fileList)
  
  ::d5::CMessageDependentPakList* temp = filelist_;
  filelist_ = NULL;
  return temp;
}
inline ::d5::CMessageDependentPakList* CMessageAssetMaterialDownloadResponse::mutable_filelist() {
  
  if (filelist_ == NULL) {
    filelist_ = ::google::protobuf::Arena::Create< ::d5::CMessageDependentPakList >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessageAssetMaterialDownloadResponse.fileList)
  return filelist_;
}
inline void CMessageAssetMaterialDownloadResponse::set_allocated_filelist(::d5::CMessageDependentPakList* filelist) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(filelist_);
  }
  if (filelist) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      filelist = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, filelist, submessage_arena);
    }
    
  } else {
    
  }
  filelist_ = filelist;
  // @@protoc_insertion_point(field_set_allocated:d5.db2.CMessageAssetMaterialDownloadResponse.fileList)
}

// -------------------------------------------------------------------

// CMessageAssetMaterialDownloadProcessResponse

// int32 type = 1;
inline void CMessageAssetMaterialDownloadProcessResponse::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageAssetMaterialDownloadProcessResponse::type() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialDownloadProcessResponse.type)
  return type_;
}
inline void CMessageAssetMaterialDownloadProcessResponse::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialDownloadProcessResponse.type)
}

// string uuid = 2;
inline void CMessageAssetMaterialDownloadProcessResponse::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageAssetMaterialDownloadProcessResponse::uuid() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialDownloadProcessResponse.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageAssetMaterialDownloadProcessResponse::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialDownloadProcessResponse.uuid)
}
#if LANG_CXX11
inline void CMessageAssetMaterialDownloadProcessResponse::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.db2.CMessageAssetMaterialDownloadProcessResponse.uuid)
}
#endif
inline void CMessageAssetMaterialDownloadProcessResponse::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.db2.CMessageAssetMaterialDownloadProcessResponse.uuid)
}
inline void CMessageAssetMaterialDownloadProcessResponse::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.db2.CMessageAssetMaterialDownloadProcessResponse.uuid)
}
inline ::std::string* CMessageAssetMaterialDownloadProcessResponse::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.db2.CMessageAssetMaterialDownloadProcessResponse.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageAssetMaterialDownloadProcessResponse::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.db2.CMessageAssetMaterialDownloadProcessResponse.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageAssetMaterialDownloadProcessResponse::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.db2.CMessageAssetMaterialDownloadProcessResponse.uuid)
}

// int32 percent = 3;
inline void CMessageAssetMaterialDownloadProcessResponse::clear_percent() {
  percent_ = 0;
}
inline ::google::protobuf::int32 CMessageAssetMaterialDownloadProcessResponse::percent() const {
  // @@protoc_insertion_point(field_get:d5.db2.CMessageAssetMaterialDownloadProcessResponse.percent)
  return percent_;
}
inline void CMessageAssetMaterialDownloadProcessResponse::set_percent(::google::protobuf::int32 value) {
  
  percent_ = value;
  // @@protoc_insertion_point(field_set:d5.db2.CMessageAssetMaterialDownloadProcessResponse.percent)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace db2
}  // namespace d5

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::d5::db2::CMessageAssetMaterialRequest_Order> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::d5::db2::CMessageAssetMaterialRequest_Order>() {
  return ::d5::db2::CMessageAssetMaterialRequest_Order_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_5fasset_5fmaterial_2eproto_INCLUDED
