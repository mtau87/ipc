// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_plan_save.proto

#ifndef PROTOBUF_message_5fplan_5fsave_2eproto_INCLUDED
#define PROTOBUF_message_5fplan_5fsave_2eproto_INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_message_5fplan_5fsave_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsCMessageHttpPlanSaveImpl();
void InitDefaultsCMessageHttpPlanSave();
void InitDefaultsCMessagePlanSaveRequestImpl();
void InitDefaultsCMessagePlanSaveRequest();
void InitDefaultsCMessagePlanSaveResponseImpl();
void InitDefaultsCMessagePlanSaveResponse();
void InitDefaultsCMessagePlanSaveProcessResponseImpl();
void InitDefaultsCMessagePlanSaveProcessResponse();
inline void InitDefaults() {
  InitDefaultsCMessageHttpPlanSave();
  InitDefaultsCMessagePlanSaveRequest();
  InitDefaultsCMessagePlanSaveResponse();
  InitDefaultsCMessagePlanSaveProcessResponse();
}
}  // namespace protobuf_message_5fplan_5fsave_2eproto
namespace d5 {
class CMessageHttpPlanSave;
class CMessageHttpPlanSaveDefaultTypeInternal;
extern CMessageHttpPlanSaveDefaultTypeInternal _CMessageHttpPlanSave_default_instance_;
class CMessagePlanSaveProcessResponse;
class CMessagePlanSaveProcessResponseDefaultTypeInternal;
extern CMessagePlanSaveProcessResponseDefaultTypeInternal _CMessagePlanSaveProcessResponse_default_instance_;
class CMessagePlanSaveRequest;
class CMessagePlanSaveRequestDefaultTypeInternal;
extern CMessagePlanSaveRequestDefaultTypeInternal _CMessagePlanSaveRequest_default_instance_;
class CMessagePlanSaveResponse;
class CMessagePlanSaveResponseDefaultTypeInternal;
extern CMessagePlanSaveResponseDefaultTypeInternal _CMessagePlanSaveResponse_default_instance_;
}  // namespace d5
namespace google {
namespace protobuf {
template<> ::d5::CMessageHttpPlanSave* Arena::Create< ::d5::CMessageHttpPlanSave>(Arena*);
template<> ::d5::CMessagePlanSaveProcessResponse* Arena::Create< ::d5::CMessagePlanSaveProcessResponse>(Arena*);
template<> ::d5::CMessagePlanSaveRequest* Arena::Create< ::d5::CMessagePlanSaveRequest>(Arena*);
template<> ::d5::CMessagePlanSaveResponse* Arena::Create< ::d5::CMessagePlanSaveResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace d5 {

// ===================================================================

class CMessageHttpPlanSave : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageHttpPlanSave) */ {
 public:
  CMessageHttpPlanSave();
  virtual ~CMessageHttpPlanSave();

  CMessageHttpPlanSave(const CMessageHttpPlanSave& from);

  inline CMessageHttpPlanSave& operator=(const CMessageHttpPlanSave& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageHttpPlanSave(CMessageHttpPlanSave&& from) noexcept
    : CMessageHttpPlanSave() {
    *this = ::std::move(from);
  }

  inline CMessageHttpPlanSave& operator=(CMessageHttpPlanSave&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageHttpPlanSave& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageHttpPlanSave* internal_default_instance() {
    return reinterpret_cast<const CMessageHttpPlanSave*>(
               &_CMessageHttpPlanSave_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CMessageHttpPlanSave* other);
  friend void swap(CMessageHttpPlanSave& a, CMessageHttpPlanSave& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageHttpPlanSave* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageHttpPlanSave>(NULL);
  }

  CMessageHttpPlanSave* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageHttpPlanSave>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageHttpPlanSave& from);
  void MergeFrom(const CMessageHttpPlanSave& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageHttpPlanSave* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string title = 2;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // string pakUrl = 5;
  void clear_pakurl();
  static const int kPakUrlFieldNumber = 5;
  const ::std::string& pakurl() const;
  void set_pakurl(const ::std::string& value);
  #if LANG_CXX11
  void set_pakurl(::std::string&& value);
  #endif
  void set_pakurl(const char* value);
  void set_pakurl(const char* value, size_t size);
  ::std::string* mutable_pakurl();
  ::std::string* release_pakurl();
  void set_allocated_pakurl(::std::string* pakurl);

  // string thumbnailUrl = 6;
  void clear_thumbnailurl();
  static const int kThumbnailUrlFieldNumber = 6;
  const ::std::string& thumbnailurl() const;
  void set_thumbnailurl(const ::std::string& value);
  #if LANG_CXX11
  void set_thumbnailurl(::std::string&& value);
  #endif
  void set_thumbnailurl(const char* value);
  void set_thumbnailurl(const char* value, size_t size);
  ::std::string* mutable_thumbnailurl();
  ::std::string* release_thumbnailurl();
  void set_allocated_thumbnailurl(::std::string* thumbnailurl);

  // string floorEditFileUrl = 7;
  void clear_flooreditfileurl();
  static const int kFloorEditFileUrlFieldNumber = 7;
  const ::std::string& flooreditfileurl() const;
  void set_flooreditfileurl(const ::std::string& value);
  #if LANG_CXX11
  void set_flooreditfileurl(::std::string&& value);
  #endif
  void set_flooreditfileurl(const char* value);
  void set_flooreditfileurl(const char* value, size_t size);
  ::std::string* mutable_flooreditfileurl();
  ::std::string* release_flooreditfileurl();
  void set_allocated_flooreditfileurl(::std::string* flooreditfileurl);

  // string detailInfo = 8;
  void clear_detailinfo();
  static const int kDetailInfoFieldNumber = 8;
  const ::std::string& detailinfo() const;
  void set_detailinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_detailinfo(::std::string&& value);
  #endif
  void set_detailinfo(const char* value);
  void set_detailinfo(const char* value, size_t size);
  ::std::string* mutable_detailinfo();
  ::std::string* release_detailinfo();
  void set_allocated_detailinfo(::std::string* detailinfo);

  // string designFileUrl = 9;
  void clear_designfileurl();
  static const int kDesignFileUrlFieldNumber = 9;
  const ::std::string& designfileurl() const;
  void set_designfileurl(const ::std::string& value);
  #if LANG_CXX11
  void set_designfileurl(::std::string&& value);
  #endif
  void set_designfileurl(const char* value);
  void set_designfileurl(const char* value, size_t size);
  ::std::string* mutable_designfileurl();
  ::std::string* release_designfileurl();
  void set_allocated_designfileurl(::std::string* designfileurl);

  // string floorRefUrl = 20;
  void clear_floorrefurl();
  static const int kFloorRefUrlFieldNumber = 20;
  const ::std::string& floorrefurl() const;
  void set_floorrefurl(const ::std::string& value);
  #if LANG_CXX11
  void set_floorrefurl(::std::string&& value);
  #endif
  void set_floorrefurl(const char* value);
  void set_floorrefurl(const char* value, size_t size);
  ::std::string* mutable_floorrefurl();
  ::std::string* release_floorrefurl();
  void set_allocated_floorrefurl(::std::string* floorrefurl);

  // string dependentFileList = 30;
  void clear_dependentfilelist();
  static const int kDependentFileListFieldNumber = 30;
  const ::std::string& dependentfilelist() const;
  void set_dependentfilelist(const ::std::string& value);
  #if LANG_CXX11
  void set_dependentfilelist(::std::string&& value);
  #endif
  void set_dependentfilelist(const char* value);
  void set_dependentfilelist(const char* value, size_t size);
  ::std::string* mutable_dependentfilelist();
  ::std::string* release_dependentfilelist();
  void set_allocated_dependentfilelist(::std::string* dependentfilelist);

  // string quotationInfo = 32;
  void clear_quotationinfo();
  static const int kQuotationInfoFieldNumber = 32;
  const ::std::string& quotationinfo() const;
  void set_quotationinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_quotationinfo(::std::string&& value);
  #endif
  void set_quotationinfo(const char* value);
  void set_quotationinfo(const char* value, size_t size);
  ::std::string* mutable_quotationinfo();
  ::std::string* release_quotationinfo();
  void set_allocated_quotationinfo(::std::string* quotationinfo);

  // float size = 3;
  void clear_size();
  static const int kSizeFieldNumber = 3;
  float size() const;
  void set_size(float value);

  // int32 districtId = 10;
  void clear_districtid();
  static const int kDistrictIdFieldNumber = 10;
  ::google::protobuf::int32 districtid() const;
  void set_districtid(::google::protobuf::int32 value);

  // int32 propertyTypeId = 11;
  void clear_propertytypeid();
  static const int kPropertyTypeIdFieldNumber = 11;
  ::google::protobuf::int32 propertytypeid() const;
  void set_propertytypeid(::google::protobuf::int32 value);

  // int32 roomTypeId = 12;
  void clear_roomtypeid();
  static const int kRoomTypeIdFieldNumber = 12;
  ::google::protobuf::int32 roomtypeid() const;
  void set_roomtypeid(::google::protobuf::int32 value);

  // int64 createTime = 15;
  void clear_createtime();
  static const int kCreateTimeFieldNumber = 15;
  ::google::protobuf::int64 createtime() const;
  void set_createtime(::google::protobuf::int64 value);

  // int64 updateTime = 16;
  void clear_updatetime();
  static const int kUpdateTimeFieldNumber = 16;
  ::google::protobuf::int64 updatetime() const;
  void set_updatetime(::google::protobuf::int64 value);

  // int32 templateTypeId = 13;
  void clear_templatetypeid();
  static const int kTemplateTypeIdFieldNumber = 13;
  ::google::protobuf::int32 templatetypeid() const;
  void set_templatetypeid(::google::protobuf::int32 value);

  // float floorRefWidth = 21;
  void clear_floorrefwidth();
  static const int kFloorRefWidthFieldNumber = 21;
  float floorrefwidth() const;
  void set_floorrefwidth(float value);

  // float floorRefHeight = 22;
  void clear_floorrefheight();
  static const int kFloorRefHeightFieldNumber = 22;
  float floorrefheight() const;
  void set_floorrefheight(float value);

  // int32 groupId = 25;
  void clear_groupid();
  static const int kGroupIdFieldNumber = 25;
  ::google::protobuf::int32 groupid() const;
  void set_groupid(::google::protobuf::int32 value);

  // int32 isPrivate = 33;
  void clear_isprivate();
  static const int kIsPrivateFieldNumber = 33;
  ::google::protobuf::int32 isprivate() const;
  void set_isprivate(::google::protobuf::int32 value);

  // int32 condoId = 26;
  void clear_condoid();
  static const int kCondoIdFieldNumber = 26;
  ::google::protobuf::int32 condoid() const;
  void set_condoid(::google::protobuf::int32 value);

  // int32 source = 31;
  void clear_source();
  static const int kSourceFieldNumber = 31;
  ::google::protobuf::int32 source() const;
  void set_source(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageHttpPlanSave)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr pakurl_;
  ::google::protobuf::internal::ArenaStringPtr thumbnailurl_;
  ::google::protobuf::internal::ArenaStringPtr flooreditfileurl_;
  ::google::protobuf::internal::ArenaStringPtr detailinfo_;
  ::google::protobuf::internal::ArenaStringPtr designfileurl_;
  ::google::protobuf::internal::ArenaStringPtr floorrefurl_;
  ::google::protobuf::internal::ArenaStringPtr dependentfilelist_;
  ::google::protobuf::internal::ArenaStringPtr quotationinfo_;
  float size_;
  ::google::protobuf::int32 districtid_;
  ::google::protobuf::int32 propertytypeid_;
  ::google::protobuf::int32 roomtypeid_;
  ::google::protobuf::int64 createtime_;
  ::google::protobuf::int64 updatetime_;
  ::google::protobuf::int32 templatetypeid_;
  float floorrefwidth_;
  float floorrefheight_;
  ::google::protobuf::int32 groupid_;
  ::google::protobuf::int32 isprivate_;
  ::google::protobuf::int32 condoid_;
  ::google::protobuf::int32 source_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fplan_5fsave_2eproto::TableStruct;
  friend void ::protobuf_message_5fplan_5fsave_2eproto::InitDefaultsCMessageHttpPlanSaveImpl();
};
// -------------------------------------------------------------------

class CMessagePlanSaveRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessagePlanSaveRequest) */ {
 public:
  CMessagePlanSaveRequest();
  virtual ~CMessagePlanSaveRequest();

  CMessagePlanSaveRequest(const CMessagePlanSaveRequest& from);

  inline CMessagePlanSaveRequest& operator=(const CMessagePlanSaveRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessagePlanSaveRequest(CMessagePlanSaveRequest&& from) noexcept
    : CMessagePlanSaveRequest() {
    *this = ::std::move(from);
  }

  inline CMessagePlanSaveRequest& operator=(CMessagePlanSaveRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlanSaveRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessagePlanSaveRequest* internal_default_instance() {
    return reinterpret_cast<const CMessagePlanSaveRequest*>(
               &_CMessagePlanSaveRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CMessagePlanSaveRequest* other);
  friend void swap(CMessagePlanSaveRequest& a, CMessagePlanSaveRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessagePlanSaveRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessagePlanSaveRequest>(NULL);
  }

  CMessagePlanSaveRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessagePlanSaveRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessagePlanSaveRequest& from);
  void MergeFrom(const CMessagePlanSaveRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessagePlanSaveRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // string id = 3;
  void clear_id();
  static const int kIdFieldNumber = 3;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessagePlanSaveRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fplan_5fsave_2eproto::TableStruct;
  friend void ::protobuf_message_5fplan_5fsave_2eproto::InitDefaultsCMessagePlanSaveRequestImpl();
};
// -------------------------------------------------------------------

class CMessagePlanSaveResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessagePlanSaveResponse) */ {
 public:
  CMessagePlanSaveResponse();
  virtual ~CMessagePlanSaveResponse();

  CMessagePlanSaveResponse(const CMessagePlanSaveResponse& from);

  inline CMessagePlanSaveResponse& operator=(const CMessagePlanSaveResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessagePlanSaveResponse(CMessagePlanSaveResponse&& from) noexcept
    : CMessagePlanSaveResponse() {
    *this = ::std::move(from);
  }

  inline CMessagePlanSaveResponse& operator=(CMessagePlanSaveResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlanSaveResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessagePlanSaveResponse* internal_default_instance() {
    return reinterpret_cast<const CMessagePlanSaveResponse*>(
               &_CMessagePlanSaveResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CMessagePlanSaveResponse* other);
  friend void swap(CMessagePlanSaveResponse& a, CMessagePlanSaveResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessagePlanSaveResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessagePlanSaveResponse>(NULL);
  }

  CMessagePlanSaveResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessagePlanSaveResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessagePlanSaveResponse& from);
  void MergeFrom(const CMessagePlanSaveResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessagePlanSaveResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 state = 3;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessagePlanSaveResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 state_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fplan_5fsave_2eproto::TableStruct;
  friend void ::protobuf_message_5fplan_5fsave_2eproto::InitDefaultsCMessagePlanSaveResponseImpl();
};
// -------------------------------------------------------------------

class CMessagePlanSaveProcessResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessagePlanSaveProcessResponse) */ {
 public:
  CMessagePlanSaveProcessResponse();
  virtual ~CMessagePlanSaveProcessResponse();

  CMessagePlanSaveProcessResponse(const CMessagePlanSaveProcessResponse& from);

  inline CMessagePlanSaveProcessResponse& operator=(const CMessagePlanSaveProcessResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessagePlanSaveProcessResponse(CMessagePlanSaveProcessResponse&& from) noexcept
    : CMessagePlanSaveProcessResponse() {
    *this = ::std::move(from);
  }

  inline CMessagePlanSaveProcessResponse& operator=(CMessagePlanSaveProcessResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlanSaveProcessResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessagePlanSaveProcessResponse* internal_default_instance() {
    return reinterpret_cast<const CMessagePlanSaveProcessResponse*>(
               &_CMessagePlanSaveProcessResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CMessagePlanSaveProcessResponse* other);
  friend void swap(CMessagePlanSaveProcessResponse& a, CMessagePlanSaveProcessResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessagePlanSaveProcessResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessagePlanSaveProcessResponse>(NULL);
  }

  CMessagePlanSaveProcessResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessagePlanSaveProcessResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessagePlanSaveProcessResponse& from);
  void MergeFrom(const CMessagePlanSaveProcessResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessagePlanSaveProcessResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 percent = 3;
  void clear_percent();
  static const int kPercentFieldNumber = 3;
  ::google::protobuf::int32 percent() const;
  void set_percent(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessagePlanSaveProcessResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 percent_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fplan_5fsave_2eproto::TableStruct;
  friend void ::protobuf_message_5fplan_5fsave_2eproto::InitDefaultsCMessagePlanSaveProcessResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMessageHttpPlanSave

// string id = 1;
inline void CMessageHttpPlanSave::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpPlanSave::id() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanSave.id)
  return id_.GetNoArena();
}
inline void CMessageHttpPlanSave::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanSave.id)
}
#if LANG_CXX11
inline void CMessageHttpPlanSave::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpPlanSave.id)
}
#endif
inline void CMessageHttpPlanSave::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpPlanSave.id)
}
inline void CMessageHttpPlanSave::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpPlanSave.id)
}
inline ::std::string* CMessageHttpPlanSave::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpPlanSave.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpPlanSave::release_id() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpPlanSave.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpPlanSave::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpPlanSave.id)
}

// string title = 2;
inline void CMessageHttpPlanSave::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpPlanSave::title() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanSave.title)
  return title_.GetNoArena();
}
inline void CMessageHttpPlanSave::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanSave.title)
}
#if LANG_CXX11
inline void CMessageHttpPlanSave::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpPlanSave.title)
}
#endif
inline void CMessageHttpPlanSave::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpPlanSave.title)
}
inline void CMessageHttpPlanSave::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpPlanSave.title)
}
inline ::std::string* CMessageHttpPlanSave::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpPlanSave.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpPlanSave::release_title() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpPlanSave.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpPlanSave::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpPlanSave.title)
}

// float size = 3;
inline void CMessageHttpPlanSave::clear_size() {
  size_ = 0;
}
inline float CMessageHttpPlanSave::size() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanSave.size)
  return size_;
}
inline void CMessageHttpPlanSave::set_size(float value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanSave.size)
}

// string pakUrl = 5;
inline void CMessageHttpPlanSave::clear_pakurl() {
  pakurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpPlanSave::pakurl() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanSave.pakUrl)
  return pakurl_.GetNoArena();
}
inline void CMessageHttpPlanSave::set_pakurl(const ::std::string& value) {
  
  pakurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanSave.pakUrl)
}
#if LANG_CXX11
inline void CMessageHttpPlanSave::set_pakurl(::std::string&& value) {
  
  pakurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpPlanSave.pakUrl)
}
#endif
inline void CMessageHttpPlanSave::set_pakurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pakurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpPlanSave.pakUrl)
}
inline void CMessageHttpPlanSave::set_pakurl(const char* value, size_t size) {
  
  pakurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpPlanSave.pakUrl)
}
inline ::std::string* CMessageHttpPlanSave::mutable_pakurl() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpPlanSave.pakUrl)
  return pakurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpPlanSave::release_pakurl() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpPlanSave.pakUrl)
  
  return pakurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpPlanSave::set_allocated_pakurl(::std::string* pakurl) {
  if (pakurl != NULL) {
    
  } else {
    
  }
  pakurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pakurl);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpPlanSave.pakUrl)
}

// string thumbnailUrl = 6;
inline void CMessageHttpPlanSave::clear_thumbnailurl() {
  thumbnailurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpPlanSave::thumbnailurl() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanSave.thumbnailUrl)
  return thumbnailurl_.GetNoArena();
}
inline void CMessageHttpPlanSave::set_thumbnailurl(const ::std::string& value) {
  
  thumbnailurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanSave.thumbnailUrl)
}
#if LANG_CXX11
inline void CMessageHttpPlanSave::set_thumbnailurl(::std::string&& value) {
  
  thumbnailurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpPlanSave.thumbnailUrl)
}
#endif
inline void CMessageHttpPlanSave::set_thumbnailurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  thumbnailurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpPlanSave.thumbnailUrl)
}
inline void CMessageHttpPlanSave::set_thumbnailurl(const char* value, size_t size) {
  
  thumbnailurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpPlanSave.thumbnailUrl)
}
inline ::std::string* CMessageHttpPlanSave::mutable_thumbnailurl() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpPlanSave.thumbnailUrl)
  return thumbnailurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpPlanSave::release_thumbnailurl() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpPlanSave.thumbnailUrl)
  
  return thumbnailurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpPlanSave::set_allocated_thumbnailurl(::std::string* thumbnailurl) {
  if (thumbnailurl != NULL) {
    
  } else {
    
  }
  thumbnailurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), thumbnailurl);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpPlanSave.thumbnailUrl)
}

// string floorEditFileUrl = 7;
inline void CMessageHttpPlanSave::clear_flooreditfileurl() {
  flooreditfileurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpPlanSave::flooreditfileurl() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanSave.floorEditFileUrl)
  return flooreditfileurl_.GetNoArena();
}
inline void CMessageHttpPlanSave::set_flooreditfileurl(const ::std::string& value) {
  
  flooreditfileurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanSave.floorEditFileUrl)
}
#if LANG_CXX11
inline void CMessageHttpPlanSave::set_flooreditfileurl(::std::string&& value) {
  
  flooreditfileurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpPlanSave.floorEditFileUrl)
}
#endif
inline void CMessageHttpPlanSave::set_flooreditfileurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  flooreditfileurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpPlanSave.floorEditFileUrl)
}
inline void CMessageHttpPlanSave::set_flooreditfileurl(const char* value, size_t size) {
  
  flooreditfileurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpPlanSave.floorEditFileUrl)
}
inline ::std::string* CMessageHttpPlanSave::mutable_flooreditfileurl() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpPlanSave.floorEditFileUrl)
  return flooreditfileurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpPlanSave::release_flooreditfileurl() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpPlanSave.floorEditFileUrl)
  
  return flooreditfileurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpPlanSave::set_allocated_flooreditfileurl(::std::string* flooreditfileurl) {
  if (flooreditfileurl != NULL) {
    
  } else {
    
  }
  flooreditfileurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), flooreditfileurl);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpPlanSave.floorEditFileUrl)
}

// string detailInfo = 8;
inline void CMessageHttpPlanSave::clear_detailinfo() {
  detailinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpPlanSave::detailinfo() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanSave.detailInfo)
  return detailinfo_.GetNoArena();
}
inline void CMessageHttpPlanSave::set_detailinfo(const ::std::string& value) {
  
  detailinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanSave.detailInfo)
}
#if LANG_CXX11
inline void CMessageHttpPlanSave::set_detailinfo(::std::string&& value) {
  
  detailinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpPlanSave.detailInfo)
}
#endif
inline void CMessageHttpPlanSave::set_detailinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  detailinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpPlanSave.detailInfo)
}
inline void CMessageHttpPlanSave::set_detailinfo(const char* value, size_t size) {
  
  detailinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpPlanSave.detailInfo)
}
inline ::std::string* CMessageHttpPlanSave::mutable_detailinfo() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpPlanSave.detailInfo)
  return detailinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpPlanSave::release_detailinfo() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpPlanSave.detailInfo)
  
  return detailinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpPlanSave::set_allocated_detailinfo(::std::string* detailinfo) {
  if (detailinfo != NULL) {
    
  } else {
    
  }
  detailinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), detailinfo);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpPlanSave.detailInfo)
}

// string designFileUrl = 9;
inline void CMessageHttpPlanSave::clear_designfileurl() {
  designfileurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpPlanSave::designfileurl() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanSave.designFileUrl)
  return designfileurl_.GetNoArena();
}
inline void CMessageHttpPlanSave::set_designfileurl(const ::std::string& value) {
  
  designfileurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanSave.designFileUrl)
}
#if LANG_CXX11
inline void CMessageHttpPlanSave::set_designfileurl(::std::string&& value) {
  
  designfileurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpPlanSave.designFileUrl)
}
#endif
inline void CMessageHttpPlanSave::set_designfileurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  designfileurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpPlanSave.designFileUrl)
}
inline void CMessageHttpPlanSave::set_designfileurl(const char* value, size_t size) {
  
  designfileurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpPlanSave.designFileUrl)
}
inline ::std::string* CMessageHttpPlanSave::mutable_designfileurl() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpPlanSave.designFileUrl)
  return designfileurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpPlanSave::release_designfileurl() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpPlanSave.designFileUrl)
  
  return designfileurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpPlanSave::set_allocated_designfileurl(::std::string* designfileurl) {
  if (designfileurl != NULL) {
    
  } else {
    
  }
  designfileurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), designfileurl);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpPlanSave.designFileUrl)
}

// int32 districtId = 10;
inline void CMessageHttpPlanSave::clear_districtid() {
  districtid_ = 0;
}
inline ::google::protobuf::int32 CMessageHttpPlanSave::districtid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanSave.districtId)
  return districtid_;
}
inline void CMessageHttpPlanSave::set_districtid(::google::protobuf::int32 value) {
  
  districtid_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanSave.districtId)
}

// int32 propertyTypeId = 11;
inline void CMessageHttpPlanSave::clear_propertytypeid() {
  propertytypeid_ = 0;
}
inline ::google::protobuf::int32 CMessageHttpPlanSave::propertytypeid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanSave.propertyTypeId)
  return propertytypeid_;
}
inline void CMessageHttpPlanSave::set_propertytypeid(::google::protobuf::int32 value) {
  
  propertytypeid_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanSave.propertyTypeId)
}

// int32 roomTypeId = 12;
inline void CMessageHttpPlanSave::clear_roomtypeid() {
  roomtypeid_ = 0;
}
inline ::google::protobuf::int32 CMessageHttpPlanSave::roomtypeid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanSave.roomTypeId)
  return roomtypeid_;
}
inline void CMessageHttpPlanSave::set_roomtypeid(::google::protobuf::int32 value) {
  
  roomtypeid_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanSave.roomTypeId)
}

// int32 templateTypeId = 13;
inline void CMessageHttpPlanSave::clear_templatetypeid() {
  templatetypeid_ = 0;
}
inline ::google::protobuf::int32 CMessageHttpPlanSave::templatetypeid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanSave.templateTypeId)
  return templatetypeid_;
}
inline void CMessageHttpPlanSave::set_templatetypeid(::google::protobuf::int32 value) {
  
  templatetypeid_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanSave.templateTypeId)
}

// int64 createTime = 15;
inline void CMessageHttpPlanSave::clear_createtime() {
  createtime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CMessageHttpPlanSave::createtime() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanSave.createTime)
  return createtime_;
}
inline void CMessageHttpPlanSave::set_createtime(::google::protobuf::int64 value) {
  
  createtime_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanSave.createTime)
}

// int64 updateTime = 16;
inline void CMessageHttpPlanSave::clear_updatetime() {
  updatetime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CMessageHttpPlanSave::updatetime() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanSave.updateTime)
  return updatetime_;
}
inline void CMessageHttpPlanSave::set_updatetime(::google::protobuf::int64 value) {
  
  updatetime_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanSave.updateTime)
}

// string floorRefUrl = 20;
inline void CMessageHttpPlanSave::clear_floorrefurl() {
  floorrefurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpPlanSave::floorrefurl() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanSave.floorRefUrl)
  return floorrefurl_.GetNoArena();
}
inline void CMessageHttpPlanSave::set_floorrefurl(const ::std::string& value) {
  
  floorrefurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanSave.floorRefUrl)
}
#if LANG_CXX11
inline void CMessageHttpPlanSave::set_floorrefurl(::std::string&& value) {
  
  floorrefurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpPlanSave.floorRefUrl)
}
#endif
inline void CMessageHttpPlanSave::set_floorrefurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  floorrefurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpPlanSave.floorRefUrl)
}
inline void CMessageHttpPlanSave::set_floorrefurl(const char* value, size_t size) {
  
  floorrefurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpPlanSave.floorRefUrl)
}
inline ::std::string* CMessageHttpPlanSave::mutable_floorrefurl() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpPlanSave.floorRefUrl)
  return floorrefurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpPlanSave::release_floorrefurl() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpPlanSave.floorRefUrl)
  
  return floorrefurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpPlanSave::set_allocated_floorrefurl(::std::string* floorrefurl) {
  if (floorrefurl != NULL) {
    
  } else {
    
  }
  floorrefurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), floorrefurl);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpPlanSave.floorRefUrl)
}

// float floorRefWidth = 21;
inline void CMessageHttpPlanSave::clear_floorrefwidth() {
  floorrefwidth_ = 0;
}
inline float CMessageHttpPlanSave::floorrefwidth() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanSave.floorRefWidth)
  return floorrefwidth_;
}
inline void CMessageHttpPlanSave::set_floorrefwidth(float value) {
  
  floorrefwidth_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanSave.floorRefWidth)
}

// float floorRefHeight = 22;
inline void CMessageHttpPlanSave::clear_floorrefheight() {
  floorrefheight_ = 0;
}
inline float CMessageHttpPlanSave::floorrefheight() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanSave.floorRefHeight)
  return floorrefheight_;
}
inline void CMessageHttpPlanSave::set_floorrefheight(float value) {
  
  floorrefheight_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanSave.floorRefHeight)
}

// int32 groupId = 25;
inline void CMessageHttpPlanSave::clear_groupid() {
  groupid_ = 0;
}
inline ::google::protobuf::int32 CMessageHttpPlanSave::groupid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanSave.groupId)
  return groupid_;
}
inline void CMessageHttpPlanSave::set_groupid(::google::protobuf::int32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanSave.groupId)
}

// int32 condoId = 26;
inline void CMessageHttpPlanSave::clear_condoid() {
  condoid_ = 0;
}
inline ::google::protobuf::int32 CMessageHttpPlanSave::condoid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanSave.condoId)
  return condoid_;
}
inline void CMessageHttpPlanSave::set_condoid(::google::protobuf::int32 value) {
  
  condoid_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanSave.condoId)
}

// string dependentFileList = 30;
inline void CMessageHttpPlanSave::clear_dependentfilelist() {
  dependentfilelist_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpPlanSave::dependentfilelist() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanSave.dependentFileList)
  return dependentfilelist_.GetNoArena();
}
inline void CMessageHttpPlanSave::set_dependentfilelist(const ::std::string& value) {
  
  dependentfilelist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanSave.dependentFileList)
}
#if LANG_CXX11
inline void CMessageHttpPlanSave::set_dependentfilelist(::std::string&& value) {
  
  dependentfilelist_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpPlanSave.dependentFileList)
}
#endif
inline void CMessageHttpPlanSave::set_dependentfilelist(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dependentfilelist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpPlanSave.dependentFileList)
}
inline void CMessageHttpPlanSave::set_dependentfilelist(const char* value, size_t size) {
  
  dependentfilelist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpPlanSave.dependentFileList)
}
inline ::std::string* CMessageHttpPlanSave::mutable_dependentfilelist() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpPlanSave.dependentFileList)
  return dependentfilelist_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpPlanSave::release_dependentfilelist() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpPlanSave.dependentFileList)
  
  return dependentfilelist_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpPlanSave::set_allocated_dependentfilelist(::std::string* dependentfilelist) {
  if (dependentfilelist != NULL) {
    
  } else {
    
  }
  dependentfilelist_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dependentfilelist);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpPlanSave.dependentFileList)
}

// int32 source = 31;
inline void CMessageHttpPlanSave::clear_source() {
  source_ = 0;
}
inline ::google::protobuf::int32 CMessageHttpPlanSave::source() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanSave.source)
  return source_;
}
inline void CMessageHttpPlanSave::set_source(::google::protobuf::int32 value) {
  
  source_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanSave.source)
}

// string quotationInfo = 32;
inline void CMessageHttpPlanSave::clear_quotationinfo() {
  quotationinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageHttpPlanSave::quotationinfo() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanSave.quotationInfo)
  return quotationinfo_.GetNoArena();
}
inline void CMessageHttpPlanSave::set_quotationinfo(const ::std::string& value) {
  
  quotationinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanSave.quotationInfo)
}
#if LANG_CXX11
inline void CMessageHttpPlanSave::set_quotationinfo(::std::string&& value) {
  
  quotationinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageHttpPlanSave.quotationInfo)
}
#endif
inline void CMessageHttpPlanSave::set_quotationinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  quotationinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageHttpPlanSave.quotationInfo)
}
inline void CMessageHttpPlanSave::set_quotationinfo(const char* value, size_t size) {
  
  quotationinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageHttpPlanSave.quotationInfo)
}
inline ::std::string* CMessageHttpPlanSave::mutable_quotationinfo() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageHttpPlanSave.quotationInfo)
  return quotationinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageHttpPlanSave::release_quotationinfo() {
  // @@protoc_insertion_point(field_release:d5.CMessageHttpPlanSave.quotationInfo)
  
  return quotationinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageHttpPlanSave::set_allocated_quotationinfo(::std::string* quotationinfo) {
  if (quotationinfo != NULL) {
    
  } else {
    
  }
  quotationinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), quotationinfo);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageHttpPlanSave.quotationInfo)
}

// int32 isPrivate = 33;
inline void CMessageHttpPlanSave::clear_isprivate() {
  isprivate_ = 0;
}
inline ::google::protobuf::int32 CMessageHttpPlanSave::isprivate() const {
  // @@protoc_insertion_point(field_get:d5.CMessageHttpPlanSave.isPrivate)
  return isprivate_;
}
inline void CMessageHttpPlanSave::set_isprivate(::google::protobuf::int32 value) {
  
  isprivate_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageHttpPlanSave.isPrivate)
}

// -------------------------------------------------------------------

// CMessagePlanSaveRequest

// int32 type = 1;
inline void CMessagePlanSaveRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessagePlanSaveRequest::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessagePlanSaveRequest.type)
  return type_;
}
inline void CMessagePlanSaveRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessagePlanSaveRequest.type)
}

// string uuid = 2;
inline void CMessagePlanSaveRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessagePlanSaveRequest::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessagePlanSaveRequest.uuid)
  return uuid_.GetNoArena();
}
inline void CMessagePlanSaveRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessagePlanSaveRequest.uuid)
}
#if LANG_CXX11
inline void CMessagePlanSaveRequest::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessagePlanSaveRequest.uuid)
}
#endif
inline void CMessagePlanSaveRequest::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessagePlanSaveRequest.uuid)
}
inline void CMessagePlanSaveRequest::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessagePlanSaveRequest.uuid)
}
inline ::std::string* CMessagePlanSaveRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessagePlanSaveRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessagePlanSaveRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessagePlanSaveRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessagePlanSaveRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessagePlanSaveRequest.uuid)
}

// string id = 3;
inline void CMessagePlanSaveRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessagePlanSaveRequest::id() const {
  // @@protoc_insertion_point(field_get:d5.CMessagePlanSaveRequest.id)
  return id_.GetNoArena();
}
inline void CMessagePlanSaveRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessagePlanSaveRequest.id)
}
#if LANG_CXX11
inline void CMessagePlanSaveRequest::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessagePlanSaveRequest.id)
}
#endif
inline void CMessagePlanSaveRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessagePlanSaveRequest.id)
}
inline void CMessagePlanSaveRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessagePlanSaveRequest.id)
}
inline ::std::string* CMessagePlanSaveRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessagePlanSaveRequest.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessagePlanSaveRequest::release_id() {
  // @@protoc_insertion_point(field_release:d5.CMessagePlanSaveRequest.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessagePlanSaveRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessagePlanSaveRequest.id)
}

// -------------------------------------------------------------------

// CMessagePlanSaveResponse

// int32 type = 1;
inline void CMessagePlanSaveResponse::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessagePlanSaveResponse::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessagePlanSaveResponse.type)
  return type_;
}
inline void CMessagePlanSaveResponse::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessagePlanSaveResponse.type)
}

// string uuid = 2;
inline void CMessagePlanSaveResponse::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessagePlanSaveResponse::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessagePlanSaveResponse.uuid)
  return uuid_.GetNoArena();
}
inline void CMessagePlanSaveResponse::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessagePlanSaveResponse.uuid)
}
#if LANG_CXX11
inline void CMessagePlanSaveResponse::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessagePlanSaveResponse.uuid)
}
#endif
inline void CMessagePlanSaveResponse::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessagePlanSaveResponse.uuid)
}
inline void CMessagePlanSaveResponse::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessagePlanSaveResponse.uuid)
}
inline ::std::string* CMessagePlanSaveResponse::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessagePlanSaveResponse.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessagePlanSaveResponse::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessagePlanSaveResponse.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessagePlanSaveResponse::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessagePlanSaveResponse.uuid)
}

// int32 state = 3;
inline void CMessagePlanSaveResponse::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 CMessagePlanSaveResponse::state() const {
  // @@protoc_insertion_point(field_get:d5.CMessagePlanSaveResponse.state)
  return state_;
}
inline void CMessagePlanSaveResponse::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessagePlanSaveResponse.state)
}

// -------------------------------------------------------------------

// CMessagePlanSaveProcessResponse

// int32 type = 1;
inline void CMessagePlanSaveProcessResponse::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessagePlanSaveProcessResponse::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessagePlanSaveProcessResponse.type)
  return type_;
}
inline void CMessagePlanSaveProcessResponse::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessagePlanSaveProcessResponse.type)
}

// string uuid = 2;
inline void CMessagePlanSaveProcessResponse::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessagePlanSaveProcessResponse::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessagePlanSaveProcessResponse.uuid)
  return uuid_.GetNoArena();
}
inline void CMessagePlanSaveProcessResponse::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessagePlanSaveProcessResponse.uuid)
}
#if LANG_CXX11
inline void CMessagePlanSaveProcessResponse::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessagePlanSaveProcessResponse.uuid)
}
#endif
inline void CMessagePlanSaveProcessResponse::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessagePlanSaveProcessResponse.uuid)
}
inline void CMessagePlanSaveProcessResponse::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessagePlanSaveProcessResponse.uuid)
}
inline ::std::string* CMessagePlanSaveProcessResponse::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessagePlanSaveProcessResponse.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessagePlanSaveProcessResponse::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessagePlanSaveProcessResponse.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessagePlanSaveProcessResponse::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessagePlanSaveProcessResponse.uuid)
}

// int32 percent = 3;
inline void CMessagePlanSaveProcessResponse::clear_percent() {
  percent_ = 0;
}
inline ::google::protobuf::int32 CMessagePlanSaveProcessResponse::percent() const {
  // @@protoc_insertion_point(field_get:d5.CMessagePlanSaveProcessResponse.percent)
  return percent_;
}
inline void CMessagePlanSaveProcessResponse::set_percent(::google::protobuf::int32 value) {
  
  percent_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessagePlanSaveProcessResponse.percent)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace d5

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_5fplan_5fsave_2eproto_INCLUDED
