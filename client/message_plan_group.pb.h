// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_plan_group.proto

#ifndef PROTOBUF_message_5fplan_5fgroup_2eproto_INCLUDED
#define PROTOBUF_message_5fplan_5fgroup_2eproto_INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "message_http_plan_group.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_message_5fplan_5fgroup_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[8];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsCMessageGetPlanGroupRequestImpl();
void InitDefaultsCMessageGetPlanGroupRequest();
void InitDefaultsCMessageGetPlanGroupResponseImpl();
void InitDefaultsCMessageGetPlanGroupResponse();
void InitDefaultsCMessageAddPlanGroupRequestImpl();
void InitDefaultsCMessageAddPlanGroupRequest();
void InitDefaultsCMessageAddPlanGroupResponseImpl();
void InitDefaultsCMessageAddPlanGroupResponse();
void InitDefaultsCMessageUpdatePlanGroupRequestImpl();
void InitDefaultsCMessageUpdatePlanGroupRequest();
void InitDefaultsCMessageUpdatePlanGroupResponseImpl();
void InitDefaultsCMessageUpdatePlanGroupResponse();
void InitDefaultsCMessageDeletePlanGroupRequestImpl();
void InitDefaultsCMessageDeletePlanGroupRequest();
void InitDefaultsCMessageDeletePlanGroupResponseImpl();
void InitDefaultsCMessageDeletePlanGroupResponse();
inline void InitDefaults() {
  InitDefaultsCMessageGetPlanGroupRequest();
  InitDefaultsCMessageGetPlanGroupResponse();
  InitDefaultsCMessageAddPlanGroupRequest();
  InitDefaultsCMessageAddPlanGroupResponse();
  InitDefaultsCMessageUpdatePlanGroupRequest();
  InitDefaultsCMessageUpdatePlanGroupResponse();
  InitDefaultsCMessageDeletePlanGroupRequest();
  InitDefaultsCMessageDeletePlanGroupResponse();
}
}  // namespace protobuf_message_5fplan_5fgroup_2eproto
namespace d5 {
class CMessageAddPlanGroupRequest;
class CMessageAddPlanGroupRequestDefaultTypeInternal;
extern CMessageAddPlanGroupRequestDefaultTypeInternal _CMessageAddPlanGroupRequest_default_instance_;
class CMessageAddPlanGroupResponse;
class CMessageAddPlanGroupResponseDefaultTypeInternal;
extern CMessageAddPlanGroupResponseDefaultTypeInternal _CMessageAddPlanGroupResponse_default_instance_;
class CMessageDeletePlanGroupRequest;
class CMessageDeletePlanGroupRequestDefaultTypeInternal;
extern CMessageDeletePlanGroupRequestDefaultTypeInternal _CMessageDeletePlanGroupRequest_default_instance_;
class CMessageDeletePlanGroupResponse;
class CMessageDeletePlanGroupResponseDefaultTypeInternal;
extern CMessageDeletePlanGroupResponseDefaultTypeInternal _CMessageDeletePlanGroupResponse_default_instance_;
class CMessageGetPlanGroupRequest;
class CMessageGetPlanGroupRequestDefaultTypeInternal;
extern CMessageGetPlanGroupRequestDefaultTypeInternal _CMessageGetPlanGroupRequest_default_instance_;
class CMessageGetPlanGroupResponse;
class CMessageGetPlanGroupResponseDefaultTypeInternal;
extern CMessageGetPlanGroupResponseDefaultTypeInternal _CMessageGetPlanGroupResponse_default_instance_;
class CMessageUpdatePlanGroupRequest;
class CMessageUpdatePlanGroupRequestDefaultTypeInternal;
extern CMessageUpdatePlanGroupRequestDefaultTypeInternal _CMessageUpdatePlanGroupRequest_default_instance_;
class CMessageUpdatePlanGroupResponse;
class CMessageUpdatePlanGroupResponseDefaultTypeInternal;
extern CMessageUpdatePlanGroupResponseDefaultTypeInternal _CMessageUpdatePlanGroupResponse_default_instance_;
}  // namespace d5
namespace google {
namespace protobuf {
template<> ::d5::CMessageAddPlanGroupRequest* Arena::Create< ::d5::CMessageAddPlanGroupRequest>(Arena*);
template<> ::d5::CMessageAddPlanGroupResponse* Arena::Create< ::d5::CMessageAddPlanGroupResponse>(Arena*);
template<> ::d5::CMessageDeletePlanGroupRequest* Arena::Create< ::d5::CMessageDeletePlanGroupRequest>(Arena*);
template<> ::d5::CMessageDeletePlanGroupResponse* Arena::Create< ::d5::CMessageDeletePlanGroupResponse>(Arena*);
template<> ::d5::CMessageGetPlanGroupRequest* Arena::Create< ::d5::CMessageGetPlanGroupRequest>(Arena*);
template<> ::d5::CMessageGetPlanGroupResponse* Arena::Create< ::d5::CMessageGetPlanGroupResponse>(Arena*);
template<> ::d5::CMessageUpdatePlanGroupRequest* Arena::Create< ::d5::CMessageUpdatePlanGroupRequest>(Arena*);
template<> ::d5::CMessageUpdatePlanGroupResponse* Arena::Create< ::d5::CMessageUpdatePlanGroupResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace d5 {

// ===================================================================

class CMessageGetPlanGroupRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageGetPlanGroupRequest) */ {
 public:
  CMessageGetPlanGroupRequest();
  virtual ~CMessageGetPlanGroupRequest();

  CMessageGetPlanGroupRequest(const CMessageGetPlanGroupRequest& from);

  inline CMessageGetPlanGroupRequest& operator=(const CMessageGetPlanGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageGetPlanGroupRequest(CMessageGetPlanGroupRequest&& from) noexcept
    : CMessageGetPlanGroupRequest() {
    *this = ::std::move(from);
  }

  inline CMessageGetPlanGroupRequest& operator=(CMessageGetPlanGroupRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetPlanGroupRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageGetPlanGroupRequest* internal_default_instance() {
    return reinterpret_cast<const CMessageGetPlanGroupRequest*>(
               &_CMessageGetPlanGroupRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CMessageGetPlanGroupRequest* other);
  friend void swap(CMessageGetPlanGroupRequest& a, CMessageGetPlanGroupRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageGetPlanGroupRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageGetPlanGroupRequest>(NULL);
  }

  CMessageGetPlanGroupRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageGetPlanGroupRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageGetPlanGroupRequest& from);
  void MergeFrom(const CMessageGetPlanGroupRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageGetPlanGroupRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageGetPlanGroupRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fplan_5fgroup_2eproto::TableStruct;
  friend void ::protobuf_message_5fplan_5fgroup_2eproto::InitDefaultsCMessageGetPlanGroupRequestImpl();
};
// -------------------------------------------------------------------

class CMessageGetPlanGroupResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageGetPlanGroupResponse) */ {
 public:
  CMessageGetPlanGroupResponse();
  virtual ~CMessageGetPlanGroupResponse();

  CMessageGetPlanGroupResponse(const CMessageGetPlanGroupResponse& from);

  inline CMessageGetPlanGroupResponse& operator=(const CMessageGetPlanGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageGetPlanGroupResponse(CMessageGetPlanGroupResponse&& from) noexcept
    : CMessageGetPlanGroupResponse() {
    *this = ::std::move(from);
  }

  inline CMessageGetPlanGroupResponse& operator=(CMessageGetPlanGroupResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetPlanGroupResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageGetPlanGroupResponse* internal_default_instance() {
    return reinterpret_cast<const CMessageGetPlanGroupResponse*>(
               &_CMessageGetPlanGroupResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CMessageGetPlanGroupResponse* other);
  friend void swap(CMessageGetPlanGroupResponse& a, CMessageGetPlanGroupResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageGetPlanGroupResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageGetPlanGroupResponse>(NULL);
  }

  CMessageGetPlanGroupResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageGetPlanGroupResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageGetPlanGroupResponse& from);
  void MergeFrom(const CMessageGetPlanGroupResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageGetPlanGroupResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // .d5.CMessageHttpGetPlanGroupResponse getList = 3;
  bool has_getlist() const;
  void clear_getlist();
  static const int kGetListFieldNumber = 3;
  const ::d5::CMessageHttpGetPlanGroupResponse& getlist() const;
  ::d5::CMessageHttpGetPlanGroupResponse* release_getlist();
  ::d5::CMessageHttpGetPlanGroupResponse* mutable_getlist();
  void set_allocated_getlist(::d5::CMessageHttpGetPlanGroupResponse* getlist);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 state = 4;
  void clear_state();
  static const int kStateFieldNumber = 4;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageGetPlanGroupResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::d5::CMessageHttpGetPlanGroupResponse* getlist_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 state_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fplan_5fgroup_2eproto::TableStruct;
  friend void ::protobuf_message_5fplan_5fgroup_2eproto::InitDefaultsCMessageGetPlanGroupResponseImpl();
};
// -------------------------------------------------------------------

class CMessageAddPlanGroupRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageAddPlanGroupRequest) */ {
 public:
  CMessageAddPlanGroupRequest();
  virtual ~CMessageAddPlanGroupRequest();

  CMessageAddPlanGroupRequest(const CMessageAddPlanGroupRequest& from);

  inline CMessageAddPlanGroupRequest& operator=(const CMessageAddPlanGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageAddPlanGroupRequest(CMessageAddPlanGroupRequest&& from) noexcept
    : CMessageAddPlanGroupRequest() {
    *this = ::std::move(from);
  }

  inline CMessageAddPlanGroupRequest& operator=(CMessageAddPlanGroupRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAddPlanGroupRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageAddPlanGroupRequest* internal_default_instance() {
    return reinterpret_cast<const CMessageAddPlanGroupRequest*>(
               &_CMessageAddPlanGroupRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CMessageAddPlanGroupRequest* other);
  friend void swap(CMessageAddPlanGroupRequest& a, CMessageAddPlanGroupRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageAddPlanGroupRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageAddPlanGroupRequest>(NULL);
  }

  CMessageAddPlanGroupRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageAddPlanGroupRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageAddPlanGroupRequest& from);
  void MergeFrom(const CMessageAddPlanGroupRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageAddPlanGroupRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageAddPlanGroupRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fplan_5fgroup_2eproto::TableStruct;
  friend void ::protobuf_message_5fplan_5fgroup_2eproto::InitDefaultsCMessageAddPlanGroupRequestImpl();
};
// -------------------------------------------------------------------

class CMessageAddPlanGroupResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageAddPlanGroupResponse) */ {
 public:
  CMessageAddPlanGroupResponse();
  virtual ~CMessageAddPlanGroupResponse();

  CMessageAddPlanGroupResponse(const CMessageAddPlanGroupResponse& from);

  inline CMessageAddPlanGroupResponse& operator=(const CMessageAddPlanGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageAddPlanGroupResponse(CMessageAddPlanGroupResponse&& from) noexcept
    : CMessageAddPlanGroupResponse() {
    *this = ::std::move(from);
  }

  inline CMessageAddPlanGroupResponse& operator=(CMessageAddPlanGroupResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAddPlanGroupResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageAddPlanGroupResponse* internal_default_instance() {
    return reinterpret_cast<const CMessageAddPlanGroupResponse*>(
               &_CMessageAddPlanGroupResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CMessageAddPlanGroupResponse* other);
  friend void swap(CMessageAddPlanGroupResponse& a, CMessageAddPlanGroupResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageAddPlanGroupResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageAddPlanGroupResponse>(NULL);
  }

  CMessageAddPlanGroupResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageAddPlanGroupResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageAddPlanGroupResponse& from);
  void MergeFrom(const CMessageAddPlanGroupResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageAddPlanGroupResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // .d5.CMessageHttpAddPlanGroupResponse addGroup = 3;
  bool has_addgroup() const;
  void clear_addgroup();
  static const int kAddGroupFieldNumber = 3;
  const ::d5::CMessageHttpAddPlanGroupResponse& addgroup() const;
  ::d5::CMessageHttpAddPlanGroupResponse* release_addgroup();
  ::d5::CMessageHttpAddPlanGroupResponse* mutable_addgroup();
  void set_allocated_addgroup(::d5::CMessageHttpAddPlanGroupResponse* addgroup);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 state = 4;
  void clear_state();
  static const int kStateFieldNumber = 4;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageAddPlanGroupResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::d5::CMessageHttpAddPlanGroupResponse* addgroup_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 state_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fplan_5fgroup_2eproto::TableStruct;
  friend void ::protobuf_message_5fplan_5fgroup_2eproto::InitDefaultsCMessageAddPlanGroupResponseImpl();
};
// -------------------------------------------------------------------

class CMessageUpdatePlanGroupRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageUpdatePlanGroupRequest) */ {
 public:
  CMessageUpdatePlanGroupRequest();
  virtual ~CMessageUpdatePlanGroupRequest();

  CMessageUpdatePlanGroupRequest(const CMessageUpdatePlanGroupRequest& from);

  inline CMessageUpdatePlanGroupRequest& operator=(const CMessageUpdatePlanGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageUpdatePlanGroupRequest(CMessageUpdatePlanGroupRequest&& from) noexcept
    : CMessageUpdatePlanGroupRequest() {
    *this = ::std::move(from);
  }

  inline CMessageUpdatePlanGroupRequest& operator=(CMessageUpdatePlanGroupRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUpdatePlanGroupRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageUpdatePlanGroupRequest* internal_default_instance() {
    return reinterpret_cast<const CMessageUpdatePlanGroupRequest*>(
               &_CMessageUpdatePlanGroupRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(CMessageUpdatePlanGroupRequest* other);
  friend void swap(CMessageUpdatePlanGroupRequest& a, CMessageUpdatePlanGroupRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageUpdatePlanGroupRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageUpdatePlanGroupRequest>(NULL);
  }

  CMessageUpdatePlanGroupRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageUpdatePlanGroupRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageUpdatePlanGroupRequest& from);
  void MergeFrom(const CMessageUpdatePlanGroupRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageUpdatePlanGroupRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // string name = 4;
  void clear_name();
  static const int kNameFieldNumber = 4;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 id = 3;
  void clear_id();
  static const int kIdFieldNumber = 3;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageUpdatePlanGroupRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 id_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fplan_5fgroup_2eproto::TableStruct;
  friend void ::protobuf_message_5fplan_5fgroup_2eproto::InitDefaultsCMessageUpdatePlanGroupRequestImpl();
};
// -------------------------------------------------------------------

class CMessageUpdatePlanGroupResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageUpdatePlanGroupResponse) */ {
 public:
  CMessageUpdatePlanGroupResponse();
  virtual ~CMessageUpdatePlanGroupResponse();

  CMessageUpdatePlanGroupResponse(const CMessageUpdatePlanGroupResponse& from);

  inline CMessageUpdatePlanGroupResponse& operator=(const CMessageUpdatePlanGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageUpdatePlanGroupResponse(CMessageUpdatePlanGroupResponse&& from) noexcept
    : CMessageUpdatePlanGroupResponse() {
    *this = ::std::move(from);
  }

  inline CMessageUpdatePlanGroupResponse& operator=(CMessageUpdatePlanGroupResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUpdatePlanGroupResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageUpdatePlanGroupResponse* internal_default_instance() {
    return reinterpret_cast<const CMessageUpdatePlanGroupResponse*>(
               &_CMessageUpdatePlanGroupResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(CMessageUpdatePlanGroupResponse* other);
  friend void swap(CMessageUpdatePlanGroupResponse& a, CMessageUpdatePlanGroupResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageUpdatePlanGroupResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageUpdatePlanGroupResponse>(NULL);
  }

  CMessageUpdatePlanGroupResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageUpdatePlanGroupResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageUpdatePlanGroupResponse& from);
  void MergeFrom(const CMessageUpdatePlanGroupResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageUpdatePlanGroupResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 state = 3;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageUpdatePlanGroupResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 state_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fplan_5fgroup_2eproto::TableStruct;
  friend void ::protobuf_message_5fplan_5fgroup_2eproto::InitDefaultsCMessageUpdatePlanGroupResponseImpl();
};
// -------------------------------------------------------------------

class CMessageDeletePlanGroupRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageDeletePlanGroupRequest) */ {
 public:
  CMessageDeletePlanGroupRequest();
  virtual ~CMessageDeletePlanGroupRequest();

  CMessageDeletePlanGroupRequest(const CMessageDeletePlanGroupRequest& from);

  inline CMessageDeletePlanGroupRequest& operator=(const CMessageDeletePlanGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageDeletePlanGroupRequest(CMessageDeletePlanGroupRequest&& from) noexcept
    : CMessageDeletePlanGroupRequest() {
    *this = ::std::move(from);
  }

  inline CMessageDeletePlanGroupRequest& operator=(CMessageDeletePlanGroupRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageDeletePlanGroupRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageDeletePlanGroupRequest* internal_default_instance() {
    return reinterpret_cast<const CMessageDeletePlanGroupRequest*>(
               &_CMessageDeletePlanGroupRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(CMessageDeletePlanGroupRequest* other);
  friend void swap(CMessageDeletePlanGroupRequest& a, CMessageDeletePlanGroupRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageDeletePlanGroupRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageDeletePlanGroupRequest>(NULL);
  }

  CMessageDeletePlanGroupRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageDeletePlanGroupRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageDeletePlanGroupRequest& from);
  void MergeFrom(const CMessageDeletePlanGroupRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageDeletePlanGroupRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 id = 3;
  void clear_id();
  static const int kIdFieldNumber = 3;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageDeletePlanGroupRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 id_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fplan_5fgroup_2eproto::TableStruct;
  friend void ::protobuf_message_5fplan_5fgroup_2eproto::InitDefaultsCMessageDeletePlanGroupRequestImpl();
};
// -------------------------------------------------------------------

class CMessageDeletePlanGroupResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:d5.CMessageDeletePlanGroupResponse) */ {
 public:
  CMessageDeletePlanGroupResponse();
  virtual ~CMessageDeletePlanGroupResponse();

  CMessageDeletePlanGroupResponse(const CMessageDeletePlanGroupResponse& from);

  inline CMessageDeletePlanGroupResponse& operator=(const CMessageDeletePlanGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMessageDeletePlanGroupResponse(CMessageDeletePlanGroupResponse&& from) noexcept
    : CMessageDeletePlanGroupResponse() {
    *this = ::std::move(from);
  }

  inline CMessageDeletePlanGroupResponse& operator=(CMessageDeletePlanGroupResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageDeletePlanGroupResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMessageDeletePlanGroupResponse* internal_default_instance() {
    return reinterpret_cast<const CMessageDeletePlanGroupResponse*>(
               &_CMessageDeletePlanGroupResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(CMessageDeletePlanGroupResponse* other);
  friend void swap(CMessageDeletePlanGroupResponse& a, CMessageDeletePlanGroupResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMessageDeletePlanGroupResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageDeletePlanGroupResponse>(NULL);
  }

  CMessageDeletePlanGroupResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CMessageDeletePlanGroupResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageDeletePlanGroupResponse& from);
  void MergeFrom(const CMessageDeletePlanGroupResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageDeletePlanGroupResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 state = 3;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:d5.CMessageDeletePlanGroupResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 state_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_5fplan_5fgroup_2eproto::TableStruct;
  friend void ::protobuf_message_5fplan_5fgroup_2eproto::InitDefaultsCMessageDeletePlanGroupResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMessageGetPlanGroupRequest

// int32 type = 1;
inline void CMessageGetPlanGroupRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageGetPlanGroupRequest::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageGetPlanGroupRequest.type)
  return type_;
}
inline void CMessageGetPlanGroupRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageGetPlanGroupRequest.type)
}

// string uuid = 2;
inline void CMessageGetPlanGroupRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageGetPlanGroupRequest::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageGetPlanGroupRequest.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageGetPlanGroupRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageGetPlanGroupRequest.uuid)
}
#if LANG_CXX11
inline void CMessageGetPlanGroupRequest::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageGetPlanGroupRequest.uuid)
}
#endif
inline void CMessageGetPlanGroupRequest::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageGetPlanGroupRequest.uuid)
}
inline void CMessageGetPlanGroupRequest::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageGetPlanGroupRequest.uuid)
}
inline ::std::string* CMessageGetPlanGroupRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageGetPlanGroupRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageGetPlanGroupRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageGetPlanGroupRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageGetPlanGroupRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageGetPlanGroupRequest.uuid)
}

// -------------------------------------------------------------------

// CMessageGetPlanGroupResponse

// int32 type = 1;
inline void CMessageGetPlanGroupResponse::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageGetPlanGroupResponse::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageGetPlanGroupResponse.type)
  return type_;
}
inline void CMessageGetPlanGroupResponse::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageGetPlanGroupResponse.type)
}

// string uuid = 2;
inline void CMessageGetPlanGroupResponse::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageGetPlanGroupResponse::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageGetPlanGroupResponse.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageGetPlanGroupResponse::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageGetPlanGroupResponse.uuid)
}
#if LANG_CXX11
inline void CMessageGetPlanGroupResponse::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageGetPlanGroupResponse.uuid)
}
#endif
inline void CMessageGetPlanGroupResponse::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageGetPlanGroupResponse.uuid)
}
inline void CMessageGetPlanGroupResponse::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageGetPlanGroupResponse.uuid)
}
inline ::std::string* CMessageGetPlanGroupResponse::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageGetPlanGroupResponse.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageGetPlanGroupResponse::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageGetPlanGroupResponse.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageGetPlanGroupResponse::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageGetPlanGroupResponse.uuid)
}

// .d5.CMessageHttpGetPlanGroupResponse getList = 3;
inline bool CMessageGetPlanGroupResponse::has_getlist() const {
  return this != internal_default_instance() && getlist_ != NULL;
}
inline const ::d5::CMessageHttpGetPlanGroupResponse& CMessageGetPlanGroupResponse::getlist() const {
  const ::d5::CMessageHttpGetPlanGroupResponse* p = getlist_;
  // @@protoc_insertion_point(field_get:d5.CMessageGetPlanGroupResponse.getList)
  return p != NULL ? *p : *reinterpret_cast<const ::d5::CMessageHttpGetPlanGroupResponse*>(
      &::d5::_CMessageHttpGetPlanGroupResponse_default_instance_);
}
inline ::d5::CMessageHttpGetPlanGroupResponse* CMessageGetPlanGroupResponse::release_getlist() {
  // @@protoc_insertion_point(field_release:d5.CMessageGetPlanGroupResponse.getList)
  
  ::d5::CMessageHttpGetPlanGroupResponse* temp = getlist_;
  getlist_ = NULL;
  return temp;
}
inline ::d5::CMessageHttpGetPlanGroupResponse* CMessageGetPlanGroupResponse::mutable_getlist() {
  
  if (getlist_ == NULL) {
    getlist_ = ::google::protobuf::Arena::Create< ::d5::CMessageHttpGetPlanGroupResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:d5.CMessageGetPlanGroupResponse.getList)
  return getlist_;
}
inline void CMessageGetPlanGroupResponse::set_allocated_getlist(::d5::CMessageHttpGetPlanGroupResponse* getlist) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(getlist_);
  }
  if (getlist) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      getlist = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, getlist, submessage_arena);
    }
    
  } else {
    
  }
  getlist_ = getlist;
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageGetPlanGroupResponse.getList)
}

// int32 state = 4;
inline void CMessageGetPlanGroupResponse::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 CMessageGetPlanGroupResponse::state() const {
  // @@protoc_insertion_point(field_get:d5.CMessageGetPlanGroupResponse.state)
  return state_;
}
inline void CMessageGetPlanGroupResponse::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageGetPlanGroupResponse.state)
}

// -------------------------------------------------------------------

// CMessageAddPlanGroupRequest

// int32 type = 1;
inline void CMessageAddPlanGroupRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageAddPlanGroupRequest::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageAddPlanGroupRequest.type)
  return type_;
}
inline void CMessageAddPlanGroupRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageAddPlanGroupRequest.type)
}

// string uuid = 2;
inline void CMessageAddPlanGroupRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageAddPlanGroupRequest::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageAddPlanGroupRequest.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageAddPlanGroupRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageAddPlanGroupRequest.uuid)
}
#if LANG_CXX11
inline void CMessageAddPlanGroupRequest::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageAddPlanGroupRequest.uuid)
}
#endif
inline void CMessageAddPlanGroupRequest::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageAddPlanGroupRequest.uuid)
}
inline void CMessageAddPlanGroupRequest::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageAddPlanGroupRequest.uuid)
}
inline ::std::string* CMessageAddPlanGroupRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageAddPlanGroupRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageAddPlanGroupRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageAddPlanGroupRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageAddPlanGroupRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageAddPlanGroupRequest.uuid)
}

// string name = 3;
inline void CMessageAddPlanGroupRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageAddPlanGroupRequest::name() const {
  // @@protoc_insertion_point(field_get:d5.CMessageAddPlanGroupRequest.name)
  return name_.GetNoArena();
}
inline void CMessageAddPlanGroupRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageAddPlanGroupRequest.name)
}
#if LANG_CXX11
inline void CMessageAddPlanGroupRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageAddPlanGroupRequest.name)
}
#endif
inline void CMessageAddPlanGroupRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageAddPlanGroupRequest.name)
}
inline void CMessageAddPlanGroupRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageAddPlanGroupRequest.name)
}
inline ::std::string* CMessageAddPlanGroupRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageAddPlanGroupRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageAddPlanGroupRequest::release_name() {
  // @@protoc_insertion_point(field_release:d5.CMessageAddPlanGroupRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageAddPlanGroupRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageAddPlanGroupRequest.name)
}

// -------------------------------------------------------------------

// CMessageAddPlanGroupResponse

// int32 type = 1;
inline void CMessageAddPlanGroupResponse::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageAddPlanGroupResponse::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageAddPlanGroupResponse.type)
  return type_;
}
inline void CMessageAddPlanGroupResponse::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageAddPlanGroupResponse.type)
}

// string uuid = 2;
inline void CMessageAddPlanGroupResponse::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageAddPlanGroupResponse::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageAddPlanGroupResponse.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageAddPlanGroupResponse::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageAddPlanGroupResponse.uuid)
}
#if LANG_CXX11
inline void CMessageAddPlanGroupResponse::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageAddPlanGroupResponse.uuid)
}
#endif
inline void CMessageAddPlanGroupResponse::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageAddPlanGroupResponse.uuid)
}
inline void CMessageAddPlanGroupResponse::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageAddPlanGroupResponse.uuid)
}
inline ::std::string* CMessageAddPlanGroupResponse::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageAddPlanGroupResponse.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageAddPlanGroupResponse::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageAddPlanGroupResponse.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageAddPlanGroupResponse::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageAddPlanGroupResponse.uuid)
}

// .d5.CMessageHttpAddPlanGroupResponse addGroup = 3;
inline bool CMessageAddPlanGroupResponse::has_addgroup() const {
  return this != internal_default_instance() && addgroup_ != NULL;
}
inline const ::d5::CMessageHttpAddPlanGroupResponse& CMessageAddPlanGroupResponse::addgroup() const {
  const ::d5::CMessageHttpAddPlanGroupResponse* p = addgroup_;
  // @@protoc_insertion_point(field_get:d5.CMessageAddPlanGroupResponse.addGroup)
  return p != NULL ? *p : *reinterpret_cast<const ::d5::CMessageHttpAddPlanGroupResponse*>(
      &::d5::_CMessageHttpAddPlanGroupResponse_default_instance_);
}
inline ::d5::CMessageHttpAddPlanGroupResponse* CMessageAddPlanGroupResponse::release_addgroup() {
  // @@protoc_insertion_point(field_release:d5.CMessageAddPlanGroupResponse.addGroup)
  
  ::d5::CMessageHttpAddPlanGroupResponse* temp = addgroup_;
  addgroup_ = NULL;
  return temp;
}
inline ::d5::CMessageHttpAddPlanGroupResponse* CMessageAddPlanGroupResponse::mutable_addgroup() {
  
  if (addgroup_ == NULL) {
    addgroup_ = ::google::protobuf::Arena::Create< ::d5::CMessageHttpAddPlanGroupResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:d5.CMessageAddPlanGroupResponse.addGroup)
  return addgroup_;
}
inline void CMessageAddPlanGroupResponse::set_allocated_addgroup(::d5::CMessageHttpAddPlanGroupResponse* addgroup) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(addgroup_);
  }
  if (addgroup) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      addgroup = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, addgroup, submessage_arena);
    }
    
  } else {
    
  }
  addgroup_ = addgroup;
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageAddPlanGroupResponse.addGroup)
}

// int32 state = 4;
inline void CMessageAddPlanGroupResponse::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 CMessageAddPlanGroupResponse::state() const {
  // @@protoc_insertion_point(field_get:d5.CMessageAddPlanGroupResponse.state)
  return state_;
}
inline void CMessageAddPlanGroupResponse::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageAddPlanGroupResponse.state)
}

// -------------------------------------------------------------------

// CMessageUpdatePlanGroupRequest

// int32 type = 1;
inline void CMessageUpdatePlanGroupRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageUpdatePlanGroupRequest::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageUpdatePlanGroupRequest.type)
  return type_;
}
inline void CMessageUpdatePlanGroupRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageUpdatePlanGroupRequest.type)
}

// string uuid = 2;
inline void CMessageUpdatePlanGroupRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageUpdatePlanGroupRequest::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageUpdatePlanGroupRequest.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageUpdatePlanGroupRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageUpdatePlanGroupRequest.uuid)
}
#if LANG_CXX11
inline void CMessageUpdatePlanGroupRequest::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageUpdatePlanGroupRequest.uuid)
}
#endif
inline void CMessageUpdatePlanGroupRequest::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageUpdatePlanGroupRequest.uuid)
}
inline void CMessageUpdatePlanGroupRequest::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageUpdatePlanGroupRequest.uuid)
}
inline ::std::string* CMessageUpdatePlanGroupRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageUpdatePlanGroupRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageUpdatePlanGroupRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageUpdatePlanGroupRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageUpdatePlanGroupRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageUpdatePlanGroupRequest.uuid)
}

// int32 id = 3;
inline void CMessageUpdatePlanGroupRequest::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 CMessageUpdatePlanGroupRequest::id() const {
  // @@protoc_insertion_point(field_get:d5.CMessageUpdatePlanGroupRequest.id)
  return id_;
}
inline void CMessageUpdatePlanGroupRequest::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageUpdatePlanGroupRequest.id)
}

// string name = 4;
inline void CMessageUpdatePlanGroupRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageUpdatePlanGroupRequest::name() const {
  // @@protoc_insertion_point(field_get:d5.CMessageUpdatePlanGroupRequest.name)
  return name_.GetNoArena();
}
inline void CMessageUpdatePlanGroupRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageUpdatePlanGroupRequest.name)
}
#if LANG_CXX11
inline void CMessageUpdatePlanGroupRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageUpdatePlanGroupRequest.name)
}
#endif
inline void CMessageUpdatePlanGroupRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageUpdatePlanGroupRequest.name)
}
inline void CMessageUpdatePlanGroupRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageUpdatePlanGroupRequest.name)
}
inline ::std::string* CMessageUpdatePlanGroupRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageUpdatePlanGroupRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageUpdatePlanGroupRequest::release_name() {
  // @@protoc_insertion_point(field_release:d5.CMessageUpdatePlanGroupRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageUpdatePlanGroupRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageUpdatePlanGroupRequest.name)
}

// -------------------------------------------------------------------

// CMessageUpdatePlanGroupResponse

// int32 type = 1;
inline void CMessageUpdatePlanGroupResponse::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageUpdatePlanGroupResponse::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageUpdatePlanGroupResponse.type)
  return type_;
}
inline void CMessageUpdatePlanGroupResponse::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageUpdatePlanGroupResponse.type)
}

// string uuid = 2;
inline void CMessageUpdatePlanGroupResponse::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageUpdatePlanGroupResponse::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageUpdatePlanGroupResponse.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageUpdatePlanGroupResponse::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageUpdatePlanGroupResponse.uuid)
}
#if LANG_CXX11
inline void CMessageUpdatePlanGroupResponse::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageUpdatePlanGroupResponse.uuid)
}
#endif
inline void CMessageUpdatePlanGroupResponse::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageUpdatePlanGroupResponse.uuid)
}
inline void CMessageUpdatePlanGroupResponse::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageUpdatePlanGroupResponse.uuid)
}
inline ::std::string* CMessageUpdatePlanGroupResponse::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageUpdatePlanGroupResponse.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageUpdatePlanGroupResponse::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageUpdatePlanGroupResponse.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageUpdatePlanGroupResponse::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageUpdatePlanGroupResponse.uuid)
}

// int32 state = 3;
inline void CMessageUpdatePlanGroupResponse::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 CMessageUpdatePlanGroupResponse::state() const {
  // @@protoc_insertion_point(field_get:d5.CMessageUpdatePlanGroupResponse.state)
  return state_;
}
inline void CMessageUpdatePlanGroupResponse::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageUpdatePlanGroupResponse.state)
}

// -------------------------------------------------------------------

// CMessageDeletePlanGroupRequest

// int32 type = 1;
inline void CMessageDeletePlanGroupRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageDeletePlanGroupRequest::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDeletePlanGroupRequest.type)
  return type_;
}
inline void CMessageDeletePlanGroupRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageDeletePlanGroupRequest.type)
}

// string uuid = 2;
inline void CMessageDeletePlanGroupRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageDeletePlanGroupRequest::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDeletePlanGroupRequest.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageDeletePlanGroupRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageDeletePlanGroupRequest.uuid)
}
#if LANG_CXX11
inline void CMessageDeletePlanGroupRequest::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageDeletePlanGroupRequest.uuid)
}
#endif
inline void CMessageDeletePlanGroupRequest::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageDeletePlanGroupRequest.uuid)
}
inline void CMessageDeletePlanGroupRequest::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageDeletePlanGroupRequest.uuid)
}
inline ::std::string* CMessageDeletePlanGroupRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageDeletePlanGroupRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageDeletePlanGroupRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageDeletePlanGroupRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageDeletePlanGroupRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageDeletePlanGroupRequest.uuid)
}

// int32 id = 3;
inline void CMessageDeletePlanGroupRequest::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 CMessageDeletePlanGroupRequest::id() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDeletePlanGroupRequest.id)
  return id_;
}
inline void CMessageDeletePlanGroupRequest::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageDeletePlanGroupRequest.id)
}

// -------------------------------------------------------------------

// CMessageDeletePlanGroupResponse

// int32 type = 1;
inline void CMessageDeletePlanGroupResponse::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CMessageDeletePlanGroupResponse::type() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDeletePlanGroupResponse.type)
  return type_;
}
inline void CMessageDeletePlanGroupResponse::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageDeletePlanGroupResponse.type)
}

// string uuid = 2;
inline void CMessageDeletePlanGroupResponse::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageDeletePlanGroupResponse::uuid() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDeletePlanGroupResponse.uuid)
  return uuid_.GetNoArena();
}
inline void CMessageDeletePlanGroupResponse::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:d5.CMessageDeletePlanGroupResponse.uuid)
}
#if LANG_CXX11
inline void CMessageDeletePlanGroupResponse::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:d5.CMessageDeletePlanGroupResponse.uuid)
}
#endif
inline void CMessageDeletePlanGroupResponse::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:d5.CMessageDeletePlanGroupResponse.uuid)
}
inline void CMessageDeletePlanGroupResponse::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:d5.CMessageDeletePlanGroupResponse.uuid)
}
inline ::std::string* CMessageDeletePlanGroupResponse::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:d5.CMessageDeletePlanGroupResponse.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageDeletePlanGroupResponse::release_uuid() {
  // @@protoc_insertion_point(field_release:d5.CMessageDeletePlanGroupResponse.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageDeletePlanGroupResponse::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:d5.CMessageDeletePlanGroupResponse.uuid)
}

// int32 state = 3;
inline void CMessageDeletePlanGroupResponse::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 CMessageDeletePlanGroupResponse::state() const {
  // @@protoc_insertion_point(field_get:d5.CMessageDeletePlanGroupResponse.state)
  return state_;
}
inline void CMessageDeletePlanGroupResponse::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:d5.CMessageDeletePlanGroupResponse.state)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace d5

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_5fplan_5fgroup_2eproto_INCLUDED
